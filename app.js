/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI520098237 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520098227 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520098521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520098563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520095611 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736778 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093867 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520097538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093799 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1442840978 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI503316801 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420574 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093741 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093740 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093739 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520095756 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520095806 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737580 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI838861206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400069 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI838861173 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841347 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841384 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841292 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840845 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493174132 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1442841458 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841453 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840934 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840998 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840976 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093728 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093719 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1006632986 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093715 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093714 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737002 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841214 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736806 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1224736804 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1224736802 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1224736798 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1224736795 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736793 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224737005 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737006 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736787 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736889 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736859 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736860 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224736857 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224736797 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736855 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224736796 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865865 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI771751972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI771751973 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420296 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI721420387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420383 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420390 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420389 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI721420388 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420385 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306461 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306458 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306457 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306455 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306453 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306451 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306450 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306449 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306447 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306446 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306445 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306443 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306439 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306437 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306398 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306557 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306554 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306553 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306556 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306503 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306492 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306504 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306491 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306490 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306509 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306397 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306489 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306488 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306505 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306394 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306487 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306506 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306395 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306494 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306508 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306507 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306396 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306479 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306382 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306493 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306386 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306486 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306385 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306383 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI805306485 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306484 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306483 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306482 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306384 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI687865863 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI687865864 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442841706 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093737 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493173909 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493177322 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1006633039 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1006633045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493177295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493177022 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840588 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840587 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840582 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736839 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736772 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224736773 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1291845837 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737009 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736792 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736866 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493172238 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI889192517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1392508931 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI1392508932 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493173227 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1493173485 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224737401 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493173100 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224737454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737453 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737449 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737448 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737447 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737446 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172386 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172377 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172368 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291846007 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737341 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845874 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1241514007 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736789 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736853 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736852 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736998 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736851 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736992 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736988 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736986 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736849 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736771 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736777 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736776 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736794 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308622955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555838 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840589 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1442840579 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1442840581 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI1442840579 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1442840579, name: "Common", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1442840579, name: "Uncommon", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1442840579, name: "Rare", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1442840579, name: "UltraRare", len: 0, sons: null}}};
NTI1442840579.node = NNI1442840579;
var NNI1442840581 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "technicalName", len: 0, typ: NTI33554449, name: "technicalName", sons: null}, 
{kind: 1, offset: "synergy", len: 0, typ: NTI33554466, name: "synergy", sons: null}, 
{kind: 1, offset: "tier", len: 0, typ: NTI1442840579, name: "tier", sons: null}, 
{kind: 1, offset: "rarity", len: 0, typ: NTI33554435, name: "rarity", sons: null}, 
{kind: 1, offset: "description", len: 0, typ: NTI33554449, name: "description", sons: null}, 
{kind: 1, offset: "icon", len: 0, typ: NTI33554449, name: "icon", sons: null}, 
{kind: 1, offset: "rotatable", len: 0, typ: NTI33554466, name: "rotatable", sons: null}, 
{kind: 1, offset: "noColor", len: 0, typ: NTI33554466, name: "noColor", sons: null}, 
{kind: 1, offset: "onStart", len: 0, typ: NTI1442840589, name: "onStart", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}]};
NTI1442840581.node = NNI1442840581;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555838 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555838.node = NNI33555838;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI1224736776 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1224736776, name: "King", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1224736776, name: "Queen", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1224736776, name: "Bishop", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1224736776, name: "Pawn", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1224736776, name: "Rook", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1224736776, name: "Knight", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1224736776, name: "None", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1224736776, name: "Fairy", len: 0, sons: null}}};
NTI1224736776.node = NNI1224736776;
var NNI1224736777 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1224736777, name: "black", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1224736777, name: "white", len: 0, sons: null}}};
NTI1224736777.node = NNI1224736777;
var NNI1224736771 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1224736771.node = NNI1224736771;
NTI1224736849.base = NTI1224736986;
NTI1224736850.base = NTI1224736986;
NTI1224736851.base = NTI1224736998;
NTI1224736852.base = NTI1224736998;
var NNI1224736789 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1224736789, name: "Sky", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1224736789, name: "Zero", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1224736789, name: "Steel", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1224736789, name: "Reverie", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1224736789, name: "Daybreak", len: 0, sons: null}}};
NTI1224736789.node = NNI1224736789;
var NNI1224736788 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1224736789, name: "Field2", sons: null}]};
NTI1224736788.node = NNI1224736788;
NTI1224736853.base = NTI1224736788;
var NNI1224736794 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "item", len: 0, typ: NTI1224736776, name: "item", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1224736777, name: "color", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "timesMoved", len: 0, typ: NTI33554435, name: "timesMoved", sons: null}, 
{kind: 1, offset: "piecesTaken", len: 0, typ: NTI33554435, name: "piecesTaken", sons: null}, 
{kind: 1, offset: "tile", len: 0, typ: NTI1224736771, name: "tile", sons: null}, 
{kind: 1, offset: "moves", len: 0, typ: NTI1224736849, name: "moves", sons: null}, 
{kind: 1, offset: "takes", len: 0, typ: NTI1224736850, name: "takes", sons: null}, 
{kind: 1, offset: "onMove", len: 0, typ: NTI1224736988, name: "onMove", sons: null}, 
{kind: 1, offset: "onTake", len: 0, typ: NTI1224736988, name: "onTake", sons: null}, 
{kind: 1, offset: "whenTaken", len: 0, typ: NTI1224736992, name: "whenTaken", sons: null}, 
{kind: 1, offset: "onEndTurn", len: 0, typ: NTI1224736851, name: "onEndTurn", sons: null}, 
{kind: 1, offset: "onPromote", len: 0, typ: NTI1224736852, name: "onPromote", sons: null}, 
{kind: 1, offset: "promoted", len: 0, typ: NTI33554466, name: "promoted", sons: null}, 
{kind: 1, offset: "filePath", len: 0, typ: NTI33554449, name: "filePath", sons: null}, 
{kind: 1, offset: "colorable", len: 0, typ: NTI33554466, name: "colorable", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554466, name: "rotate", sons: null}, 
{kind: 1, offset: "drunk", len: 0, typ: NTI33554466, name: "drunk", sons: null}, 
{kind: 1, offset: "casts", len: 0, typ: NTI1224736853, name: "casts", sons: null}]};
NTI1224736794.node = NNI1224736794;
var NNI1308622955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1224736794, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1308622955.node = NNI1308622955;
var NNI1241514007 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1241514007.node = NNI1241514007;
NTI1241514007.base = NTI33555178;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI1275068532.base = NTI1224736986;
NTI1275068457.base = NTI1224736998;
NTI1291845874.base = NTI1224736986;
NTI1224737341.base = NTI1224736771;
NTI1291846007.base = NTI1224736986;
NTI1493172359.base = NTI1224736986;
NTI1493172368.base = NTI1224736986;
NTI1493172377.base = NTI1224736998;
NTI1493172386.base = NTI1224736998;
NTI1224737446.base = NTI1224736986;
NTI1224737447.base = NTI1224736986;
NTI1224737448.base = NTI1224737449;
NTI1224737453.base = NTI1224737454;
var NNI1493173100 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1493173100.node = NNI1493173100;
var NNI1224737401 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1224737401.node = NNI1224737401;
var NNI1493173485 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1493173485.node = NNI1493173485;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
NTI1275068441.base = NTI1224736986;
NTI1493173227.base = NTI1224736986;
var NNI1392508932 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI1392508931, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI1392508931, name: "a1", sons: null}]};
NTI1392508932.node = NNI1392508932;
var NNI889192517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI889192517.node = NNI889192517;
NTI1493172238.base = NTI1224736986;
var NNI1224736866 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1224736866.node = NNI1224736866;
var NNI1224736792 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1224736988, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1224737009, name: "Field2", sons: null}]};
NTI1224736792.node = NNI1224736792;
NTI1291845837.base = NTI1224736771;
NTI1224736772.base = NTI1224736794;
NTI1224736773.base = NTI1224736772;
var NNI1224736839 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1224736792, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1224736839.node = NNI1224736839;
NTI1442840587.base = NTI33554449;
NTI1442840588.base = NTI33554449;
var NNI1442840582 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1442840581, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1442840587, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1442840588, name: "Field3", sons: null}]};
NTI1442840582.node = NNI1442840582;
NTI1493177022.base = NTI1224736771;
NTI1493177295.base = NTI1224736986;
var NNI1006633045 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1006633039, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1006633045.node = NNI1006633045;
NTI1493177322.base = NTI1224736986;
NTI1493173909.base = NTI1224736998;
var NNI520093737 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554450, name: "Field1", sons: null}]};
NTI520093737.node = NNI520093737;
NTI1442840869.base = NTI1442840581;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
NTI134217747.base = NTI134217746;
NTI1442841706.base = NTI1442840581;
var NNI805306510 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI805306510.node = NNI805306510;
NTI805306510.base = NTI33555173;
var NNI687865863 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI687865863, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI687865863, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI687865863, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI687865863, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI687865863, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI687865863, name: "pkSame", len: 0, sons: null}}};
NTI687865863.node = NNI687865863;
NTI805306483.base = NTI805306384;
NTI805306484.base = NTI805306384;
NTI805306485.base = NTI805306384;
var NNI805306383 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI805306383, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI805306383, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI805306383, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI805306383, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI805306383, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI805306383, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI805306383, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI805306383, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI805306383, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI805306383, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI805306383, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI805306383, name: "NotationNode", len: 0, sons: null}}};
NTI805306383.node = NNI805306383;
var NNI805306479 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI805306479.node = NNI805306479;
NTI805306479.base = NTI33555173;
NTI805306382.base = NTI805306479;
NTI805306508.base = NTI805306386;
var NNI805306507 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI805306508, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI805306507.node = NNI805306507;
NTI805306507.base = NTI805306493;
NTI805306396.base = NTI805306507;
var NNI805306506 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI805306506.node = NNI805306506;
NTI805306506.base = NTI805306493;
NTI805306395.base = NTI805306506;
NTI805306494.base = NTI805306395;
NTI805306495.base = NTI805306395;
var NNI805306493 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI805306382, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI805306396, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI805306494, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI805306495, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI805306493.node = NNI805306493;
NTI805306493.base = NTI805306482;
NTI805306386.base = NTI805306493;
var NNI805306505 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI805306505.node = NNI805306505;
NTI805306505.base = NTI805306493;
NTI805306394.base = NTI805306505;
NTI805306487.base = NTI805306394;
NTI805306488.base = NTI805306396;
var NNI805306509 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI805306509.node = NNI805306509;
NTI805306509.base = NTI805306493;
NTI805306397.base = NTI805306509;
NTI805306489.base = NTI805306397;
NTI805306490.base = NTI805306386;
var NNI805306504 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI805306504.node = NNI805306504;
NTI805306504.base = NTI805306493;
NTI805306393.base = NTI805306504;
NTI805306491.base = NTI805306393;
var NNI805306503 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI805306503.node = NNI805306503;
NTI805306503.base = NTI805306493;
NTI805306392.base = NTI805306503;
NTI805306492.base = NTI805306392;
var NNI805306553 = {kind: 1, offset: "then", len: 0, typ: NTI805306554, name: "then", sons: null};
NTI805306553.node = NNI805306553;
NTI805306433.base = NTI805306553;
var NNI805306556 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI805306433, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI805306557, name: "onloadingdone", sons: null}]};
NTI805306556.node = NNI805306556;
NTI805306434.base = NTI805306556;
var NNI805306486 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI805306386, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI805306386, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI805306386, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI805306386, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI805306487, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI805306488, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI805306489, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI805306490, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI805306491, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI805306492, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI805306434, name: "fonts", sons: null}]};
NTI805306486.node = NNI805306486;
NTI805306486.base = NTI805306482;
NTI805306385.base = NTI805306486;
NTI805306398.base = NTI805306510;
var NNI805306482 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI805306483, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI805306484, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI805306485, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI805306384, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI805306384, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI805306384, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI805306383, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI805306384, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI805306384, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI805306384, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI805306385, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI805306398, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI805306386, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI805306482.node = NNI805306482;
var NNI805306437 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI805306438, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI805306439, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI805306440, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI805306441, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI805306442, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI805306443, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI805306444, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI805306445, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI805306446, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI805306447, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI805306448, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI805306449, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI805306450, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI805306451, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI805306452, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI805306453, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI805306454, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI805306455, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI805306456, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI805306457, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI805306458, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI805306459, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI805306460, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI805306461, name: "onloadend", sons: null}]};
NTI805306437.node = NNI805306437;
NTI805306437.base = NTI33555173;
NTI805306482.base = NTI805306437;
NTI805306384.base = NTI805306482;
var NNI721420291 = {kind: 2, offset: 0, typ: null, name: null, len: 213, sons: {"0": {kind: 1, offset: 0, typ: NTI721420291, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI721420291, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI721420291, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI721420291, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI721420291, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI721420291, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI721420291, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI721420291, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI721420291, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI721420291, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI721420291, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI721420291, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI721420291, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI721420291, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI721420291, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI721420291, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI721420291, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI721420291, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI721420291, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI721420291, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI721420291, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI721420291, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI721420291, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI721420291, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI721420291, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI721420291, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI721420291, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI721420291, name: "hgroup", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI721420291, name: "header", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI721420291, name: "footer", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI721420291, name: "address", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI721420291, name: "main", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI721420291, name: "p", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI721420291, name: "hr", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI721420291, name: "pre", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI721420291, name: "blockquote", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI721420291, name: "ol", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI721420291, name: "ul", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI721420291, name: "li", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI721420291, name: "dl", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI721420291, name: "dt", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI721420291, name: "dd", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI721420291, name: "figure", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI721420291, name: "figcaption", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI721420291, name: "div", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI721420291, name: "a", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI721420291, name: "em", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI721420291, name: "strong", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI721420291, name: "small", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI721420291, name: "s", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI721420291, name: "cite", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI721420291, name: "quote", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI721420291, name: "dfn", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI721420291, name: "abbr", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI721420291, name: "data", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI721420291, name: "time", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI721420291, name: "code", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI721420291, name: "var", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI721420291, name: "samp", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI721420291, name: "kbd", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI721420291, name: "sub", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI721420291, name: "sup", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI721420291, name: "i", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI721420291, name: "b", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI721420291, name: "u", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI721420291, name: "mark", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI721420291, name: "ruby", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI721420291, name: "rt", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI721420291, name: "rp", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI721420291, name: "bdi", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI721420291, name: "dbo", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI721420291, name: "span", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI721420291, name: "br", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI721420291, name: "wbr", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI721420291, name: "ins", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI721420291, name: "del", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI721420291, name: "img", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI721420291, name: "iframe", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI721420291, name: "embed", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI721420291, name: "object", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI721420291, name: "param", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI721420291, name: "video", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI721420291, name: "audio", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI721420291, name: "source", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI721420291, name: "track", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI721420291, name: "canvas", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI721420291, name: "map", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI721420291, name: "area", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI721420291, name: "animate", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI721420291, name: "animateMotion", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI721420291, name: "animateTransform", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI721420291, name: "circle", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI721420291, name: "clipPath", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI721420291, name: "defs", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI721420291, name: "desc", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI721420291, name: "discard", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI721420291, name: "ellipse", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI721420291, name: "feBlend", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI721420291, name: "feColorMatrix", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI721420291, name: "feComponentTransfer", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI721420291, name: "feComposite", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI721420291, name: "feConvolveMatrix", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI721420291, name: "feDiffuseLighting", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI721420291, name: "feDisplacementMap", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI721420291, name: "feDistantLight", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI721420291, name: "feDropShadow", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI721420291, name: "feFlood", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI721420291, name: "feFuncA", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI721420291, name: "feFuncB", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI721420291, name: "feFuncG", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI721420291, name: "feFuncR", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI721420291, name: "feGaussianBlur", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI721420291, name: "feImage", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI721420291, name: "feMerge", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI721420291, name: "feMergeNode", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI721420291, name: "feMorphology", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI721420291, name: "feOffset", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI721420291, name: "fePointLight", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI721420291, name: "feSpecularLighting", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI721420291, name: "feSpotLight", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI721420291, name: "feTile", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI721420291, name: "feTurbulence", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI721420291, name: "filter", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI721420291, name: "foreignObject", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI721420291, name: "g", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI721420291, name: "image", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI721420291, name: "line", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI721420291, name: "linearGradient", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI721420291, name: "marker", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI721420291, name: "mask", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI721420291, name: "metadata", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI721420291, name: "mpath", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI721420291, name: "path", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI721420291, name: "pattern", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI721420291, name: "polygon", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI721420291, name: "polyline", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI721420291, name: "radialGradient", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI721420291, name: "rect", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI721420291, name: "set", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI721420291, name: "stop", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI721420291, name: "svg", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI721420291, name: "switch", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI721420291, name: "symbol", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI721420291, name: "text", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI721420291, name: "textPath", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI721420291, name: "tspan", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI721420291, name: "unknown", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI721420291, name: "use", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI721420291, name: "view", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI721420291, name: "maction", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI721420291, name: "math", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI721420291, name: "menclose", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI721420291, name: "merror", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI721420291, name: "mfenced", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI721420291, name: "mfrac", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI721420291, name: "mglyph", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI721420291, name: "mi", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI721420291, name: "mlabeledtr", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI721420291, name: "mmultiscripts", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI721420291, name: "mn", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI721420291, name: "mo", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI721420291, name: "mover", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI721420291, name: "mpadded", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI721420291, name: "mphantom", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI721420291, name: "mroot", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI721420291, name: "mrow", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI721420291, name: "ms", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI721420291, name: "mspace", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI721420291, name: "msqrt", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI721420291, name: "mstyle", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI721420291, name: "msub", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI721420291, name: "msubsup", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI721420291, name: "msup", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI721420291, name: "mtable", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI721420291, name: "mtd", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI721420291, name: "mtext", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI721420291, name: "mtr", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI721420291, name: "munder", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI721420291, name: "munderover", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI721420291, name: "semantics", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI721420291, name: "table", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI721420291, name: "caption", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI721420291, name: "colgroup", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI721420291, name: "col", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI721420291, name: "tbody", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI721420291, name: "thead", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI721420291, name: "tfoot", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI721420291, name: "tr", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI721420291, name: "td", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI721420291, name: "th", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI721420291, name: "form", len: 0, sons: null}, 
"191": {kind: 1, offset: 191, typ: NTI721420291, name: "fieldset", len: 0, sons: null}, 
"192": {kind: 1, offset: 192, typ: NTI721420291, name: "legend", len: 0, sons: null}, 
"193": {kind: 1, offset: 193, typ: NTI721420291, name: "label", len: 0, sons: null}, 
"194": {kind: 1, offset: 194, typ: NTI721420291, name: "input", len: 0, sons: null}, 
"195": {kind: 1, offset: 195, typ: NTI721420291, name: "button", len: 0, sons: null}, 
"196": {kind: 1, offset: 196, typ: NTI721420291, name: "select", len: 0, sons: null}, 
"197": {kind: 1, offset: 197, typ: NTI721420291, name: "datalist", len: 0, sons: null}, 
"198": {kind: 1, offset: 198, typ: NTI721420291, name: "optgroup", len: 0, sons: null}, 
"199": {kind: 1, offset: 199, typ: NTI721420291, name: "option", len: 0, sons: null}, 
"200": {kind: 1, offset: 200, typ: NTI721420291, name: "textarea", len: 0, sons: null}, 
"201": {kind: 1, offset: 201, typ: NTI721420291, name: "keygen", len: 0, sons: null}, 
"202": {kind: 1, offset: 202, typ: NTI721420291, name: "output", len: 0, sons: null}, 
"203": {kind: 1, offset: 203, typ: NTI721420291, name: "progress", len: 0, sons: null}, 
"204": {kind: 1, offset: 204, typ: NTI721420291, name: "meter", len: 0, sons: null}, 
"205": {kind: 1, offset: 205, typ: NTI721420291, name: "details", len: 0, sons: null}, 
"206": {kind: 1, offset: 206, typ: NTI721420291, name: "summary", len: 0, sons: null}, 
"207": {kind: 1, offset: 207, typ: NTI721420291, name: "command", len: 0, sons: null}, 
"208": {kind: 1, offset: 208, typ: NTI721420291, name: "menu", len: 0, sons: null}, 
"209": {kind: 1, offset: 209, typ: NTI721420291, name: "bdo", len: 0, sons: null}, 
"210": {kind: 1, offset: 210, typ: NTI721420291, name: "dialog", len: 0, sons: null}, 
"211": {kind: 1, offset: 211, typ: NTI721420291, name: "slot", len: 0, sons: null}, 
"212": {kind: 1, offset: 212, typ: NTI721420291, name: "template", len: 0, sons: null}}};
NTI721420291.node = NNI721420291;
NTI721420389.base = NTI721420385;
NTI721420390.base = NTI33554450;
var NNI721420296 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI721420296, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI721420296, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI721420296, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI721420296, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI721420296, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI721420296, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI721420296, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI721420296, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI721420296, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI721420296, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI721420296, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI721420296, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI721420296, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI721420296, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI721420296, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI721420296, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI721420296, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI721420296, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI721420296, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI721420296, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI721420296, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI721420296, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI721420296, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI721420296, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI721420296, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI721420296, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI721420296, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI721420296, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI721420296, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI721420296, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI721420296, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI721420296, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI721420296, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI721420296, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI721420296, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI721420296, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI721420296, name: "onwheel", len: 0, sons: null}}};
NTI721420296.node = NNI721420296;
var NNI721420387 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI721420296, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI721420397, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI721420398, name: "Field2", sons: null}]};
NTI721420387.node = NNI721420387;
NTI721420383.base = NTI721420387;
var NNI771751972 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI771751972.node = NNI771751972;
NTI771751973.base = NTI771751972;
var NNI721420388 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI721420291, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554450, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI33554450, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI721420389, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI721420390, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI721420383, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI771751973, name: "style", sons: null}, 
{kind: 1, offset: "styleVersion", len: 0, typ: NTI33554435, name: "styleVersion", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI805306384, name: "dom", sons: null}]};
NTI721420388.node = NNI721420388;
NTI721420388.base = NTI33555173;
NTI721420385.base = NTI721420388;
var NNI687865864 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI687865863, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI805306384, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI805306384, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI721420385, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI721420385, name: "oldNode", sons: null}]};
NTI687865864.node = NNI687865864;
var NNI687865865 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI721420385, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI721420385, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI687865865.node = NNI687865865;
var NNI1224736796 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nextIndex", len: 0, typ: NTI33554435, name: "nextIndex", sons: null}, 
{kind: 1, offset: "nextGroup", len: 0, typ: NTI33554435, name: "nextGroup", sons: null}, 
{kind: 1, offset: "randSeed", len: 0, typ: NTI33554435, name: "randSeed", sons: null}, 
{kind: 1, offset: "turnNumber", len: 0, typ: NTI33554435, name: "turnNumber", sons: null}]};
NTI1224736796.node = NNI1224736796;
NTI1224736857.base = NTI1224736794;
NTI1224736859.base = NTI1224736998;
NTI1224736860.base = NTI1224736859;
var NNI1224736787 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1224737006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1224736998, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1224737005, name: "Field3", sons: null}]};
NTI1224736787.node = NNI1224736787;
NTI1224736889.base = NTI1224736787;
NTI1224736793.base = NTI1224736839;
var NNI1224736797 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "abilityTakes", len: 0, typ: NTI33554435, name: "abilityTakes", sons: null}, 
{kind: 1, offset: "hasCastled", len: 0, typ: NTI33554466, name: "hasCastled", sons: null}, 
{kind: 1, offset: "communist", len: 0, typ: NTI33554466, name: "communist", sons: null}, 
{kind: 1, offset: "dna", len: 0, typ: NTI1224736857, name: "dna", sons: null}, 
{kind: 1, offset: "transforms", len: 0, typ: NTI1224736860, name: "transforms", sons: null}, 
{kind: 1, offset: "wallet", len: 0, typ: NTI1224736866, name: "wallet", sons: null}, 
{kind: 1, offset: "buys", len: 0, typ: NTI1224736889, name: "buys", sons: null}, 
{kind: 1, offset: "piecesSold", len: 0, typ: NTI33554435, name: "piecesSold", sons: null}, 
{kind: 1, offset: "piecesSoldThisTurn", len: 0, typ: NTI33554435, name: "piecesSoldThisTurn", sons: null}, 
{kind: 1, offset: "glass", len: 0, typ: NTI1224736793, name: "glass", sons: null}]};
NTI1224736797.node = NNI1224736797;
NTI1224736855.base = NTI1224736797;
var NNI1275068424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1275068424.node = NNI1275068424;
var NNI1224736795 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736796, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1224736855, name: "Field1", sons: null}]};
NTI1224736795.node = NNI1224736795;
NTI1224736798.base = NTI1224736802;
NTI1224736804.base = NTI1224736806;
NTI1442841214.base = NTI1442840581;
var NNI520093710 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1224737002, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554466, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI33554466, name: "Field5", sons: null}, 
{kind: 1, offset: "Field6", len: 0, typ: NTI520093714, name: "Field6", sons: null}, 
{kind: 1, offset: "Field7", len: 0, typ: NTI520093715, name: "Field7", sons: null}]};
NTI520093710.node = NNI520093710;
NTI520093829.base = NTI520093710;
NTI1006632986.base = NTI33554449;
NTI520093719.base = NTI1442840581;
NTI520093728.base = NTI1442840581;
NTI1442840976.base = NTI1442840581;
NTI1442840998.base = NTI1442840582;
NTI1442840934.base = NTI1442840581;
NTI1442841453.base = NTI1442840581;
NTI1442841458.base = NTI1442840581;
var NNI1493174132 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1493174132.node = NNI1493174132;
var NNI1442840583 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554435, name: "Field3", sons: null}]};
NTI1442840583.node = NNI1442840583;
NTI1442840845.base = NTI1442840581;
NTI1442841292.base = NTI33554435;
NTI1442841384.base = NTI1442840581;
NTI1442841347.base = NTI1442840581;
NTI838861173.base = NTI33554449;
var NNI1325400069 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400069, name: "Id", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400069, name: "Handshake", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400069, name: "Options", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1325400069, name: "Draft", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1325400069, name: "End", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1325400069, name: "Rematch", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1325400069, name: "Action", len: 0, sons: null}}};
NTI1325400069.node = NNI1325400069;
NTI838861206.base = NTI33554449;
NTI1224737580.base = NTI1224736771;
NTI520095806.base = NTI1224736771;
NTI520095756.base = NTI1224736788;
var NNI520093739 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI520093740, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI520093741, name: "Field1", sons: null}]};
NTI520093739.node = NNI520093739;
NTI721420574.base = NTI33554450;
NTI503316801.base = NTI33554449;
NTI1442840978.base = NTI1442840581;
var NNI520093799 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1224736789, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI520093799.node = NNI520093799;
NTI520097538.base = NTI33554449;
NTI1560281120.base = NTI1224736771;
NTI520093867.base = NTI1224736771;
NTI1224736778.base = NTI1224736771;
NTI520095611.base = NTI33554466;
NTI520093830.base = NTI520093710;
NTI520098563.base = NTI1442841706;
NTI520098521.base = NTI1442841706;
NTI520098227.base = NTI33554449;
NTI520098237.base = NTI1442840581;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var holy_1442840644 = {name: [72,111,108,121], technicalName: [], synergy: false, tier: 0, rarity: 12, description: makeNimstrLit("You are favored slightly more by god. Your next powers are more likely to be uncommon, rare, and ultra rare"), icon: [99,114,111,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1442840639, index: (-1), priority: 20};
var empress_1493172539 = {name: [69,109,112,114,101,115,115], technicalName: [], synergy: false, tier: 1, rarity: 8, description: [89,111,117,114,32,113,117,101,101,110,32,97,115,99,101,110,100,115,44,32,103,97,105,110,105,110,103,32,116,104,101,32,109,111,118,101,109,101,110,116,32,111,102,32,97,32,115,116,97,110,100,97,114,100,32,107,110,105,103,104,116,46,32], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172494, index: (-1), priority: 15};
var altEmpress_1493172553 = {name: [69,109,112,114,101,115,115], technicalName: [65,108,116,101,114,110,97,116,101,32,69,109,112,114,101,115,115], synergy: false, tier: 1, rarity: 4, description: [89,111,117,114,32,113,117,101,101,110,32,97,115,99,101,110,100,115,44,32,103,97,105,110,105,110,103,32,116,104,101,32,109,111,118,101,109,101,110,116,32,111,102,32,97,32,103,105,114,97,102,102,101,46,32], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172540, index: (-1), priority: 15};
var mysteriousSwordsmanLeft_1493172741 = {name: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], technicalName: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110,32,76,101,102,116], synergy: false, tier: 0, rarity: 4, description: makeNimstrLit("A mysterious swordsman joins your rank. \x0A        Your second pawn from the left is replaced with a silver general from Shogi."), icon: [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493172653, index: (-1), priority: 5};
var mysteriousSwordsmanRight_1493172798 = {name: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], technicalName: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110,32,82,105,103,104,116], synergy: false, tier: 0, rarity: 4, description: makeNimstrLit("A mysterious swordsman joins your rank. \x0A        Your second pawn from the right is replaced with a silver general from Shogi."), icon: [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493172742, index: (-1), priority: 5};
var developed_1493172808 = {name: [68,101,118,101,108,111,112,101,100], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("Your board arrives a little developed. Your 2 center pawns start one tile forward. \x0A        They can still move up 2 for their first move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172799, index: (-1), priority: 20};
var stepOnMe_1493172834 = {name: [83,116,101,112,32,111,110,32,109,101], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("Your Queen can take your own pieces. It\'s literally useless, but if that\'s your thing..."), icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172809, index: (-1), priority: 15};
var illegalFormationBL_1493172867 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,76,101,102,116,32,66,105,115,104,111,112], synergy: false, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR LEFT BISHOP SWAPS PLACES WITH YOUR LEFT BISHOP"), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172857, index: (-1), priority: 20};
var illegalFormationBR_1493172878 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,82,105,103,104,116,32,66,105,115,104,111,112], synergy: false, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR RIGHT BISHOP SWAPS PLACES WITH YOUR RIGHT BISHOP"), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172868, index: (-1), priority: 20};
var illegalFormationRL_1493172845 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,76,101,102,116,32,82,111,111,107], synergy: false, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR LEFT ROOK SWAPS PLACES WITH YOUR LEFT ROOK"), icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172835, index: (-1), priority: 20};
var illegalFormationRR_1493172856 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,82,105,103,104,116,32,82,111,111,107], synergy: false, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR RIGHT ROOK SWAPS PLACES WITH YOUR RIGHT ROOK"), icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172846, index: (-1), priority: 20};
var putInTheWork_1493172900 = {name: [80,117,116,32,105,110,32,116,104,101,32,119,111,114,107,33], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("Get to work son. If any of your pawns take 3 pieces, they automatically promote."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493172891, index: (-1), priority: 10};
var wanderingRoninLeft_1493172953 = {name: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], technicalName: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110,32,76,101,102,116], synergy: false, tier: 1, rarity: 4, description: makeNimstrLit("A wandering Ronin joins your rank. \x0A        Your third pawn from the left is replaced with a gold general from Shogi."), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493172901, index: (-1), priority: 5};
var wanderingRoninRight_1493173006 = {name: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], technicalName: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110,32,82,105,103,104,116], synergy: false, tier: 1, rarity: 4, description: makeNimstrLit("A wandering Ronin joins your rank. \x0A        Your third pawn from the right is replaced with a gold general from Shogi."), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493172954, index: (-1), priority: 5};
var archBishops_1493173062 = {name: [65,114,99,104,98,105,115,104,111,112,115], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("Your bishops ascend to archbishops, gaining the movement of a knight."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173049, index: (-1), priority: 15};
var werewolves_1493173048 = {name: [87,101,114,101,119,111,108,118,101,115], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Your leftmost and rightmost pawns are secretly werewolves! When they take a piece, they eat it and gain the ability to jump like a knight and giraffe. They can still promote."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173030, index: (-1), priority: 15};
var giraffe_1493173076 = {name: [71,105,114,97,102,102,101], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Your knights try riding giraffes. It works surprisingly well. Their leap is improved, moving 3 across instead of 2 across."), icon: [103,105,114,97,102,102,101,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173063, index: (-1), priority: 5};
    var air_1275068591 = {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []};
var sacrifice_1493173192 = {name: [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110], technicalName: [], synergy: false, tier: 3, rarity: 1, description: [83,65,67,82,73,70,73,67,69,32,84,72,89,32,77,65,73,68,69,78,83,32,84,79,32,84,72,69,32,66,76,79,79,68,32,71,79,68], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173183, index: (-1), priority: 25};
var calvary_1493173091 = {name: [67,97,108,118,97,114,121], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Your knights learn to ride forward. They aren\'t very good at it, but they\'re trying their best. \x0A            They can charge forward up to 2 tiles, but only to take a piece. They cannot jump for this move."), icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173077, index: (-1), priority: 15};
var backStep_1493173207 = {name: [66,97,99,107,115,116,101,112], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("Your pawns receive some training. They can move one tile back. They cannot take this way."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173193, index: (-1), priority: 15};
var headStart_1493173222 = {name: [72,101,97,100,115,116,97,114,116], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Your pawns can always move 2 forward. They still take like normal. It\'s kind of boring, don\'t you think?"), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173208, index: (-1), priority: 15};
var queenTrade_1493173234 = {name: [81,117,101,101,110,32,84,114,97,100,101], technicalName: [], synergy: false, tier: 2, rarity: 8, description: [84,104,101,32,112,97,116,114,105,97,114,99,104,121,32,99,111,110,116,105,110,117,101,115,46,32,66,111,116,104,32,113,117,101,101,110,115,32,109,121,115,116,101,114,105,111,117,115,108,121,32,100,105,101,46], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173223, index: (-1), priority: 20};
                      var whiteQueen_1275068556 = {item: 1, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []};
var lesbianPride_1493173284 = {name: [76,101,115,98,105,97,110,32,80,114,105,100,101], technicalName: [], synergy: false, tier: 3, rarity: 1, description: [240,159,167,161,240,159,164,141,240,159,169,183], icon: [108,101,115,98,105,97,110,112,114,105,100,101,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493173269, index: (-1), priority: 1};
var knightChargePower_1493173429 = {name: [75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], technicalName: [], synergy: false, tier: 2, rarity: 4, description: [67,72,65,82,71,69,33,32,89,111,117,114,32,107,110,105,103,104,116,115,32,115,116,97,114,116,32,51,32,116,105,108,101,115,32,97,104,101,97,100,46], icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173408, index: (-1), priority: 20};
var nightRider_1493173540 = {name: [78,105,103,104,116,114,105,100,101,114], technicalName: [], synergy: false, tier: 3, rarity: 8, description: [78,105,103,104,116,114,105,100,101,114,46], icon: [110,105,103,104,116,114,105,100,101,114,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173521, index: (-1), priority: 3};
var desegregation_1493173554 = {name: [68,101,115,101,103,114,101,103,97,116,105,111,110,32,97,110,100,32,73,110,116,101,103,114,97,116,105,111,110], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Your bishops learn to accept their differences. They can move left and right."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173541, index: (-1), priority: 15};
var concubine_1493173616 = {name: [67,111,110,99,117,98,105,110,101], technicalName: [], synergy: false, tier: 2, rarity: 8, description: [89,111,117,114,32,114,111,111,107,32,98,101,99,111,109,101,115,32,97,32,113,117,101,101,110,32,119,104,101,110,32,105,116,32,99,97,115,116,108,101,115,46,46,46,46,32,89,111,117,39,114,101,32,115,105,99,107,46], icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173607, index: (-1), priority: 15};

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}
var reinforcements_1493173641 = {name: [82,101,105,110,102,111,114,99,101,109,101,110,116,115], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Do you really need more than 8 pawns? Your rooks spawn a pawn for every 2 pieces they takes."), icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173636, index: (-1), priority: 25};
var shotgunKing_1493173669 = {name: [83,104,111,116,103,117,110,32,75,105,110,103], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("Your king knows its 2nd ammendment rights. It can take pieces two ahead or two behind. \x0A                    If it does this take, it does not move from its initial tile."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173660, index: (-1), priority: 5};
var coward_1493173720 = {name: [67,111,119,97,114,100], technicalName: [], synergy: false, tier: 0, rarity: 8, description: [89,111,117,32,99,111,119,97,114,100,46,32,89,111,117,114,32,107,105,110,103,32,115,119,97,112,115,32,112,105,101,99,101,115,32,119,105,116,104,32,116,104,101,32,107,105,110,103,39,115,32,115,105,100,101,32,107,110,105,103,104,116,46], icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173704, index: (-1), priority: 25};
var lanceLeft_1493173859 = {name: [75,97,109,105,107,97,122,101], technicalName: [75,97,109,105,107,97,122,101,32,76,101,102,116], synergy: false, tier: 1, rarity: 4, description: makeNimstrLit("The divine wind is behind you. \x0A        Your left pawn is replaced with a lance from Shogi."), icon: [108,97,110,99,101,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493173803, index: (-1), priority: 5};
var lanceRight_1493173802 = {name: [75,97,109,105,107,97,122,101], technicalName: [75,97,109,105,107,97,122,101,32,82,105,103,104,116], synergy: false, tier: 1, rarity: 4, description: makeNimstrLit("The divine wind is behind you. \x0A        Your right pawn is replaced with a lance from Shogi."), icon: [108,97,110,99,101,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493173746, index: (-1), priority: 5};
                      var helper_1392508974 = new Uint32Array([3198944359, 3630892171]);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var drunkKnights_1493173989 = {name: [68,114,117,110,107,32,75,110,105,103,104,116,115], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("Drunk riding is dangerous, your knights should be ashamed of themselves. \x0A        After every other turn, they randomly move."), icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173980, index: (-1), priority: 15};
var alcoholism_1493173999 = {name: [65,108,99,111,104,111,108,105,115,109], technicalName: [], synergy: false, tier: 3, rarity: 4, description: [89,111,117,39,114,101,32,102,97,109,105,108,105,101,115,32,97,110,100,32,102,114,105,101,110,100,115,32,109,105,115,115,32,121,111,117,46,32,84,104,101,32,114,101,97,108,32,121,111,117,46], icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173990, index: (-1), priority: 15};
var slumdogMillionaire_1493174369 = {name: [83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("Have you seen the movie Slumdog Millionaire? It\'s kind of like that. \x0A                    Your pawns have a 1% chance of promoting whenever they move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174333, index: (-1), priority: 15};
var stupidPower_1493174391 = {name: [83,116,117,112,105,100,32,80,111,119,101,114], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("You have a 0.1% chance to automatically win each turn. Yeah, I\'m out of ideas. I\'m sorry."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174382, index: (-1), priority: 15};
var conversion_1493174427 = {name: [67,111,110,118,101,114,115,105,111,110], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("When your bishop takes a piece, it has a 15% chance to convert it to your color. \x0A                    When this happens, your bishop swaps places with it instead of taking it."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174422, index: (-1), priority: 15};
var americanDream_1493174463 = {name: [65,109,101,114,105,99,97,110,32,68,114,101,97,109], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("All pieces, you and your opponent, are killed when they promote. It\'s not real."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174454, index: (-1), priority: 30};
var sleeperAgent_1493174516 = {name: [83,108,101,101,112,101,114,32,65,103,101,110,116], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("The silent river collapses in pieces. \x0A                    One of your pawns is a sleeper agent. They can take forward."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174464, index: (-1), priority: 30};
var capitalismPower_1493174651 = {name: [67,97,112,105,116,97,108,105,115,109], technicalName: [], synergy: false, tier: 1, rarity: 24, description: makeNimstrLit("The power of the free market is unmatched. \x0A                    All of your pieces get the ability to buy upgrades. \x0A                    You get 3 dollars for taking a piece.\x0A                    With 30 dollars, you can promote one piece. The promoted piece cannot move on the turn it is promoted."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174622, index: (-1), priority: 30};
var communism_1493178744 = {name: [67,111,109,117,110,105,115,109], technicalName: [], synergy: false, tier: 3, rarity: 1, description: makeNimstrLit("The proletariat must revolt to escape the continued shackles subjugation by the bourgeoisie. \x0A                    We shall create a utopia of equality. "), icon: [115,105,99,107,108,101,97,110,100,104,97,109,109,101,114,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178736, index: (-1), priority: 50};
var skyGlass_1493178070 = {name: [71,108,97,115,115,58,32,83,107,121], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Sky on any \x0A                    open tile. These pieces teleport to their selected tile when the cast completes. \x0A                    Pieces cannot try to teleport to a tile where they would check the king. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178057, index: (-1), priority: 15};
var zeroGlass_1493178082 = {name: [71,108,97,115,115,58,32,90,101,114,111], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Zero on  \x0A                    any non-king tile. Any piece on these tiles will die if the cast completes. Zero cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178071, index: (-1), priority: 15};

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}
var steelGlass_1493178094 = {name: [71,108,97,115,115,58,32,83,116,101,101,108], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("On your turn, instead of moving, you can choose 5 pieces to each cast Steel. \x0A                    If there is an enemy one tile in front of them when the cast completes, they take forward. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,116,101,101,108,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178083, index: (-1), priority: 15};
var reverieGlass_1493178428 = {name: [71,108,97,115,115,58,32,82,101,118,101,114,105,101], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("On your turn, instead of moving you can choose 3 pieces to each cast Reverie on \x0A                    an opponent tile. When the cast completes, \x0A                    they swap moves and takes with whatever piece is on that tile. If that piece \x0A                    is a king, the cast fails. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [114,101,118,101,114,105,101,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178417, index: (-1), priority: 0};
var daybreakGlass_1493178474 = {name: [71,108,97,115,115,58,32,68,97,121,98,114,101,97,107], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("On your turn, instead of moving you can choose 1 pieces to cast Daybreak on \x0A                    any tile. When the cast completes, the piece on that tile promotes. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [100,97,121,98,114,101,97,107,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178463, index: (-1), priority: 0};

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function negInt(a_33557092) {
  var result_33557093 = 0;

    result_33557093 = (a_33557092 * (-1));

  return result_33557093;

}
var ConstSet2 = setConstr([88, 148]);
      var toTag_721420612 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "html", "head", "title", "base", "link", "meta", "style", "script", "noscript", "body", "section", "nav", "article", "aside", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "header", "footer", "address", "main", "p", "hr", "pre", "blockquote", "ol", "ul", "li", "dl", "dt", "dd", "figure", "figcaption", "div", "a", "em", "strong", "small", "s", "cite", "quote", "dfn", "abbr", "data", "time", "code", "var", "samp", "kbd", "sub", "sup", "i", "b", "u", "mark", "ruby", "rt", "rp", "bdi", "dbo", "span", "br", "wbr", "ins", "del", "img", "iframe", "embed", "object", "param", "video", "audio", "source", "track", "canvas", "map", "area", "animate", "animateMotion", "animateTransform", "circle", "clipPath", "defs", "desc", "discard", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "set", "stop", "svg", "switch", "symbol", "text", "textPath", "tspan", "unknown", "use", "view", "maction", "math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msubsup", "msup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "semantics", "table", "caption", "colgroup", "col", "tbody", "thead", "tfoot", "tr", "td", "th", "form", "fieldset", "legend", "label", "input", "button", "select", "datalist", "optgroup", "option", "textarea", "keygen", "output", "progress", "meter", "details", "summary", "command", "menu", "bdo", "dialog", "slot", "template"];
var ConstSet3 = setConstr([149, 179]);
var ConstSet4 = setConstr([88, 148]);
      var toEventName_721420689 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];
var ConstSet5 = setConstr([88, 148]);

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
  var myDebugPowers_520093792 = [{name: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], technicalName: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110,32,76,101,102,116], synergy: false, tier: 1, rarity: 4, description: makeNimstrLit("A wandering Ronin joins your rank. \x0A        Your third pawn from the left is replaced with a gold general from Shogi."), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493172901, index: (-1), priority: 5}];
  var opponentDebugPowers_520093797 = [{name: [67,111,109,117,110,105,115,109], technicalName: [], synergy: false, tier: 3, rarity: 1, description: makeNimstrLit("The proletariat must revolt to escape the continued shackles subjugation by the bourgeoisie. \x0A                    We shall create a utopia of equality. "), icon: [115,105,99,107,108,101,97,110,100,104,97,109,109,101,114,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178736, index: (-1), priority: 50}];

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}
    var rngPowers_1493178768 = [{name: [65,108,99,111,104,111,108,105,115,109], technicalName: [], synergy: false, tier: 3, rarity: 4, description: [89,111,117,39,114,101,32,102,97,109,105,108,105,101,115,32,97,110,100,32,102,114,105,101,110,100,115,32,109,105,115,115,32,121,111,117,46,32,84,104,101,32,114,101,97,108,32,121,111,117,46], icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173990, index: (-1), priority: 15}, {name: [68,114,117,110,107,32,75,110,105,103,104,116,115], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("Drunk riding is dangerous, your knights should be ashamed of themselves. \x0A        After every other turn, they randomly move."), icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173980, index: (-1), priority: 15}, {name: [67,105,118,105,108,105,97,110,115], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Of course, a battle will have its civillians. And of course, the enemy won\'t kill them.\x0A                    3 civillians spawn on the enemy side. They randomly move and cannot be taken."), icon: [99,105,118,105,108,105,97,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174207, index: (-1), priority: 30}, {name: [83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("Have you seen the movie Slumdog Millionaire? It\'s kind of like that. \x0A                    Your pawns have a 1% chance of promoting whenever they move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174333, index: (-1), priority: 15}, {name: [83,116,117,112,105,100,32,80,111,119,101,114], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("You have a 0.1% chance to automatically win each turn. Yeah, I\'m out of ideas. I\'m sorry."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174382, index: (-1), priority: 15}, {name: [83,108,101,101,112,101,114,32,65,103,101,110,116], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("The silent river collapses in pieces. \x0A                    One of your pawns is a sleeper agent. They can take forward."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174464, index: (-1), priority: 30}, {name: [67,111,110,118,101,114,115,105,111,110], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("When your bishop takes a piece, it has a 15% chance to convert it to your color. \x0A                    When this happens, your bishop swaps places with it instead of taking it."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174422, index: (-1), priority: 15}];
    var experimentalPowers_1493178773 = [{name: [71,108,97,115,115,58,32,83,107,121], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Sky on any \x0A                    open tile. These pieces teleport to their selected tile when the cast completes. \x0A                    Pieces cannot try to teleport to a tile where they would check the king. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178057, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,90,101,114,111], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Zero on  \x0A                    any non-king tile. Any piece on these tiles will die if the cast completes. Zero cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178071, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,83,116,101,101,108], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("On your turn, instead of moving, you can choose 5 pieces to each cast Steel. \x0A                    If there is an enemy one tile in front of them when the cast completes, they take forward. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,116,101,101,108,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178083, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,82,101,118,101,114,105,101], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("On your turn, instead of moving you can choose 3 pieces to each cast Reverie on \x0A                    an opponent tile. When the cast completes, \x0A                    they swap moves and takes with whatever piece is on that tile. If that piece \x0A                    is a king, the cast fails. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [114,101,118,101,114,105,101,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178417, index: (-1), priority: 0}, {name: [71,108,97,115,115,58,32,68,97,121,98,114,101,97,107], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("On your turn, instead of moving you can choose 1 pieces to cast Daybreak on \x0A                    any tile. When the cast completes, the piece on that tile promotes. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [100,97,121,98,114,101,97,107,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178463, index: (-1), priority: 0}];
    var emptyPower_1442840638 = {name: [78,111,116,104,105,110,103,46,32,78,111,116,104,105,110,103,46,46,46], technicalName: [], synergy: false, tier: 0, rarity: 8, description: [84,104,105,115,32,100,111,101,115,32,110,111,116,104,105,110,103,46,32,85,110,108,117,99,107,121,33], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1442840633, index: 0, priority: 10};
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}
    var toLowerRanges_1040188404 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, (-2508), 7357, 7359, (-2508), 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, (-10315), 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_1040188405 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, (-7115), 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, (-7017), 8490, (-7883), 8491, (-7762), 8498, 528, 8579, 501, 11360, 501, 11362, (-10243), 11363, (-3314), 11364, (-10227), 11367, 501, 11369, 501, 11371, 501, 11373, (-10280), 11374, (-10249), 11375, (-10283), 11376, (-10282), 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, (-34832), 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, (-41780), 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, (-41808), 42923, (-41819), 42924, (-41815), 42925, (-41805), 42926, (-41808), 42928, (-41758), 42929, (-41782), 42930, (-41761), 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, (-41807), 42950, (-34884)]);

function absInt(a_33557098) {
    var Temporary1;

  var result_33557099 = 0;

    if ((a_33557098 < 0)) {
    Temporary1 = (a_33557098 * (-1));
    }
    else {
    Temporary1 = a_33557098;
    }
    
    result_33557099 = Temporary1;

  return result_33557099;

}
                              var castingOnAnimations_520093731 = [[32,99,97,115,116,105,110,103,45,111,110,45,115,107,121,32], [32,99,97,115,116,105,110,103,45,111,110,45,122,101,114,111,32], [32,99,97,115,116,105,110,103,45,111,110,45,115,116,101,101,108,32], [32,99,97,115,116,105,110,103,45,111,110,45,114,101,118,101,114,105,101,32], [32,99,97,115,116,105,110,103,45,111,110,45,100,97,121,98,114,101,97,107,32]];
            var castingAnimations_520093730 = [[32,99,97,115,116,105,110,103,45,115,107,121,32], [32,99,97,115,116,105,110,103,45,122,101,114,111,32], [32,99,97,115,116,105,110,103,45,115,116,101,101,108,32], [32,99,97,115,116,105,110,103,45,114,101,118,101,114,105,101,32], [32,99,97,115,116,105,110,103,45,100,97,121,98,114,101,97,107,32]];
var F = {procname: "module kbase", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module kbase", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module kdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kdom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module kdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kdom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jdict", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jdict.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jdict", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jdict.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jstrutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jstrutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jstrutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jstrutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vstyles", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vstyles", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
framePtr = F;
F.line = 75;
F.filename = "vdom.nim";
var svgNamespace_721420514 = [[104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,48,47,115,118,103]];
F.line = 76;
var mathNamespace_721420515 = [[104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,56,47,77,97,116,104,47,77,97,116,104,77,76]];
F.line = 224;
var gid_721421004 = [0];
framePtr = F.prev;
var F = {procname: "module vdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1124073649 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compact", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/compact.nim", line: 0};
framePtr = F;
F.line = 10;
F.filename = "compact.nim";
var vcomponents_754974733 = [{}];
F.line = 22;
framePtr = F.prev;
var F = {procname: "module compact", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/compact.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module karax", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
framePtr = F;
F.line = 60;
F.filename = "karax.nim";
var kxi__ = null;
framePtr = F.prev;
var F = {procname: "module karax", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module karaxdsl", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karaxdsl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module karaxdsl", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karaxdsl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module errors", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
framePtr = F;
F.line = 6;
F.filename = "errors.nim";
var gerrorMsgs_1207959558 = [{}];
F.line = 7;
var gerrorCounter_1207959559 = [0];
framePtr = F.prev;
var F = {procname: "module errors", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module piece", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module piece", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module board", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module board", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module moves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module moves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module basePieces", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module basePieces", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_1409287800 === undefined) {
  globalThis.utcInstance_1409287800 = [null];
}
F.line = 1372;
if (globalThis.localInstance_1409287801 === undefined) {
  globalThis.localInstance_1409287801 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module random", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
framePtr = F;
F.line = 109;
F.filename = "random.nim";
var state_1392508942 = [{a0: 1773455756, a1: 4275166512}];
framePtr = F.prev;
var F = {procname: "module random", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module port", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module port", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function HEX3Aanonymous_1442840633(__1442840634, __1442840635, __1442840636, __1442840637) {
  var F = {procname: "power.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1442843570 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_1442843570 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_1442843570;
            F.line = 46;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1442843570 = addInt(i_1442843570, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555838);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__1442843562 = 0;
      colontmp__1442843562 = (i_33556519 - 1);
      var res_1442843564 = colontmp__1442843562;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_1442843564)) break Label7;
            j_33556554 = res_1442843564;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_1442843564 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function seqOf_1442841385(t_1442841386) {
  var result_1442841387 = null;
  var result_1442841387_Idx = 0;

  var F = {procname: "power.seqOf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 148;
    F.filename = "power.nim";
    switch (t_1442841386) {
    case 0:
      F.line = 149;
      result_1442841387 = commonPowers_1442840653; result_1442841387_Idx = 0;
      break BeforeRet;
      break;
    case 1:
      F.line = 150;
      result_1442841387 = uncommonPowers_1442840654; result_1442841387_Idx = 0;
      break BeforeRet;
      break;
    case 2:
      F.line = 151;
      result_1442841387 = rarePowers_1442840655; result_1442841387_Idx = 0;
      break BeforeRet;
      break;
    case 3:
      F.line = 152;
      result_1442841387 = ultraRarePowers_1442840656; result_1442841387_Idx = 0;
      break BeforeRet;
      break;
    }
  };
  framePtr = F.prev;

  return [result_1442841387, result_1442841387_Idx];

}

function registerPower_1442841404(p_1442841405) {
    var Temporary2;

  var F = {procname: "power.registerPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 155;
    F.filename = "power.nim";
    var x_1442841406 = nimCopy(null, p_1442841405, NTI1442840581);
    F.line = 156;
    x_1442841406.index = addInt(powers_1442840649[0][chckIndx(subInt((powers_1442840649[0]).length, 1), 0, (powers_1442840649[0]).length - 1)].index, 1);
    if (eqStrings(x_1442841406.technicalName, [])) {
    F.line = 157;
    x_1442841406.technicalName = nimCopy(null, x_1442841406.name, NTI33554449);
    }
    
    F.line = 159;
    var Temporary1 = nimCopy(null, x_1442841406, NTI1442840581);
    powers_1442840649[0].push(Temporary1);;
    F.line = 160;
    var Temporary3 = nimCopy(null, x_1442841406, NTI1442840581);
    (Temporary2 = seqOf_1442841385(x_1442841406.tier), Temporary2)[0][Temporary2[1]].push(Temporary3);;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1442840639(__1442840640, __1442840641, __1442840642, __1442840643) {
  var F = {procname: "power.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}
var F = {procname: "module power", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
framePtr = F;
F.line = 86;
F.filename = "power.nim";
var powers_1442840649 = [[{name: [78,111,116,104,105,110,103,46,32,78,111,116,104,105,110,103,46,46,46], technicalName: [], synergy: false, tier: 0, rarity: 8, description: [84,104,105,115,32,100,111,101,115,32,110,111,116,104,105,110,103,46,32,85,110,108,117,99,107,121,33], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1442840633, index: 0, priority: 10}]];
F.line = 87;
var draftSynergies_1442840650 = [[]];
F.line = 88;
var secretSynergies_1442840651 = [[]];
F.line = 89;
var secretSecretSynergies_1442840652 = [[]];
F.line = 90;
var commonPowers_1442840653 = [[]];
F.line = 91;
var uncommonPowers_1442840654 = [[]];
F.line = 92;
var rarePowers_1442840655 = [[]];
F.line = 93;
var ultraRarePowers_1442840656 = [[]];
F.line = 238;
registerPower_1442841404(holy_1442840644);
framePtr = F.prev;
var F = {procname: "module power", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module extramoves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module extramoves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module capitalism", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module capitalism", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isAir_1224737797(p_1224737798) {
  var result_1224737799 = false;

  var F = {procname: "piece.isAir", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 302;
    F.filename = "piece.nim";
    result_1224737799 = (p_1224737798.item == 6);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737799;

}

function isColor_1224737814(a_1224737815, b_1224737816) {
  var result_1224737817 = false;

  var F = {procname: "piece.isColor", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 308;
    F.filename = "piece.nim";
    result_1224737817 = ((a_1224737815.color == b_1224737816) && !(isAir_1224737797(a_1224737815)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737817;

}

function add_1493172279(x_1493172281, x_1493172281_Idx, y_1493172282) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_1493172286 = (x_1493172281[x_1493172281_Idx]).length;
    F.line = 1211;
    if (x_1493172281[x_1493172281_Idx].length < (Temporary1 = chckRange(addInt(xl_1493172286, (y_1493172282).length), 0, 2147483647), Temporary1)) { for (var i = x_1493172281[x_1493172281_Idx].length ; i < Temporary1 ; ++i) x_1493172281[x_1493172281_Idx].push(null); }
               else { x_1493172281[x_1493172281_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_1493172301 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493178790 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__1493178790 = (y_1493172282).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178791 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1493178791 <= colontmp__1493178790)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_1493172301 = res_1493178791;
            F.line = 1212;
            x_1493172281[x_1493172281_Idx][chckIndx(addInt(xl_1493172286, i_1493172301), 0, (x_1493172281[x_1493172281_Idx]).length - 1)] = y_1493172282[chckIndx(i_1493172301, 0, (y_1493172282).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493178791 = addInt(res_1493178791, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function add_1493172306(x_1493172308, x_1493172308_Idx, y_1493172309) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_1493172313 = (x_1493172308[x_1493172308_Idx]).length;
    F.line = 1211;
    if (x_1493172308[x_1493172308_Idx].length < (Temporary1 = chckRange(addInt(xl_1493172313, (y_1493172309).length), 0, 2147483647), Temporary1)) { for (var i = x_1493172308[x_1493172308_Idx].length ; i < Temporary1 ; ++i) x_1493172308[x_1493172308_Idx].push(null); }
               else { x_1493172308[x_1493172308_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_1493172329 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493178794 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__1493178794 = (y_1493172309).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178795 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1493178795 <= colontmp__1493178794)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_1493172329 = res_1493178795;
            F.line = 1212;
            x_1493172308[x_1493172308_Idx][chckIndx(addInt(xl_1493172313, i_1493172329), 0, (x_1493172308[x_1493172308_Idx]).length - 1)] = y_1493172309[chckIndx(i_1493172329, 0, (y_1493172309).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493178795 = addInt(res_1493178795, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function buff_1493172242(piece_1493172243, side_1493172244, b_1493172245, s_1493172246, moves_1493172251, takes_1493172256, onEndturn_1493172261, rotate_1493172262, promoted_1493172263, onPromote_1493172268, whenTaken_1493172269, onTake_1493172270, onMove_1493172271, all_1493172272) {
  var F = {procname: "powers.buff", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 66;
      F.filename = "powers.nim";
      var i_1493172273 = 0;
      F.line = 66;
      var j_1493172274 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178782 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178783 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178783 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178782 = i_1493178783;
              Label5: {
                F.line = 126;
                var j_1493178786 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178787 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178787 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178786 = i_1493178787;
                      F.line = 66;
                      F.filename = "powers.nim";
                      i_1493172273 = i_1493178782;
                      F.line = 66;
                      j_1493172274 = j_1493178786;
                      if ((((b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)].item == piece_1493172243) || all_1493172272) && isColor_1224737814(b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)], side_1493172244))) {
                      F.line = 68;
                      add_1493172279(b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)], "moves", moves_1493172251);
                      F.line = 69;
                      add_1493172279(b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)], "takes", takes_1493172256);
                      F.line = 70;
                      add_1493172306(b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)], "onEndTurn", onEndturn_1493172261);
                      F.line = 71;
                      add_1493172306(b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)], "onPromote", onPromote_1493172268);
                      if (!((whenTaken_1493172269 == null))) {
                      F.line = 72;
                      b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)].whenTaken = whenTaken_1493172269;
                      }
                      
                      if (!((onTake_1493172270 == null))) {
                      F.line = 73;
                      b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)].onTake = onTake_1493172270;
                      }
                      
                      if (!((onMove_1493172271 == null))) {
                      F.line = 74;
                      b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)].onMove = onMove_1493172271;
                      }
                      
                      if (rotate_1493172262) {
                      F.line = 75;
                      b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)].rotate = true;
                      }
                      
                      if (promoted_1493172263) {
                      F.line = 76;
                      b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)][chckIndx(j_1493172274, 0, (b_1493172245[chckIndx(i_1493172273, 0, (b_1493172245).length - 1)]).length - 1)].promoted = true;
                      }
                      
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178787 = addInt(i_1493178787, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178783 = addInt(i_1493178783, 1);
            }
        };
      };
    };
    F.line = 78;
    F.filename = "powers.nim";
    add_1493172279(s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)], "moves", moves_1493172251);
    F.line = 79;
    add_1493172279(s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)], "takes", takes_1493172256);
    F.line = 80;
    add_1493172306(s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)], "onEndTurn", onEndturn_1493172261);
    F.line = 81;
    add_1493172306(s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)], "onPromote", onPromote_1493172268);
    if (rotate_1493172262) {
    F.line = 82;
    s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)].rotate = true;
    }
    
    if (promoted_1493172263) {
    F.line = 83;
    s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)].promoted = true;
    }
    
    if (!((whenTaken_1493172269 == null))) {
    F.line = 84;
    s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)].whenTaken = whenTaken_1493172269;
    }
    
    if (!((onTake_1493172270 == null))) {
    F.line = 85;
    s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)].onTake = onTake_1493172270;
    }
    
    if (!((onMove_1493172271 == null))) {
    F.line = 86;
    s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna[chckIndx(piece_1493172243, 0, (s_1493172246.Field1[chckIndx(side_1493172244, 0, (s_1493172246.Field1).length - 1)].dna).length - 1)].onMove = onMove_1493172271;
    }
    
  framePtr = F.prev;

  
}

function none_1308623025() {
  var result_1308623032 = ({val: ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1308623032;

}

function some_1308623033(val_1308623035) {
  var result_1308623036 = ({val: ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1308623036.has = true;
    F.line = 141;
    result_1308623036.val = nimCopy(result_1308623036.val, val_1308623035, NTI1224736794);
  framePtr = F.prev;

  return result_1308623036;

}

function boardRef_1308623002(b_1308623003, t_1308623004) {
  var result_1308623010 = ({val: ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), has: false});

  var F = {procname: "board.boardRef", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((((t_1308623004.Field0 < 0) || (8 <= t_1308623004.Field0)) || (t_1308623004.Field1 < 0)) || (8 <= t_1308623004.Field1))) {
    F.line = 53;
    F.filename = "board.nim";
    result_1308623010 = nimCopy(result_1308623010, none_1308623025(), NTI1308622955);
    break BeforeRet;
    }
    else {
      F.line = 55;
      result_1308623010 = nimCopy(result_1308623010, some_1308623033(b_1308623003[chckIndx(t_1308623004.Field1, 0, (b_1308623003).length - 1)][chckIndx(t_1308623004.Field0, 0, (b_1308623003[chckIndx(t_1308623004.Field1, 0, (b_1308623003).length - 1)]).length - 1)]), NTI1308622955);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1308623010;

}

function isSome_1291845652(self_1291845654) {
  var result_1291845655 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1291845655 = self_1291845654.has;
  framePtr = F.prev;

  return result_1291845655;

}

function isNone_1291845677(self_1291845679) {
  var result_1291845680 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_1291845680 = !(self_1291845679.has);
  framePtr = F.prev;

  return result_1291845680;

}

function get_1291845669(self_1291845671) {
  var result_1291845672 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_1291845677(self_1291845671)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_1291845672 = self_1291845671.val;
  framePtr = F.prev;

  return result_1291845672;

}

function addIfFree_1291845640(addTo_1291845641, addTo_1291845641_Idx, board_1291845642, t_1291845643, shoot_1291845644) {
  var result_1291845645 = false;

  var F = {procname: "moves.addIfFree", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 13;
    F.filename = "moves.nim";
    var target_1291845647 = boardRef_1308623002(board_1291845642, shoot_1291845644(t_1291845643));
    if ((isSome_1291845652(target_1291845647) && isAir_1224737797(get_1291845669(target_1291845647)))) {
    F.line = 15;
    addTo_1291845641[addTo_1291845641_Idx].push(shoot_1291845644(t_1291845643));;
    F.line = 16;
    result_1291845645 = true;
    break BeforeRet;
    }
    
    F.line = 17;
    result_1291845645 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845645;

}

function shooterFactory_1308622968(m_1308622969, n_1308622970) {
    
function HEX3Aanonymous_1308622972(t_1308622973) {
      var result_1308622974 = {Field0: 0, Field1: 0};

      var F = {procname: "shooterFactory.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
      framePtr = F;
        F.line = 32;
        F.filename = "board.nim";
        var colontmp__1493178797 = addInt(t_1308622973.Field0, m_1308622969);
        F.line = 32;
        var colontmp__1493178798 = addInt(t_1308622973.Field1, n_1308622970);
        F.line = 32;
        result_1308622974 = nimCopy(result_1308622974, {Field0: colontmp__1493178797, Field1: colontmp__1493178798}, NTI1224736771);
      framePtr = F.prev;

      return result_1308622974;

    }

  var result_1308622971 = null;

  var F = {procname: "board.shooterFactory", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "board.nim";
    result_1308622971 = HEX3Aanonymous_1308622972;
  framePtr = F.prev;

  return result_1308622971;

}

function HEX3Aanonymous_1291846082(board_1291846083, p_1291846084) {
  var result_1291846085 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "moves.nim";
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(1, 2));
    F.line = 166;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-1), 2));
    F.line = 167;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(1, (-2)));
    F.line = 168;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-1), (-2)));
    F.line = 169;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(2, 1));
    F.line = 170;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(2, (-1)));
    F.line = 171;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-2), 1));
    F.line = 172;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-2), (-1)));
  framePtr = F.prev;

  return result_1291846085[0];

}

function sameColor_1224737805(a_1224737806, b_1224737807) {
  var result_1224737808 = false;

  var F = {procname: "piece.sameColor", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 305;
    F.filename = "piece.nim";
    result_1224737808 = (((a_1224737806.color == b_1224737807.color) && !(isAir_1224737797(a_1224737806))) && !(isAir_1224737797(b_1224737807)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737808;

}

function addIfTake_1291845739(addTo_1291845740, addTo_1291845740_Idx, board_1291845741, initialPiece_1291845742, t_1291845743, shoot_1291845744, throughFlag_1291845745, cannibalismFlag_1291845746) {
  var result_1291845747 = false;

  var F = {procname: "moves.addIfTake", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 26;
    F.filename = "moves.nim";
    var target_1291845749 = boardRef_1308623002(board_1291845741, shoot_1291845744(t_1291845743));
    if (((isSome_1291845652(target_1291845749) && !(isAir_1224737797(get_1291845669(target_1291845749)))) && (!(sameColor_1224737805(initialPiece_1291845742, get_1291845669(target_1291845749))) || cannibalismFlag_1291845746))) {
    F.line = 29;
    addTo_1291845740[addTo_1291845740_Idx].push(shoot_1291845744(t_1291845743));;
    F.line = 30;
    result_1291845747 = (false || throughFlag_1291845745);
    break BeforeRet;
    }
    
    F.line = 31;
    result_1291845747 = (isSome_1291845652(target_1291845749) && (isAir_1224737797(get_1291845669(target_1291845749)) || throughFlag_1291845745));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845747;

}

function HEX3Aanonymous_1291846087(board_1291846088, p_1291846089) {
  var result_1291846090 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 175;
    F.filename = "moves.nim";
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(1, 2), false, false);
    F.line = 176;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-1), 2), false, false);
    F.line = 177;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(2, 1), false, false);
    F.line = 178;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(2, (-1)), false, false);
    F.line = 179;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(1, (-2)), false, false);
    F.line = 180;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-1), (-2)), false, false);
    F.line = 181;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-2), 1), false, false);
    F.line = 182;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-2), (-1)), false, false);
  framePtr = F.prev;

  return result_1291846090[0];

}

function HEX3Aanonymous_1493172494(side_1493172495, __1493172496, b_1493172497, s_1493172498) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493172495, b_1493172497, s_1493172498, [HEX3Aanonymous_1291846082], [HEX3Aanonymous_1291846087], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949640(board_1509949641, p_1509949642) {
  var result_1509949643 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 153;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968(1, 3));
    F.line = 154;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968((-1), 3));
    F.line = 155;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968(1, (-3)));
    F.line = 156;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968((-1), (-3)));
    F.line = 157;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968(3, 1));
    F.line = 158;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968(3, (-1)));
    F.line = 159;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968((-3), 1));
    F.line = 160;
    var _ = addIfFree_1291845640(result_1509949643, 0, board_1509949641, p_1509949642.tile, shooterFactory_1308622968((-3), (-1)));
  framePtr = F.prev;

  return result_1509949643[0];

}

function HEX3Aanonymous_1509949635(board_1509949636, p_1509949637) {
  var result_1509949638 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 143;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968(1, 3), false, false);
    F.line = 144;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968((-1), 3), false, false);
    F.line = 145;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968(1, (-3)), false, false);
    F.line = 146;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968((-1), (-3)), false, false);
    F.line = 147;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968(3, 1), false, false);
    F.line = 148;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968(3, (-1)), false, false);
    F.line = 149;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968((-3), 1), false, false);
    F.line = 150;
    var _ = addIfTake_1291845739(result_1509949638, 0, board_1509949636, p_1509949637, p_1509949637.tile, shooterFactory_1308622968((-3), (-1)), false, false);
  framePtr = F.prev;

  return result_1509949638[0];

}

function HEX3Aanonymous_1493172540(side_1493172541, __1493172542, b_1493172543, s_1493172544) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 156;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493172541, b_1493172543, s_1493172544, [HEX3Aanonymous_1509949640], [HEX3Aanonymous_1509949635], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949465(board_1509949466, p_1509949467) {
  var result_1509949468 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 29;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949468, 0, board_1509949466, p_1509949467.tile, shooterFactory_1308622968(1, 1));
    F.line = 30;
    var _ = addIfFree_1291845640(result_1509949468, 0, board_1509949466, p_1509949467.tile, shooterFactory_1308622968((-1), 1));
    F.line = 31;
    var _ = addIfFree_1291845640(result_1509949468, 0, board_1509949466, p_1509949467.tile, shooterFactory_1308622968(1, (-1)));
    F.line = 32;
    var _ = addIfFree_1291845640(result_1509949468, 0, board_1509949466, p_1509949467.tile, shooterFactory_1308622968((-1), (-1)));
  framePtr = F.prev;

  return result_1509949468[0];

}

function tileBelow_1308622993(t_1308622994) {
  var result_1308622995 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileBelow", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 38;
    F.filename = "board.nim";
    var colontmp__1493178799 = t_1308622994.Field0;
    F.line = 38;
    var colontmp__1493178800 = addInt(t_1308622994.Field1, 1);
    F.line = 38;
    result_1308622995 = nimCopy(result_1308622995, {Field0: colontmp__1493178799, Field1: colontmp__1493178800}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622995;

}

function HEX3Aanonymous_1509949514(board_1509949515, p_1509949516) {
  var result_1509949517 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949517, 0, board_1509949515, p_1509949516.tile, tileBelow_1308622993);
  framePtr = F.prev;

  return result_1509949517[0];

}

function HEX3Aanonymous_1509949470(board_1509949471, p_1509949472) {
  var result_1509949473 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 35;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949473, 0, board_1509949471, p_1509949472, p_1509949472.tile, shooterFactory_1308622968(1, 1), false, false);
    F.line = 36;
    var _ = addIfTake_1291845739(result_1509949473, 0, board_1509949471, p_1509949472, p_1509949472.tile, shooterFactory_1308622968((-1), 1), false, false);
    F.line = 37;
    var _ = addIfTake_1291845739(result_1509949473, 0, board_1509949471, p_1509949472, p_1509949472.tile, shooterFactory_1308622968(1, (-1)), false, false);
    F.line = 38;
    var _ = addIfTake_1291845739(result_1509949473, 0, board_1509949471, p_1509949472, p_1509949472.tile, shooterFactory_1308622968((-1), (-1)), false, false);
  framePtr = F.prev;

  return result_1509949473[0];

}

function HEX3Aanonymous_1509949524(board_1509949525, p_1509949526) {
  var result_1509949527 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 78;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949527, 0, board_1509949525, p_1509949526, p_1509949526.tile, tileBelow_1308622993, false, false);
  framePtr = F.prev;

  return result_1509949527[0];

}

function tileAbove_1308622990(t_1308622991) {
  var result_1308622992 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileAbove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 35;
    F.filename = "board.nim";
    var colontmp__1493178801 = t_1308622991.Field0;
    F.line = 35;
    var colontmp__1493178802 = subInt(t_1308622991.Field1, 1);
    F.line = 35;
    result_1308622992 = nimCopy(result_1308622992, {Field0: colontmp__1493178801, Field1: colontmp__1493178802}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622992;

}

function HEX3Aanonymous_1509949509(board_1509949510, p_1509949511) {
  var result_1509949512 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 69;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949512, 0, board_1509949510, p_1509949511.tile, tileAbove_1308622990);
  framePtr = F.prev;

  return result_1509949512[0];

}

function HEX3Aanonymous_1509949519(board_1509949520, p_1509949521) {
  var result_1509949522 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949522, 0, board_1509949520, p_1509949521, p_1509949521.tile, tileAbove_1308622990, false, false);
  framePtr = F.prev;

  return result_1509949522[0];

}

function isAtEnd_1224738001(piece_1224738002) {
  var result_1224738003 = false;

  var F = {procname: "piece.isAtEnd", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 360;
    F.filename = "piece.nim";
    result_1224738003 = (((piece_1224738002.tile.Field1 == 7) && (piece_1224738002.color == 0)) || ((piece_1224738002.tile.Field1 == 0) && (piece_1224738002.color == 1)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224738003;

}

function HEX3Aanonymous_1493172641(piece_1493172642, board_1493172643, state_1493172644) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((isAtEnd_1224738001(piece_1493172642) && !(piece_1493172642.promoted))) {
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym26_1493172649 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178805 = 0;
      F.line = 250;
      var L_1493178806 = (piece_1493172642.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178805 < L_1493178806)) break Label3;
            F.line = 180;
            F.filename = "powers.nim";
            xHEX60gensym26_1493172649 = piece_1493172642.onPromote[chckIndx(i_1493178805, 0, (piece_1493172642.onPromote).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym26_1493172649(piece_1493172642, board_1493172643, state_1493172644);
            if (piece_1493172642.promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178805 += 1;
            if (!(((piece_1493172642.onPromote).length == L_1493178806))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function newSeq_1291845948(len_1291845950) {
  var result_1291845951 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1291845951 = new Array(len_1291845950); for (var i = 0 ; i < len_1291845950 ; ++i) { result_1291845951[i] = null; }  framePtr = F.prev;

  return result_1291845951;

}

function HEX3Aanonymous_1509949445(board_1509949446, p_1509949447) {
  var result_1509949448 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 13;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949448, 0, board_1509949446, p_1509949447.tile, shooterFactory_1308622968(1, (-1)));
    F.line = 14;
    var _ = addIfFree_1291845640(result_1509949448, 0, board_1509949446, p_1509949447.tile, shooterFactory_1308622968((-1), (-1)));
  framePtr = F.prev;

  return result_1509949448[0];

}

function tileLeft_1308622996(t_1308622997) {
  var result_1308622998 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileLeft", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 41;
    F.filename = "board.nim";
    var colontmp__1493178817 = subInt(t_1308622997.Field0, 1);
    F.line = 41;
    var colontmp__1493178818 = t_1308622997.Field1;
    F.line = 41;
    result_1308622998 = nimCopy(result_1308622998, {Field0: colontmp__1493178817, Field1: colontmp__1493178818}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622998;

}

function tileRight_1308622999(t_1308623000) {
  var result_1308623001 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileRight", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 44;
    F.filename = "board.nim";
    var colontmp__1493178819 = addInt(t_1308623000.Field0, 1);
    F.line = 44;
    var colontmp__1493178820 = t_1308623000.Field1;
    F.line = 44;
    result_1308623001 = nimCopy(result_1308623001, {Field0: colontmp__1493178819, Field1: colontmp__1493178820}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308623001;

}

function HEX3Aanonymous_1509949475(board_1509949476, p_1509949477) {
  var result_1509949478 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949478, 0, board_1509949476, p_1509949477.tile, tileLeft_1308622996);
    F.line = 42;
    var _ = addIfFree_1291845640(result_1509949478, 0, board_1509949476, p_1509949477.tile, tileRight_1308622999);
  framePtr = F.prev;

  return result_1509949478[0];

}

function HEX3Aanonymous_1509949455(board_1509949456, p_1509949457) {
  var result_1509949458 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949458, 0, board_1509949456, p_1509949457, p_1509949457.tile, shooterFactory_1308622968(1, (-1)), false, false);
    F.line = 22;
    var _ = addIfTake_1291845739(result_1509949458, 0, board_1509949456, p_1509949457, p_1509949457.tile, shooterFactory_1308622968((-1), (-1)), false, false);
  framePtr = F.prev;

  return result_1509949458[0];

}

function HEX3Aanonymous_1509949504(board_1509949505, p_1509949506) {
  var result_1509949507 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 65;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949507, 0, board_1509949505, p_1509949506, p_1509949506.tile, tileLeft_1308622996, false, false);
    F.line = 66;
    var _ = addIfTake_1291845739(result_1509949507, 0, board_1509949505, p_1509949506, p_1509949506.tile, tileRight_1308622999, false, false);
  framePtr = F.prev;

  return result_1509949507[0];

}

function HEX3Aanonymous_1509949450(board_1509949451, p_1509949452) {
  var result_1509949453 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949453, 0, board_1509949451, p_1509949452.tile, shooterFactory_1308622968(1, 1));
    F.line = 18;
    var _ = addIfFree_1291845640(result_1509949453, 0, board_1509949451, p_1509949452.tile, shooterFactory_1308622968((-1), 1));
  framePtr = F.prev;

  return result_1509949453[0];

}

function HEX3Aanonymous_1509949460(board_1509949461, p_1509949462) {
  var result_1509949463 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949463, 0, board_1509949461, p_1509949462, p_1509949462.tile, shooterFactory_1308622968(1, 1), false, false);
    F.line = 26;
    var _ = addIfTake_1291845739(result_1509949463, 0, board_1509949461, p_1509949462, p_1509949462.tile, shooterFactory_1308622968((-1), 1), false, false);
  framePtr = F.prev;

  return result_1509949463[0];

}

function HEX3Aanonymous_1493172554(piece_1493172555, board_1493172556, state_1493172557) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 164;
    F.filename = "powers.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym18_1493172562 = newSeq_1291845948(0);
    Label1: {
      F.line = 653;
      var it_1493172566 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178810 = 0;
      F.line = 250;
      var L_1493178811 = (piece_1493172555.moves).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178810 < L_1493178811)) break Label3;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1493172566 = piece_1493172555.moves[chckIndx(i_1493178810, 0, (piece_1493172555.moves).length - 1)];
            if (!((it_1493172566 == HEX3Aanonymous_1509949465))) {
            F.line = 654;
            resultHEX60gensym18_1493172562.push(it_1493172566);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178810 += 1;
            if (!(((piece_1493172555.moves).length == L_1493178811))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    piece_1493172555.moves = nimCopy(null, resultHEX60gensym18_1493172562, NTI1291845874);
    F.line = 165;
    F.filename = "powers.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym20_1493172579 = newSeq_1291845948(0);
    Label4: {
      F.line = 653;
      var it_1493172583 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178814 = 0;
      F.line = 250;
      var L_1493178815 = (piece_1493172555.takes).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_1493178814 < L_1493178815)) break Label6;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1493172583 = piece_1493172555.takes[chckIndx(i_1493178814, 0, (piece_1493172555.takes).length - 1)];
            if (!((it_1493172583 == HEX3Aanonymous_1509949470))) {
            F.line = 654;
            resultHEX60gensym20_1493172579.push(it_1493172583);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178814 += 1;
            if (!(((piece_1493172555.takes).length == L_1493178815))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    piece_1493172555.takes = nimCopy(null, resultHEX60gensym20_1493172579, NTI1291845874);
    if (isColor_1224737814(piece_1493172555, 1)) {
    F.line = 170;
    F.filename = "powers.nim";
    add_1493172279(piece_1493172555, "moves", [HEX3Aanonymous_1509949514, HEX3Aanonymous_1509949445, HEX3Aanonymous_1509949475]);
    F.line = 171;
    add_1493172279(piece_1493172555, "takes", [HEX3Aanonymous_1509949524, HEX3Aanonymous_1509949455, HEX3Aanonymous_1509949504]);
    }
    else {
      F.line = 173;
      add_1493172279(piece_1493172555, "moves", [HEX3Aanonymous_1509949509, HEX3Aanonymous_1509949450, HEX3Aanonymous_1509949475]);
      F.line = 174;
      add_1493172279(piece_1493172555, "takes", [HEX3Aanonymous_1509949519, HEX3Aanonymous_1509949460, HEX3Aanonymous_1509949504]);
    }
    
    F.line = 175;
    piece_1493172555.promoted = true;
    F.line = 176;
    piece_1493172555.filePath = nimCopy(null, [112,114,111,109,111,116,101,100,115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172653(side_1493172654, viewSide_1493172655, b_1493172656, __1493172657) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 196;
    F.filename = "powers.nim";
    if ((side_1493172654 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172662 = Temporary1;
    F.line = 197;
    if ((side_1493172654 == 0)) {
    Temporary2 = 6;
    }
    else {
    Temporary2 = 1;
    }
    
    var file_1493172667 = Temporary2;
    if (!((b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].color == side_1493172654))) {
    F.line = 198;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(198, 13) `b[rank][file].color == side` "));
    }
    
    if ((side_1493172654 == 0)) {
    F.line = 200;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949514], NTI1275068532);
    F.line = 201;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949524], NTI1275068532);
    }
    else {
      F.line = 203;
      b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949509], NTI1275068532);
      F.line = 204;
      b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949519], NTI1275068532);
    }
    
    F.line = 205;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1493172641], NTI1275068457);
    F.line = 206;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1493172554], NTI1275068457);
    F.line = 207;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].item = 7;
    F.line = 208;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].filePath = nimCopy(null, [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 209;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].colorable = false;
    if (!((side_1493172654 == viewSide_1493172655))) {
    F.line = 210;
    b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)][chckIndx(file_1493172667, 0, (b_1493172656[chckIndx(rank_1493172662, 0, (b_1493172656).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172742(side_1493172743, viewSide_1493172744, b_1493172745, __1493172746) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 227;
    F.filename = "powers.nim";
    if ((side_1493172743 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172751 = Temporary1;
    F.line = 228;
    if ((side_1493172743 == 0)) {
    Temporary2 = 1;
    }
    else {
    Temporary2 = 6;
    }
    
    var file_1493172756 = Temporary2;
    if (!((b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].color == side_1493172743))) {
    F.line = 229;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(229, 13) `b[rank][file].color == side` "));
    }
    
    if ((side_1493172743 == 0)) {
    F.line = 231;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949514], NTI1275068532);
    F.line = 232;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949524], NTI1275068532);
    }
    else {
      F.line = 234;
      b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949509], NTI1275068532);
      F.line = 235;
      b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949519], NTI1275068532);
    }
    
    F.line = 236;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1493172641], NTI1275068457);
    F.line = 237;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1493172554], NTI1275068457);
    F.line = 238;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].item = 7;
    F.line = 239;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].filePath = nimCopy(null, [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 240;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].colorable = false;
    if (!((side_1493172743 == viewSide_1493172744))) {
    F.line = 241;
    b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)][chckIndx(file_1493172756, 0, (b_1493172745[chckIndx(rank_1493172751, 0, (b_1493172745).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function newIndex_1224737256(s_1224737257) {
  var result_1224737258 = 0;

  var F = {procname: "piece.newIndex", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 199;
    F.filename = "piece.nim";
    s_1224737257.Field0.nextIndex = addInt(s_1224737257.Field0.nextIndex, 1);
    F.line = 200;
    result_1224737258 = s_1224737257.Field0.nextIndex;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737258;

}

function pieceMove_1224737557(p_1224737558, rank_1224737559, file_1224737560, board_1224737561, state_1224737562) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 232;
    F.filename = "piece.nim";
    board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)][chckIndx(file_1224737560, 0, (board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)]).length - 1)] = nimCopy(board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)][chckIndx(file_1224737560, 0, (board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)]).length - 1)], board_1224737561[chckIndx(p_1224737558.tile.Field1, 0, (board_1224737561).length - 1)][chckIndx(p_1224737558.tile.Field0, 0, (board_1224737561[chckIndx(p_1224737558.tile.Field1, 0, (board_1224737561).length - 1)]).length - 1)], NTI1224736794);
    F.line = 233;
    board_1224737561[chckIndx(p_1224737558.tile.Field1, 0, (board_1224737561).length - 1)][chckIndx(p_1224737558.tile.Field0, 0, (board_1224737561[chckIndx(p_1224737558.tile.Field1, 0, (board_1224737561).length - 1)]).length - 1)] = nimCopy(board_1224737561[chckIndx(p_1224737558.tile.Field1, 0, (board_1224737561).length - 1)][chckIndx(p_1224737558.tile.Field0, 0, (board_1224737561[chckIndx(p_1224737558.tile.Field1, 0, (board_1224737561).length - 1)]).length - 1)], {index: newIndex_1224737256(state_1224737562), item: 6, tile: nimCopy(null, p_1224737558.tile, NTI1224736771), timesMoved: 0, piecesTaken: 0, promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, color: 0, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], casts: []}, NTI1224736794);
    F.line = 234;
    var colontmp__1493178821 = file_1224737560;
    F.line = 234;
    var colontmp__1493178822 = rank_1224737559;
    F.line = 234;
    board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)][chckIndx(file_1224737560, 0, (board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)]).length - 1)].tile = nimCopy(board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)][chckIndx(file_1224737560, 0, (board_1224737561[chckIndx(rank_1224737559, 0, (board_1224737561).length - 1)]).length - 1)].tile, {Field0: colontmp__1493178821, Field1: colontmp__1493178822}, NTI1224736771);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172799(side_1493172800, __1493172801, b_1493172802, s_1493172803) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1493172800 == 0)) {
    F.line = 257;
    F.filename = "powers.nim";
    pieceMove_1224737557(b_1493172802[chckIndx(1, 0, (b_1493172802).length - 1)][chckIndx(3, 0, (b_1493172802[chckIndx(1, 0, (b_1493172802).length - 1)]).length - 1)], 2, 3, b_1493172802, s_1493172803);
    F.line = 258;
    pieceMove_1224737557(b_1493172802[chckIndx(1, 0, (b_1493172802).length - 1)][chckIndx(4, 0, (b_1493172802[chckIndx(1, 0, (b_1493172802).length - 1)]).length - 1)], 2, 4, b_1493172802, s_1493172803);
    }
    else {
      F.line = 260;
      pieceMove_1224737557(b_1493172802[chckIndx(6, 0, (b_1493172802).length - 1)][chckIndx(3, 0, (b_1493172802[chckIndx(6, 0, (b_1493172802).length - 1)]).length - 1)], 5, 3, b_1493172802, s_1493172803);
      F.line = 261;
      pieceMove_1224737557(b_1493172802[chckIndx(6, 0, (b_1493172802).length - 1)][chckIndx(4, 0, (b_1493172802[chckIndx(6, 0, (b_1493172802).length - 1)]).length - 1)], 5, 4, b_1493172802, s_1493172803);
    }
    
  framePtr = F.prev;

  
}

function add_1224737299(x_1224737301, x_1224737301_Idx, y_1224737302) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_1224737307 = (x_1224737301[x_1224737301_Idx]).length;
    F.line = 1211;
    if (x_1224737301[x_1224737301_Idx].length < (Temporary1 = chckRange(addInt(xl_1224737307, (y_1224737302).length), 0, 2147483647), Temporary1)) { for (var i = x_1224737301[x_1224737301_Idx].length ; i < Temporary1 ; ++i) x_1224737301[x_1224737301_Idx].push({Field0: 0, Field1: 0}); }
               else { x_1224737301[x_1224737301_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_1224737323 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493178824 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__1493178824 = (y_1224737302).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178825 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1493178825 <= colontmp__1493178824)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_1224737323 = res_1493178825;
            F.line = 1212;
            x_1224737301[x_1224737301_Idx][chckIndx(addInt(xl_1224737307, i_1224737323), 0, (x_1224737301[x_1224737301_Idx]).length - 1)] = nimCopy(x_1224737301[x_1224737301_Idx][chckIndx(addInt(xl_1224737307, i_1224737323), 0, (x_1224737301[x_1224737301_Idx]).length - 1)], y_1224737302[chckIndx(i_1224737323, 0, (y_1224737302).length - 1)], NTI1224736771);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493178825 = addInt(res_1493178825, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function lineTakes_1291845819(board_1291845820, p_1291845821, shoot_1291845822, throughFlag_1291845823, cannibalismFlag_1291845824) {
  var result_1291845825 = [[]];

  var F = {procname: "moves.lineTakes", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 46;
    F.filename = "moves.nim";
    var next_1291845826 = nimCopy(null, p_1291845821.tile, NTI1224736771);
    Label1: {
      F.line = 47;
        Label2: while (true) {
        if (!addIfTake_1291845739(result_1291845825, 0, board_1291845820, p_1291845821, next_1291845826, shoot_1291845822, throughFlag_1291845823, cannibalismFlag_1291845824)) break Label2;
          F.line = 48;
          next_1291845826 = nimCopy(next_1291845826, shoot_1291845822(next_1291845826), NTI1224736771);
        }
    };
  framePtr = F.prev;

  return result_1291845825[0];

}

function HEX3Aanonymous_1509949576(board_1509949577, p_1509949578) {
  var result_1509949579 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 110;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949579, 0, lineTakes_1291845819(board_1509949577, p_1509949578, shooterFactory_1308622968(1, 1), false, true));
    F.line = 111;
    add_1224737299(result_1509949579, 0, lineTakes_1291845819(board_1509949577, p_1509949578, shooterFactory_1308622968((-1), 1), false, true));
    F.line = 112;
    add_1224737299(result_1509949579, 0, lineTakes_1291845819(board_1509949577, p_1509949578, shooterFactory_1308622968(1, (-1)), false, true));
    F.line = 113;
    add_1224737299(result_1509949579, 0, lineTakes_1291845819(board_1509949577, p_1509949578, shooterFactory_1308622968((-1), (-1)), false, true));
  framePtr = F.prev;

  return result_1509949579[0];

}

function newSeq_1224737520(len_1224737522) {
  var result_1224737523 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1224737523 = new Array(len_1224737522); for (var i = 0 ; i < len_1224737522 ; ++i) { result_1224737523[i] = {Field0: 0, Field1: 0}; }  framePtr = F.prev;

  return result_1224737523;

}

function HEX3DHEX3D_1308622964(a_1308622965, b_1308622966) {
  var result_1308622967 = false;

  var F = {procname: "board.==", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 25;
    F.filename = "board.nim";
    result_1308622967 = ((a_1308622965.Field0 == b_1308622966.Field0) && (a_1308622965.Field1 == b_1308622966.Field1));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622967;

}

function HEX3Aanonymous_1509949597(board_1509949598, p_1509949599) {
  var result_1509949600 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "extramoves.nim";
    Label1: {
      F.line = 116;
      var i_1509949605 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178832 = (-1);
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493178832 <= 1)) break Label3;
            F.line = 116;
            F.filename = "extramoves.nim";
            i_1509949605 = res_1493178832;
            Label4: {
              F.line = 117;
              var j_1509949610 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_1493178830 = (-1);
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_1493178830 <= 1)) break Label6;
                    F.line = 117;
                    F.filename = "extramoves.nim";
                    j_1509949610 = res_1493178830;
                    F.line = 118;
                    var _ = addIfTake_1291845739(result_1509949600, 0, board_1509949598, p_1509949599, p_1509949599.tile, shooterFactory_1308622968(i_1509949605, j_1509949610), false, true);
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_1493178830 = addInt(res_1493178830, 1);
                  }
              };
            };
            F.line = 102;
            res_1493178832 = addInt(res_1493178832, 1);
          }
      };
    };
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym0_1509949615 = newSeq_1224737520(0);
    Label7: {
      F.line = 653;
      var it_1509949619 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178836 = 0;
      F.line = 250;
      var L_1493178837 = (result_1509949600[0]).length;
      Label8: {
        F.line = 251;
          Label9: while (true) {
          if (!(i_1493178836 < L_1493178837)) break Label9;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1509949619 = result_1509949600[0][chckIndx(i_1493178836, 0, (result_1509949600[0]).length - 1)];
            if (!(HEX3DHEX3D_1308622964(it_1509949619, p_1509949599.tile))) {
            F.line = 654;
            var Temporary10 = nimCopy(null, it_1509949619, NTI1224736771);
            resultHEX60gensym0_1509949615.push(Temporary10);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178836 += 1;
            if (!(((result_1509949600[0]).length == L_1493178837))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1509949600[0] = nimCopy(null, resultHEX60gensym0_1509949615, NTI1224737341);
  framePtr = F.prev;

  return result_1509949600[0];

}

function HEX3Aanonymous_1509949555(board_1509949556, p_1509949557) {
  var result_1509949558 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 104;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949558, 0, lineTakes_1291845819(board_1509949556, p_1509949557, tileAbove_1308622990, false, true));
    F.line = 105;
    add_1224737299(result_1509949558, 0, lineTakes_1291845819(board_1509949556, p_1509949557, tileBelow_1308622993, false, true));
    F.line = 106;
    add_1224737299(result_1509949558, 0, lineTakes_1291845819(board_1509949556, p_1509949557, tileLeft_1308622996, false, true));
    F.line = 107;
    add_1224737299(result_1509949558, 0, lineTakes_1291845819(board_1509949556, p_1509949557, tileRight_1308622999, false, true));
  framePtr = F.prev;

  return result_1509949558[0];

}

function HEX3Aanonymous_1493172809(side_1493172810, __1493172811, b_1493172812, s_1493172813) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 273;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493172810, b_1493172812, s_1493172813, [], [HEX3Aanonymous_1509949576, HEX3Aanonymous_1509949597, HEX3Aanonymous_1509949555], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function pieceSwap_1224737596(p1_1224737597, p2_1224737598, board_1224737599) {
  var F = {procname: "piece.pieceSwap", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 249;
    F.filename = "piece.nim";
    var temp_1224737600 = nimCopy(null, p1_1224737597, NTI1224736794);
    F.line = 251;
    board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(p1_1224737597.tile.Field0, 0, (board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)] = nimCopy(board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(p1_1224737597.tile.Field0, 0, (board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)], p2_1224737598, NTI1224736794);
    F.line = 252;
    board_1224737599[chckIndx(p2_1224737598.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(p2_1224737598.tile.Field0, 0, (board_1224737599[chckIndx(p2_1224737598.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)] = nimCopy(board_1224737599[chckIndx(p2_1224737598.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(p2_1224737598.tile.Field0, 0, (board_1224737599[chckIndx(p2_1224737598.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)], temp_1224737600, NTI1224736794);
    F.line = 253;
    var colontmp__1493178839 = p1_1224737597.tile.Field0;
    F.line = 253;
    var colontmp__1493178840 = p1_1224737597.tile.Field1;
    F.line = 253;
    board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(p1_1224737597.tile.Field0, 0, (board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)].tile = nimCopy(board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(p1_1224737597.tile.Field0, 0, (board_1224737599[chckIndx(p1_1224737597.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)].tile, {Field0: colontmp__1493178839, Field1: colontmp__1493178840}, NTI1224736771);
    F.line = 254;
    var colontmp__1493178841 = temp_1224737600.tile.Field0;
    F.line = 254;
    var colontmp__1493178842 = temp_1224737600.tile.Field1;
    F.line = 254;
    board_1224737599[chckIndx(temp_1224737600.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(temp_1224737600.tile.Field0, 0, (board_1224737599[chckIndx(temp_1224737600.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)].tile = nimCopy(board_1224737599[chckIndx(temp_1224737600.tile.Field1, 0, (board_1224737599).length - 1)][chckIndx(temp_1224737600.tile.Field0, 0, (board_1224737599[chckIndx(temp_1224737600.tile.Field1, 0, (board_1224737599).length - 1)]).length - 1)].tile, {Field0: colontmp__1493178841, Field1: colontmp__1493178842}, NTI1224736771);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172857(side_1493172858, __1493172859, b_1493172860, __1493172861) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 319;
    F.filename = "powers.nim";
    if ((side_1493172858 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172866 = Temporary1;
    F.line = 320;
    pieceSwap_1224737596(b_1493172860[chckIndx(rank_1493172866, 0, (b_1493172860).length - 1)][chckIndx(2, 0, (b_1493172860[chckIndx(rank_1493172866, 0, (b_1493172860).length - 1)]).length - 1)], (Temporary2 = b_1493172860[chckIndx(addInt(rank_1493172866, 1), 0, (b_1493172860).length - 1)], Temporary2)[chckIndx(2, 0, (Temporary2).length - 1)], b_1493172860);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172868(side_1493172869, __1493172870, b_1493172871, __1493172872) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 334;
    F.filename = "powers.nim";
    if ((side_1493172869 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172877 = Temporary1;
    F.line = 335;
    pieceSwap_1224737596(b_1493172871[chckIndx(rank_1493172877, 0, (b_1493172871).length - 1)][chckIndx(5, 0, (b_1493172871[chckIndx(rank_1493172877, 0, (b_1493172871).length - 1)]).length - 1)], (Temporary2 = b_1493172871[chckIndx(addInt(rank_1493172877, 1), 0, (b_1493172871).length - 1)], Temporary2)[chckIndx(5, 0, (Temporary2).length - 1)], b_1493172871);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172835(side_1493172836, __1493172837, b_1493172838, __1493172839) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 289;
    F.filename = "powers.nim";
    if ((side_1493172836 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172844 = Temporary1;
    F.line = 290;
    pieceSwap_1224737596(b_1493172838[chckIndx(rank_1493172844, 0, (b_1493172838).length - 1)][chckIndx(0, 0, (b_1493172838[chckIndx(rank_1493172844, 0, (b_1493172838).length - 1)]).length - 1)], (Temporary2 = b_1493172838[chckIndx(addInt(rank_1493172844, 1), 0, (b_1493172838).length - 1)], Temporary2)[chckIndx(0, 0, (Temporary2).length - 1)], b_1493172838);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172846(side_1493172847, __1493172848, b_1493172849, __1493172850) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "powers.nim";
    if ((side_1493172847 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172855 = Temporary1;
    F.line = 305;
    pieceSwap_1224737596(b_1493172849[chckIndx(rank_1493172855, 0, (b_1493172849).length - 1)][chckIndx(7, 0, (b_1493172849[chckIndx(rank_1493172855, 0, (b_1493172849).length - 1)]).length - 1)], (Temporary2 = b_1493172849[chckIndx(addInt(rank_1493172855, 1), 0, (b_1493172849).length - 1)], Temporary2)[chckIndx(7, 0, (Temporary2).length - 1)], b_1493172849);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172879(piece_1493172880, board_1493172881, state_1493172882) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((piece_1493172880.piecesTaken == 3)) {
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym33_1493172887 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178844 = 0;
      F.line = 250;
      var L_1493178845 = (piece_1493172880.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178844 < L_1493178845)) break Label3;
            F.line = 340;
            F.filename = "powers.nim";
            xHEX60gensym33_1493172887 = piece_1493172880.onPromote[chckIndx(i_1493178844, 0, (piece_1493172880.onPromote).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym33_1493172887(piece_1493172880, board_1493172881, state_1493172882);
            if (piece_1493172880.promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178844 += 1;
            if (!(((piece_1493172880.onPromote).length == L_1493178845))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172891(side_1493172892, __1493172893, b_1493172894, s_1493172895) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 353;
    F.filename = "powers.nim";
    buff_1493172242(3, side_1493172892, b_1493172894, s_1493172895, [], [], [HEX3Aanonymous_1493172879], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737211(piece_1224737212, board_1224737213, state_1224737214) {
  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172901(side_1493172902, viewSide_1493172903, b_1493172904, __1493172905) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 373;
    F.filename = "powers.nim";
    if ((side_1493172902 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172910 = Temporary1;
    F.line = 374;
    if ((side_1493172902 == 0)) {
    Temporary2 = 5;
    }
    else {
    Temporary2 = 2;
    }
    
    var file_1493172915 = Temporary2;
    if (!((b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].color == side_1493172902))) {
    F.line = 375;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(375, 13) `b[rank][file].color == side` "));
    }
    
    if ((side_1493172902 == 0)) {
    F.line = 377;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949514, HEX3Aanonymous_1509949475], NTI1291846007);
    F.line = 378;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949524, HEX3Aanonymous_1509949504], NTI1291846007);
    }
    else {
      F.line = 380;
      b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949509, HEX3Aanonymous_1509949475], NTI1291846007);
      F.line = 381;
      b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949519, HEX3Aanonymous_1509949504], NTI1291846007);
    }
    
    F.line = 382;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1224737211], NTI1275068457);
    F.line = 383;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].item = 7;
    F.line = 384;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].filePath = nimCopy(null, [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 385;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].colorable = false;
    if (!((side_1493172902 == viewSide_1493172903))) {
    F.line = 386;
    b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)][chckIndx(file_1493172915, 0, (b_1493172904[chckIndx(rank_1493172910, 0, (b_1493172904).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493172954(side_1493172955, viewSide_1493172956, b_1493172957, __1493172958) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 403;
    F.filename = "powers.nim";
    if ((side_1493172955 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493172963 = Temporary1;
    F.line = 404;
    if ((side_1493172955 == 0)) {
    Temporary2 = 2;
    }
    else {
    Temporary2 = 5;
    }
    
    var file_1493172968 = Temporary2;
    if (!((b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].color == side_1493172955))) {
    F.line = 405;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(405, 13) `b[rank][file].color == side` "));
    }
    
    if ((side_1493172955 == 0)) {
    F.line = 407;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949514, HEX3Aanonymous_1509949475], NTI1291846007);
    F.line = 408;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949524, HEX3Aanonymous_1509949504], NTI1291846007);
    }
    else {
      F.line = 410;
      b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949509, HEX3Aanonymous_1509949475], NTI1291846007);
      F.line = 411;
      b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949519, HEX3Aanonymous_1509949504], NTI1291846007);
    }
    
    F.line = 412;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1224737211], NTI1275068457);
    F.line = 413;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].item = 7;
    F.line = 414;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].filePath = nimCopy(null, [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 415;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].colorable = false;
    if (!((side_1493172955 == viewSide_1493172956))) {
    F.line = 416;
    b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)][chckIndx(file_1493172968, 0, (b_1493172957[chckIndx(rank_1493172963, 0, (b_1493172957).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173049(side_1493173050, __1493173051, b_1493173052, s_1493173053) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 454;
    F.filename = "powers.nim";
    buff_1493172242(2, side_1493173050, b_1493173052, s_1493173053, [HEX3Aanonymous_1291846082], [HEX3Aanonymous_1291846087], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function createWerewolf_1493173007() {
    
function HEX3Aanonymous_1493173010(piece_1493173011, board_1493173012, state_1493173013) {
      var F = {procname: "createWerewolf.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (((1 <= piece_1493173011.piecesTaken) && !(transformed_1493173009))) {
        F.line = 426;
        F.filename = "powers.nim";
        add_1493172279(piece_1493173011, "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1509949640]);
        F.line = 427;
        add_1493172279(piece_1493173011, "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1509949635]);
        F.line = 428;
        piece_1493173011.rotate = true;
        F.line = 429;
        transformed_1493173009 = true;
        }
        
      framePtr = F.prev;

      
    }

  var result_1493173008 = null;

  var F = {procname: "powers.createWerewolf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 422;
    F.filename = "powers.nim";
    var transformed_1493173009 = false;
    F.line = 424;
    result_1493173008 = HEX3Aanonymous_1493173010;
  framePtr = F.prev;

  return result_1493173008;

}

function HEX3Aanonymous_1493173030(side_1493173031, __1493173032, b_1493173033, __1493173034) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 440;
    F.filename = "powers.nim";
    if ((side_1493173031 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493173039 = Temporary1;
    F.line = 441;
    b_1493173033[chckIndx(rank_1493173039, 0, (b_1493173033).length - 1)][chckIndx(0, 0, (b_1493173033[chckIndx(rank_1493173039, 0, (b_1493173033).length - 1)]).length - 1)].onEndTurn.push(createWerewolf_1493173007());;
    F.line = 442;
    b_1493173033[chckIndx(rank_1493173039, 0, (b_1493173033).length - 1)][chckIndx(7, 0, (b_1493173033[chckIndx(rank_1493173039, 0, (b_1493173033).length - 1)]).length - 1)].onEndTurn.push(createWerewolf_1493173007());;
  framePtr = F.prev;

  
}

function change_1493172383(piece_1493172384, side_1493172385, b_1493172386, s_1493172387, moves_1493172392, takes_1493172397, onEndturn_1493172402, rotate_1493172403, promoted_1493172404, onPromote_1493172409, whenTaken_1493172410, onTake_1493172411, onMove_1493172412, filePath_1493172413, all_1493172414) {
  var F = {procname: "powers.change", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 96;
      F.filename = "powers.nim";
      var i_1493172415 = 0;
      F.line = 96;
      var j_1493172416 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178849 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178850 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178850 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178849 = i_1493178850;
              Label5: {
                F.line = 126;
                var j_1493178853 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178854 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178854 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178853 = i_1493178854;
                      F.line = 96;
                      F.filename = "powers.nim";
                      i_1493172415 = i_1493178849;
                      F.line = 96;
                      j_1493172416 = j_1493178853;
                      if ((((b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].item == piece_1493172384) || all_1493172414) && isColor_1224737814(b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)], side_1493172385))) {
                      if (!(((moves_1493172392).length == 0))) {
                      F.line = 98;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].moves = nimCopy(null, moves_1493172392, NTI1493172359);
                      }
                      
                      if (!(((takes_1493172397).length == 0))) {
                      F.line = 99;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].takes = nimCopy(null, takes_1493172397, NTI1493172368);
                      }
                      
                      if (!(((onEndturn_1493172402).length == 0))) {
                      F.line = 100;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].onEndTurn = nimCopy(null, onEndturn_1493172402, NTI1493172377);
                      }
                      
                      if (!(((onPromote_1493172409).length == 0))) {
                      F.line = 101;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].onPromote = nimCopy(null, onPromote_1493172409, NTI1493172386);
                      }
                      
                      if (!((whenTaken_1493172410 == null))) {
                      F.line = 102;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].whenTaken = whenTaken_1493172410;
                      }
                      
                      if (!((onTake_1493172411 == null))) {
                      F.line = 103;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].onTake = onTake_1493172411;
                      }
                      
                      if (!((onMove_1493172412 == null))) {
                      F.line = 104;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].onMove = onMove_1493172412;
                      }
                      
                      if (!(eqStrings(filePath_1493172413, []))) {
                      F.line = 105;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].filePath = nimCopy(null, filePath_1493172413, NTI33554449);
                      }
                      
                      if (rotate_1493172403) {
                      F.line = 106;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].rotate = true;
                      }
                      
                      if (promoted_1493172404) {
                      F.line = 107;
                      b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)][chckIndx(j_1493172416, 0, (b_1493172386[chckIndx(i_1493172415, 0, (b_1493172386).length - 1)]).length - 1)].promoted = true;
                      }
                      
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178854 = addInt(i_1493178854, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178850 = addInt(i_1493178850, 1);
            }
        };
      };
    };
    if (!(((moves_1493172392).length == 0))) {
    F.line = 109;
    F.filename = "powers.nim";
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].moves = nimCopy(null, moves_1493172392, NTI1493172359);
    }
    
    if (!(((takes_1493172397).length == 0))) {
    F.line = 110;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].takes = nimCopy(null, takes_1493172397, NTI1493172368);
    }
    
    if (!(((onEndturn_1493172402).length == 0))) {
    F.line = 111;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].onEndTurn = nimCopy(null, onEndturn_1493172402, NTI1493172377);
    }
    
    if (!(((onPromote_1493172409).length == 0))) {
    F.line = 112;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].onPromote = nimCopy(null, onPromote_1493172409, NTI1493172386);
    }
    
    if (!(eqStrings(filePath_1493172413, []))) {
    F.line = 113;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].filePath = nimCopy(null, filePath_1493172413, NTI33554449);
    }
    
    if (rotate_1493172403) {
    F.line = 114;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].rotate = true;
    }
    
    if (promoted_1493172404) {
    F.line = 115;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].promoted = true;
    }
    
    if (!((whenTaken_1493172410 == null))) {
    F.line = 116;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].whenTaken = whenTaken_1493172410;
    }
    
    if (!((onTake_1493172411 == null))) {
    F.line = 117;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].onTake = onTake_1493172411;
    }
    
    if (!((onMove_1493172412 == null))) {
    F.line = 118;
    s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna[chckIndx(piece_1493172384, 0, (s_1493172387.Field1[chckIndx(side_1493172385, 0, (s_1493172387.Field1).length - 1)].dna).length - 1)].onMove = onMove_1493172412;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173063(side_1493173064, __1493173065, b_1493173066, s_1493173067) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 469;
    F.filename = "powers.nim";
    change_1493172383(5, side_1493173064, b_1493173066, s_1493173067, [HEX3Aanonymous_1509949640], [HEX3Aanonymous_1509949635], [], false, true, [], null, null, null, [103,105,114,97,102,102,101,46,115,118,103], false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949645(board_1509949646, p_1509949647) {
  var result_1509949648 = [];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 163;
    F.filename = "extramoves.nim";
    var Temporary1 = nimCopy(null, p_1509949647.tile, NTI1224736771);
    result_1509949648.push(Temporary1);;
  framePtr = F.prev;

  return result_1509949648;

}

function HEX5BHEX5DHEX3D_1224737145(b_1224737146, tile_1224737147, newPiece_1224737148) {
  var F = {procname: "piece.[]=", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 152;
    F.filename = "piece.nim";
    b_1224737146[chckIndx(tile_1224737147.Field1, 0, (b_1224737146).length - 1)][chckIndx(tile_1224737147.Field0, 0, (b_1224737146[chckIndx(tile_1224737147.Field1, 0, (b_1224737146).length - 1)]).length - 1)] = nimCopy(b_1224737146[chckIndx(tile_1224737147.Field1, 0, (b_1224737146).length - 1)][chckIndx(tile_1224737147.Field0, 0, (b_1224737146[chckIndx(tile_1224737147.Field1, 0, (b_1224737146).length - 1)]).length - 1)], newPiece_1224737148, NTI1224736794);
  framePtr = F.prev;

  
}

function pieceCopy_1224737661(initial_1224737662, index_1224737663, tile_1224737664, item_1224737665, color_1224737666, timesMoved_1224737667, piecesTaken_1224737668, moves_1224737669, takes_1224737670, onMove_1224737671, onTake_1224737672, whenTaken_1224737673, onEndTurn_1224737678, onPromote_1224737683, promoted_1224737684, filePath_1224737685, colorable_1224737686, rotate_1224737687, drunk_1224737688) {
  var result_1224737689 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

  var F = {procname: "piece.pieceCopy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 292;
    F.filename = "piece.nim";
    result_1224737689 = nimCopy(result_1224737689, {index: index_1224737663, item: item_1224737665, color: color_1224737666, timesMoved: timesMoved_1224737667, piecesTaken: piecesTaken_1224737668, tile: nimCopy(null, tile_1224737664, NTI1224736771), moves: nimCopy(null, moves_1224737669, NTI1224737446), takes: nimCopy(null, takes_1224737670, NTI1224737447), onMove: onMove_1224737671, onTake: onTake_1224737672, whenTaken: whenTaken_1224737673, onEndTurn: nimCopy(null, onEndTurn_1224737678, NTI1224737448), onPromote: nimCopy(null, onPromote_1224737683, NTI1224737453), promoted: promoted_1224737684, filePath: nimCopy(null, filePath_1224737685, NTI33554449), rotate: rotate_1224737687, drunk: drunk_1224737688, colorable: colorable_1224737686, casts: []}, NTI1224736794);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737689;

}

function pieceMove_1224737591(p_1224737592, t_1224737593, board_1224737594, state_1224737595) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "piece.nim";
    pieceMove_1224737557(p_1224737592, t_1224737593.tile.Field1, t_1224737593.tile.Field0, board_1224737594, state_1224737595);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737605(taken_1224737606, taker_1224737607, board_1224737608, state_1224737609) {
  var result_1224737612 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 259;
    F.filename = "piece.nim";
    pieceMove_1224737591(taker_1224737607, taken_1224737606, board_1224737608, state_1224737609);
    F.line = 260;
    var colontmp__1493178872 = nimCopy(null, taken_1224737606.tile, NTI1224736771);
    F.line = 260;
    var colontmp__1493178873 = true;
    F.line = 260;
    result_1224737612 = nimCopy(result_1224737612, {Field0: nimCopy(null, colontmp__1493178872, NTI1224736771), Field1: colontmp__1493178873}, NTI1224737401);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737612;

}

function HEX3Aanonymous_1493173165(taken_1493173166, taker_1493173167, board_1493173168, state_1493173169) {
  var result_1493173172 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (HEX3DHEX3D_1308622964(taken_1493173166.tile, taker_1493173167.tile)) {
    Label1: {
      F.line = 559;
      F.filename = "powers.nim";
      var i_1493173173 = 0;
      F.line = 559;
      var j_1493173174 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178863 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178864 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178864 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178863 = i_1493178864;
              Label5: {
                F.line = 126;
                var j_1493178867 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178868 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178868 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178867 = i_1493178868;
                      F.line = 559;
                      F.filename = "powers.nim";
                      i_1493173173 = i_1493178863;
                      F.line = 559;
                      j_1493173174 = j_1493178867;
                      if ((sameColor_1224737805(board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)][chckIndx(j_1493173174, 0, (board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)]).length - 1)], taken_1493173166) && !(board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)][chckIndx(j_1493173174, 0, (board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)]).length - 1)].promoted))) {
                      Label8: {
                        F.line = 182;
                        F.filename = "piece.nim";
                        var xHEX60gensym45_1493173179 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1493178858 = [];
                        F.line = 182;
                        F.filename = "piece.nim";
                        colontmp__1493178858 = board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)][chckIndx(j_1493173174, 0, (board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)]).length - 1)].onPromote;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1493178859 = 0;
                        F.line = 250;
                        var L_1493178860 = (colontmp__1493178858).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1493178859 < L_1493178860)) break Label10;
                              F.line = 561;
                              F.filename = "powers.nim";
                              xHEX60gensym45_1493173179 = colontmp__1493178858[chckIndx(i_1493178859, 0, (colontmp__1493178858).length - 1)];
                              F.line = 183;
                              F.filename = "piece.nim";
                              xHEX60gensym45_1493173179(board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)][chckIndx(j_1493173174, 0, (board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)]).length - 1)], board_1493173168, state_1493173169);
                              if (board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)][chckIndx(j_1493173174, 0, (board_1493173168[chckIndx(i_1493173173, 0, (board_1493173168).length - 1)]).length - 1)].promoted) {
                              F.line = 184;
                              break Label8;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1493178859 += 1;
                              if (!(((colontmp__1493178858).length == L_1493178860))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178868 = addInt(i_1493178868, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178864 = addInt(i_1493178864, 1);
            }
        };
      };
    };
    F.line = 562;
    F.filename = "powers.nim";
    HEX5BHEX5DHEX3D_1224737145(board_1493173168, taken_1493173166.tile, pieceCopy_1224737661(air_1275068591, taken_1493173166.index, taken_1493173166.tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false));
    F.line = 563;
    var colontmp__1493178870 = nimCopy(null, taken_1493173166.tile, NTI1224736771);
    F.line = 563;
    var colontmp__1493178871 = false;
    F.line = 563;
    result_1493173172 = nimCopy(result_1493173172, {Field0: nimCopy(null, colontmp__1493178870, NTI1224736771), Field1: colontmp__1493178871}, NTI1493173100);
    break BeforeRet;
    }
    else {
      F.line = 565;
      result_1493173172 = nimCopy(result_1493173172, HEX3Aanonymous_1224737605(taken_1493173166, taker_1493173167, board_1493173168, state_1493173169), NTI1493173100);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1493173172;

}

function HEX3Aanonymous_1493173183(side_1493173184, viewSide_1493173185, b_1493173186, s_1493173187) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 576;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493173184, b_1493173186, s_1493173187, [], [HEX3Aanonymous_1509949645], [], false, false, [], HEX3Aanonymous_1493173165, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949531(board_1509949532, p_1509949533) {
  var result_1509949534 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 84;
    F.filename = "extramoves.nim";
    var next_1509949535 = addIfTake_1291845739(result_1509949534, 0, board_1509949532, p_1509949533, p_1509949533.tile, tileAbove_1308622990, false, false);
    if (next_1509949535) {
    F.line = 86;
    var _ = addIfTake_1291845739(result_1509949534, 0, board_1509949532, p_1509949533, tileAbove_1308622990(p_1509949533.tile), tileAbove_1308622990, false, false);
    }
    
  framePtr = F.prev;

  return result_1509949534[0];

}

function HEX3Aanonymous_1509949537(board_1509949538, p_1509949539) {
  var result_1509949540 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 89;
    F.filename = "extramoves.nim";
    var next_1509949541 = addIfTake_1291845739(result_1509949540, 0, board_1509949538, p_1509949539, p_1509949539.tile, tileBelow_1308622993, false, false);
    if (next_1509949541) {
    F.line = 91;
    var _ = addIfTake_1291845739(result_1509949540, 0, board_1509949538, p_1509949539, tileBelow_1308622993(p_1509949539.tile), tileBelow_1308622993, false, false);
    }
    
  framePtr = F.prev;

  return result_1509949540[0];

}

function HEX3Aanonymous_1493173077(side_1493173078, __1493173079, b_1493173080, s_1493173081) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 486;
    F.filename = "powers.nim";
    if ((side_1493173078 == 1)) {
    Temporary1 = HEX3Aanonymous_1509949531;
    }
    else {
    Temporary1 = HEX3Aanonymous_1509949537;
    }
    
    var addedTake_1493173086 = Temporary1;
    F.line = 487;
    buff_1493172242(5, side_1493173078, b_1493173080, s_1493173081, [], [addedTake_1493173086], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173193(side_1493173194, viewSide_1493173195, b_1493173196, s_1493173197) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 590;
    F.filename = "powers.nim";
    if ((side_1493173194 == 0)) {
    Temporary1 = HEX3Aanonymous_1509949509;
    }
    else {
    Temporary1 = HEX3Aanonymous_1509949514;
    }
    
    var addedMove_1493173202 = Temporary1;
    F.line = 591;
    buff_1493172242(3, side_1493173194, b_1493173196, s_1493173197, [addedMove_1493173202], [], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949549(board_1509949550, p_1509949551) {
  var result_1509949552 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 99;
    F.filename = "extramoves.nim";
    var next_1509949553 = addIfFree_1291845640(result_1509949552, 0, board_1509949550, p_1509949551.tile, tileBelow_1308622993);
    if (next_1509949553) {
    F.line = 101;
    var _ = addIfFree_1291845640(result_1509949552, 0, board_1509949550, tileBelow_1308622993(p_1509949551.tile), tileBelow_1308622993);
    }
    
  framePtr = F.prev;

  return result_1509949552[0];

}

function HEX3Aanonymous_1509949543(board_1509949544, p_1509949545) {
  var result_1509949546 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "extramoves.nim";
    var next_1509949547 = addIfFree_1291845640(result_1509949546, 0, board_1509949544, p_1509949545.tile, tileAbove_1308622990);
    if (next_1509949547) {
    F.line = 96;
    var _ = addIfFree_1291845640(result_1509949546, 0, board_1509949544, tileAbove_1308622990(p_1509949545.tile), tileAbove_1308622990);
    }
    
  framePtr = F.prev;

  return result_1509949546[0];

}

function HEX3Aanonymous_1493173208(side_1493173209, viewSide_1493173210, b_1493173211, s_1493173212) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 604;
    F.filename = "powers.nim";
    if ((side_1493173209 == 0)) {
    Temporary1 = HEX3Aanonymous_1509949549;
    }
    else {
    Temporary1 = HEX3Aanonymous_1509949543;
    }
    
    var addedMove_1493173217 = Temporary1;
    F.line = 605;
    buff_1493172242(3, side_1493173209, b_1493173211, s_1493173212, [addedMove_1493173217], [], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173223(side_1493173224, viewSide_1493173225, b_1493173226, __1493173227) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 618;
      F.filename = "powers.nim";
      var i_1493173228 = 0;
      F.line = 618;
      var j_1493173229 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178876 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178877 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178877 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178876 = i_1493178877;
              Label5: {
                F.line = 126;
                var j_1493178880 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178881 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178881 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178880 = i_1493178881;
                      F.line = 618;
                      F.filename = "powers.nim";
                      i_1493173228 = i_1493178876;
                      F.line = 618;
                      j_1493173229 = j_1493178880;
                      if ((b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)][chckIndx(j_1493173229, 0, (b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)]).length - 1)].item == 1)) {
                      F.line = 620;
                      b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)][chckIndx(j_1493173229, 0, (b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)]).length - 1)] = nimCopy(b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)][chckIndx(j_1493173229, 0, (b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)][chckIndx(j_1493173229, 0, (b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)]).length - 1)].index, b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)][chckIndx(j_1493173229, 0, (b_1493173226[chckIndx(i_1493173228, 0, (b_1493173226).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178881 = addInt(i_1493178881, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178877 = addInt(i_1493178877, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function lineMoves_1291845813(board_1291845814, p_1291845815, shoot_1291845816) {
  var result_1291845817 = [[]];

  var F = {procname: "moves.lineMoves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "moves.nim";
    var next_1291845818 = nimCopy(null, p_1291845815.tile, NTI1224736771);
    Label1: {
      F.line = 37;
        Label2: while (true) {
        if (!addIfFree_1291845640(result_1291845817, 0, board_1291845814, next_1291845818, shoot_1291845816)) break Label2;
          F.line = 38;
          next_1291845818 = nimCopy(next_1291845818, shoot_1291845816(next_1291845818), NTI1224736771);
        }
    };
  framePtr = F.prev;

  return result_1291845817[0];

}

function HEX3Aanonymous_1291846030(board_1291846031, p_1291846032) {
  var result_1291846033 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 150;
    F.filename = "moves.nim";
    add_1224737299(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968(1, 1)));
    F.line = 151;
    add_1224737299(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968((-1), 1)));
    F.line = 152;
    add_1224737299(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968(1, (-1))));
    F.line = 153;
    add_1224737299(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968((-1), (-1))));
  framePtr = F.prev;

  return result_1291846033[0];

}

function HEX3Aanonymous_1291845988(board_1291845989, p_1291845990) {
  var result_1291845991 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 138;
    F.filename = "moves.nim";
    add_1224737299(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileAbove_1308622990));
    F.line = 139;
    add_1224737299(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileBelow_1308622993));
    F.line = 140;
    add_1224737299(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileLeft_1308622996));
    F.line = 141;
    add_1224737299(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileRight_1308622999));
  framePtr = F.prev;

  return result_1291845991[0];

}

function HEX3Aanonymous_1291845865(board_1291845866, p_1291845867) {
  var result_1291845868 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 90;
      F.filename = "moves.nim";
      var i_1291845873 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178897 = (-1);
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493178897 <= 1)) break Label3;
            F.line = 90;
            F.filename = "moves.nim";
            i_1291845873 = res_1493178897;
            Label4: {
              F.line = 91;
              var j_1291845878 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_1493178895 = (-1);
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_1493178895 <= 1)) break Label6;
                    F.line = 91;
                    F.filename = "moves.nim";
                    j_1291845878 = res_1493178895;
                    F.line = 92;
                    var _ = addIfFree_1291845640(result_1291845868, 0, board_1291845866, p_1291845867.tile, shooterFactory_1308622968(i_1291845873, j_1291845878));
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_1493178895 = addInt(res_1493178895, 1);
                  }
              };
            };
            F.line = 102;
            res_1493178897 = addInt(res_1493178897, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1291845868[0];

}

function HEX3Aanonymous_1291846051(board_1291846052, p_1291846053) {
  var result_1291846054 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 156;
    F.filename = "moves.nim";
    add_1224737299(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968(1, 1), false, false));
    F.line = 157;
    add_1224737299(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968((-1), 1), false, false));
    F.line = 158;
    add_1224737299(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968(1, (-1)), false, false));
    F.line = 159;
    add_1224737299(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968((-1), (-1)), false, false));
  framePtr = F.prev;

  return result_1291846054[0];

}

function HEX3Aanonymous_1291846009(board_1291846010, p_1291846011) {
  var result_1291846012 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 144;
    F.filename = "moves.nim";
    add_1224737299(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileAbove_1308622990, false, false));
    F.line = 145;
    add_1224737299(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileBelow_1308622993, false, false));
    F.line = 146;
    add_1224737299(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileLeft_1308622996, false, false));
    F.line = 147;
    add_1224737299(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileRight_1308622999, false, false));
  framePtr = F.prev;

  return result_1291846012[0];

}

function HEX3Aanonymous_1291845880(board_1291845881, p_1291845882) {
  var result_1291845883 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 95;
      F.filename = "moves.nim";
      var i_1291845888 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178903 = (-1);
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493178903 <= 1)) break Label3;
            F.line = 95;
            F.filename = "moves.nim";
            i_1291845888 = res_1493178903;
            Label4: {
              F.line = 96;
              var j_1291845893 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_1493178901 = (-1);
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_1493178901 <= 1)) break Label6;
                    F.line = 96;
                    F.filename = "moves.nim";
                    j_1291845893 = res_1493178901;
                    F.line = 97;
                    var _ = addIfTake_1291845739(result_1291845883, 0, board_1291845881, p_1291845882, p_1291845882.tile, shooterFactory_1308622968(i_1291845888, j_1291845893), false, false);
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_1493178901 = addInt(res_1493178901, 1);
                  }
              };
            };
            F.line = 102;
            res_1493178903 = addInt(res_1493178903, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1291845883[0];

}

function pieceMove_1224737581(p_1224737582, t_1224737583, board_1224737584, state_1224737585) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 238;
    F.filename = "piece.nim";
    pieceMove_1224737557(p_1224737582, t_1224737583.Field1, t_1224737583.Field0, board_1224737584, state_1224737585);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737632(piece_1224737633, to_1224737634, b_1224737635, state_1224737636) {
  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 263;
    F.filename = "piece.nim";
    piece_1224737633.timesMoved = addInt(piece_1224737633.timesMoved, 1);
    F.line = 264;
    pieceMove_1224737581(piece_1224737633, to_1224737634, b_1224737635, state_1224737636);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737643(piece_1224737644, taking_1224737645, board_1224737646, state_1224737647) {
  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 267;
    F.filename = "piece.nim";
    piece_1224737644.timesMoved = addInt(piece_1224737644.timesMoved, 1);
    F.line = 268;
    var takeResult_1224737653 = board_1224737646[chckIndx(taking_1224737645.Field1, 0, (board_1224737646).length - 1)][chckIndx(taking_1224737645.Field0, 0, (board_1224737646[chckIndx(taking_1224737645.Field1, 0, (board_1224737646).length - 1)]).length - 1)].whenTaken(board_1224737646[chckIndx(taking_1224737645.Field1, 0, (board_1224737646).length - 1)][chckIndx(taking_1224737645.Field0, 0, (board_1224737646[chckIndx(taking_1224737645.Field1, 0, (board_1224737646).length - 1)]).length - 1)], piece_1224737644, board_1224737646, state_1224737647);
    if (takeResult_1224737653.Field1) {
    F.line = 270;
    board_1224737646[chckIndx(takeResult_1224737653.Field0.Field1, 0, (board_1224737646).length - 1)][chckIndx(takeResult_1224737653.Field0.Field0, 0, (board_1224737646[chckIndx(takeResult_1224737653.Field0.Field1, 0, (board_1224737646).length - 1)]).length - 1)].piecesTaken = addInt(board_1224737646[chckIndx(takeResult_1224737653.Field0.Field1, 0, (board_1224737646).length - 1)][chckIndx(takeResult_1224737653.Field0.Field0, 0, (board_1224737646[chckIndx(takeResult_1224737653.Field0.Field1, 0, (board_1224737646).length - 1)]).length - 1)].piecesTaken, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173269(side_1493173270, viewSide_1493173271, b_1493173272, __1493173273) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 658;
      F.filename = "powers.nim";
      var i_1493173274 = 0;
      F.line = 658;
      var j_1493173275 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178885 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178886 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178886 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178885 = i_1493178886;
              Label5: {
                F.line = 126;
                var j_1493178889 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178890 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178890 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178889 = i_1493178890;
                      F.line = 658;
                      F.filename = "powers.nim";
                      i_1493173274 = i_1493178885;
                      F.line = 658;
                      j_1493173275 = j_1493178889;
                      if (((b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].item == 0) && isColor_1224737814(b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)], side_1493173270))) {
                      F.line = 660;
                      b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)] = nimCopy(b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)], pieceCopy_1224737661(whiteQueen_1275068556, b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].index, b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].tile, 0, b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].color, 0, 0, whiteQueen_1275068556.moves, whiteQueen_1275068556.takes, HEX3Aanonymous_1224737632, HEX3Aanonymous_1224737643, HEX3Aanonymous_1224737605, whiteQueen_1275068556.onEndTurn, whiteQueen_1275068556.onPromote, false, [113,117,101,101,110,46,115,118,103], true, true, false), NTI1224736794);
                      }
                      else {
                      if (((b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].item == 2) && isColor_1224737814(b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)], side_1493173270))) {
                      F.line = 664;
                      b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)] = nimCopy(b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].index, b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)][chckIndx(j_1493173275, 0, (b_1493173272[chckIndx(i_1493173274, 0, (b_1493173272).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      }
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178890 = addInt(i_1493178890, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178886 = addInt(i_1493178886, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173408(side_1493173409, viewSide_1493173410, b_1493173411, s_1493173412) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 739;
    F.filename = "powers.nim";
    if ((side_1493173409 == 1)) {
    Temporary1 = (-3);
    }
    else {
    Temporary1 = 3;
    }
    
    var offset_1493173417 = Temporary1;
    Label2: {
      F.line = 740;
      var i_1493173418 = 0;
      F.line = 740;
      var j_1493173419 = 0;
      Label3: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178907 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178908 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_1493178908 < 8)) break Label5;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178907 = i_1493178908;
              Label6: {
                F.line = 126;
                var j_1493178911 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178912 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_1493178912 < 8)) break Label8;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178911 = i_1493178912;
                      F.line = 740;
                      F.filename = "powers.nim";
                      i_1493173418 = i_1493178907;
                      F.line = 740;
                      j_1493173419 = j_1493178911;
                      if ((((b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)][chckIndx(j_1493173419, 0, (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)]).length - 1)].item == 5) && isColor_1224737814(b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)][chckIndx(j_1493173419, 0, (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)]).length - 1)], side_1493173409)) && (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)][chckIndx(j_1493173419, 0, (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)]).length - 1)].timesMoved == 0))) {
                      F.line = 742;
                      b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)][chckIndx(j_1493173419, 0, (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)]).length - 1)].timesMoved = addInt(b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)][chckIndx(j_1493173419, 0, (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)]).length - 1)].timesMoved, 1);
                      F.line = 743;
                      pieceMove_1224737557(b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)][chckIndx(j_1493173419, 0, (b_1493173411[chckIndx(i_1493173418, 0, (b_1493173411).length - 1)]).length - 1)], addInt(i_1493173418, offset_1493173417), j_1493173419, b_1493173411, s_1493173412);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178912 = addInt(i_1493178912, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178908 = addInt(i_1493178908, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949691(board_1509949692, p_1509949693) {
  var result_1509949694 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968(1, 2)));
    F.line = 177;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968((-1), 2)));
    F.line = 178;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968(2, 1)));
    F.line = 179;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968(2, (-1))));
    F.line = 180;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968(1, (-2))));
    F.line = 181;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968((-1), (-2))));
    F.line = 182;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968((-2), 1)));
    F.line = 183;
    add_1224737299(result_1509949694, 0, lineMoves_1291845813(board_1509949692, p_1509949693, shooterFactory_1308622968((-2), (-1))));
  framePtr = F.prev;

  return result_1509949694[0];

}

function HEX3Aanonymous_1509949654(board_1509949655, p_1509949656) {
  var result_1509949657 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 166;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968(1, 2), false, true));
    F.line = 167;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968((-1), 2), false, true));
    F.line = 168;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968(2, 1), false, true));
    F.line = 169;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968(2, (-1)), false, true));
    F.line = 170;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968(1, (-2)), false, true));
    F.line = 171;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968((-1), (-2)), false, true));
    F.line = 172;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968((-2), 1), false, true));
    F.line = 173;
    add_1224737299(result_1509949657, 0, lineTakes_1291845819(board_1509949655, p_1509949656, shooterFactory_1308622968((-2), (-1)), false, true));
  framePtr = F.prev;

  return result_1509949657[0];

}

function HEX3Aanonymous_1493173521(side_1493173522, viewSide_1493173523, b_1493173524, __1493173525) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 829;
      F.filename = "powers.nim";
      var i_1493173526 = 0;
      F.line = 829;
      var j_1493173527 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178916 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178917 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178917 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178916 = i_1493178917;
              Label5: {
                F.line = 126;
                var j_1493178920 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178921 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178921 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178920 = i_1493178921;
                      F.line = 829;
                      F.filename = "powers.nim";
                      i_1493173526 = i_1493178916;
                      F.line = 829;
                      j_1493173527 = j_1493178920;
                      if (((b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)][chckIndx(j_1493173527, 0, (b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)]).length - 1)].item == 5) && isColor_1224737814(b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)][chckIndx(j_1493173527, 0, (b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)]).length - 1)], side_1493173522))) {
                      F.line = 831;
                      b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)][chckIndx(j_1493173527, 0, (b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1509949691);;
                      F.line = 832;
                      b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)][chckIndx(j_1493173527, 0, (b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1509949654);;
                      F.line = 833;
                      b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)][chckIndx(j_1493173527, 0, (b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)]).length - 1)].item = 7;
                      F.line = 834;
                      b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)][chckIndx(j_1493173527, 0, (b_1493173524[chckIndx(i_1493173526, 0, (b_1493173524).length - 1)]).length - 1)].filePath = nimCopy(null, [110,105,103,104,116,114,105,100,101,114,46,115,118,103], NTI33554449);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178921 = addInt(i_1493178921, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178917 = addInt(i_1493178917, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173541(side_1493173542, viewSide_1493173543, b_1493173544, s_1493173545) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 845;
    F.filename = "powers.nim";
    buff_1493172242(2, side_1493173542, b_1493173544, s_1493173545, [HEX3Aanonymous_1509949475], [HEX3Aanonymous_1509949504], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1275068592(piece_1275068593, board_1275068594, state_1275068595) {
  var F = {procname: "basePieces.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    F.line = 63;
    F.filename = "basePieces.nim";
    F.line = 63;
    var HEX3Atmp_1275068596 = nimCopy(null, state_1275068595.Field1[chckIndx(piece_1275068593.color, 0, (state_1275068595.Field1).length - 1)].dna[chckIndx(1, 0, (state_1275068595.Field1[chckIndx(piece_1275068593.color, 0, (state_1275068595.Field1).length - 1)].dna).length - 1)], NTI1224736794);
    piece_1275068593 = nimCopy(piece_1275068593, pieceCopy_1224737661(HEX3Atmp_1275068596, piece_1275068593.index, piece_1275068593.tile, HEX3Atmp_1275068596.item, piece_1275068593.color, piece_1275068593.timesMoved, piece_1275068593.piecesTaken, HEX3Atmp_1275068596.moves, HEX3Atmp_1275068596.takes, HEX3Atmp_1275068596.onMove, HEX3Atmp_1275068596.onTake, HEX3Atmp_1275068596.whenTaken, HEX3Atmp_1275068596.onEndTurn, HEX3Atmp_1275068596.onPromote, true, [113,117,101,101,110,46,115,118,103], HEX3Atmp_1275068596.colorable, HEX3Atmp_1275068596.rotate, HEX3Atmp_1275068596.drunk), NTI1224736794);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173582(taken_1493173583, taker_1493173584, board_1493173585, state_1493173586) {
  var result_1493173589 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((((((taker_1493173584.item == 0) && (taken_1493173583.item == 4)) && sameColor_1224737805(taken_1493173583, taker_1493173584)) && (taker_1493173584.timesMoved == 1)) && (taken_1493173583.timesMoved == 0))) {
    F.line = 880;
    F.filename = "powers.nim";
    state_1493173586.Field1[chckIndx(taken_1493173583.color, 0, (state_1493173586.Field1).length - 1)].hasCastled = true;
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym54_1493173602 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178924 = 0;
      F.line = 250;
      var L_1493178925 = (taken_1493173583.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178924 < L_1493178925)) break Label3;
            F.line = 881;
            F.filename = "powers.nim";
            xHEX60gensym54_1493173602 = taken_1493173583.onPromote[chckIndx(i_1493178924, 0, (taken_1493173583.onPromote).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym54_1493173602(taken_1493173583, board_1493173585, state_1493173586);
            if (taken_1493173583.promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178924 += 1;
            if (!(((taken_1493173583.onPromote).length == L_1493178925))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 882;
    F.filename = "powers.nim";
    var kingTile_1493173603 = nimCopy(null, taker_1493173584.tile, NTI1224736771);
    if ((taken_1493173583.tile.Field0 == 0)) {
    F.line = 884;
    pieceMove_1224737557(taker_1493173584, kingTile_1493173603.Field1, subInt(kingTile_1493173603.Field0, 2), board_1493173585, state_1493173586);
    F.line = 885;
    pieceMove_1224737557(taken_1493173583, kingTile_1493173603.Field1, subInt(kingTile_1493173603.Field0, 1), board_1493173585, state_1493173586);
    F.line = 886;
    var colontmp__1493178927 = {Field0: subInt(kingTile_1493173603.Field0, 1), Field1: kingTile_1493173603.Field1};
    F.line = 886;
    var colontmp__1493178928 = false;
    F.line = 886;
    result_1493173589 = nimCopy(result_1493173589, {Field0: nimCopy(null, colontmp__1493178927, NTI1224736771), Field1: colontmp__1493178928}, NTI1493173485);
    break BeforeRet;
    }
    else {
      F.line = 888;
      pieceMove_1224737557(taker_1493173584, kingTile_1493173603.Field1, addInt(kingTile_1493173603.Field0, 2), board_1493173585, state_1493173586);
      F.line = 889;
      pieceMove_1224737557(taken_1493173583, kingTile_1493173603.Field1, addInt(kingTile_1493173603.Field0, 1), board_1493173585, state_1493173586);
      F.line = 890;
      var colontmp__1493178929 = {Field0: addInt(kingTile_1493173603.Field0, 1), Field1: kingTile_1493173603.Field1};
      F.line = 890;
      var colontmp__1493178930 = false;
      F.line = 890;
      result_1493173589 = nimCopy(result_1493173589, {Field0: nimCopy(null, colontmp__1493178929, NTI1224736771), Field1: colontmp__1493178930}, NTI1493173485);
      break BeforeRet;
    }
    
    }
    else {
      F.line = 892;
      result_1493173589 = nimCopy(result_1493173589, HEX3Aanonymous_1224737605(taken_1493173583, taker_1493173584, board_1493173585, state_1493173586), NTI1493173485);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1493173589;

}

function HEX3Aanonymous_1493173607(side_1493173608, __1493173609, b_1493173610, s_1493173611) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 902;
    F.filename = "powers.nim";
    buff_1493172242(4, side_1493173608, b_1493173610, s_1493173611, [], [], [], false, false, [HEX3Aanonymous_1275068592], HEX3Aanonymous_1493173582, null, null, false);
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1224737125(b_1224737126, tile_1224737127) {
  var result_1224737128 = null;

  var F = {procname: "piece.[]", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 148;
    F.filename = "piece.nim";
    result_1224737128 = b_1224737126[chckIndx(tile_1224737127.Field1, 0, (b_1224737126).length - 1)][chckIndx(tile_1224737127.Field0, 0, (b_1224737126[chckIndx(tile_1224737127.Field1, 0, (b_1224737126).length - 1)]).length - 1)];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737128;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function applyTransforms_1224737752(piece_1224737753, board_1224737754, state_1224737755) {
  var F = {procname: "piece.applyTransforms", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 298;
      F.filename = "piece.nim";
      var t_1224737778 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__1493178932 = [];
      F.line = 298;
      F.filename = "piece.nim";
      colontmp__1493178932 = state_1224737755.Field1[chckIndx(piece_1224737753.color, 0, (state_1224737755.Field1).length - 1)].transforms[chckIndx(piece_1224737753.item, 0, (state_1224737755.Field1[chckIndx(piece_1224737753.color, 0, (state_1224737755.Field1).length - 1)].transforms).length - 1)];
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178933 = 0;
      F.line = 250;
      var L_1493178934 = (colontmp__1493178932).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178933 < L_1493178934)) break Label3;
            F.line = 298;
            F.filename = "piece.nim";
            t_1224737778 = colontmp__1493178932[chckIndx(i_1493178933, 0, (colontmp__1493178932).length - 1)];
            F.line = 299;
            t_1224737778(piece_1224737753, board_1224737754, state_1224737755);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178933 += 1;
            if (!(((colontmp__1493178932).length == L_1493178934))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173617(piece_1493173618, to_1493173619, board_1493173620, state_1493173621) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 909;
    F.filename = "powers.nim";
    var takeResults_1493173622 = board_1493173620[chckIndx(to_1493173619.Field1, 0, (board_1493173620).length - 1)][chckIndx(to_1493173619.Field0, 0, (board_1493173620[chckIndx(to_1493173619.Field1, 0, (board_1493173620).length - 1)]).length - 1)].whenTaken(board_1493173620[chckIndx(to_1493173619.Field1, 0, (board_1493173620).length - 1)][chckIndx(to_1493173619.Field0, 0, (board_1493173620[chckIndx(to_1493173619.Field1, 0, (board_1493173620).length - 1)]).length - 1)], piece_1493173618, board_1493173620, state_1493173621);
    F.line = 910;
    var originalRookTile_1493173623 = nimCopy(null, piece_1493173618.tile, NTI1224736771);
    F.line = 911;
    HEX5BHEX5D_1224737125(board_1493173620, takeResults_1493173622.Field0).timesMoved = addInt(HEX5BHEX5D_1224737125(board_1493173620, takeResults_1493173622.Field0).timesMoved, 1);
    if (takeResults_1493173622.Field1) {
    F.line = 914;
    HEX5BHEX5D_1224737125(board_1493173620, takeResults_1493173622.Field0).piecesTaken = addInt(HEX5BHEX5D_1224737125(board_1493173620, takeResults_1493173622.Field0).piecesTaken, 1);
    if ((modInt(HEX5BHEX5D_1224737125(board_1493173620, takeResults_1493173622.Field0).piecesTaken, 2) == 0)) {
    F.line = 916;
    F.line = 917;
    var HEX3Atmp_1493173632 = nimCopy(null, state_1493173621.Field1[chckIndx(piece_1493173618.color, 0, (state_1493173621.Field1).length - 1)].dna[chckIndx(3, 0, (state_1493173621.Field1[chckIndx(piece_1493173618.color, 0, (state_1493173621.Field1).length - 1)].dna).length - 1)], NTI1224736794);
    HEX5BHEX5DHEX3D_1224737145(board_1493173620, originalRookTile_1493173623, pieceCopy_1224737661(HEX3Atmp_1493173632, newIndex_1224737256(state_1493173621), originalRookTile_1493173623, HEX3Atmp_1493173632.item, HEX3Atmp_1493173632.color, HEX3Atmp_1493173632.timesMoved, HEX3Atmp_1493173632.piecesTaken, HEX3Atmp_1493173632.moves, HEX3Atmp_1493173632.takes, HEX3Atmp_1493173632.onMove, HEX3Atmp_1493173632.onTake, HEX3Atmp_1493173632.whenTaken, HEX3Atmp_1493173632.onEndTurn, HEX3Atmp_1493173632.onPromote, HEX3Atmp_1493173632.promoted, HEX3Atmp_1493173632.filePath, HEX3Atmp_1493173632.colorable, HEX3Atmp_1493173632.rotate, HEX3Atmp_1493173632.drunk));
    F.line = 918;
    applyTransforms_1224737752(HEX5BHEX5D_1224737125(board_1493173620, originalRookTile_1493173623), board_1493173620, state_1493173621);
    }
    
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173636(side_1493173637, __1493173638, b_1493173639, s_1493173640) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 928;
    F.filename = "powers.nim";
    buff_1493172242(4, side_1493173637, b_1493173639, s_1493173640, [], [], [], false, false, [], null, HEX3Aanonymous_1493173617, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949733(board_1509949734, p_1509949735) {
  var result_1509949736 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 190;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949736, 0, board_1509949734, p_1509949735, p_1509949735.tile, shooterFactory_1308622968(0, 1), false, false);
    F.line = 191;
    var _ = addIfTake_1291845739(result_1509949736, 0, board_1509949734, p_1509949735, p_1509949735.tile, shooterFactory_1308622968(0, 2), false, false);
  framePtr = F.prev;

  return result_1509949736[0];

}

function HEX3Aanonymous_1509949743(board_1509949744, p_1509949745) {
  var result_1509949746 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 198;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949746, 0, board_1509949744, p_1509949745, p_1509949745.tile, shooterFactory_1308622968(0, (-1)), false, false);
    F.line = 199;
    var _ = addIfTake_1291845739(result_1509949746, 0, board_1509949744, p_1509949745, p_1509949745.tile, shooterFactory_1308622968(0, (-2)), false, false);
  framePtr = F.prev;

  return result_1509949746[0];

}

function pieceMove_1224737586(p_1224737587, t_1224737588, board_1224737589, state_1224737590) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 241;
    F.filename = "piece.nim";
    pieceMove_1224737557(board_1224737589[chckIndx(p_1224737587.Field1, 0, (board_1224737589).length - 1)][chckIndx(p_1224737587.Field0, 0, (board_1224737589[chckIndx(p_1224737587.Field1, 0, (board_1224737589).length - 1)]).length - 1)], t_1224737588.Field1, t_1224737588.Field0, board_1224737589, state_1224737590);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173642(piece_1493173643, to_1493173644, board_1493173645, state_1493173646) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 934;
    F.filename = "powers.nim";
    var originalKingTile_1493173647 = nimCopy(null, piece_1493173643.tile, NTI1224736771);
    F.line = 935;
    var takeResult_1493173648 = board_1493173645[chckIndx(to_1493173644.Field1, 0, (board_1493173645).length - 1)][chckIndx(to_1493173644.Field0, 0, (board_1493173645[chckIndx(to_1493173644.Field1, 0, (board_1493173645).length - 1)]).length - 1)].whenTaken(board_1493173645[chckIndx(to_1493173644.Field1, 0, (board_1493173645).length - 1)][chckIndx(to_1493173644.Field0, 0, (board_1493173645[chckIndx(to_1493173644.Field1, 0, (board_1493173645).length - 1)]).length - 1)], piece_1493173643, board_1493173645, state_1493173646);
    F.line = 936;
    piece_1493173643.timesMoved = addInt(piece_1493173643.timesMoved, 1);
    if (takeResult_1493173648.Field1) {
    F.line = 938;
    piece_1493173643.piecesTaken = addInt(piece_1493173643.piecesTaken, 1);
    if ((addInt(originalKingTile_1493173647.Field1, 2) == takeResult_1493173648.Field0.Field1)) {
    F.line = 941;
    pieceMove_1224737586(takeResult_1493173648.Field0, originalKingTile_1493173647, board_1493173645, state_1493173646);
    }
    else {
    if ((subInt(originalKingTile_1493173647.Field1, 2) == takeResult_1493173648.Field0.Field1)) {
    F.line = 943;
    pieceMove_1224737586(takeResult_1493173648.Field0, originalKingTile_1493173647, board_1493173645, state_1493173646);
    }
    }
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173660(side_1493173661, __1493173662, b_1493173663, s_1493173664) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 954;
    F.filename = "powers.nim";
    buff_1493172242(0, side_1493173661, b_1493173663, s_1493173664, [], [HEX3Aanonymous_1509949733, HEX3Aanonymous_1509949743], [], false, false, [], null, HEX3Aanonymous_1493173642, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173704(side_1493173705, __1493173706, b_1493173707, __1493173708) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 996;
      F.filename = "powers.nim";
      var i_1493173709 = 0;
      F.line = 996;
      var j_1493173710 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178938 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178939 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178939 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178938 = i_1493178939;
              Label5: {
                F.line = 126;
                var j_1493178942 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178943 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178943 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178942 = i_1493178943;
                      F.line = 996;
                      F.filename = "powers.nim";
                      i_1493173709 = i_1493178938;
                      F.line = 996;
                      j_1493173710 = j_1493178942;
                      if (((b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(j_1493173710, 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)].item == 0) && isColor_1224737814(b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(j_1493173710, 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)], side_1493173705))) {
                      if ((b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(j_1493173710, 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)].timesMoved == 0)) {
                      F.line = 999;
                      b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(j_1493173710, 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)].timesMoved = addInt(b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(j_1493173710, 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)].timesMoved, 1);
                      F.line = 1000;
                      pieceSwap_1224737596(b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(j_1493173710, 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)], b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)][chckIndx(addInt(j_1493173710, 2), 0, (b_1493173707[chckIndx(i_1493173709, 0, (b_1493173707).length - 1)]).length - 1)], b_1493173707);
                      }
                      
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178943 = addInt(i_1493178943, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178939 = addInt(i_1493178939, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949772(board_1509949773, p_1509949774) {
  var result_1509949775 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 225;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949775, 0, lineMoves_1291845813(board_1509949773, p_1509949774, tileBelow_1308622993));
  framePtr = F.prev;

  return result_1509949775[0];

}

function HEX3Aanonymous_1509949790(board_1509949791, p_1509949792) {
  var result_1509949793 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 231;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949793, 0, lineTakes_1291845819(board_1509949791, p_1509949792, tileBelow_1308622993, false, false));
  framePtr = F.prev;

  return result_1509949793[0];

}

function HEX3Aanonymous_1509949763(board_1509949764, p_1509949765) {
  var result_1509949766 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 222;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949766, 0, lineMoves_1291845813(board_1509949764, p_1509949765, tileAbove_1308622990));
  framePtr = F.prev;

  return result_1509949766[0];

}

function HEX3Aanonymous_1509949781(board_1509949782, p_1509949783) {
  var result_1509949784 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 228;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949784, 0, lineTakes_1291845819(board_1509949782, p_1509949783, tileAbove_1308622990, false, false));
  framePtr = F.prev;

  return result_1509949784[0];

}

function HEX3Aanonymous_1493173734(piece_1493173735, board_1493173736, state_1493173737) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((isAtEnd_1224738001(piece_1493173735) && !(piece_1493173735.promoted))) {
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym57_1493173742 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178946 = 0;
      F.line = 250;
      var L_1493178947 = (piece_1493173735.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178946 < L_1493178947)) break Label3;
            F.line = 1065;
            F.filename = "powers.nim";
            xHEX60gensym57_1493173742 = piece_1493173735.onPromote[chckIndx(i_1493178946, 0, (piece_1493173735.onPromote).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym57_1493173742(piece_1493173735, board_1493173736, state_1493173737);
            if (piece_1493173735.promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178946 += 1;
            if (!(((piece_1493173735.onPromote).length == L_1493178947))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173721(piece_1493173722, board_1493173723, state_1493173724) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1058;
    F.filename = "powers.nim";
    piece_1493173722.moves = nimCopy(null, [HEX3Aanonymous_1509949475, HEX3Aanonymous_1509949465, HEX3Aanonymous_1509949514, HEX3Aanonymous_1509949509], NTI1493173227);
    F.line = 1059;
    piece_1493173722.takes = nimCopy(null, [HEX3Aanonymous_1509949504, HEX3Aanonymous_1509949470, HEX3Aanonymous_1509949524, HEX3Aanonymous_1509949519], NTI1493173227);
    F.line = 1060;
    piece_1493173722.promoted = true;
    F.line = 1061;
    piece_1493173722.filePath = nimCopy(null, [112,114,111,109,111,116,101,100,108,97,110,99,101,46,115,118,103], NTI33554449);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173803(side_1493173804, viewSide_1493173805, b_1493173806, __1493173807) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1112;
    F.filename = "powers.nim";
    if ((side_1493173804 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493173812 = Temporary1;
    F.line = 1113;
    if ((side_1493173804 == 0)) {
    Temporary2 = 7;
    }
    else {
    Temporary2 = 0;
    }
    
    var file_1493173817 = Temporary2;
    if (!((b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(7, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].color == side_1493173804))) {
    F.line = 1114;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(1114, 13) `b[rank][7].color == side` "));
    }
    
    if ((side_1493173804 == 0)) {
    F.line = 1116;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949772], NTI1275068441);
    F.line = 1117;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949790], NTI1275068441);
    }
    else {
      F.line = 1119;
      b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949763], NTI1275068441);
      F.line = 1120;
      b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949781], NTI1275068441);
    }
    
    F.line = 1121;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1493173734], NTI1275068457);
    F.line = 1122;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1493173721], NTI1275068457);
    F.line = 1123;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].item = 7;
    F.line = 1124;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].filePath = nimCopy(null, [108,97,110,99,101,46,115,118,103], NTI33554449);
    F.line = 1125;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].colorable = false;
    if (!((side_1493173804 == viewSide_1493173805))) {
    F.line = 1126;
    b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)][chckIndx(file_1493173817, 0, (b_1493173806[chckIndx(rank_1493173812, 0, (b_1493173806).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173746(side_1493173747, viewSide_1493173748, b_1493173749, __1493173750) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1081;
    F.filename = "powers.nim";
    if ((side_1493173747 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493173755 = Temporary1;
    F.line = 1082;
    if ((side_1493173747 == 0)) {
    Temporary2 = 0;
    }
    else {
    Temporary2 = 7;
    }
    
    var file_1493173760 = Temporary2;
    if (!((b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(7, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].color == side_1493173747))) {
    F.line = 1083;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(1083, 13) `b[rank][7].color == side` "));
    }
    
    if ((side_1493173747 == 0)) {
    F.line = 1085;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949772], NTI1275068441);
    F.line = 1086;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949790], NTI1275068441);
    }
    else {
      F.line = 1088;
      b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1509949763], NTI1275068441);
      F.line = 1089;
      b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1509949781], NTI1275068441);
    }
    
    F.line = 1090;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1493173734], NTI1275068457);
    F.line = 1091;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1493173721], NTI1275068457);
    F.line = 1092;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].item = 7;
    F.line = 1093;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].filePath = nimCopy(null, [108,97,110,99,101,46,115,118,103], NTI33554449);
    F.line = 1094;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].colorable = false;
    if (!((side_1493173747 == viewSide_1493173748))) {
    F.line = 1095;
    b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)][chckIndx(file_1493173760, 0, (b_1493173749[chckIndx(rank_1493173755, 0, (b_1493173749).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function rotl_1392508951(x_1392508952, k_1392508953) {
  var result_1392508954 = 0;

  var F = {procname: "random.rotl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "random.nim";
    result_1392508954 = ((((x_1392508952 << k_1392508953) >>> 0) | (x_1392508952 >>> ((64 - k_1392508953) >>> 0))) >>> 0);
  framePtr = F.prev;

  return result_1392508954;

}

function next_1392508963(r_1392508964) {
  var result_1392508965 = 0n;

  var F = {procname: "random.next", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 152;
    F.filename = "random.nim";
    var s0_1392508966 = r_1392508964.a0;
    F.line = 153;
    var s1_1392508967 = r_1392508964.a1;
    F.line = 154;
    result_1392508965 = BigInt(((s0_1392508966 + s1_1392508967) >>> 0));
    F.line = 155;
    s1_1392508967 = ((s1_1392508967 ^ s0_1392508966) >>> 0);
    F.line = 156;
    r_1392508964.a0 = ((((rotl_1392508951(s0_1392508966, 55) ^ s1_1392508967) >>> 0) ^ ((s1_1392508967 << 14) >>> 0)) >>> 0);
    F.line = 157;
    r_1392508964.a1 = rotl_1392508951(s1_1392508967, 36);
  framePtr = F.prev;

  return result_1392508965;

}

function skipRandomNumbers_1392508972(s_1392508973) {
  var F = {procname: "random.skipRandomNumbers", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 216;
    F.filename = "random.nim";
    var s0_1392508975 = 0;
    F.line = 217;
    var s1_1392508976 = 0;
    Label1: {
      F.line = 218;
      var i_1392508985 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493178957 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493178957 <= 1)) break Label3;
            F.line = 218;
            F.filename = "random.nim";
            i_1392508985 = res_1493178957;
            Label4: {
              F.line = 219;
              var b_1392508990 = 0;
              F.line = 128;
              F.filename = "iterators_1.nim";
              var i_1493178955 = 0;
              Label5: {
                F.line = 129;
                  Label6: while (true) {
                  if (!(i_1493178955 < 64)) break Label6;
                    F.line = 219;
                    F.filename = "random.nim";
                    b_1392508990 = i_1493178955;
                    if (!((((helper_1392508974[chckIndx(i_1392508985, 0, (helper_1392508974).length - 1)] & ((1 << b_1392508990) >>> 0)) >>> 0) == 0))) {
                    F.line = 221;
                    s0_1392508975 = ((s0_1392508975 ^ s_1392508973.a0) >>> 0);
                    F.line = 222;
                    s1_1392508976 = ((s1_1392508976 ^ s_1392508973.a1) >>> 0);
                    }
                    
                    F.line = 223;
                    var _ = next_1392508963(s_1392508973);
                    F.line = 131;
                    F.filename = "iterators_1.nim";
                    i_1493178955 = addInt(i_1493178955, 1);
                  }
              };
            };
            F.line = 102;
            res_1493178957 = addInt(res_1493178957, 1);
          }
      };
    };
    F.line = 224;
    F.filename = "random.nim";
    s_1392508973.a0 = s0_1392508975;
    F.line = 225;
    s_1392508973.a1 = s1_1392508976;
  framePtr = F.prev;

  
}

function initRand_1392509177(seed_1392509178) {
    var Temporary1;

  var result_1392509179 = [({a0: 0, a1: 0})];

  var F = {procname: "random.initRand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 598;
    F.filename = "random.nim";
    if (!((seed_1392509178 == 0n))) {
    Temporary1 = seed_1392509178;
    }
    else {
    Temporary1 = 2147483647n;
    }
    
    var seed_1392509185 = Temporary1;
    F.line = 599;
    result_1392509179[0].a0 = Number((seed_1392509185 >> BigInt(16)));
    F.line = 600;
    result_1392509179[0].a1 = Number((seed_1392509185 & 65535n));
    F.line = 604;
    skipRandomNumbers_1392508972(result_1392509179[0]);
    F.line = 605;
    var _ = next_1392508963(result_1392509179[0]);
  framePtr = F.prev;

  return result_1392509179[0];

}

function randomize_1392509190(seed_1392509191) {
  var F = {procname: "random.randomize", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "random.nim";
    state_1392508942[0] = nimCopy(state_1392508942[0], initRand_1392509177(seed_1392509191), NTI1392508932);
  framePtr = F.prev;

  
}

function getTakesOn_1224737272(p_1224737273, board_1224737274) {
  var result_1224737275 = [[]];

  var F = {procname: "piece.getTakesOn", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 209;
      F.filename = "piece.nim";
      var x_1224737298 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178960 = 0;
      F.line = 250;
      var L_1493178961 = (p_1224737273.takes).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178960 < L_1493178961)) break Label3;
            F.line = 209;
            F.filename = "piece.nim";
            x_1224737298 = p_1224737273.takes[chckIndx(i_1493178960, 0, (p_1224737273.takes).length - 1)];
            F.line = 210;
            add_1224737299(result_1224737275, 0, x_1224737298(board_1224737274, p_1224737273));
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178960 += 1;
            if (!(((p_1224737273.takes).length == L_1493178961))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1224737275[0];

}

function HEX3DHEX3D_1224737446(x_1224737448, y_1224737449) {
  var result_1224737450 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((x_1224737448["Field0"] == y_1224737449["Field0"]))) {
    F.line = 1714;
    F.filename = "system.nim";
    result_1224737450 = false;
    break BeforeRet;
    }
    
    if (!((x_1224737448["Field1"] == y_1224737449["Field1"]))) {
    F.line = 1714;
    result_1224737450 = false;
    break BeforeRet;
    }
    
    F.line = 1715;
    result_1224737450 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737450;

}

function find_1224737427(a_1224737430, item_1224737431) {
  var result_1224737432 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1224737432 = 0;
    Label1: {
      F.line = 1672;
      var i_1224737445 = {Field0: 0, Field1: 0};
      F.line = 18;
      F.filename = "iterators.nim";
      var i_1493178977 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_1493178977 < (a_1224737430).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1224737445 = a_1224737430[chckIndx(i_1493178977, 0, (a_1224737430).length - 1)];
            if (HEX3DHEX3D_1224737446(i_1224737445, item_1224737431)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1224737432 = addInt(result_1224737432, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178977 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1224737432 = (-1);
  };
  framePtr = F.prev;

  return result_1224737432;

}

function contains_1224737422(a_1224737424, item_1224737425) {
  var result_1224737426 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1224737426 = (0 <= find_1224737427(a_1224737424, item_1224737425));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737426;

}

function addQuoted_838862213(s_838862215, s_838862215_Idx, x_838862216) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2533;
    F.filename = "system.nim";
    addInt_301990129(s_838862215, s_838862215_Idx, x_838862216);
  framePtr = F.prev;

  
}

function HEX24_1224737477(x_1224737479) {
  var result_1224737480 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1224737480[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym5_1224737491 = 0;
    if ((0 < countHEX60gensym5_1224737491)) {
    F.line = 23;
    result_1224737480[0].push.apply(result_1224737480[0], [44,32]);;
    }
    
    F.line = 25;
    result_1224737480[0].push.apply(result_1224737480[0], [102,105,108,101]);;
    F.line = 26;
    result_1224737480[0].push.apply(result_1224737480[0], [58,32]);;
    F.line = 27;
    countHEX60gensym5_1224737491 += 1;
    F.line = 33;
    addQuoted_838862213(result_1224737480, 0, x_1224737479["Field0"]);
    if ((0 < countHEX60gensym5_1224737491)) {
    F.line = 23;
    result_1224737480[0].push.apply(result_1224737480[0], [44,32]);;
    }
    
    F.line = 25;
    result_1224737480[0].push.apply(result_1224737480[0], [114,97,110,107]);;
    F.line = 26;
    result_1224737480[0].push.apply(result_1224737480[0], [58,32]);;
    F.line = 27;
    countHEX60gensym5_1224737491 += 1;
    F.line = 33;
    addQuoted_838862213(result_1224737480, 0, x_1224737479["Field1"]);
    F.line = 39;
    result_1224737480[0].push.apply(result_1224737480[0], [41]);;
  framePtr = F.prev;

  return result_1224737480[0];

}

function getMovesOn_1224737387(p_1224737388, board_1224737389) {
  var result_1224737390 = [[]];

  var F = {procname: "piece.getMovesOn", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 219;
      F.filename = "piece.nim";
      var x_1224737394 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178964 = 0;
      F.line = 250;
      var L_1493178965 = (p_1224737388.moves).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178964 < L_1493178965)) break Label3;
            F.line = 219;
            F.filename = "piece.nim";
            x_1224737394 = p_1224737388.moves[chckIndx(i_1493178964, 0, (p_1224737388.moves).length - 1)];
            F.line = 220;
            add_1224737299(result_1224737390, 0, x_1224737394(board_1224737389, p_1224737388));
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178964 += 1;
            if (!(((p_1224737388.moves).length == L_1493178965))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 221;
    F.filename = "piece.nim";
    var takes_1224737399 = getTakesOn_1224737272(p_1224737388, board_1224737389);
    Label4: {
      F.line = 222;
      var x_1224737421 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178968 = 0;
      F.line = 250;
      var L_1493178969 = (takes_1224737399).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_1493178968 < L_1493178969)) break Label6;
            F.line = 222;
            F.filename = "piece.nim";
            x_1224737421 = takes_1224737399[chckIndx(i_1493178968, 0, (takes_1224737399).length - 1)];
            if (contains_1224737422(result_1224737390[0], x_1224737421)) {
            F.line = 223;
            rawEcho(HEX24_1224737477(x_1224737421), [32,105,115,32,97,32,116,97,107,101,32,97,110,100,32,97,32,109,111,118,101]);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178968 += 1;
            if (!(((takes_1224737399).length == L_1493178969))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 224;
    F.filename = "piece.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym12_1224737528 = newSeq_1224737520(0);
    Label7: {
      F.line = 653;
      var it_1224737532 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178972 = 0;
      F.line = 250;
      var L_1493178973 = (result_1224737390[0]).length;
      Label8: {
        F.line = 251;
          Label9: while (true) {
          if (!(i_1493178972 < L_1493178973)) break Label9;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1224737532 = result_1224737390[0][chckIndx(i_1493178972, 0, (result_1224737390[0]).length - 1)];
            if (!(contains_1224737422(takes_1224737399, it_1224737532))) {
            F.line = 654;
            var Temporary10 = nimCopy(null, it_1224737532, NTI1224736771);
            resultHEX60gensym12_1224737528.push(Temporary10);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178972 += 1;
            if (!(((result_1224737390[0]).length == L_1493178973))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1224737390[0] = nimCopy(null, resultHEX60gensym12_1224737528, NTI1224737341);
  framePtr = F.prev;

  return result_1224737390[0];

}

function rand_1392509039(r_1392509041, max_1392509042) {
  var result_1392509043 = 0n;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((max_1392509042 == 0n)) {
    F.line = 229;
    F.filename = "random.nim";
    break BeforeRet;
    }
    else {
      F.line = 231;
      var max_1392509044 = max_1392509042;
      if ((max_1392509044 == 18446744073709551615n)) {
      F.line = 233;
      result_1392509043 = next_1392508963(r_1392509041);
      break BeforeRet;
      }
      
      F.line = 234;
      var iters_1392509057 = 0;
      Label1: {
        F.line = 235;
          Label2: while (true) {
          if (!true) break Label2;
            F.line = 236;
            var x_1392509058 = next_1392508963(r_1392509041);
            if (((x_1392509058 <= BigInt.asUintN(64, (4294967295n - (4294967295n % max_1392509044)))) || (20 < iters_1392509057))) {
            F.line = 239;
            result_1392509043 = (x_1392509058 % BigInt.asUintN(64, (max_1392509044 + 1n)));
            break BeforeRet;
            }
            else {
              F.line = 241;
            iters_1392509057 = addInt(iters_1392509057, 1);
            }
            
          }
      };
    }
    
  };
  framePtr = F.prev;

  return result_1392509043;

}

function rand_1325400138(r_1325400140, x_1325400141) {
  var result_1325400142 = 0;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    if (!((x_1325400141.a <= x_1325400141.b))) {
    F.line = 339;
    F.filename = "random.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim(339, 3) `x.a <= x.b` "));
    }
    
    F.line = 346;
    result_1325400142 = Number(BigInt.asIntN(32, BigInt.asUintN(64, (rand_1392509039(r_1325400140, BigInt.asUintN(64, (BigInt.asUintN(64, BigInt(x_1325400141.b)) - BigInt.asUintN(64, BigInt(x_1325400141.a))))) + BigInt.asUintN(64, BigInt(x_1325400141.a))))));
  framePtr = F.prev;

  return result_1325400142;

}

function rand_1325400130(x_1325400132) {
  var result_1325400133 = 0;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 368;
    F.filename = "random.nim";
    result_1325400133 = rand_1325400138(state_1392508942[0], x_1325400132);
  framePtr = F.prev;

  return result_1325400133;

}

function HEX2EHEX2E_1056964656(a_1056964659, b_1056964660) {
  var result_1056964661 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "system.nim";
    result_1056964661 = nimCopy(result_1056964661, {a: a_1056964659, b: b_1056964660}, NTI889192517);
  framePtr = F.prev;

  return result_1056964661;

}

function sample_1493173886(a_1493173888) {
  var result_1493173889 = {Field0: 0, Field1: 0};

  var F = {procname: "sample.sample", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 488;
    F.filename = "random.nim";
    result_1493173889 = a_1493173888[chckIndx(rand_1325400130(HEX2EHEX2E_1056964656(0, (a_1493173888).length - 1)), 0, (a_1493173888).length - 1)];
  framePtr = F.prev;

  return result_1493173889;

}

function HEX3Aanonymous_1493173860(piece_1493173861, board_1493173862, state_1493173863) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(piece_1493173861.drunk)) {
    F.line = 1132;
    F.filename = "powers.nim";
    piece_1493173861.drunk = true;
    F.line = 1137;
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493173861.tile.Field1), mulInt(100, piece_1493173861.tile.Field0)), state_1493173863.Field0.randSeed)));
    F.line = 1138;
    var takes_1493173864 = getTakesOn_1224737272(piece_1493173861, board_1493173862);
    F.line = 1139;
    var moves_1493173865 = getMovesOn_1224737387(piece_1493173861, board_1493173862);
    if (((moves_1493173865).length == 0)) {
    F.line = 1140;
    break BeforeRet;
    }
    
    F.line = 1143;
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym64_1493173873 = newSeq_1224737520(0);
    Label1: {
      F.line = 653;
      var it_1493173877 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493178950 = 0;
      F.line = 250;
      var L_1493178951 = (moves_1493173865).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493178950 < L_1493178951)) break Label3;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1493173877 = moves_1493173865[chckIndx(i_1493178950, 0, (moves_1493173865).length - 1)];
            if (!(contains_1224737422(takes_1493173864, it_1493173877))) {
            F.line = 654;
            var Temporary4 = nimCopy(null, it_1493173877, NTI1224736771);
            resultHEX60gensym64_1493173873.push(Temporary4);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493178950 += 1;
            if (!(((moves_1493173865).length == L_1493178951))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var attempt_1493173908 = nimCopy(null, sample_1493173886(resultHEX60gensym64_1493173873), NTI1224736771);
    if (contains_1224737422(moves_1493173865, attempt_1493173908)) {
    F.line = 1147;
    F.filename = "powers.nim";
    piece_1493173861.onMove(piece_1493173861, attempt_1493173908, board_1493173862, state_1493173863);
    }
    
    }
    
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173980(side_1493173981, __1493173982, b_1493173983, s_1493173984) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1180;
    F.filename = "powers.nim";
    buff_1493172242(5, side_1493173981, b_1493173983, s_1493173984, [], [], [HEX3Aanonymous_1493173860], true, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173990(side_1493173991, __1493173992, b_1493173993, s_1493173994) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1196;
    F.filename = "powers.nim";
    buff_1493172242(6, side_1493173991, b_1493173993, s_1493173994, [], [], [HEX3Aanonymous_1493173860], true, false, [], null, null, null, true);
  framePtr = F.prev;

  
}

function addOnEndTurnTransform_1493172463(piece_1493172464, side_1493172465, board_1493172466, state_1493172467, create_1493172469, all_1493172470) {
    
function HEX3Aanonymous_1493172481(p_1493172482, b_1493172483, s_1493172484) {
      var F = {procname: "addOnEndTurnTransform.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 128;
        F.filename = "powers.nim";
        p_1493172482.onEndTurn.push(create_1493172469());;
      framePtr = F.prev;

      
    }

  var F = {procname: "powers.addOnEndTurnTransform", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 123;
      F.filename = "powers.nim";
      var i_1493172471 = 0;
      F.line = 123;
      var j_1493172472 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178982 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178983 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178983 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178982 = i_1493178983;
              Label5: {
                F.line = 126;
                var j_1493178986 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493178987 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493178987 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178986 = i_1493178987;
                      F.line = 123;
                      F.filename = "powers.nim";
                      i_1493172471 = i_1493178982;
                      F.line = 123;
                      j_1493172472 = j_1493178986;
                      if ((((board_1493172466[chckIndx(i_1493172471, 0, (board_1493172466).length - 1)][chckIndx(j_1493172472, 0, (board_1493172466[chckIndx(i_1493172471, 0, (board_1493172466).length - 1)]).length - 1)].item == piece_1493172464) || all_1493172470) && isColor_1224737814(board_1493172466[chckIndx(i_1493172471, 0, (board_1493172466).length - 1)][chckIndx(j_1493172472, 0, (board_1493172466[chckIndx(i_1493172471, 0, (board_1493172466).length - 1)]).length - 1)], side_1493172465))) {
                      F.line = 125;
                      board_1493172466[chckIndx(i_1493172471, 0, (board_1493172466).length - 1)][chckIndx(j_1493172472, 0, (board_1493172466[chckIndx(i_1493172471, 0, (board_1493172466).length - 1)]).length - 1)].onEndTurn.push(create_1493172469());;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493178987 = addInt(i_1493178987, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178983 = addInt(i_1493178983, 1);
            }
        };
      };
    };
    F.line = 127;
    F.filename = "powers.nim";
    var transform_1493172489 = HEX3Aanonymous_1493172481;
    F.line = 130;
    state_1493172467.Field1[chckIndx(side_1493172465, 0, (state_1493172467.Field1).length - 1)].transforms[chckIndx(piece_1493172464, 0, (state_1493172467.Field1[chckIndx(side_1493172465, 0, (state_1493172467.Field1).length - 1)].transforms).length - 1)].push(transform_1493172489);;
  framePtr = F.prev;

  
}

function rand_1392509035(r_1392509036, max_1392509037) {
  var result_1392509038 = 0;

  var F = {procname: "random.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "random.nim";
    result_1392509038 = Number(BigInt.asIntN(32, rand_1392509039(r_1392509036, BigInt.asUintN(64, BigInt(max_1392509037)))));
  framePtr = F.prev;

  return result_1392509038;

}

function rand_1392509064(max_1392509065) {
  var result_1392509066 = 0;

  var F = {procname: "random.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 261;
    F.filename = "random.nim";
    result_1392509066 = rand_1392509035(state_1392508942[0], chckRange(max_1392509065, 0, 2147483647));
  framePtr = F.prev;

  return result_1392509066;

}

function createLottery_1493174318() {
    
function HEX3Aanonymous_1493174321(piece_1493174322, board_1493174323, state_1493174324) {
      var F = {procname: "createLottery.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (!((piece_1493174322.timesMoved == lastTimesMoved_1493174320))) {
        F.line = 1412;
        F.filename = "powers.nim";
        randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493174322.tile.Field1), mulInt(100, piece_1493174322.tile.Field0)), state_1493174324.Field0.randSeed)));
        F.line = 1413;
        var ticket_1493174325 = rand_1392509064(100);
        if ((ticket_1493174325 == 42)) {
        Label1: {
          F.line = 182;
          F.filename = "piece.nim";
          var xHEX60gensym82_1493174330 = null;
          F.line = 249;
          F.filename = "iterators.nim";
          var i_1493178990 = 0;
          F.line = 250;
          var L_1493178991 = (piece_1493174322.onPromote).length;
          Label2: {
            F.line = 251;
              Label3: while (true) {
              if (!(i_1493178990 < L_1493178991)) break Label3;
                F.line = 1415;
                F.filename = "powers.nim";
                xHEX60gensym82_1493174330 = piece_1493174322.onPromote[chckIndx(i_1493178990, 0, (piece_1493174322.onPromote).length - 1)];
                F.line = 183;
                F.filename = "piece.nim";
                xHEX60gensym82_1493174330(piece_1493174322, board_1493174323, state_1493174324);
                if (piece_1493174322.promoted) {
                F.line = 184;
                break Label1;
                }
                
                F.line = 13;
                F.filename = "iterators.nim";
                i_1493178990 += 1;
                if (!(((piece_1493174322.onPromote).length == L_1493178991))) {
                F.line = 254;
                failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        }
        
        }
        
        F.line = 1416;
        F.filename = "powers.nim";
        lastTimesMoved_1493174320 = piece_1493174322.timesMoved;
      framePtr = F.prev;

      
    }

  var result_1493174319 = null;

  var F = {procname: "powers.createLottery", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1404;
    F.filename = "powers.nim";
    var lastTimesMoved_1493174320 = 0;
    F.line = 1410;
    result_1493174319 = HEX3Aanonymous_1493174321;
  framePtr = F.prev;

  return result_1493174319;

}

function HEX3Aanonymous_1493174333(side_1493174334, __1493174335, b_1493174336, s_1493174337) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1428;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(3, side_1493174334, b_1493174336, s_1493174337, createLottery_1493174318, false);
  framePtr = F.prev;

  
}

function otherSide_1224737822(a_1224737823) {
    var Temporary1;

  var result_1224737824 = 0;

  var F = {procname: "piece.otherSide", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 311;
    F.filename = "piece.nim";
    if ((a_1224737823 == 1)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_1224737824 = Temporary1;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737824;

}

function HEX3Aanonymous_1493174370(piece_1493174371, board_1493174372, state_1493174373) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1433;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493174371.tile.Field1), mulInt(100, piece_1493174371.tile.Field0)), state_1493174373.Field0.randSeed)));
    F.line = 1434;
    var ticket_1493174374 = rand_1392509064(1000);
    if ((ticket_1493174374 == 42)) {
    Label1: {
      F.line = 1436;
      var i_1493174375 = 0;
      F.line = 1436;
      var j_1493174376 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493178995 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493178996 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493178996 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493178995 = i_1493178996;
              Label5: {
                F.line = 126;
                var j_1493178999 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179000 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179000 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493178999 = i_1493179000;
                      F.line = 1436;
                      F.filename = "powers.nim";
                      i_1493174375 = i_1493178995;
                      F.line = 1436;
                      j_1493174376 = j_1493178999;
                      if (((board_1493174372[chckIndx(i_1493174375, 0, (board_1493174372).length - 1)][chckIndx(j_1493174376, 0, (board_1493174372[chckIndx(i_1493174375, 0, (board_1493174372).length - 1)]).length - 1)].item == 0) && isColor_1224737814(board_1493174372[chckIndx(i_1493174375, 0, (board_1493174372).length - 1)][chckIndx(j_1493174376, 0, (board_1493174372[chckIndx(i_1493174375, 0, (board_1493174372).length - 1)]).length - 1)], otherSide_1224737822(piece_1493174371.color)))) {
                      F.line = 1439;
                      board_1493174372[chckIndx(i_1493174375, 0, (board_1493174372).length - 1)][chckIndx(j_1493174376, 0, (board_1493174372[chckIndx(i_1493174375, 0, (board_1493174372).length - 1)]).length - 1)].item = 6;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179000 = addInt(i_1493179000, 1);
                    }
                };
              };
              F.line = 131;
              i_1493178996 = addInt(i_1493178996, 1);
            }
        };
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174382(side_1493174383, __1493174384, b_1493174385, s_1493174386) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1449;
    F.filename = "powers.nim";
    buff_1493172242(0, side_1493174383, b_1493174385, s_1493174386, [], [], [HEX3Aanonymous_1493174370], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function createConvertingTake_1493174392(odds_1493174393) {
    
function HEX3Aanonymous_1493174400(piece_1493174401, taking_1493174402, board_1493174403, state_1493174404) {
      var F = {procname: "createConvertingTake.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1458;
        F.filename = "powers.nim";
        randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493174401.tile.Field1), mulInt(100, piece_1493174401.tile.Field0)), state_1493174404.Field0.randSeed)));
        F.line = 1459;
        var dice_1493174405 = rand_1392509064(100);
        F.line = 1461;
        piece_1493174401.timesMoved = addInt(piece_1493174401.timesMoved, 1);
        if (((dice_1493174405 <= (((odds_1493174393 * 100.0)) | 0)) && !((HEX5BHEX5D_1224737125(board_1493174403, taking_1493174402).item == 0)))) {
        F.line = 1463;
        HEX5BHEX5D_1224737125(board_1493174403, taking_1493174402).color = piece_1493174401.color;
        F.line = 1464;
        HEX5BHEX5D_1224737125(board_1493174403, taking_1493174402).index = newIndex_1224737256(state_1493174404);
        F.line = 1465;
        pieceSwap_1224737596(piece_1493174401, HEX5BHEX5D_1224737125(board_1493174403, taking_1493174402), board_1493174403);
        }
        else {
          F.line = 1467;
          var takeResult_1493174415 = board_1493174403[chckIndx(taking_1493174402.Field1, 0, (board_1493174403).length - 1)][chckIndx(taking_1493174402.Field0, 0, (board_1493174403[chckIndx(taking_1493174402.Field1, 0, (board_1493174403).length - 1)]).length - 1)].whenTaken(board_1493174403[chckIndx(taking_1493174402.Field1, 0, (board_1493174403).length - 1)][chckIndx(taking_1493174402.Field0, 0, (board_1493174403[chckIndx(taking_1493174402.Field1, 0, (board_1493174403).length - 1)]).length - 1)], piece_1493174401, board_1493174403, state_1493174404);
          if (takeResult_1493174415.Field1) {
          F.line = 1469;
          HEX5BHEX5D_1224737125(board_1493174403, takeResult_1493174415.Field0).piecesTaken = addInt(HEX5BHEX5D_1224737125(board_1493174403, takeResult_1493174415.Field0).piecesTaken, 1);
          }
          
        }
        
      framePtr = F.prev;

      
    }

  var result_1493174394 = null;

  var F = {procname: "powers.createConvertingTake", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if (!((odds_1493174393 <= 1.0))) {
    F.line = 1455;
    F.filename = "powers.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(1455, 5) `odds <= 1` "));
    }
    
    F.line = 1457;
    result_1493174394 = HEX3Aanonymous_1493174400;
  framePtr = F.prev;

  return result_1493174394;

}

function HEX3Aanonymous_1493174422(side_1493174423, __1493174424, b_1493174425, s_1493174426) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1480;
    F.filename = "powers.nim";
    buff_1493172242(2, side_1493174423, b_1493174425, s_1493174426, [], [], [], false, false, [], null, createConvertingTake_1493174392(0.15), null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174447(piece_1493174448, board_1493174449, state_1493174450) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1509;
      F.filename = "powers.nim";
      var i_1493174451 = 0;
      F.line = 1509;
      var j_1493174452 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179004 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179005 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179005 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179004 = i_1493179005;
              Label5: {
                F.line = 126;
                var j_1493179008 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179009 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179009 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179008 = i_1493179009;
                      F.line = 1509;
                      F.filename = "powers.nim";
                      i_1493174451 = i_1493179004;
                      F.line = 1509;
                      j_1493174452 = j_1493179008;
                      if (board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)][chckIndx(j_1493174452, 0, (board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)]).length - 1)].promoted) {
                      F.line = 1511;
                      board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)][chckIndx(j_1493174452, 0, (board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)]).length - 1)] = nimCopy(board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)][chckIndx(j_1493174452, 0, (board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, newIndex_1224737256(state_1493174450), board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)][chckIndx(j_1493174452, 0, (board_1493174449[chckIndx(i_1493174451, 0, (board_1493174449).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179009 = addInt(i_1493179009, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179005 = addInt(i_1493179005, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174454(side_1493174455, __1493174456, b_1493174457, s_1493174458) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1522;
    F.filename = "powers.nim";
    buff_1493172242(0, side_1493174455, b_1493174457, s_1493174458, [], [], [HEX3Aanonymous_1493174447], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174464(side_1493174465, __1493174466, b_1493174467, state_1493174468) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1536;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(state_1493174468.Field0.randSeed));
    F.line = 1537;
    var sleeper_1493174476 = rand_1392509064(7);
    F.line = 1538;
    var failsafe_1493174484 = 9;
    F.line = 1539;
    if ((side_1493174465 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1493174489 = Temporary1;
    Label2: {
      F.line = 1543;
        Label3: while (true) {
        if (!(!((b_1493174467[chckIndx(rank_1493174489, 0, (b_1493174467).length - 1)][chckIndx(sleeper_1493174476, 0, (b_1493174467[chckIndx(rank_1493174489, 0, (b_1493174467).length - 1)]).length - 1)].item == 3)) && !((failsafe_1493174484 == 0)))) break Label3;
          F.line = 1544;
          sleeper_1493174476 = addInt(sleeper_1493174476, 1);
          F.line = 1545;
          failsafe_1493174484 = subInt(failsafe_1493174484, 1);
          F.line = 1546;
          sleeper_1493174476 = modInt(sleeper_1493174476, 8);
        }
    };
    if (!((failsafe_1493174484 == 0))) {
    if ((side_1493174465 == 0)) {
    F.line = 1551;
    b_1493174467[chckIndx(1, 0, (b_1493174467).length - 1)][chckIndx(sleeper_1493174476, 0, (b_1493174467[chckIndx(1, 0, (b_1493174467).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1509949524);;
    }
    else {
      F.line = 1553;
      b_1493174467[chckIndx(6, 0, (b_1493174467).length - 1)][chckIndx(sleeper_1493174476, 0, (b_1493174467[chckIndx(6, 0, (b_1493174467).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1509949519);;
    }
    
    }
    
  framePtr = F.prev;

  
}

function alwaysCost_1526726885(cost_1526726886) {
    
function HEX3Aanonymous_1526726888(piece_1526726889, b_1526726890, s_1526726891) {
      var result_1526726892 = 0;

      var F = {procname: "alwaysCost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        F.line = 45;
        F.filename = "capitalism.nim";
        result_1526726892 = cost_1526726886;
        break BeforeRet;
      };
      framePtr = F.prev;

      return result_1526726892;

    }

  var result_1526726887 = null;

  var F = {procname: "capitalism.alwaysCost", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "capitalism.nim";
    result_1526726887 = HEX3Aanonymous_1526726888;
  framePtr = F.prev;

  return result_1526726887;

}

function HEX3Aanonymous_1493174517(piece_1493174518, b_1493174519, s_1493174520) {
    
function HEX3Aanonymous_1493174538(piece_1493174539, board_1493174540, state_1493174541) {
      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if ((!((state_1493174541.Field0.turnNumber == turnOfPromote_1493174528)) && !(release_1493174529))) {
        F.line = 1570;
        F.filename = "powers.nim";
        add_1493172279(piece_1493174539, "moves", captureMove_1493174526);
        F.line = 1571;
        add_1493172279(piece_1493174539, "takes", captureTake_1493174527);
        F.line = 1572;
        release_1493174529 = true;
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym92_1493174525 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179013 = 0;
      F.line = 250;
      var L_1493179014 = (piece_1493174518.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493179013 < L_1493179014)) break Label3;
            F.line = 1558;
            F.filename = "powers.nim";
            xHEX60gensym92_1493174525 = piece_1493174518.onPromote[chckIndx(i_1493179013, 0, (piece_1493174518.onPromote).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym92_1493174525(piece_1493174518, b_1493174519, s_1493174520);
            if (piece_1493174518.promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179013 += 1;
            if (!(((piece_1493174518.onPromote).length == L_1493179014))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 1559;
    F.filename = "powers.nim";
    var captureMove_1493174526 = nimCopy(null, piece_1493174518.moves, NTI1224736849);
    F.line = 1560;
    var captureTake_1493174527 = nimCopy(null, piece_1493174518.takes, NTI1224736850);
    F.line = 1561;
    var turnOfPromote_1493174528 = s_1493174520.Field0.turnNumber;
    F.line = 1562;
    var release_1493174529 = false;
    F.line = 1563;
    piece_1493174518.moves = nimCopy(null, [], NTI1493172238);
    F.line = 1564;
    piece_1493174518.takes = nimCopy(null, [], NTI1493172238);
    F.line = 1565;
    piece_1493174518.promoted = true;
    F.line = 1567;
    piece_1493174518.onEndTurn.push(HEX3Aanonymous_1493174538);;
  framePtr = F.prev;

  
}

function HEX3DHEX3D_1493174566(x_1493174568, y_1493174569) {
  var result_1493174570 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 326;
    F.filename = "comparisons.nim";
    var sameObject_1493174577 = false;
    F.line = 327;
    sameObject_1493174577 = x_1493174568 === y_1493174569
    if (sameObject_1493174577) {
    F.line = 328;
    result_1493174570 = true;
    break BeforeRet;
    }
    
    if (!(((x_1493174568).length == (y_1493174569).length))) {
    F.line = 331;
    result_1493174570 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 333;
      var i_1493174591 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179017 = 0;
      F.line = 333;
      F.filename = "comparisons.nim";
      colontmp__1493179017 = subInt((x_1493174568).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179018 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493179018 <= colontmp__1493179017)) break Label3;
            F.line = 333;
            F.filename = "comparisons.nim";
            i_1493174591 = res_1493179018;
            if (!((x_1493174568[chckIndx(i_1493174591, 0, (x_1493174568).length - 1)] == y_1493174569[chckIndx(i_1493174591, 0, (y_1493174569).length - 1)]))) {
            F.line = 335;
            result_1493174570 = false;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179018 = addInt(res_1493179018, 1);
          }
      };
    };
    F.line = 337;
    F.filename = "comparisons.nim";
    result_1493174570 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493174570;

}

function HEX3Aanonymous_1493174557(piece_1493174558, board_1493174559, s_1493174560) {
  var result_1493174561 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1575;
    F.filename = "powers.nim";
    result_1493174561 = (!(piece_1493174558.promoted) && !(HEX3DHEX3D_1493174566(piece_1493174558.onPromote, [HEX3Aanonymous_1224737211])));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493174561;

}

function some_1409288448(val_1409288450) {
  var result_1409288451 = ({val: 0, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1409288451.has = true;
    F.line = 141;
    result_1409288451.val = val_1409288450;
  framePtr = F.prev;

  return result_1409288451;

}

function initWallet_1526726758(side_1526726759, s_1526726760) {
  var F = {procname: "capitalism.initWallet", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "capitalism.nim";
    s_1526726760.Field1[chckIndx(side_1526726759, 0, (s_1526726760.Field1).length - 1)].wallet = nimCopy(s_1526726760.Field1[chckIndx(side_1526726759, 0, (s_1526726760.Field1).length - 1)].wallet, some_1409288448(0), NTI1224736866);
  framePtr = F.prev;

  
}

function isSome_1409289449(self_1409289451) {
  var result_1409289452 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1409289452 = self_1409289451.has;
  framePtr = F.prev;

  return result_1409289452;

}

function none_1224736917() {
  var result_1224736924 = ({val: 0, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1224736924;

}

function map_1526726734(self_1526726737, callback_1526726739) {
    var Temporary1;

  var result_1526726740 = ({val: 0, has: false});

  var F = {procname: "map.map", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 253;
    F.filename = "options.nim";
    if (isSome_1409289449(self_1526726737)) {
    Temporary1 = some_1409288448(callback_1526726739(self_1526726737.val));
    }
    else {
    Temporary1 = none_1224736917();
    }
    
    result_1526726740 = nimCopy(result_1526726740, Temporary1, NTI1224736866);
  framePtr = F.prev;

  return result_1526726740;

}

function addMoney_1526726698(side_1526726699, money_1526726700, s_1526726701) {
    
function HEX3Aanonymous_1526726718(x_1526726729) {
      var result_1526726733 = 0;

      var F = {procname: "addMoney.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
        F.line = 18;
        F.filename = "capitalism.nim";
        result_1526726733 = addInt(x_1526726729, money_1526726700);
      framePtr = F.prev;

      return result_1526726733;

    }

  var F = {procname: "capitalism.addMoney", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    if (!(isSome_1409289449(s_1526726701.Field1[chckIndx(side_1526726699, 0, (s_1526726701.Field1).length - 1)].wallet))) {
    F.line = 17;
    F.filename = "capitalism.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim(17, 5) `s.side[side].wallet.isSome()` "));
    }
    
    F.line = 18;
    s_1526726701.Field1[chckIndx(side_1526726699, 0, (s_1526726701.Field1).length - 1)].wallet = nimCopy(s_1526726701.Field1[chckIndx(side_1526726699, 0, (s_1526726701.Field1).length - 1)].wallet, map_1526726734(s_1526726701.Field1[chckIndx(side_1526726699, 0, (s_1526726701.Field1).length - 1)].wallet, HEX3Aanonymous_1526726718), NTI1224736866);
  framePtr = F.prev;

  
}

function moneyForTakeAll_1493174597() {
    
function HEX3Aanonymous_1493174600(piece_1493174601, b_1493174602, state_1493174603) {
      var F = {procname: "moneyForTakeAll.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1585;
        F.filename = "powers.nim";
        var allPiecesTaken_1493174604 = 0;
        Label1: {
          F.line = 1586;
          var i_1493174605 = 0;
          F.line = 1586;
          var j_1493174606 = 0;
          Label2: {
            F.line = 125;
            F.filename = "piece.nim";
            var i_1493179022 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_1493179023 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_1493179023 < 8)) break Label4;
                  F.line = 125;
                  F.filename = "piece.nim";
                  i_1493179022 = i_1493179023;
                  Label5: {
                    F.line = 126;
                    var j_1493179026 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_1493179027 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_1493179027 < 8)) break Label7;
                          F.line = 126;
                          F.filename = "piece.nim";
                          j_1493179026 = i_1493179027;
                          F.line = 1586;
                          F.filename = "powers.nim";
                          i_1493174605 = i_1493179022;
                          F.line = 1586;
                          j_1493174606 = j_1493179026;
                          if (sameColor_1224737805(b_1493174602[chckIndx(i_1493174605, 0, (b_1493174602).length - 1)][chckIndx(j_1493174606, 0, (b_1493174602[chckIndx(i_1493174605, 0, (b_1493174602).length - 1)]).length - 1)], piece_1493174601)) {
                          F.line = 1588;
                          allPiecesTaken_1493174604 = addInt(allPiecesTaken_1493174604, b_1493174602[chckIndx(i_1493174605, 0, (b_1493174602).length - 1)][chckIndx(j_1493174606, 0, (b_1493174602[chckIndx(i_1493174605, 0, (b_1493174602).length - 1)]).length - 1)].piecesTaken);
                          }
                          
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_1493179027 = addInt(i_1493179027, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_1493179023 = addInt(i_1493179023, 1);
                }
            };
          };
        };
        F.line = 1590;
        F.filename = "powers.nim";
        allPiecesTaken_1493174604 = addInt(allPiecesTaken_1493174604, state_1493174603.Field1[chckIndx(piece_1493174601.color, 0, (state_1493174603.Field1).length - 1)].abilityTakes);
        if ((lastPiecesTaken_1493174599 < allPiecesTaken_1493174604)) {
        F.line = 1593;
        addMoney_1526726698(piece_1493174601.color, mulInt(subInt(allPiecesTaken_1493174604, lastPiecesTaken_1493174599), 3), state_1493174603);
        }
        
        F.line = 1594;
        lastPiecesTaken_1493174599 = allPiecesTaken_1493174604;
      framePtr = F.prev;

      
    }

  var result_1493174598 = null;

  var F = {procname: "powers.moneyForTakeAll", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1580;
    F.filename = "powers.nim";
    var lastPiecesTaken_1493174599 = 0;
    F.line = 1584;
    result_1493174598 = HEX3Aanonymous_1493174600;
  framePtr = F.prev;

  return result_1493174598;

}

function HEX3Aanonymous_1493174622(side_1493174623, __1493174624, b_1493174625, s_1493174626) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1617;
    F.filename = "powers.nim";
    s_1493174626.Field1[chckIndx(side_1493174623, 0, (s_1493174626.Field1).length - 1)].buys.push({Field0: [80,114,111,109,111,116,101], Field1: alwaysCost_1526726885(30), Field2: HEX3Aanonymous_1493174517, Field3: HEX3Aanonymous_1493174557});;
    F.line = 1618;
    initWallet_1526726758(side_1493174623, s_1493174626);
    F.line = 1619;
    addOnEndTurnTransform_1493172463(0, side_1493174623, b_1493174625, s_1493174626, moneyForTakeAll_1493174597, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178736(side_1493178737, __1493178738, b_1493178739, s_1493178740) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2281;
    F.filename = "powers.nim";
    change_1493172383(3, side_1493178737, b_1493178739, s_1493178740, [], [], [], false, true, [], null, null, null, [], false);
    Label1: {
      F.line = 2284;
      var i_1493178741 = 0;
      F.line = 2284;
      var j_1493178742 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179031 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179032 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179032 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179031 = i_1493179032;
              Label5: {
                F.line = 126;
                var j_1493179035 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179036 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179036 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179035 = i_1493179036;
                      F.line = 2284;
                      F.filename = "powers.nim";
                      i_1493178741 = i_1493179031;
                      F.line = 2284;
                      j_1493178742 = j_1493179035;
                      if (isColor_1224737814(b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)][chckIndx(j_1493178742, 0, (b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)]).length - 1)], side_1493178737)) {
                      F.line = 2286;
                      F.line = 2286;
                      var HEX3Atmp_1493178743 = nimCopy(null, s_1493178740.Field1[chckIndx(side_1493178737, 0, (s_1493178740.Field1).length - 1)].dna[chckIndx(3, 0, (s_1493178740.Field1[chckIndx(side_1493178737, 0, (s_1493178740.Field1).length - 1)].dna).length - 1)], NTI1224736794);
                      b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)][chckIndx(j_1493178742, 0, (b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)]).length - 1)] = nimCopy(b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)][chckIndx(j_1493178742, 0, (b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)]).length - 1)], pieceCopy_1224737661(HEX3Atmp_1493178743, b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)][chckIndx(j_1493178742, 0, (b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)]).length - 1)].index, b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)][chckIndx(j_1493178742, 0, (b_1493178739[chckIndx(i_1493178741, 0, (b_1493178739).length - 1)]).length - 1)].tile, HEX3Atmp_1493178743.item, HEX3Atmp_1493178743.color, HEX3Atmp_1493178743.timesMoved, HEX3Atmp_1493178743.piecesTaken, HEX3Atmp_1493178743.moves, HEX3Atmp_1493178743.takes, HEX3Atmp_1493178743.onMove, HEX3Atmp_1493178743.onTake, HEX3Atmp_1493178743.whenTaken, HEX3Atmp_1493178743.onEndTurn, HEX3Atmp_1493178743.onPromote, HEX3Atmp_1493178743.promoted, HEX3Atmp_1493178743.filePath, HEX3Atmp_1493178743.colorable, HEX3Atmp_1493178743.rotate, HEX3Atmp_1493178743.drunk), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179036 = addInt(i_1493179036, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179032 = addInt(i_1493179032, 1);
            }
        };
      };
    };
    F.line = 2287;
    F.filename = "powers.nim";
    s_1493178740.Field1[chckIndx(side_1493178737, 0, (s_1493178740.Field1).length - 1)].communist = true;
  framePtr = F.prev;

  
}

function some_1493178065(val_1493178067) {
  var result_1493178068 = ({val: {Field0: 0, Field1: null, Field2: null}, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1493178068.has = true;
    F.line = 141;
    result_1493178068.val = nimCopy(result_1493178068.val, val_1493178067, NTI1224736792);
  framePtr = F.prev;

  return result_1493178068;

}

function HEX3Aanonymous_1493177954(piece_1493177955, to_1493177956, b_1493177957, s_1493177958) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((b_1493177957[chckIndx(to_1493177956.Field1, 0, (b_1493177957).length - 1)][chckIndx(to_1493177956.Field0, 0, (b_1493177957[chckIndx(to_1493177956.Field1, 0, (b_1493177957).length - 1)]).length - 1)].item == 6))) {
    F.line = 1957;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    F.line = 1958;
    piece_1493177955.onMove(piece_1493177955, to_1493177956, b_1493177957, s_1493177958);
  };
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1224737073(b_1224737074, tile_1224737075) {
  var result_1224737076 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

  var F = {procname: "piece.[]", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 143;
    F.filename = "piece.nim";
    result_1224737076 = nimCopy(result_1224737076, b_1224737074[chckIndx(tile_1224737075.Field1, 0, (b_1224737074).length - 1)][chckIndx(tile_1224737075.Field0, 0, (b_1224737074[chckIndx(tile_1224737075.Field1, 0, (b_1224737074).length - 1)]).length - 1)], NTI1224736794);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737076;

}

function getPiecesChecking_1224737930(b_1224737931, c_1224737932) {
  var result_1224737933 = [];

  var F = {procname: "piece.getPiecesChecking", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 339;
    F.filename = "piece.nim";
    var kingTile_1224737934 = nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771);
    Label1: {
      F.line = 340;
      var row_1224737939 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_1493179053 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 340;
            F.filename = "piece.nim";
            row_1224737939 = nimCopy(row_1224737939, b_1224737931[chckIndx(i_1493179053, 0, (b_1224737931).length - 1)], NTI1224736772);
            Label4: {
              F.line = 341;
              var p_1224737944 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_1493179050 = 0;
              Label5: {
                F.line = 44;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 341;
                    F.filename = "piece.nim";
                    p_1224737944 = nimCopy(p_1224737944, row_1224737939[chckIndx(i_1493179050, 0, (row_1224737939).length - 1)], NTI1224736794);
                    if (((p_1224737944.item == 0) && isColor_1224737814(p_1224737944, c_1224737932))) {
                    F.line = 343;
                    kingTile_1224737934 = nimCopy(kingTile_1224737934, p_1224737944.tile, NTI1224736771);
                    }
                    
                    if ((7 <= i_1493179050)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_1493179050 += 1;
                  }
              };
            };
            if ((7 <= i_1493179053)) {
            F.line = 46;
            break Label2;
            }
            
            F.line = 13;
            i_1493179053 += 1;
          }
      };
    };
    Label7: {
      F.line = 345;
      F.filename = "piece.nim";
      var row_1224737953 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_1493179059 = 0;
      Label8: {
        F.line = 44;
          Label9: while (true) {
          if (!true) break Label9;
            F.line = 345;
            F.filename = "piece.nim";
            row_1224737953 = nimCopy(row_1224737953, b_1224737931[chckIndx(i_1493179059, 0, (b_1224737931).length - 1)], NTI1224736772);
            Label10: {
              F.line = 346;
              var p_1224737958 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_1493179057 = 0;
              Label11: {
                F.line = 44;
                  Label12: while (true) {
                  if (!true) break Label12;
                    F.line = 346;
                    F.filename = "piece.nim";
                    p_1224737958 = nimCopy(p_1224737958, row_1224737953[chckIndx(i_1493179057, 0, (row_1224737953).length - 1)], NTI1224736794);
                    if ((!(isColor_1224737814(p_1224737958, c_1224737932)) && contains_1224737422(getTakesOn_1224737272(p_1224737958, b_1224737931), kingTile_1224737934))) {
                    F.line = 348;
                    var Temporary13 = nimCopy(null, p_1224737958.tile, NTI1224736771);
                    result_1224737933.push(Temporary13);;
                    }
                    
                    if ((7 <= i_1493179057)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label11;
                    }
                    
                    F.line = 13;
                    i_1493179057 += 1;
                  }
              };
            };
            if ((7 <= i_1493179059)) {
            F.line = 46;
            break Label8;
            }
            
            F.line = 13;
            i_1493179059 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1224737933;

}

function wouldCheckAt_1224737967(p_1224737968, at_1224737969, b_1224737970) {
  var result_1224737971 = false;

  var F = {procname: "piece.wouldCheckAt", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 352;
    F.filename = "piece.nim";
    var testboard_1224737972 = [nimCopy(null, b_1224737970, NTI1224736773)];
    F.line = 353;
    var testpiece_1224737973 = [nimCopy(null, p_1224737968, NTI1224736794)];
    F.line = 354;
    var emptyState_1224737974 = [{Field0: ({nextIndex: 0, nextGroup: 0, randSeed: 0, turnNumber: 0}), Field1: [({abilityTakes: 0, hasCastled: false, communist: false, dna: [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], transforms: [[], [], [], [], [], [], [], []], wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]}), ({abilityTakes: 0, hasCastled: false, communist: false, dna: [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], transforms: [[], [], [], [], [], [], [], []], wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]})]}];
    F.line = 355;
    pieceMove_1224737581(testpiece_1224737973[0], at_1224737969, testboard_1224737972[0], emptyState_1224737974[0]);
    F.line = 357;
    result_1224737971 = ((getPiecesChecking_1224737930(b_1224737970, otherSide_1224737822(p_1224737968.color))).length < (getPiecesChecking_1224737930(testboard_1224737972[0], otherSide_1224737822(p_1224737968.color))).length);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737971;

}

function HEX3Aanonymous_1493177930(side_1493177931, piece_1493177932, b_1493177933, __1493177934) {
  var result_1493177935 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((piece_1493177932.color == side_1493177931))) {
    F.line = 1947;
    F.filename = "powers.nim";
    result_1493177935 = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    else {
      Label1: {
        F.line = 1949;
        var tile_1493177944 = {Field0: 0, Field1: 0};
        Label2: {
          F.line = 125;
          F.filename = "piece.nim";
          var i_1493179040 = 0;
          F.line = 128;
          F.filename = "iterators_1.nim";
          var i_1493179041 = 0;
          Label3: {
            F.line = 129;
              Label4: while (true) {
              if (!(i_1493179041 < 8)) break Label4;
                F.line = 125;
                F.filename = "piece.nim";
                i_1493179040 = i_1493179041;
                Label5: {
                  F.line = 126;
                  var j_1493179044 = 0;
                  F.line = 128;
                  F.filename = "iterators_1.nim";
                  var i_1493179045 = 0;
                  Label6: {
                    F.line = 129;
                      Label7: while (true) {
                      if (!(i_1493179045 < 8)) break Label7;
                        F.line = 126;
                        F.filename = "piece.nim";
                        j_1493179044 = i_1493179045;
                        F.line = 1949;
                        F.filename = "powers.nim";
                        tile_1493177944 = nimCopy(tile_1493177944, {Field0: i_1493179040, Field1: j_1493179044}, NTI1224736771);
                        if (((HEX5BHEX5D_1224737073(b_1493177933, tile_1493177944).item == 6) && !(wouldCheckAt_1224737967(piece_1493177932, tile_1493177944, b_1493177933)))) {
                        F.line = 1951;
                        var Temporary8 = nimCopy(null, tile_1493177944, NTI1224736771);
                        result_1493177935.push(Temporary8);;
                        }
                        
                        F.line = 131;
                        F.filename = "iterators_1.nim";
                        i_1493179045 = addInt(i_1493179045, 1);
                      }
                  };
                };
                F.line = 131;
                i_1493179041 = addInt(i_1493179041, 1);
              }
          };
        };
      };
    }
    
  };
  framePtr = F.prev;

  return result_1493177935;

}

function HEX3Aanonymous_1493178057(side_1493178058, __1493178059, __1493178060, s_1493178061) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2012;
    F.filename = "powers.nim";
    s_1493178061.Field1[chckIndx(side_1493178058, 0, (s_1493178061.Field1).length - 1)].glass[chckIndx(0, 0, (s_1493178061.Field1[chckIndx(side_1493178058, 0, (s_1493178061.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1493178061.Field1[chckIndx(side_1493178058, 0, (s_1493178061.Field1).length - 1)].glass[chckIndx(0, 0, (s_1493178061.Field1[chckIndx(side_1493178058, 0, (s_1493178061.Field1).length - 1)].glass).length - 1)], some_1493178065({Field0: 2, Field1: HEX3Aanonymous_1493177954, Field2: HEX3Aanonymous_1493177930}), NTI1224736839);
  framePtr = F.prev;

  
}

function createZeroGlassAction_1493177987(side_1493177988) {
    
function HEX3Aanonymous_1493177990(__1493177991, to_1493177992, b_1493177993, s_1493177994) {
      var F = {procname: "createZeroGlassAction.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        if ((b_1493177993[chckIndx(to_1493177992.Field1, 0, (b_1493177993).length - 1)][chckIndx(to_1493177992.Field0, 0, (b_1493177993[chckIndx(to_1493177992.Field1, 0, (b_1493177993).length - 1)]).length - 1)].item == 6)) {
        F.line = 1973;
        F.filename = "powers.nim";
        break BeforeRet;
        }
        
        F.line = 1974;
        b_1493177993[chckIndx(to_1493177992.Field1, 0, (b_1493177993).length - 1)][chckIndx(to_1493177992.Field0, 0, (b_1493177993[chckIndx(to_1493177992.Field1, 0, (b_1493177993).length - 1)]).length - 1)] = nimCopy(b_1493177993[chckIndx(to_1493177992.Field1, 0, (b_1493177993).length - 1)][chckIndx(to_1493177992.Field0, 0, (b_1493177993[chckIndx(to_1493177992.Field1, 0, (b_1493177993).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, HEX5BHEX5D_1224737125(b_1493177993, to_1493177992).index, to_1493177992, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
        F.line = 1975;
        s_1493177994.Field1[chckIndx(side_1493177988, 0, (s_1493177994.Field1).length - 1)].abilityTakes = addInt(s_1493177994.Field1[chckIndx(side_1493177988, 0, (s_1493177994.Field1).length - 1)].abilityTakes, 1);
      };
      framePtr = F.prev;

      
    }

  var result_1493177989 = null;

  var F = {procname: "powers.createZeroGlassAction", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1972;
    F.filename = "powers.nim";
    result_1493177989 = HEX3Aanonymous_1493177990;
  framePtr = F.prev;

  return result_1493177989;

}

function HEX3Aanonymous_1493177966(side_1493177967, piece_1493177968, b_1493177969, s_1493177970) {
  var result_1493177971 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((s_1493177970.Field0.turnNumber <= 1)) {
    F.line = 1962;
    F.filename = "powers.nim";
    result_1493177971 = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    
    Label1: {
      F.line = 1964;
      var i_1493177976 = 0;
      F.line = 1964;
      var j_1493177977 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179063 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179064 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179064 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179063 = i_1493179064;
              Label5: {
                F.line = 126;
                var j_1493179067 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179068 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179068 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179067 = i_1493179068;
                      F.line = 1964;
                      F.filename = "powers.nim";
                      i_1493177976 = i_1493179063;
                      F.line = 1964;
                      j_1493177977 = j_1493179067;
                      if (!((b_1493177969[chckIndx(i_1493177976, 0, (b_1493177969).length - 1)][chckIndx(j_1493177977, 0, (b_1493177969[chckIndx(i_1493177976, 0, (b_1493177969).length - 1)]).length - 1)].item == 0))) {
                      F.line = 1966;
                      var Temporary8 = nimCopy(null, b_1493177969[chckIndx(i_1493177976, 0, (b_1493177969).length - 1)][chckIndx(j_1493177977, 0, (b_1493177969[chckIndx(i_1493177976, 0, (b_1493177969).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1493177971.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179068 = addInt(i_1493179068, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179064 = addInt(i_1493179064, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  return result_1493177971;

}

function HEX3Aanonymous_1493178071(side_1493178072, __1493178073, __1493178074, s_1493178075) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2031;
    F.filename = "powers.nim";
    s_1493178075.Field1[chckIndx(side_1493178072, 0, (s_1493178075.Field1).length - 1)].glass[chckIndx(1, 0, (s_1493178075.Field1[chckIndx(side_1493178072, 0, (s_1493178075.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1493178075.Field1[chckIndx(side_1493178072, 0, (s_1493178075.Field1).length - 1)].glass[chckIndx(1, 0, (s_1493178075.Field1[chckIndx(side_1493178072, 0, (s_1493178075.Field1).length - 1)].glass).length - 1)], some_1493178065({Field0: 2, Field1: createZeroGlassAction_1493177987(side_1493178072), Field2: HEX3Aanonymous_1493177966}), NTI1224736839);
  framePtr = F.prev;

  
}

function validateUtf8_1040187728(s_1040187729) {
  var result_1040187730 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_1040187731 = 0;
    F.line = 185;
    var L_1040187735 = (s_1040187729).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_1040187731 < L_1040187735)) break Label2;
          if ((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] <= 127)) {
          F.line = 188;
          i_1040187731 = addInt(i_1040187731, 1);
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 5) == 6)) {
          if ((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] < 194)) {
          F.line = 190;
          result_1040187730 = i_1040187731;
          break BeforeRet;
          }
          
          if (((addInt(i_1040187731, 1) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_1040187731 = addInt(i_1040187731, 2);
          }
          else {
            F.line = 192;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1040187731, 2) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 2), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_1040187731 = addInt(i_1040187731, 3);
          }
          else {
            F.line = 196;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1040187731, 3) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 2), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 3), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_1040187731 = addInt(i_1040187731, 4);
          }
          else {
            F.line = 202;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_1040187730 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040187730;

}

function validateUtf8_1040194753(s_1040194754) {
  var result_1040194755 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1191;
    F.filename = "unicode.nim";
    result_1040194755 = validateUtf8_1040187728((s_1040194754.slice(0, (s_1040194754).length - 1 + 1)));
  framePtr = F.prev;

  return result_1040194755;

}

function nucruneLen(s_1040187420) {
  var result_1040187421 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_1040187421 = 0;
    F.line = 53;
    var i_1040187422 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_1040187422 < (s_1040187420).length)) break Label2;
          if ((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] <= 127)) {
          F.line = 55;
          i_1040187422 = addInt(i_1040187422, 1);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_1040187422 = addInt(i_1040187422, 2);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_1040187422 = addInt(i_1040187422, 3);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_1040187422 = addInt(i_1040187422, 4);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_1040187422 = addInt(i_1040187422, 5);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_1040187422 = addInt(i_1040187422, 6);
          }
          else {
            F.line = 61;
          i_1040187422 = addInt(i_1040187422, 1);
          }
          }}}}}
          F.line = 62;
          result_1040187421 = addInt(result_1040187421, 1);
        }
    };
  framePtr = F.prev;

  return result_1040187421;

}

function runeLen_1040194581(s_1040194582) {
  var result_1040194583 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1158;
    F.filename = "unicode.nim";
    result_1040194583 = nucruneLen((s_1040194582.slice(0, (s_1040194582).length - 1 + 1)));
  framePtr = F.prev;

  return result_1040194583;

}

function nsuRepeatChar(c_838861921, count_838861922) {
  var result_838861923 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "strutils.nim";
    result_838861923 = nimCopy(null, mnewString(count_838861922), NTI33554449);
    Label1: {
      F.line = 1329;
      var i_838861928 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179085 = 0;
      F.line = 1329;
      F.filename = "strutils.nim";
      colontmp__1493179085 = subInt(count_838861922, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179086 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493179086 <= colontmp__1493179085)) break Label3;
            F.line = 1329;
            F.filename = "strutils.nim";
            i_838861928 = res_1493179086;
            F.line = 1329;
            result_838861923[chckIndx(i_838861928, 0, (result_838861923).length - 1)] = c_838861921;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179086 = addInt(res_1493179086, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_838861923;

}

function alignString_1459617812(s_1459617813, minimumWidth_1459617814, align_1459617815, fill_1459617816) {
      var Temporary1;

  var result_1459617817 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_1459617814 == 0)) {
    F.line = 335;
    F.filename = "strformat.nim";
    result_1459617817 = nimCopy(null, s_1459617813, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_1040194753(s_1459617813) == (-1))) {
      Temporary1 = runeLen_1040194581(s_1459617813);
      }
      else {
      Temporary1 = (s_1459617813).length;
      }
      
      var sRuneLen_1459617818 = Temporary1;
      F.line = 338;
      var toFill_1459617819 = subInt(minimumWidth_1459617814, sRuneLen_1459617818);
      if ((toFill_1459617819 <= 0)) {
      F.line = 340;
      result_1459617817 = nimCopy(null, s_1459617813, NTI33554449);
      }
      else {
      if (((align_1459617815 == 60) || (align_1459617815 == 0))) {
      F.line = 342;
      result_1459617817 = nimCopy(null, (s_1459617813 || []).concat(nsuRepeatChar(fill_1459617816, chckRange(toFill_1459617819, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_1459617815 == 94)) {
      F.line = 344;
      var half_1459617820 = divInt(toFill_1459617819, 2);
      F.line = 345;
      result_1459617817 = nimCopy(null, (nsuRepeatChar(fill_1459617816, chckRange(half_1459617820, 0, 2147483647)) || []).concat(s_1459617813 || [],nsuRepeatChar(fill_1459617816, chckRange(subInt(toFill_1459617819, half_1459617820), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_1459617817 = nimCopy(null, (nsuRepeatChar(fill_1459617816, chckRange(toFill_1459617819, 0, 2147483647)) || []).concat(s_1459617813 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_1459617817;

}

function formatValue_1442840708(result_1442840710, result_1442840710_Idx, value_1442840711) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 593;
    F.filename = "strformat.nim";
    var value_1442840720 = nimCopy(null, value_1442840711, NTI33554449);
    F.line = 604;
    result_1442840710[result_1442840710_Idx].push.apply(result_1442840710[result_1442840710_Idx], alignString_1459617812(value_1442840720, 0, 0, 32));;
  framePtr = F.prev;

  
}

function registerSynergy_1442840657(s_1442840658, secret_1442840659, secretSecret_1442840660) {
    var Temporary5;
    var Temporary9;
      var Temporary12;

  var F = {procname: "power.registerSynergy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    if (!((secret_1442840659 || !(secretSecret_1442840660)))) {
    F.line = 97;
    F.filename = "power.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/power.nim(97, 5) `secret or not secretSecret` "));
    }
    
    F.line = 98;
    var x_1442840666 = nimCopy(null, s_1442840658, NTI1442840582);
    F.line = 100;
    x_1442840666.Field0.rarity = x_1442840666.Field1;
    F.line = 101;
    x_1442840666.Field0.index = addInt(powers_1442840649[0][chckIndx(subInt((powers_1442840649[0]).length, 1), 0, (powers_1442840649[0]).length - 1)].index, 1);
    F.line = 102;
    x_1442840666.Field0.synergy = true;
    F.line = 104;
    F.line = 975;
    F.filename = "sequtils.nim";
    var sHEX60gensym2_1442840675 = nimCopy(null, s_1442840658.Field2, NTI1442840587);
    F.line = 976;
    var nHEX60gensym2_1442840679 = (sHEX60gensym2_1442840675).length;
    if (!((0 < nHEX60gensym2_1442840679))) {
    F.line = 977;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym2 > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 978;
    var resultHEX60gensym2_1442840685 = nimCopy(null, sHEX60gensym2_1442840675[chckIndx(subInt(nHEX60gensym2_1442840679, 1), 0, (sHEX60gensym2_1442840675).length - 1)], NTI33554449);
    Label1: {
      F.line = 979;
      var iHEX60gensym2_1442840691 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__1493179071 = 0;
      F.line = 979;
      F.filename = "sequtils.nim";
      colontmp__1493179071 = subInt(nHEX60gensym2_1442840679, 2);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_1493179072 = colontmp__1493179071;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_1493179072)) break Label3;
            F.line = 979;
            F.filename = "sequtils.nim";
            iHEX60gensym2_1442840691 = res_1493179072;
            F.line = 981;
            var a_1442840692 = nimCopy(null, sHEX60gensym2_1442840675[chckIndx(iHEX60gensym2_1442840691, 0, (sHEX60gensym2_1442840675).length - 1)], NTI33554449);
            F.line = 982;
            var b_1442840693 = nimCopy(null, resultHEX60gensym2_1442840685, NTI33554449);
            F.line = 104;
            F.filename = "power.nim";
            resultHEX60gensym2_1442840685 = nimCopy(null, (a_1442840692 || []).concat([32,43,32] || [],b_1442840693 || []), NTI33554449);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_1493179072 = subInt(res_1493179072, 1);
          }
      };
    };
    var requirements_1442840694 = nimCopy(null, resultHEX60gensym2_1442840685, NTI33554449);
    if ((secret_1442840659 && !(secretSecret_1442840660))) {
    F.line = 108;
    F.filename = "power.nim";
    Label4: {
      F.line = 108;
      var fmtRes_1442840703 = [mnewString(0)];
      F.line = 108;
      fmtRes_1442840703[0].push.apply(fmtRes_1442840703[0], [83,101,99,114,101,116,32,83,121,110,101,114,103,121,33,32,40]);;
      F.line = 108;
      formatValue_1442840708(fmtRes_1442840703, 0, requirements_1442840694);
      F.line = 108;
      fmtRes_1442840703[0].push.apply(fmtRes_1442840703[0], [41,32,45,45,32]);;
      F.line = 108;
      formatValue_1442840708(fmtRes_1442840703, 0, x_1442840666.Field0.description);
    };
    x_1442840666.Field0.description = nimCopy(null, fmtRes_1442840703[0], NTI33554449);
    F.line = 110;
    if (eqStrings(x_1442840666.Field0.technicalName, [])) {
    Label6: {
      F.line = 110;
      var fmtRes_1442840730 = [mnewString(0)];
      F.line = 110;
      formatValue_1442840708(fmtRes_1442840730, 0, x_1442840666.Field0.name);
      F.line = 110;
      fmtRes_1442840730[0].push.apply(fmtRes_1442840730[0], [32,40,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32]);;
      F.line = 110;
      formatValue_1442840708(fmtRes_1442840730, 0, requirements_1442840694);
      F.line = 110;
      fmtRes_1442840730[0].push.apply(fmtRes_1442840730[0], [41]);;
    };
    Temporary5 = fmtRes_1442840730[0];
    }
    else {
      Label7: {
        F.line = 111;
        var fmtRes_1442840745 = [mnewString(0)];
        F.line = 111;
        formatValue_1442840708(fmtRes_1442840745, 0, x_1442840666.Field0.technicalName);
        F.line = 111;
        fmtRes_1442840745[0].push.apply(fmtRes_1442840745[0], [32,40,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32]);;
        F.line = 111;
        formatValue_1442840708(fmtRes_1442840745, 0, requirements_1442840694);
        F.line = 111;
        fmtRes_1442840745[0].push.apply(fmtRes_1442840745[0], [41]);;
      };
    Temporary5 = fmtRes_1442840745[0];
    }
    
    x_1442840666.Field0.technicalName = nimCopy(null, Temporary5, NTI33554449);
    }
    else {
    if (!(secret_1442840659)) {
    F.line = 113;
    Label8: {
      F.line = 113;
      var fmtRes_1442840760 = [mnewString(0)];
      F.line = 113;
      fmtRes_1442840760[0].push.apply(fmtRes_1442840760[0], [83,121,110,101,114,103,121,33,32,40]);;
      F.line = 113;
      formatValue_1442840708(fmtRes_1442840760, 0, requirements_1442840694);
      F.line = 113;
      fmtRes_1442840760[0].push.apply(fmtRes_1442840760[0], [41,32,45,45,32]);;
      F.line = 113;
      formatValue_1442840708(fmtRes_1442840760, 0, x_1442840666.Field0.description);
    };
    x_1442840666.Field0.description = nimCopy(null, fmtRes_1442840760[0], NTI33554449);
    F.line = 115;
    if (eqStrings(x_1442840666.Field0.technicalName, [])) {
    Label10: {
      F.line = 115;
      var fmtRes_1442840775 = [mnewString(0)];
      F.line = 115;
      formatValue_1442840708(fmtRes_1442840775, 0, x_1442840666.Field0.name);
      F.line = 115;
      fmtRes_1442840775[0].push.apply(fmtRes_1442840775[0], [32,40,83,121,110,101,114,103,121,32,111,102,32]);;
      F.line = 115;
      formatValue_1442840708(fmtRes_1442840775, 0, requirements_1442840694);
      F.line = 115;
      fmtRes_1442840775[0].push.apply(fmtRes_1442840775[0], [41]);;
    };
    Temporary9 = fmtRes_1442840775[0];
    }
    else {
      Label11: {
        F.line = 116;
        var fmtRes_1442840790 = [mnewString(0)];
        F.line = 116;
        formatValue_1442840708(fmtRes_1442840790, 0, x_1442840666.Field0.technicalName);
        F.line = 116;
        fmtRes_1442840790[0].push.apply(fmtRes_1442840790[0], [32,40,83,121,110,101,114,103,121,32,111,102,32]);;
        F.line = 116;
        formatValue_1442840708(fmtRes_1442840790, 0, requirements_1442840694);
        F.line = 116;
        fmtRes_1442840790[0].push.apply(fmtRes_1442840790[0], [41]);;
      };
    Temporary9 = fmtRes_1442840790[0];
    }
    
    x_1442840666.Field0.technicalName = nimCopy(null, Temporary9, NTI33554449);
    }
    else {
      F.line = 119;
      if (eqStrings(x_1442840666.Field0.technicalName, [])) {
      Label13: {
        F.line = 119;
        var fmtRes_1442840805 = [mnewString(0)];
        F.line = 119;
        formatValue_1442840708(fmtRes_1442840805, 0, x_1442840666.Field0.name);
        F.line = 119;
        fmtRes_1442840805[0].push.apply(fmtRes_1442840805[0], [32,40,83,101,99,114,101,116,32,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32]);;
        F.line = 119;
        formatValue_1442840708(fmtRes_1442840805, 0, requirements_1442840694);
        F.line = 119;
        fmtRes_1442840805[0].push.apply(fmtRes_1442840805[0], [41]);;
      };
      Temporary12 = fmtRes_1442840805[0];
      }
      else {
        Label14: {
          F.line = 120;
          var fmtRes_1442840820 = [mnewString(0)];
          F.line = 120;
          formatValue_1442840708(fmtRes_1442840820, 0, x_1442840666.Field0.technicalName);
          F.line = 120;
          fmtRes_1442840820[0].push.apply(fmtRes_1442840820[0], [32,40,83,101,99,114,101,116,32,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32]);;
          F.line = 120;
          formatValue_1442840708(fmtRes_1442840820, 0, requirements_1442840694);
          F.line = 120;
          fmtRes_1442840820[0].push.apply(fmtRes_1442840820[0], [41]);;
        };
      Temporary12 = fmtRes_1442840820[0];
      }
      
      x_1442840666.Field0.technicalName = nimCopy(null, Temporary12, NTI33554449);
    }
    }
    F.line = 122;
    var Temporary15 = nimCopy(null, x_1442840666.Field0, NTI1442840581);
    powers_1442840649[0].push(Temporary15);;
    if (secretSecret_1442840660) {
    F.line = 123;
    var Temporary16 = nimCopy(null, x_1442840666, NTI1442840582);
    secretSecretSynergies_1442840652[0].push(Temporary16);;
    }
    else {
    if (secret_1442840659) {
    F.line = 124;
    var Temporary17 = nimCopy(null, x_1442840666, NTI1442840582);
    secretSynergies_1442840651[0].push(Temporary17);;
    }
    else {
      F.line = 125;
      var Temporary18 = nimCopy(null, x_1442840666, NTI1442840582);
    draftSynergies_1442840650[0].push(Temporary18);;
    }
    }
  framePtr = F.prev;

  
}

function isNone_1409289526(self_1409289528) {
  var result_1409289529 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_1409289529 = !(self_1409289528.has);
  framePtr = F.prev;

  return result_1409289529;

}

function get_1409289543(self_1409289545) {
  var result_1409289546 = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_1409289526(self_1409289545)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_1409289546 = self_1409289545["val"];
  framePtr = F.prev;

  return result_1409289546;

}

function HEX3Aanonymous_1493178138(side_1493178139, piece_1493178140, b_1493178141, s_1493178142) {
  var result_1493178143 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(isSome_1409289449(s_1493178142.Field1[chckIndx(side_1493178139, 0, (s_1493178142.Field1).length - 1)].wallet))) {
    F.line = 2087;
    F.filename = "powers.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(2087, 9) `s.side[side].wallet.isSome()` "));
    }
    
    if (((s_1493178142.Field0.turnNumber <= 1) || !((get_1409289543(s_1493178142.Field1[chckIndx(side_1493178139, 0, (s_1493178142.Field1).length - 1)].wallet) == 0)))) {
    F.line = 2091;
    result_1493178143 = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    
    Label1: {
      F.line = 2093;
      var i_1493178175 = 0;
      F.line = 2093;
      var j_1493178176 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179090 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179091 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179091 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179090 = i_1493179091;
              Label5: {
                F.line = 126;
                var j_1493179094 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179095 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179095 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179094 = i_1493179095;
                      F.line = 2093;
                      F.filename = "powers.nim";
                      i_1493178175 = i_1493179090;
                      F.line = 2093;
                      j_1493178176 = j_1493179094;
                      if (!((b_1493178141[chckIndx(i_1493178175, 0, (b_1493178141).length - 1)][chckIndx(j_1493178176, 0, (b_1493178141[chckIndx(i_1493178175, 0, (b_1493178141).length - 1)]).length - 1)].item == 0))) {
                      F.line = 2095;
                      var Temporary8 = nimCopy(null, b_1493178141[chckIndx(i_1493178175, 0, (b_1493178141).length - 1)][chckIndx(j_1493178176, 0, (b_1493178141[chckIndx(i_1493178175, 0, (b_1493178141).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1493178143.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179095 = addInt(i_1493179095, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179091 = addInt(i_1493179091, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  return result_1493178143;

}

function HEX3Aanonymous_1493178186(side_1493178187, __1493178188, __1493178189, s_1493178190) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2109;
    F.filename = "powers.nim";
    s_1493178190.Field1[chckIndx(side_1493178187, 0, (s_1493178190.Field1).length - 1)].glass[chckIndx(1, 0, (s_1493178190.Field1[chckIndx(side_1493178187, 0, (s_1493178190.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1493178190.Field1[chckIndx(side_1493178187, 0, (s_1493178190.Field1).length - 1)].glass[chckIndx(1, 0, (s_1493178190.Field1[chckIndx(side_1493178187, 0, (s_1493178190.Field1).length - 1)].glass).length - 1)], some_1493178065({Field0: 3, Field1: createZeroGlassAction_1493177987(side_1493178187), Field2: HEX3Aanonymous_1493178138}), NTI1224736839);
  framePtr = F.prev;

  
}

function HEX3DHEX3D_1224737207(a_1224737208, b_1224737209) {
  var result_1224737210 = false;

  var F = {procname: "piece.==", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 162;
    F.filename = "piece.nim";
    result_1224737210 = (a_1224737208.index == b_1224737209.index);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737210;

}

function HEX3Aanonymous_1493178043(piece_1493178044, to_1493178045, b_1493178046, s_1493178047) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((HEX5BHEX5D_1224737125(b_1493178046, to_1493178045).item == 6) || HEX3DHEX3D_1224737207(HEX5BHEX5D_1224737125(b_1493178046, to_1493178045), piece_1493178044))) {
    F.line = 1990;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    F.line = 1991;
    piece_1493178044.onTake(piece_1493178044, to_1493178045, b_1493178046, s_1493178047);
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178004(side_1493178005, piece_1493178006, b_1493178007, __1493178008) {
  var result_1493178009 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(isAtEnd_1224738001(piece_1493178006))) {
    if ((piece_1493178006.color == 1)) {
    F.line = 1981;
    F.filename = "powers.nim";
    result_1493178009 = nimCopy(null, [nimCopy(null, tileAbove_1308622990(piece_1493178006.tile), NTI1224736771)], NTI1493177022);
    break BeforeRet;
    }
    else {
      F.line = 1983;
      result_1493178009 = nimCopy(null, [nimCopy(null, tileBelow_1308622993(piece_1493178006.tile), NTI1224736771)], NTI1493177022);
      break BeforeRet;
    }
    
    }
    else {
      F.line = 1984;
      result_1493178009 = nimCopy(null, [], NTI1291845837);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1493178009;

}

function HEX3Aanonymous_1493178083(side_1493178084, __1493178085, b_1493178086, s_1493178087) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2050;
    F.filename = "powers.nim";
    s_1493178087.Field1[chckIndx(side_1493178084, 0, (s_1493178087.Field1).length - 1)].glass[chckIndx(2, 0, (s_1493178087.Field1[chckIndx(side_1493178084, 0, (s_1493178087.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1493178087.Field1[chckIndx(side_1493178084, 0, (s_1493178087.Field1).length - 1)].glass[chckIndx(2, 0, (s_1493178087.Field1[chckIndx(side_1493178084, 0, (s_1493178087.Field1).length - 1)].glass).length - 1)], some_1493178065({Field0: 5, Field1: HEX3Aanonymous_1493178043, Field2: HEX3Aanonymous_1493178004}), NTI1224736839);
  framePtr = F.prev;

  
}

function HEX26_1493178241(x_1493178243, y_1493178244) {
  var result_1493178245 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1493178245 = new Array(chckRange(addInt((x_1493178243).length, (y_1493178244).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1493178243).length, (y_1493178244).length), 0, 2147483647) ; ++i) { result_1493178245[i] = null; }    Label1: {
      F.line = 1538;
      var i_1493178263 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179098 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__1493179098 = subInt((x_1493178243).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179099 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493179099 <= colontmp__1493179098)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1493178263 = res_1493179099;
            F.line = 1539;
            result_1493178245[chckIndx(i_1493178263, 0, (result_1493178245).length - 1)] = x_1493178243[chckIndx(i_1493178263, 0, (x_1493178243).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179099 = addInt(res_1493179099, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1493178271 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179102 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__1493179102 = subInt((y_1493178244).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179103 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_1493179103 <= colontmp__1493179102)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1493178271 = res_1493179103;
            F.line = 1541;
            result_1493178245[chckIndx(addInt(i_1493178271, (x_1493178243).length), 0, (result_1493178245).length - 1)] = y_1493178244[chckIndx(i_1493178271, 0, (y_1493178244).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179103 = addInt(res_1493179103, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1493178245;

}

function shuffle_1493178284(r_1493178286, x_1493178287) {
  var F = {procname: "shuffle.shuffle", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 640;
      F.filename = "random.nim";
      var i_1493178296 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__1493179106 = 0;
      F.line = 640;
      F.filename = "random.nim";
      colontmp__1493179106 = (x_1493178287).length - 1;
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_1493179107 = colontmp__1493179106;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(1 <= res_1493179107)) break Label3;
            F.line = 640;
            F.filename = "random.nim";
            i_1493178296 = res_1493179107;
            F.line = 641;
            var j_1493178297 = rand_1392509035(r_1493178286, chckRange(i_1493178296, 0, 2147483647));
            F.line = 642;
            var Temporary4 = x_1493178287[chckIndx(i_1493178296, 0, (x_1493178287).length - 1)]; x_1493178287[chckIndx(i_1493178296, 0, (x_1493178287).length - 1)] = x_1493178287[chckIndx(j_1493178297, 0, (x_1493178287).length - 1)]; x_1493178287[chckIndx(j_1493178297, 0, (x_1493178287).length - 1)] = Temporary4;            F.line = 39;
            F.filename = "iterators_1.nim";
            res_1493179107 = subInt(res_1493179107, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function shuffle_1493178281(x_1493178283) {
  var F = {procname: "shuffle.shuffle", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 661;
    F.filename = "random.nim";
    shuffle_1493178284(state_1392508942[0], x_1493178283);
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1493178328(s_1493178332, x_1493178333) {
  var result_1493178334 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_1493178336 = x_1493178333.a;
    F.line = 140;
    var L_1493178338 = addInt(subInt(x_1493178333.b, a_1493178336), 1);
    F.line = 141;
    result_1493178334 = new Array(chckRange(L_1493178338, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1493178338, 0, 2147483647) ; ++i) { result_1493178334[i] = null; }    Label1: {
      F.line = 142;
      var i_1493178347 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1493179110 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_1493179110 < L_1493178338)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_1493178347 = i_1493179110;
            F.line = 142;
            result_1493178334[chckIndx(i_1493178347, 0, (result_1493178334).length - 1)] = s_1493178332[chckIndx(addInt(i_1493178347, a_1493178336), 0, (s_1493178332).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1493179110 = addInt(i_1493179110, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1493178334;

}

function HEX5BHEX5D_1493178357(s_1493178361, x_1493178362) {
  var result_1493178363 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_1493178365 = x_1493178362.a;
    F.line = 140;
    var L_1493178370 = addInt(subInt(subInt((s_1493178361).length, x_1493178362.b), a_1493178365), 1);
    F.line = 141;
    result_1493178363 = new Array(chckRange(L_1493178370, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1493178370, 0, 2147483647) ; ++i) { result_1493178363[i] = null; }    Label1: {
      F.line = 142;
      var i_1493178379 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1493179113 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_1493179113 < L_1493178370)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_1493178379 = i_1493179113;
            F.line = 142;
            result_1493178363[chckIndx(i_1493178379, 0, (result_1493178363).length - 1)] = s_1493178361[chckIndx(addInt(i_1493178379, a_1493178365), 0, (s_1493178361).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1493179113 = addInt(i_1493179113, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1493178363;

}

function HEX2EHEX2E_1006633065(a_1006633068, b_1006633069) {
  var result_1006633072 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "system.nim";
    result_1006633072 = nimCopy(result_1006633072, {a: a_1006633068, b: b_1006633069}, NTI1006633045);
  framePtr = F.prev;

  return result_1006633072;

}

function HEX3Aanonymous_1493178228(piece_1493178229, to_1493178230, b_1493178231, s_1493178232) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((isAir_1224737797(HEX5BHEX5D_1224737125(b_1493178231, to_1493178230)) || (HEX5BHEX5D_1224737125(b_1493178231, to_1493178230).item == 0)) || (piece_1493178229.item == 0))) {
    F.line = 2130;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    F.line = 2132;
    randomize_1392509190(BigInt(addInt(addInt(s_1493178232.Field0.randSeed, mulInt(piece_1493178229.tile.Field1, 10)), mulInt(piece_1493178229.tile.Field0, 100))));
    F.line = 2134;
    var allMoves_1493178275 = HEX26_1493178241(piece_1493178229.moves, HEX5BHEX5D_1224737125(b_1493178231, to_1493178230).moves);
    F.line = 2135;
    var allTakes_1493178280 = HEX26_1493178241(piece_1493178229.takes, HEX5BHEX5D_1224737125(b_1493178231, to_1493178230).takes);
    F.line = 2137;
    shuffle_1493178281(allMoves_1493178275);
    F.line = 2138;
    shuffle_1493178281(allTakes_1493178280);
    F.line = 2140;
    var casterMoves_1493178308 = (piece_1493178229.moves).length;
    F.line = 2141;
    var casterTakes_1493178312 = (piece_1493178229.takes).length;
    F.line = 2145;
    piece_1493178229.moves = nimCopy(null, HEX5BHEX5D_1493178328(allMoves_1493178275, HEX2EHEX2E_1056964656(0, subInt(casterMoves_1493178308, 1))), NTI1493177295);
    F.line = 2146;
    HEX5BHEX5D_1224737125(b_1493178231, to_1493178230).moves = nimCopy(null, HEX5BHEX5D_1493178357(allMoves_1493178275, HEX2EHEX2E_1006633065(casterMoves_1493178308, 1)), NTI1493177322);
    F.line = 2147;
    piece_1493178229.takes = nimCopy(null, HEX5BHEX5D_1493178328(allTakes_1493178280, HEX2EHEX2E_1056964656(0, subInt(casterTakes_1493178312, 1))), NTI1493177295);
    F.line = 2148;
    HEX5BHEX5D_1224737125(b_1493178231, to_1493178230).takes = nimCopy(null, HEX5BHEX5D_1493178357(allTakes_1493178280, HEX2EHEX2E_1006633065(casterTakes_1493178312, 1)), NTI1493177322);
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178211(side_1493178212, piece_1493178213, b_1493178214, s_1493178215) {
  var result_1493178216 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2125;
      F.filename = "powers.nim";
      var i_1493178217 = 0;
      F.line = 2125;
      var j_1493178218 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179117 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179118 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179118 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179117 = i_1493179118;
              Label5: {
                F.line = 126;
                var j_1493179121 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179122 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179122 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179121 = i_1493179122;
                      F.line = 2125;
                      F.filename = "powers.nim";
                      i_1493178217 = i_1493179117;
                      F.line = 2125;
                      j_1493178218 = j_1493179121;
                      if ((!((b_1493178214[chckIndx(i_1493178217, 0, (b_1493178214).length - 1)][chckIndx(j_1493178218, 0, (b_1493178214[chckIndx(i_1493178217, 0, (b_1493178214).length - 1)]).length - 1)].item == 0)) && !(isAir_1224737797(b_1493178214[chckIndx(i_1493178217, 0, (b_1493178214).length - 1)][chckIndx(j_1493178218, 0, (b_1493178214[chckIndx(i_1493178217, 0, (b_1493178214).length - 1)]).length - 1)])))) {
                      F.line = 2127;
                      var Temporary8 = nimCopy(null, b_1493178214[chckIndx(i_1493178217, 0, (b_1493178214).length - 1)][chckIndx(j_1493178218, 0, (b_1493178214[chckIndx(i_1493178217, 0, (b_1493178214).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1493178216.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179122 = addInt(i_1493179122, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179118 = addInt(i_1493179118, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  return result_1493178216;

}

function HEX3Aanonymous_1493178417(side_1493178418, __1493178419, __1493178420, s_1493178421) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2164;
    F.filename = "powers.nim";
    s_1493178421.Field1[chckIndx(side_1493178418, 0, (s_1493178421.Field1).length - 1)].glass[chckIndx(3, 0, (s_1493178421.Field1[chckIndx(side_1493178418, 0, (s_1493178421.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1493178421.Field1[chckIndx(side_1493178418, 0, (s_1493178421.Field1).length - 1)].glass[chckIndx(3, 0, (s_1493178421.Field1[chckIndx(side_1493178418, 0, (s_1493178421.Field1).length - 1)].glass).length - 1)], some_1493178065({Field0: 3, Field1: HEX3Aanonymous_1493178228, Field2: HEX3Aanonymous_1493178211}), NTI1224736839);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178450(piece_1493178451, to_1493178452, b_1493178453, s_1493178454) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((isAir_1224737797(HEX5BHEX5D_1224737125(b_1493178453, to_1493178452)) || HEX5BHEX5D_1224737125(b_1493178453, to_1493178452).promoted)) {
    F.line = 2180;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym430_1493178459 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__1493179125 = [];
      F.line = 182;
      F.filename = "piece.nim";
      colontmp__1493179125 = HEX5BHEX5D_1224737125(b_1493178453, to_1493178452).onPromote;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179126 = 0;
      F.line = 250;
      var L_1493179127 = (colontmp__1493179125).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493179126 < L_1493179127)) break Label3;
            F.line = 2181;
            F.filename = "powers.nim";
            xHEX60gensym430_1493178459 = colontmp__1493179125[chckIndx(i_1493179126, 0, (colontmp__1493179125).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym430_1493178459(HEX5BHEX5D_1224737125(b_1493178453, to_1493178452), b_1493178453, s_1493178454);
            if (HEX5BHEX5D_1224737125(b_1493178453, to_1493178452).promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179126 += 1;
            if (!(((colontmp__1493179125).length == L_1493179127))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178429(side_1493178430, piece_1493178431, b_1493178432, s_1493178433) {
  var result_1493178434 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2173;
      F.filename = "powers.nim";
      var i_1493178435 = 0;
      F.line = 2173;
      var j_1493178436 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179131 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179132 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179132 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179131 = i_1493179132;
              Label5: {
                F.line = 126;
                var j_1493179135 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179136 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179136 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179135 = i_1493179136;
                      F.line = 2173;
                      F.filename = "powers.nim";
                      i_1493178435 = i_1493179131;
                      F.line = 2173;
                      j_1493178436 = j_1493179135;
                      if (((isColor_1224737814(b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)][chckIndx(j_1493178436, 0, (b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)]).length - 1)], side_1493178430) && !(HEX3DHEX3D_1493174566(b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)][chckIndx(j_1493178436, 0, (b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)]).length - 1)].onPromote, [HEX3Aanonymous_1224737211]))) && !(b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)][chckIndx(j_1493178436, 0, (b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)]).length - 1)].promoted))) {
                      F.line = 2177;
                      var Temporary8 = nimCopy(null, b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)][chckIndx(j_1493178436, 0, (b_1493178432[chckIndx(i_1493178435, 0, (b_1493178432).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1493178434.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179136 = addInt(i_1493179136, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179132 = addInt(i_1493179132, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  return result_1493178434;

}

function HEX3Aanonymous_1493178463(side_1493178464, __1493178465, __1493178466, s_1493178467) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2196;
    F.filename = "powers.nim";
    s_1493178467.Field1[chckIndx(side_1493178464, 0, (s_1493178467.Field1).length - 1)].glass[chckIndx(4, 0, (s_1493178467.Field1[chckIndx(side_1493178464, 0, (s_1493178467.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1493178467.Field1[chckIndx(side_1493178464, 0, (s_1493178467.Field1).length - 1)].glass[chckIndx(4, 0, (s_1493178467.Field1[chckIndx(side_1493178464, 0, (s_1493178467.Field1).length - 1)].glass).length - 1)], some_1493178065({Field0: 1, Field1: HEX3Aanonymous_1493178450, Field2: HEX3Aanonymous_1493178429}), NTI1224736839);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173092(side_1493173093, viewerSide_1493173094, b_1493173095, s_1493173096) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 504;
    F.filename = "powers.nim";
    HEX3Aanonymous_1493172653(side_1493173093, viewerSide_1493173094, b_1493173095, s_1493173096);
    F.line = 505;
    HEX3Aanonymous_1493172742(side_1493173093, viewerSide_1493173094, b_1493173095, s_1493173096);
    F.line = 506;
    HEX3Aanonymous_1493172901(side_1493173093, viewerSide_1493173094, b_1493173095, s_1493173096);
    F.line = 507;
    HEX3Aanonymous_1493172954(side_1493173093, viewerSide_1493173094, b_1493173095, s_1493173096);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173466(side_1493173467, viewSide_1493173468, b_1493173469, state_1493173470) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 786;
    F.filename = "powers.nim";
    HEX3Aanonymous_1493172857(side_1493173467, viewSide_1493173468, b_1493173469, state_1493173470);
    F.line = 787;
    HEX3Aanonymous_1493172868(side_1493173467, viewSide_1493173468, b_1493173469, state_1493173470);
    F.line = 788;
    HEX3Aanonymous_1493172835(side_1493173467, viewSide_1493173468, b_1493173469, state_1493173470);
    F.line = 789;
    HEX3Aanonymous_1493172846(side_1493173467, viewSide_1493173468, b_1493173469, state_1493173470);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173493(side_1493173494, viewSide_1493173495, b_1493173496, s_1493173497) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 808;
    F.filename = "powers.nim";
    if ((side_1493173494 == 0)) {
    Temporary1 = HEX3Aanonymous_1509949524;
    }
    else {
    Temporary1 = HEX3Aanonymous_1509949519;
    }
    
    var addedMove_1493173502 = Temporary1;
    F.line = 809;
    buff_1493172242(3, side_1493173494, b_1493173496, s_1493173497, [addedMove_1493173502], [], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949728(board_1509949729, p_1509949730) {
  var result_1509949731 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 186;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949731, 0, board_1509949729, p_1509949730.tile, shooterFactory_1308622968(0, 1));
    F.line = 187;
    var _ = addIfFree_1291845640(result_1509949731, 0, board_1509949729, p_1509949730.tile, shooterFactory_1308622968(0, 2));
  framePtr = F.prev;

  return result_1509949731[0];

}

function HEX3Aanonymous_1509949738(board_1509949739, p_1509949740) {
  var result_1509949741 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 194;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1509949741, 0, board_1509949739, p_1509949740.tile, shooterFactory_1308622968(0, (-1)));
    F.line = 195;
    var _ = addIfFree_1291845640(result_1509949741, 0, board_1509949739, p_1509949740.tile, shooterFactory_1308622968(0, (-2)));
  framePtr = F.prev;

  return result_1509949741[0];

}

function HEX3Aanonymous_1493173555(side_1493173556, __1493173557, b_1493173558, s_1493173559) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 860;
    F.filename = "powers.nim";
    buff_1493172242(2, side_1493173556, b_1493173558, s_1493173559, [HEX3Aanonymous_1291846082, HEX3Aanonymous_1509949728, HEX3Aanonymous_1509949738], [HEX3Aanonymous_1291846087, HEX3Aanonymous_1509949733, HEX3Aanonymous_1509949743], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173670(piece_1493173671, board_1493173672, state_1493173673) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((piece_1493173671.piecesTaken == 3)) {
    Label1: {
      F.line = 962;
      F.filename = "powers.nim";
      var i_1493173674 = 0;
      F.line = 962;
      var j_1493173675 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179140 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179141 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179141 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179140 = i_1493179141;
              Label5: {
                F.line = 126;
                var j_1493179144 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179145 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179145 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179144 = i_1493179145;
                      F.line = 962;
                      F.filename = "powers.nim";
                      i_1493173674 = i_1493179140;
                      F.line = 962;
                      j_1493173675 = j_1493179144;
                      if (((board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)][chckIndx(j_1493173675, 0, (board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)]).length - 1)].item == 0) && !(sameColor_1224737805(board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)][chckIndx(j_1493173675, 0, (board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)]).length - 1)], piece_1493173671)))) {
                      F.line = 965;
                      board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)][chckIndx(j_1493173675, 0, (board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)]).length - 1)] = nimCopy(board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)][chckIndx(j_1493173675, 0, (board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)][chckIndx(j_1493173675, 0, (board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)]).length - 1)].index, board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)][chckIndx(j_1493173675, 0, (board_1493173672[chckIndx(i_1493173674, 0, (board_1493173672).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179145 = addInt(i_1493179145, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179141 = addInt(i_1493179141, 1);
            }
        };
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173681(side_1493173682, __1493173683, b_1493173684, s_1493173685) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 976;
    F.filename = "powers.nim";
    buff_1493172242(0, side_1493173682, b_1493173684, s_1493173685, [], [], [HEX3Aanonymous_1493173670], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174428(side_1493174429, __1493174430, b_1493174431, s_1493174432) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1494;
    F.filename = "powers.nim";
    buff_1493172242(2, side_1493174429, b_1493174431, s_1493174432, [], [], [], false, false, [], null, createConvertingTake_1493174392(0.3), null, false);
  framePtr = F.prev;

  
}

function nsuFindChar(s_838862499, sub_838862500, start_838862501, last_838862502) {
    var Temporary1;

  var result_838862503 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1945;
    F.filename = "strutils.nim";
    result_838862503 = (-1);
    F.line = 1946;
    if ((last_838862502 < 0)) {
    Temporary1 = (s_838862499).length - 1;
    }
    else {
    Temporary1 = last_838862502;
    }
    
    var last_838862504 = Temporary1;
    Label2: {
      F.line = 1949;
      var iHEX60gensym176_838862518 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179161 = 0;
      F.line = 1949;
      F.filename = "strutils.nim";
      colontmp__1493179161 = start_838862501;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179162 = colontmp__1493179161;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1493179162 <= last_838862504)) break Label4;
            F.line = 1963;
            F.filename = "strutils.nim";
            iHEX60gensym176_838862518 = res_1493179162;
            if ((s_838862499[chckIndx(iHEX60gensym176_838862518, 0, (s_838862499).length - 1)] == sub_838862500)) {
            F.line = 1951;
            result_838862503 = iHEX60gensym176_838862518;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179162 = addInt(res_1493179162, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_838862503;

}

function nsuFindStrA(a_838862477, s_838862478, sub_838862479, start_838862480, last_838862481) {
    var Temporary1;

  var result_838862482 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1905;
    F.filename = "strutils.nim";
    if ((last_838862481 < 0)) {
    Temporary1 = (s_838862478).length - 1;
    }
    else {
    Temporary1 = last_838862481;
    }
    
    var last_838862483 = Temporary1;
    F.line = 1906;
    var subLast_838862484 = subInt((sub_838862479).length, 1);
    if ((subLast_838862484 == (-1))) {
    F.line = 1911;
    result_838862482 = start_838862480;
    break BeforeRet;
    }
    
    F.line = 1915;
    result_838862482 = (-1);
    F.line = 1916;
    var skip_838862485 = start_838862480;
    Label2: {
      F.line = 1918;
        Label3: while (true) {
        if (!(subLast_838862484 <= subInt(last_838862483, skip_838862485))) break Label3;
          F.line = 1919;
          var i_838862486 = subLast_838862484;
          Label4: {
            F.line = 1920;
              Label5: while (true) {
              if (!(s_838862478[chckIndx(addInt(skip_838862485, i_838862486), 0, (s_838862478).length - 1)] == sub_838862479[chckIndx(i_838862486, 0, (sub_838862479).length - 1)])) break Label5;
                if ((i_838862486 == 0)) {
                F.line = 1922;
                result_838862482 = skip_838862485;
                break BeforeRet;
                }
                
                F.line = 1923;
                i_838862486 = subInt(i_838862486, 1);
              }
          };
          F.line = 1924;
          skip_838862485 = addInt(skip_838862485, a_838862477[chckIndx(s_838862478[chckIndx(addInt(skip_838862485, subLast_838862484), 0, (s_838862478).length - 1)], 0, (a_838862477).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_838862482;

}

function fill_838862422(a_838862424, value_838862425) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "algorithm.nim";
    var xHEX60gensym172_838862431 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym172_838862431 <= (a_838862424).length - 1)) break Label2;
          F.line = 98;
          a_838862424[chckIndx(xHEX60gensym172_838862431, 0, (a_838862424).length - 1)] = value_838862425;
          F.line = 75;
          xHEX60gensym172_838862431 = addInt(xHEX60gensym172_838862431, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_838862419, sub_838862420) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1878;
    F.filename = "strutils.nim";
    var m_838862421 = (sub_838862420).length;
    F.line = 1879;
    fill_838862422(a_838862419, m_838862421);
    Label1: {
      F.line = 1881;
      var i_838862441 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__1493179167 = 0;
      F.line = 1881;
      F.filename = "strutils.nim";
      colontmp__1493179167 = subInt(m_838862421, 1);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1493179168 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_1493179168 < colontmp__1493179167)) break Label3;
            F.line = 1881;
            F.filename = "strutils.nim";
            i_838862441 = i_1493179168;
            F.line = 1882;
            a_838862419[chckIndx(sub_838862420[chckIndx(i_838862441, 0, (sub_838862420).length - 1)], 0, (a_838862419).length - 1)] = subInt(subInt(m_838862421, 1), i_838862441);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1493179168 = addInt(i_1493179168, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_838862474) {
  var result_838862475 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1891;
    F.filename = "strutils.nim";
    nsuInitSkipTable(result_838862475[0], sub_838862474);
  framePtr = F.prev;

  return result_838862475[0];

}

function nsuFindStr(s_838862536, sub_838862537, start_838862538, last_838862539) {
  var result_838862540 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((subInt((s_838862536).length, start_838862538) < (sub_838862537).length)) {
    F.line = 2003;
    F.filename = "strutils.nim";
    result_838862540 = (-1);
    break BeforeRet;
    }
    
    if (((sub_838862537).length == 1)) {
    F.line = 2004;
    result_838862540 = nsuFindChar(s_838862536, sub_838862537[chckIndx(0, 0, (sub_838862537).length - 1)], start_838862538, last_838862539);
    break BeforeRet;
    }
    
    F.line = 2007;
    result_838862540 = nsuFindStrA(nsuInitNewSkipTable(sub_838862537), s_838862536, sub_838862537, start_838862538, last_838862539);
  };
  framePtr = F.prev;

  return result_838862540;

}

function contains_838862678(s_838862679, sub_838862680) {
  var result_838862681 = false;

  var F = {procname: "strutils.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 2161;
    F.filename = "strutils.nim";
    result_838862681 = (0 <= nsuFindStr(s_838862679, sub_838862680, 0, (-1)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_838862681;

}

function HEX3Aanonymous_1493178095(piece_1493178096, b_1493178097, state_1493178098) {
                              var Temporary11;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2059;
      F.filename = "powers.nim";
      var i_1493178099 = 0;
      F.line = 2059;
      var j_1493178100 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179179 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179180 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179180 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179179 = i_1493179180;
              Label5: {
                F.line = 126;
                var j_1493179183 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179184 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179184 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179183 = i_1493179184;
                      F.line = 2059;
                      F.filename = "powers.nim";
                      i_1493178099 = i_1493179179;
                      F.line = 2059;
                      j_1493178100 = j_1493179183;
                      Label8: {
                        F.line = 2060;
                        var c_1493178104 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1493179173 = [];
                        F.line = 2060;
                        F.filename = "powers.nim";
                        colontmp__1493179173 = b_1493178097[chckIndx(i_1493178099, 0, (b_1493178097).length - 1)][chckIndx(j_1493178100, 0, (b_1493178097[chckIndx(i_1493178099, 0, (b_1493178097).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1493179175 = 0;
                        F.line = 250;
                        var L_1493179176 = (colontmp__1493179173).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1493179175 < L_1493179176)) break Label10;
                              F.line = 2060;
                              F.filename = "powers.nim";
                              c_1493178104 = colontmp__1493179173[chckIndx(i_1493179175, 0, (colontmp__1493179173).length - 1)];
                              if ((c_1493178104.Field2 == 0)) {
                              F.line = 2062;
                              piece_1493178096.onTake(piece_1493178096, (Temporary11 = getTakesOn_1224737272(piece_1493178096, b_1493178097), Temporary11)[chckIndx(0, 0, (Temporary11).length - 1)], b_1493178097, state_1493178098);
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1493179175 += 1;
                              if (!(((colontmp__1493179173).length == L_1493179176))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179184 = addInt(i_1493179184, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179180 = addInt(i_1493179180, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178113(side_1493178114, __1493178115, b_1493178116, s_1493178117) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2073;
      F.filename = "powers.nim";
      var i_1493178118 = 0;
      F.line = 2073;
      var j_1493178119 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179149 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179150 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179150 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179149 = i_1493179150;
              Label5: {
                F.line = 126;
                var j_1493179153 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179154 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179154 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179153 = i_1493179154;
                      F.line = 2073;
                      F.filename = "powers.nim";
                      i_1493178118 = i_1493179149;
                      F.line = 2073;
                      j_1493178119 = j_1493179153;
                      if ((isColor_1224737814(b_1493178116[chckIndx(i_1493178118, 0, (b_1493178116).length - 1)][chckIndx(j_1493178119, 0, (b_1493178116[chckIndx(i_1493178118, 0, (b_1493178116).length - 1)]).length - 1)], side_1493178114) && contains_838862678(b_1493178116[chckIndx(i_1493178118, 0, (b_1493178116).length - 1)][chckIndx(j_1493178119, 0, (b_1493178116[chckIndx(i_1493178118, 0, (b_1493178116).length - 1)]).length - 1)].filePath, [108,97,110,99,101]))) {
                      F.line = 2075;
                      b_1493178116[chckIndx(i_1493178118, 0, (b_1493178116).length - 1)][chckIndx(j_1493178119, 0, (b_1493178116[chckIndx(i_1493178118, 0, (b_1493178116).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1493178095);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179154 = addInt(i_1493179154, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179150 = addInt(i_1493179150, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173235(side_1493173236, viewSide_1493173237, b_1493173238, s_1493173239) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 632;
    F.filename = "powers.nim";
    HEX3Aanonymous_1493173208(side_1493173236, viewSide_1493173237, b_1493173238, s_1493173239);
    F.line = 633;
    HEX3Aanonymous_1493173193(side_1493173236, viewSide_1493173237, b_1493173238, s_1493173239);
    F.line = 634;
    HEX3Aanonymous_1493172891(side_1493173236, viewSide_1493173237, b_1493173238, s_1493173239);
    F.line = 635;
    if ((side_1493173236 == 0)) {
    Temporary1 = HEX3Aanonymous_1509949537;
    }
    else {
    Temporary1 = HEX3Aanonymous_1509949531;
    }
    
    var addedMove_1493173244 = Temporary1;
    F.line = 636;
    buff_1493172242(3, side_1493173236, b_1493173238, s_1493173239, [], [addedMove_1493173244], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173285(side_1493173286, viewSide_1493173287, b_1493173288, __1493173289) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 676;
      F.filename = "powers.nim";
      var i_1493173290 = 0;
      F.line = 676;
      var j_1493173291 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179188 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179189 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179189 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179188 = i_1493179189;
              Label5: {
                F.line = 126;
                var j_1493179192 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179193 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179193 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179192 = i_1493179193;
                      F.line = 676;
                      F.filename = "powers.nim";
                      i_1493173290 = i_1493179188;
                      F.line = 676;
                      j_1493173291 = j_1493179192;
                      if ((!((b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)].item == 1)) && isColor_1224737814(b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)], side_1493173286))) {
                      F.line = 678;
                      b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)] = nimCopy(b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)].index, b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      else {
                      if (((b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)].item == 1) && isColor_1224737814(b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)], side_1493173286))) {
                      F.line = 680;
                      add_1493172279(b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1509949640]);
                      F.line = 681;
                      add_1493172279(b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1509949635]);
                      F.line = 682;
                      b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)][chckIndx(j_1493173291, 0, (b_1493173288[chckIndx(i_1493173290, 0, (b_1493173288).length - 1)]).length - 1)].item = 0;
                      }
                      }
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179193 = addInt(i_1493179193, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179189 = addInt(i_1493179189, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173443(side_1493173444, viewSide_1493173445, b_1493173446, s_1493173447) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1493173444 == 0)) {
    F.line = 763;
    F.filename = "powers.nim";
    pieceMove_1224737557(b_1493173446[chckIndx(1, 0, (b_1493173446).length - 1)][chckIndx(3, 0, (b_1493173446[chckIndx(1, 0, (b_1493173446).length - 1)]).length - 1)], 3, 3, b_1493173446, s_1493173447);
    F.line = 764;
    pieceMove_1224737557(b_1493173446[chckIndx(1, 0, (b_1493173446).length - 1)][chckIndx(4, 0, (b_1493173446[chckIndx(1, 0, (b_1493173446).length - 1)]).length - 1)], 3, 4, b_1493173446, s_1493173447);
    }
    else {
      F.line = 766;
      pieceMove_1224737557(b_1493173446[chckIndx(6, 0, (b_1493173446).length - 1)][chckIndx(3, 0, (b_1493173446[chckIndx(6, 0, (b_1493173446).length - 1)]).length - 1)], 4, 3, b_1493173446, s_1493173447);
      F.line = 767;
      pieceMove_1224737557(b_1493173446[chckIndx(6, 0, (b_1493173446).length - 1)][chckIndx(4, 0, (b_1493173446[chckIndx(6, 0, (b_1493173446).length - 1)]).length - 1)], 4, 4, b_1493173446, s_1493173447);
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493173317(side_1493173318, viewSide_1493173319, b_1493173320, __1493173321) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 698;
      F.filename = "powers.nim";
      var i_1493173322 = 0;
      F.line = 698;
      var j_1493173323 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179197 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179198 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179198 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179197 = i_1493179198;
              Label5: {
                F.line = 126;
                var j_1493179201 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179202 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179202 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179201 = i_1493179202;
                      F.line = 698;
                      F.filename = "powers.nim";
                      i_1493173322 = i_1493179197;
                      F.line = 698;
                      j_1493173323 = j_1493179201;
                      if ((!((b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].item == 1)) && isColor_1224737814(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], side_1493173318))) {
                      F.line = 700;
                      b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)] = nimCopy(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].index, b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      else {
                      if (((b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].item == 1) && isColor_1224737814(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], side_1493173318))) {
                      F.line = 702;
                      add_1493172279(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1509949640, HEX3Aanonymous_1509949738, HEX3Aanonymous_1509949728]);
                      F.line = 703;
                      add_1493172279(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1509949635, HEX3Aanonymous_1509949743, HEX3Aanonymous_1509949733]);
                      F.line = 704;
                      b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].item = 0;
                      }
                      else {
                      if (((b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].item == 2) && !(isColor_1224737814(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], side_1493173318)))) {
                      F.line = 706;
                      b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)] = nimCopy(b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].index, b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)][chckIndx(j_1493173323, 0, (b_1493173320[chckIndx(i_1493173322, 0, (b_1493173320).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      }}
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179202 = addInt(i_1493179202, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179198 = addInt(i_1493179198, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174249(side_1493174250, __1493174251, b_1493174252, s_1493174253) {
                      var Temporary8;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1358;
      F.filename = "powers.nim";
      var i_1493174254 = 0;
      F.line = 1358;
      var j_1493174255 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179206 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179207 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179207 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179206 = i_1493179207;
              Label5: {
                F.line = 126;
                var j_1493179210 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179211 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179211 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179210 = i_1493179211;
                      F.line = 1358;
                      F.filename = "powers.nim";
                      i_1493174254 = i_1493179206;
                      F.line = 1358;
                      j_1493174255 = j_1493179210;
                      if ((((b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)].item == 5) && isColor_1224737814(b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)], side_1493174250)) && (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)].timesMoved == 1))) {
                      F.line = 1362;
                      if ((side_1493174250 == 0)) {
                      Temporary8 = (-1);
                      }
                      else {
                      Temporary8 = 1;
                      }
                      
                      var back_1493174264 = Temporary8;
                      F.line = 1363;
                      b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)].timesMoved = addInt(b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)].timesMoved, 1);
                      F.line = 1364;
                      pieceMove_1224737557(b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)], addInt(b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)].tile.Field1, back_1493174264), b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)][chckIndx(j_1493174255, 0, (b_1493174252[chckIndx(i_1493174254, 0, (b_1493174252).length - 1)]).length - 1)].tile.Field0, b_1493174252, s_1493174253);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179211 = addInt(i_1493179211, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179207 = addInt(i_1493179207, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174284(piece_1493174285, board_1493174286, state_1493174287) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((piece_1493174285.piecesTaken == 7)) {
    Label1: {
      F.line = 1377;
      F.filename = "powers.nim";
      var i_1493174288 = 0;
      F.line = 1377;
      var j_1493174289 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179215 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179216 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179216 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179215 = i_1493179216;
              Label5: {
                F.line = 126;
                var j_1493179219 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179220 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179220 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179219 = i_1493179220;
                      F.line = 1377;
                      F.filename = "powers.nim";
                      i_1493174288 = i_1493179215;
                      F.line = 1377;
                      j_1493174289 = j_1493179219;
                      if (((board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)][chckIndx(j_1493174289, 0, (board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)]).length - 1)].item == 0) && !(sameColor_1224737805(board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)][chckIndx(j_1493174289, 0, (board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)]).length - 1)], piece_1493174285)))) {
                      F.line = 1380;
                      board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)][chckIndx(j_1493174289, 0, (board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)]).length - 1)] = nimCopy(board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)][chckIndx(j_1493174289, 0, (board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)][chckIndx(j_1493174289, 0, (board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)]).length - 1)].index, board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)][chckIndx(j_1493174289, 0, (board_1493174286[chckIndx(i_1493174288, 0, (board_1493174286).length - 1)]).length - 1)].tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179220 = addInt(i_1493179220, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179216 = addInt(i_1493179216, 1);
            }
        };
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174295(side_1493174296, __1493174297, b_1493174298, s_1493174299) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1391;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493174296, b_1493174298, s_1493174299, [], [], [HEX3Aanonymous_1493174284], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function newSeq_1493174008(len_1493174010) {
  var result_1493174011 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1493174011 = new Array(len_1493174010); for (var i = 0 ; i < len_1493174010 ; ++i) { result_1493174011[i] = null; }  framePtr = F.prev;

  return result_1493174011;

}

function HEX26_1493173922(x_1493173924, y_1493173925) {
  var result_1493173926 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1493173926 = new Array(chckRange(addInt((x_1493173924).length, (y_1493173925).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1493173924).length, (y_1493173925).length), 0, 2147483647) ; ++i) { result_1493173926[i] = {Field0: 0, Field1: 0}; }    Label1: {
      F.line = 1538;
      var i_1493173944 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179237 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__1493179237 = subInt((x_1493173924).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179238 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1493179238 <= colontmp__1493179237)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1493173944 = res_1493179238;
            F.line = 1539;
            result_1493173926[chckIndx(i_1493173944, 0, (result_1493173926).length - 1)] = nimCopy(result_1493173926[chckIndx(i_1493173944, 0, (result_1493173926).length - 1)], x_1493173924[chckIndx(i_1493173944, 0, (x_1493173924).length - 1)], NTI1224736771);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179238 = addInt(res_1493179238, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1493173952 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1493179241 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__1493179241 = subInt((y_1493173925).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1493179242 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_1493179242 <= colontmp__1493179241)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1493173952 = res_1493179242;
            F.line = 1541;
            result_1493173926[chckIndx(addInt(i_1493173952, (x_1493173924).length), 0, (result_1493173926).length - 1)] = nimCopy(result_1493173926[chckIndx(addInt(i_1493173952, (x_1493173924).length), 0, (result_1493173926).length - 1)], y_1493173925[chckIndx(i_1493173952, 0, (y_1493173925).length - 1)], NTI1224736771);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1493179242 = addInt(res_1493179242, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1493173926;

}

function HEX3Aanonymous_1493173916(piece_1493173917, board_1493173918, state_1493173919) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(piece_1493173917.drunk)) {
    F.line = 1151;
    F.filename = "powers.nim";
    piece_1493173917.drunk = true;
    F.line = 1156;
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493173917.tile.Field1), mulInt(100, piece_1493173917.tile.Field0)), state_1493173919.Field0.randSeed)));
    F.line = 1157;
    var takes_1493173920 = getTakesOn_1224737272(piece_1493173917, board_1493173918);
    F.line = 1158;
    var moves_1493173921 = getMovesOn_1224737387(piece_1493173917, board_1493173918);
    if (((HEX26_1493173922(moves_1493173921, takes_1493173920)).length == 0)) {
    F.line = 1159;
    break BeforeRet;
    }
    
    F.line = 1162;
    var randomAction_1493173966 = nimCopy(null, sample_1493173886(HEX26_1493173922(moves_1493173921, takes_1493173920)), NTI1224736771);
    if (contains_1224737422(takes_1493173920, randomAction_1493173966)) {
    F.line = 1166;
    piece_1493173917.onTake(piece_1493173917, randomAction_1493173966, board_1493173918, state_1493173919);
    }
    else {
    if (contains_1224737422(moves_1493173921, randomAction_1493173966)) {
    F.line = 1168;
    piece_1493173917.onMove(piece_1493173917, randomAction_1493173966, board_1493173918, state_1493173919);
    }
    }
    }
    
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174000(side_1493174001, __1493174002, b_1493174003, __1493174004) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1212;
      F.filename = "powers.nim";
      var i_1493174005 = 0;
      F.line = 1212;
      var j_1493174006 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_1493179229 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1493179230 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1493179230 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_1493179229 = i_1493179230;
              Label5: {
                F.line = 126;
                var j_1493179233 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1493179234 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1493179234 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_1493179233 = i_1493179234;
                      F.line = 1212;
                      F.filename = "powers.nim";
                      i_1493174005 = i_1493179229;
                      F.line = 1212;
                      j_1493174006 = j_1493179233;
                      if ((contains_838862678(b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)][chckIndx(j_1493174006, 0, (b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)]).length - 1)].filePath, [110,105,103,104,116,114,105,100,101,114]) && isColor_1224737814(b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)][chckIndx(j_1493174006, 0, (b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)]).length - 1)], side_1493174001))) {
                      F.line = 1216;
                      F.line = 652;
                      F.filename = "sequtils.nim";
                      var resultHEX60gensym72_1493174016 = newSeq_1493174008(0);
                      Label8: {
                        F.line = 653;
                        var it_1493174020 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1493179224 = [];
                        F.line = 1216;
                        F.filename = "powers.nim";
                        colontmp__1493179224 = b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)][chckIndx(j_1493174006, 0, (b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)]).length - 1)].onEndTurn;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1493179225 = 0;
                        F.line = 250;
                        var L_1493179226 = (colontmp__1493179224).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1493179225 < L_1493179226)) break Label10;
                              F.line = 653;
                              F.filename = "sequtils.nim";
                              it_1493174020 = colontmp__1493179224[chckIndx(i_1493179225, 0, (colontmp__1493179224).length - 1)];
                              if (!((it_1493174020 == HEX3Aanonymous_1493173860))) {
                              F.line = 654;
                              resultHEX60gensym72_1493174016.push(it_1493174020);;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1493179225 += 1;
                              if (!(((colontmp__1493179224).length == L_1493179226))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)][chckIndx(j_1493174006, 0, (b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)]).length - 1)].onEndTurn = nimCopy(null, resultHEX60gensym72_1493174016, NTI1493173909);
                      F.line = 1217;
                      F.filename = "powers.nim";
                      b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)][chckIndx(j_1493174006, 0, (b_1493174003[chckIndx(i_1493174005, 0, (b_1493174003).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1493173916);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1493179234 = addInt(i_1493179234, 1);
                    }
                };
              };
              F.line = 131;
              i_1493179230 = addInt(i_1493179230, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function delete_1493178501(x_1493178503, x_1493178503_Idx, i_1493178504) {
  var F = {procname: "delete.delete", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1972;
    F.filename = "system.nim";
    x_1493178503[x_1493178503_Idx].splice(i_1493178504, 1);
  framePtr = F.prev;

  
}

function find_1493178482(a_1493178485, item_1493178486) {
  var result_1493178487 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1493178487 = 0;
    Label1: {
      F.line = 1672;
      var i_1493178491 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179250 = 0;
      F.line = 250;
      var L_1493179251 = (a_1493178485).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493179250 < L_1493179251)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1493178491 = a_1493178485[chckIndx(i_1493179250, 0, (a_1493178485).length - 1)];
            if ((i_1493178491 == item_1493178486)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1493178487 = addInt(result_1493178487, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179250 += 1;
            if (!(((a_1493178485).length == L_1493179251))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1493178487 = (-1);
  };
  framePtr = F.prev;

  return result_1493178487;

}

function HEX3Aanonymous_1509949480(board_1509949481, p_1509949482) {
  var result_1509949483 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 45;
    F.filename = "extramoves.nim";
    var next_1509949484 = addIfFree_1291845640(result_1509949483, 0, board_1509949481, p_1509949482.tile, tileLeft_1308622996);
    if (next_1509949484) {
    F.line = 47;
    var _ = addIfFree_1291845640(result_1509949483, 0, board_1509949481, tileLeft_1308622996(p_1509949482.tile), tileLeft_1308622996);
    }
    
  framePtr = F.prev;

  return result_1509949483[0];

}

function HEX3Aanonymous_1509949486(board_1509949487, p_1509949488) {
  var result_1509949489 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "extramoves.nim";
    var next_1509949490 = addIfFree_1291845640(result_1509949489, 0, board_1509949487, p_1509949488.tile, tileRight_1308622999);
    if (next_1509949490) {
    F.line = 52;
    var _ = addIfFree_1291845640(result_1509949489, 0, board_1509949487, tileRight_1308622999(p_1509949488.tile), tileRight_1308622999);
    }
    
  framePtr = F.prev;

  return result_1509949489[0];

}

function HEX3Aanonymous_1509949799(board_1509949800, p_1509949801) {
  var result_1509949802 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 234;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949802, 0, HEX3Aanonymous_1509949480(board_1509949800, p_1509949801));
    F.line = 235;
    add_1224737299(result_1509949802, 0, HEX3Aanonymous_1509949486(board_1509949800, p_1509949801));
    F.line = 236;
    add_1224737299(result_1509949802, 0, HEX3Aanonymous_1509949543(board_1509949800, p_1509949801));
    F.line = 237;
    add_1224737299(result_1509949802, 0, HEX3Aanonymous_1509949549(board_1509949800, p_1509949801));
  framePtr = F.prev;

  return result_1509949802[0];

}

function HEX3Aanonymous_1509949492(board_1509949493, p_1509949494) {
  var result_1509949495 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "extramoves.nim";
    var next_1509949496 = addIfTake_1291845739(result_1509949495, 0, board_1509949493, p_1509949494, p_1509949494.tile, tileLeft_1308622996, false, false);
    if (next_1509949496) {
    F.line = 57;
    var _ = addIfTake_1291845739(result_1509949495, 0, board_1509949493, p_1509949494, tileLeft_1308622996(p_1509949494.tile), tileLeft_1308622996, false, false);
    }
    
  framePtr = F.prev;

  return result_1509949495[0];

}

function HEX3Aanonymous_1509949498(board_1509949499, p_1509949500) {
  var result_1509949501 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 60;
    F.filename = "extramoves.nim";
    var next_1509949502 = addIfTake_1291845739(result_1509949501, 0, board_1509949499, p_1509949500, p_1509949500.tile, tileRight_1308622999, false, false);
    if (next_1509949502) {
    F.line = 62;
    var _ = addIfTake_1291845739(result_1509949501, 0, board_1509949499, p_1509949500, tileRight_1308622999(p_1509949500.tile), tileRight_1308622999, false, false);
    }
    
  framePtr = F.prev;

  return result_1509949501[0];

}

function HEX3Aanonymous_1509949820(board_1509949821, p_1509949822) {
  var result_1509949823 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 240;
    F.filename = "extramoves.nim";
    add_1224737299(result_1509949823, 0, HEX3Aanonymous_1509949492(board_1509949821, p_1509949822));
    F.line = 241;
    add_1224737299(result_1509949823, 0, HEX3Aanonymous_1509949498(board_1509949821, p_1509949822));
    F.line = 242;
    add_1224737299(result_1509949823, 0, HEX3Aanonymous_1509949531(board_1509949821, p_1509949822));
    F.line = 243;
    add_1224737299(result_1509949823, 0, HEX3Aanonymous_1509949537(board_1509949821, p_1509949822));
  framePtr = F.prev;

  return result_1509949823[0];

}

function createWithClarity_1493178475() {
    
function HEX3Aanonymous_1493178478(piece_1493178479, board_1493178480, state_1493178481) {
      var F = {procname: "createWithClarity.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (clarity_1493178477) {
        F.line = 2208;
        F.filename = "powers.nim";
        delete_1493178501(piece_1493178479, "moves", chckRange(find_1493178482(piece_1493178479.moves, HEX3Aanonymous_1509949799), 0, 2147483647));
        F.line = 2209;
        delete_1493178501(piece_1493178479, "takes", chckRange(find_1493178482(piece_1493178479.takes, HEX3Aanonymous_1509949820), 0, 2147483647));
        }
        
        if ((state_1493178481.Field1[chckIndx(piece_1493178479.color, 0, (state_1493178481.Field1).length - 1)].hasCastled && !(clarity_1493178477))) {
        F.line = 2211;
        piece_1493178479.moves.push(HEX3Aanonymous_1509949799);;
        F.line = 2212;
        piece_1493178479.takes.push(HEX3Aanonymous_1509949820);;
        F.line = 2213;
        clarity_1493178477 = true;
        }
        
      framePtr = F.prev;

      
    }

  var result_1493178476 = null;

  var F = {procname: "powers.createWithClarity", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2204;
    F.filename = "powers.nim";
    var clarity_1493178477 = false;
    F.line = 2205;
    result_1493178476 = HEX3Aanonymous_1493178478;
  framePtr = F.prev;

  return result_1493178476;

}

function HEX3Aanonymous_1493178540(side_1493178541, __1493178542, b_1493178543, s_1493178544) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2225;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(0, side_1493178541, b_1493178543, s_1493178544, createWithClarity_1493178475, false);
  framePtr = F.prev;

  
}

function isSome_1493177719(self_1493177721) {
  var result_1493177722 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1493177722 = self_1493177721.has;
  framePtr = F.prev;

  return result_1493177722;

}

function none_1224736933() {
  var result_1224736940 = ({val: {Field0: 0, Field1: null, Field2: null}, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1224736940;

}

function map_1493178622(self_1493178625, callback_1493178627) {
    var Temporary1;

  var result_1493178628 = ({val: {Field0: 0, Field1: null, Field2: null}, has: false});

  var F = {procname: "map.map", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 253;
    F.filename = "options.nim";
    if (isSome_1493177719(self_1493178625)) {
    Temporary1 = some_1493178065(callback_1493178627(self_1493178625.val));
    }
    else {
    Temporary1 = none_1224736933();
    }
    
    result_1493178628 = nimCopy(result_1493178628, Temporary1, NTI1224736839);
  framePtr = F.prev;

  return result_1493178628;

}

function HEX3Aanonymous_1493178559(side_1493178560, __1493178561, __1493178562, s_1493178563) {
            
function HEX3Aanonymous_1493178605(x_1493178606) {
              var result_1493178607 = {Field0: 0, Field1: null, Field2: null};

              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
              framePtr = F;
                F.line = 2250;
                F.filename = "powers.nim";
                result_1493178607 = nimCopy(result_1493178607, x_1493178606, NTI1224736792);
                F.line = 2251;
                result_1493178607.Field0 = addInt(result_1493178607.Field0, 1);
              framePtr = F.prev;

              return result_1493178607;

            }

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2246;
      F.filename = "powers.nim";
      var c_1493178593 = null;
      F.line = 52;
      F.filename = "iterators.nim";
      var i_1493179255 = 0;
      Label2: {
        F.line = 53;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 2246;
            F.filename = "powers.nim";
            c_1493178593 = s_1493178563.Field1[chckIndx(side_1493178560, 0, (s_1493178563.Field1).length - 1)].glass[chckIndx(i_1493179255, 0, (s_1493178563.Field1[chckIndx(side_1493178560, 0, (s_1493178563.Field1).length - 1)].glass).length - 1)];
            if (isSome_1493177719(c_1493178593)) {
            F.line = 2248;
            c_1493178593 = nimCopy(c_1493178593, map_1493178622(c_1493178593, HEX3Aanonymous_1493178605), NTI1224736839);
            }
            
            if ((4 <= i_1493179255)) {
            F.line = 55;
            F.filename = "iterators.nim";
            break Label2;
            }
            
            F.line = 13;
            i_1493179255 += 1;
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493178745(__1493178746, __1493178747, __1493178748, __1493178749) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174760(piece_1493174761, board_1493174762, state_1493174763) {
      var Temporary2;
            var Temporary5;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1666;
    F.filename = "powers.nim";
    piece_1493174761.onMove(piece_1493174761, tileBelow_1308622993(piece_1493174761.tile), board_1493174762, state_1493174763);
    Label1: {
      F.line = 187;
      F.filename = "piece.nim";
      var xHEX60gensym105_1493174768 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__1493179258 = [];
      F.line = 187;
      F.filename = "piece.nim";
      colontmp__1493179258 = (Temporary2 = board_1493174762[chckIndx(tileBelow_1308622993(piece_1493174761.tile).Field1, 0, (board_1493174762).length - 1)], Temporary2)[chckIndx(piece_1493174761.tile.Field0, 0, (Temporary2).length - 1)].onEndTurn;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179259 = 0;
      F.line = 250;
      var L_1493179260 = (colontmp__1493179258).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_1493179259 < L_1493179260)) break Label4;
            F.line = 1667;
            F.filename = "powers.nim";
            xHEX60gensym105_1493174768 = colontmp__1493179258[chckIndx(i_1493179259, 0, (colontmp__1493179258).length - 1)];
            F.line = 188;
            F.filename = "piece.nim";
            xHEX60gensym105_1493174768((Temporary5 = board_1493174762[chckIndx(tileBelow_1308622993(piece_1493174761.tile).Field1, 0, (board_1493174762).length - 1)], Temporary5)[chckIndx(piece_1493174761.tile.Field0, 0, (Temporary5).length - 1)], board_1493174762, state_1493174763);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179259 += 1;
            if (!(((colontmp__1493179258).length == L_1493179260))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174774(piece_1493174775, board_1493174776, s_1493174777) {
    var Temporary1;

  var result_1493174778 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1670;
    F.filename = "powers.nim";
    result_1493174778 = (!((piece_1493174775.tile.Field1 == 7)) && isAir_1224737797((Temporary1 = board_1493174776[chckIndx(tileBelow_1308622993(piece_1493174775.tile).Field1, 0, (board_1493174776).length - 1)], Temporary1)[chckIndx(piece_1493174775.tile.Field0, 0, (Temporary1).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493174778;

}

function HEX3Aanonymous_1493174740(piece_1493174741, board_1493174742, state_1493174743) {
      var Temporary2;
            var Temporary5;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1659;
    F.filename = "powers.nim";
    piece_1493174741.onMove(piece_1493174741, tileAbove_1308622990(piece_1493174741.tile), board_1493174742, state_1493174743);
    Label1: {
      F.line = 187;
      F.filename = "piece.nim";
      var xHEX60gensym102_1493174748 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__1493179263 = [];
      F.line = 187;
      F.filename = "piece.nim";
      colontmp__1493179263 = (Temporary2 = board_1493174742[chckIndx(tileAbove_1308622990(piece_1493174741.tile).Field1, 0, (board_1493174742).length - 1)], Temporary2)[chckIndx(piece_1493174741.tile.Field0, 0, (Temporary2).length - 1)].onEndTurn;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179264 = 0;
      F.line = 250;
      var L_1493179265 = (colontmp__1493179263).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_1493179264 < L_1493179265)) break Label4;
            F.line = 1660;
            F.filename = "powers.nim";
            xHEX60gensym102_1493174748 = colontmp__1493179263[chckIndx(i_1493179264, 0, (colontmp__1493179263).length - 1)];
            F.line = 188;
            F.filename = "piece.nim";
            xHEX60gensym102_1493174748((Temporary5 = board_1493174742[chckIndx(tileAbove_1308622990(piece_1493174741.tile).Field1, 0, (board_1493174742).length - 1)], Temporary5)[chckIndx(piece_1493174741.tile.Field0, 0, (Temporary5).length - 1)], board_1493174742, state_1493174743);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179264 += 1;
            if (!(((colontmp__1493179263).length == L_1493179265))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174754(piece_1493174755, board_1493174756, s_1493174757) {
    var Temporary1;

  var result_1493174758 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1663;
    F.filename = "powers.nim";
    result_1493174758 = (!((piece_1493174755.tile.Field1 == 0)) && isAir_1224737797((Temporary1 = board_1493174756[chckIndx(tileAbove_1308622990(piece_1493174755.tile).Field1, 0, (board_1493174756).length - 1)], Temporary1)[chckIndx(piece_1493174755.tile.Field0, 0, (Temporary1).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493174758;

}

function HEX3Aanonymous_1493174780(side_1493174781, __1493174782, b_1493174783, s_1493174784) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1493174781 == 0)) {
    F.line = 1684;
    F.filename = "powers.nim";
    s_1493174784.Field1[chckIndx(side_1493174781, 0, (s_1493174784.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,85,112], Field1: alwaysCost_1526726885(7), Field2: HEX3Aanonymous_1493174760, Field3: HEX3Aanonymous_1493174774});;
    }
    else {
      F.line = 1686;
      s_1493174784.Field1[chckIndx(side_1493174781, 0, (s_1493174784.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,85,112], Field1: alwaysCost_1526726885(7), Field2: HEX3Aanonymous_1493174740, Field3: HEX3Aanonymous_1493174754});;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174823(side_1493174824, __1493174825, b_1493174826, s_1493174827) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1493174824 == 0)) {
    F.line = 1710;
    F.filename = "powers.nim";
    s_1493174827.Field1[chckIndx(side_1493174824, 0, (s_1493174827.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,66,97,99,107], Field1: alwaysCost_1526726885(7), Field2: HEX3Aanonymous_1493174740, Field3: HEX3Aanonymous_1493174754});;
    }
    else {
      F.line = 1712;
      s_1493174827.Field1[chckIndx(side_1493174824, 0, (s_1493174827.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,66,97,99,107], Field1: alwaysCost_1526726885(7), Field2: HEX3Aanonymous_1493174760, Field3: HEX3Aanonymous_1493174774});;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174850(side_1493174851, __1493174852, b_1493174853, s_1493174854) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1728;
    F.filename = "powers.nim";
    addMoney_1526726698(side_1493174851, 10, s_1493174854);
  framePtr = F.prev;

  
}

function buyMoveUpgrade_1526726781(move_1526726782) {
    
function HEX3Aanonymous_1526726784(piece_1526726785, board_1526726786, __1526726787) {
      var F = {procname: "buyMoveUpgrade.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
        F.line = 34;
        F.filename = "capitalism.nim";
        piece_1526726785.moves.push(move_1526726782);;
      framePtr = F.prev;

      
    }

  var result_1526726783 = null;

  var F = {procname: "capitalism.buyMoveUpgrade", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "capitalism.nim";
    result_1526726783 = HEX3Aanonymous_1526726784;
  framePtr = F.prev;

  return result_1526726783;

}

function find_1526726820(a_1526726823, item_1526726824) {
  var result_1526726825 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1526726825 = 0;
    Label1: {
      F.line = 1672;
      var i_1526726839 = null;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_1493179269 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_1493179269 < (a_1526726823).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1526726839 = a_1526726823[chckIndx(i_1493179269, 0, (a_1526726823).length - 1)];
            if ((i_1526726839 == item_1526726824)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1526726825 = addInt(result_1526726825, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179269 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1526726825 = (-1);
  };
  framePtr = F.prev;

  return result_1526726825;

}

function contains_1526726815(a_1526726817, item_1526726818) {
  var result_1526726819 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1526726819 = (0 <= find_1526726820(a_1526726817, item_1526726818));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1526726819;

}

function buyMoveUpgradeCondition_1526726807(move_1526726808) {
    
function HEX3Aanonymous_1526726810(piece_1526726811, board_1526726812, s_1526726813) {
      var result_1526726814 = false;

      var F = {procname: "buyMoveUpgradeCondition.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        F.line = 38;
        F.filename = "capitalism.nim";
        result_1526726814 = !(contains_1526726815(piece_1526726811.moves, move_1526726808));
        break BeforeRet;
      };
      framePtr = F.prev;

      return result_1526726814;

    }

  var result_1526726809 = null;

  var F = {procname: "capitalism.buyMoveUpgradeCondition", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 37;
    F.filename = "capitalism.nim";
    result_1526726809 = HEX3Aanonymous_1526726810;
  framePtr = F.prev;

  return result_1526726809;

}

function exceptCost_1526726908(normalCost_1526726909, exceptPiece_1526726910, exceptCost_1526726911) {
    
function HEX3Aanonymous_1526726913(piece_1526726914, b_1526726915, s_1526726916) {
        var Temporary1;

      var result_1526726917 = 0;

      var F = {procname: "exceptCost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        F.line = 49;
        F.filename = "capitalism.nim";
        if (!((piece_1526726914.item == exceptPiece_1526726910))) {
        Temporary1 = normalCost_1526726909;
        }
        else {
        Temporary1 = exceptCost_1526726911;
        }
        
        result_1526726917 = Temporary1;
        break BeforeRet;
      };
      framePtr = F.prev;

      return result_1526726917;

    }

  var result_1526726912 = null;

  var F = {procname: "capitalism.exceptCost", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "capitalism.nim";
    result_1526726912 = HEX3Aanonymous_1526726913;
  framePtr = F.prev;

  return result_1526726912;

}

function HEX3Aanonymous_1493174857(side_1493174858, __1493174859, b_1493174860, s_1493174861) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1745;
    F.filename = "powers.nim";
    var action_1493174862 = buyMoveUpgrade_1526726781(HEX3Aanonymous_1291846082);
    F.line = 1746;
    var condition_1493174863 = buyMoveUpgradeCondition_1526726807(HEX3Aanonymous_1291846082);
    F.line = 1747;
    s_1493174861.Field1[chckIndx(side_1493174858, 0, (s_1493174861.Field1).length - 1)].buys.push({Field0: [85,112,103,114,97,100,101], Field1: exceptCost_1526726908(8, 0, 38), Field2: action_1493174862, Field3: condition_1493174863});;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174874(side_1493174875, __1493174876, b_1493174877, s_1493174878) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1764;
    F.filename = "powers.nim";
    var action_1493174879 = buyMoveUpgrade_1526726781(HEX3Aanonymous_1509949640);
    F.line = 1765;
    var condition_1493174880 = buyMoveUpgradeCondition_1526726807(HEX3Aanonymous_1509949640);
    F.line = 1766;
    s_1493174878.Field1[chckIndx(side_1493174875, 0, (s_1493174878.Field1).length - 1)].buys.push({Field0: [85,112,103,114,97,100,101], Field1: exceptCost_1526726908(8, 0, 38), Field2: action_1493174879, Field3: condition_1493174880});;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493177842(side_1493177843, __1493177844, b_1493177845, s_1493177846) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1848;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(0, side_1493177843, b_1493177845, s_1493177846, moneyForTakeAll_1493174597, false);
  framePtr = F.prev;

  
}

function moneyForMove_1493177849() {
    
function HEX3Aanonymous_1493177852(piece_1493177853, b_1493177854, state_1493177855) {
      var F = {procname: "moneyForMove.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1859;
        F.filename = "powers.nim";
        var allTimesMoved_1493177856 = 0;
        Label1: {
          F.line = 1860;
          var i_1493177857 = 0;
          F.line = 1860;
          var j_1493177858 = 0;
          Label2: {
            F.line = 125;
            F.filename = "piece.nim";
            var i_1493179273 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_1493179274 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_1493179274 < 8)) break Label4;
                  F.line = 125;
                  F.filename = "piece.nim";
                  i_1493179273 = i_1493179274;
                  Label5: {
                    F.line = 126;
                    var j_1493179277 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_1493179278 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_1493179278 < 8)) break Label7;
                          F.line = 126;
                          F.filename = "piece.nim";
                          j_1493179277 = i_1493179278;
                          F.line = 1860;
                          F.filename = "powers.nim";
                          i_1493177857 = i_1493179273;
                          F.line = 1860;
                          j_1493177858 = j_1493179277;
                          if (sameColor_1224737805(b_1493177854[chckIndx(i_1493177857, 0, (b_1493177854).length - 1)][chckIndx(j_1493177858, 0, (b_1493177854[chckIndx(i_1493177857, 0, (b_1493177854).length - 1)]).length - 1)], piece_1493177853)) {
                          F.line = 1862;
                          allTimesMoved_1493177856 = addInt(allTimesMoved_1493177856, b_1493177854[chckIndx(i_1493177857, 0, (b_1493177854).length - 1)][chckIndx(j_1493177858, 0, (b_1493177854[chckIndx(i_1493177857, 0, (b_1493177854).length - 1)]).length - 1)].timesMoved);
                          }
                          
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_1493179278 = addInt(i_1493179278, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_1493179274 = addInt(i_1493179274, 1);
                }
            };
          };
        };
        if ((lastTimesMoved_1493177851 < allTimesMoved_1493177856)) {
        F.line = 1865;
        F.filename = "powers.nim";
        addMoney_1526726698(piece_1493177853.color, mulInt(subInt(allTimesMoved_1493177856, lastTimesMoved_1493177851), 1), state_1493177855);
        }
        
        F.line = 1866;
        lastTimesMoved_1493177851 = allTimesMoved_1493177856;
      framePtr = F.prev;

      
    }

  var result_1493177850 = null;

  var F = {procname: "powers.moneyForMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1854;
    F.filename = "powers.nim";
    var lastTimesMoved_1493177851 = 0;
    F.line = 1858;
    result_1493177850 = HEX3Aanonymous_1493177852;
  framePtr = F.prev;

  return result_1493177850;

}

function HEX3Aanonymous_1493177863(side_1493177864, __1493177865, b_1493177866, s_1493177867) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1880;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(0, side_1493177864, b_1493177866, s_1493177867, moneyForMove_1493177849, false);
  framePtr = F.prev;

  
}

function createPieceMarket_1493177790(cost_1493177791, rate_1493177792) {
    
function HEX3Aanonymous_1493177794(piece_1493177795, b_1493177796, s_1493177797) {
      var result_1493177798 = 0;

      var F = {procname: "createPieceMarket.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1787;
        F.filename = "powers.nim";
        result_1493177798 = addInt(cost_1493177791, mulInt(rate_1493177792, s_1493177797.Field1[chckIndx(piece_1493177795.color, 0, (s_1493177797.Field1).length - 1)].piecesSoldThisTurn));
      framePtr = F.prev;

      return result_1493177798;

    }

  var result_1493177793 = null;

  var F = {procname: "powers.createPieceMarket", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1786;
    F.filename = "powers.nim";
    result_1493177793 = HEX3Aanonymous_1493177794;
  framePtr = F.prev;

  return result_1493177793;

}

function addQuoted_1493175985(s_1493175987, s_1493175987_Idx, x_1493175988) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493175987[s_1493175987_Idx].push.apply(s_1493175987[s_1493175987_Idx], nimBoolToStr(x_1493175988));;
  framePtr = F.prev;

  
}

function addQuoted_1493176592(s_1493176594, s_1493176594_Idx, x_1493176595) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493176594[s_1493176594_Idx].push.apply(s_1493176594[s_1493176594_Idx], reprEnum(x_1493176595, NTI1224736776));;
  framePtr = F.prev;

  
}

function addQuoted_1493176612(s_1493176614, s_1493176614_Idx, x_1493176615) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493176614[s_1493176614_Idx].push.apply(s_1493176614[s_1493176614_Idx], reprEnum(x_1493176615, NTI1224736777));;
  framePtr = F.prev;

  
}

function addQuoted_1493176668(s_1493176670, s_1493176670_Idx, x_1493176671) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493176670[s_1493176670_Idx].push.apply(s_1493176670[s_1493176670_Idx], HEX24_1224737477(x_1493176671));;
  framePtr = F.prev;

  
}

function addEscapedChar_33558024(s_33558025, s_33558025_Idx, c_33558026) {
  var F = {procname: "system.addEscapedChar", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2472;
    F.filename = "system.nim";
    switch (c_33558026) {
    case 7:
      F.line = 2473;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,97]);;
      break;
    case 8:
      F.line = 2474;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,98]);;
      break;
    case 9:
      F.line = 2475;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,116]);;
      break;
    case 10:
      F.line = 2476;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,110]);;
      break;
    case 11:
      F.line = 2477;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,118]);;
      break;
    case 12:
      F.line = 2478;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,102]);;
      break;
    case 13:
      F.line = 2479;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,114]);;
      break;
    case 27:
      F.line = 2480;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,101]);;
      break;
    case 92:
      F.line = 2481;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,92]);;
      break;
    case 39:
      F.line = 2482;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,39]);;
      break;
    case 34:
      F.line = 2483;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      F.line = 2484;
      addChar(s_33558025[s_33558025_Idx], c_33558026);;
      break;
    default: 
      F.line = 2486;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,120]);;
      F.line = 2488;
      var n_33558036 = c_33558026;
      F.line = 2489;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33558036 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      F.line = 2490;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33558036 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }
  framePtr = F.prev;

  
}

function addQuoted_1493176856(s_1493176858, s_1493176858_Idx, x_1493176859) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2518;
    F.filename = "system.nim";
    s_1493176858[s_1493176858_Idx].push.apply(s_1493176858[s_1493176858_Idx], [34]);;
    Label1: {
      F.line = 2519;
      var c_1493176860 = 0;
      F.line = 267;
      F.filename = "iterators.nim";
      var i_1493179285 = 0;
      F.line = 268;
      var L_1493179286 = (x_1493176859).length;
      Label2: {
        F.line = 269;
          Label3: while (true) {
          if (!(i_1493179285 < L_1493179286)) break Label3;
            F.line = 2519;
            F.filename = "system.nim";
            c_1493176860 = x_1493176859[chckIndx(i_1493179285, 0, (x_1493176859).length - 1)];
            if ((c_1493176860 <= 127)) {
            F.line = 2523;
            addEscapedChar_33558024(s_1493176858, s_1493176858_Idx, c_1493176860);
            }
            else {
              F.line = 2525;
            addChar(s_1493176858[s_1493176858_Idx], c_1493176860);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179285 += 1;
            if (!(((x_1493176859).length == L_1493179286))) {
            F.line = 272;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(272, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 2526;
    F.filename = "system.nim";
    s_1493176858[s_1493176858_Idx].push.apply(s_1493176858[s_1493176858_Idx], [34]);;
  framePtr = F.prev;

  
}

function addQuoted_1493177120(s_1493177122, s_1493177122_Idx, x_1493177123) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177122[s_1493177122_Idx].push.apply(s_1493177122[s_1493177122_Idx], reprEnum(x_1493177123, NTI1224736789));;
  framePtr = F.prev;

  
}

function HEX24_1493177064(x_1493177066) {
  var result_1493177067 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1493177067[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym350_1493177078 = 0;
    if ((0 < countHEX60gensym350_1493177078)) {
    F.line = 23;
    result_1493177067[0].push.apply(result_1493177067[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177067[0].push.apply(result_1493177067[0], [111,110]);;
    F.line = 26;
    result_1493177067[0].push.apply(result_1493177067[0], [58,32]);;
    F.line = 27;
    countHEX60gensym350_1493177078 += 1;
    F.line = 33;
    addQuoted_1493176668(result_1493177067, 0, x_1493177066["Field0"]);
    if ((0 < countHEX60gensym350_1493177078)) {
    F.line = 23;
    result_1493177067[0].push.apply(result_1493177067[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177067[0].push.apply(result_1493177067[0], [103,114,111,117,112]);;
    F.line = 26;
    result_1493177067[0].push.apply(result_1493177067[0], [58,32]);;
    F.line = 27;
    countHEX60gensym350_1493177078 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493177067, 0, x_1493177066["Field1"]);
    if ((0 < countHEX60gensym350_1493177078)) {
    F.line = 23;
    result_1493177067[0].push.apply(result_1493177067[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177067[0].push.apply(result_1493177067[0], [103,108,97,115,115]);;
    F.line = 26;
    result_1493177067[0].push.apply(result_1493177067[0], [58,32]);;
    F.line = 27;
    countHEX60gensym350_1493177078 += 1;
    F.line = 33;
    addQuoted_1493177120(result_1493177067, 0, x_1493177066["Field2"]);
    F.line = 39;
    result_1493177067[0].push.apply(result_1493177067[0], [41]);;
  framePtr = F.prev;

  return result_1493177067[0];

}

function addQuoted_1493177058(s_1493177060, s_1493177060_Idx, x_1493177061) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177060[s_1493177060_Idx].push.apply(s_1493177060[s_1493177060_Idx], HEX24_1493177064(x_1493177061));;
  framePtr = F.prev;

  
}

function collectionToString_1493177024(x_1493177026, prefix_1493177027, separator_1493177028, suffix_1493177029) {
  var result_1493177030 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_1493177030[0] = nimCopy(null, prefix_1493177027, NTI33554449);
    F.line = 91;
    var firstElement_1493177031 = true;
    Label1: {
      F.line = 92;
      var value_1493177054 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179289 = 0;
      F.line = 250;
      var L_1493179290 = (x_1493177026).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493179289 < L_1493179290)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_1493177054 = x_1493177026[i_1493179289];
            if (firstElement_1493177031) {
            F.line = 94;
            firstElement_1493177031 = false;
            }
            else {
              F.line = 96;
            result_1493177030[0].push.apply(result_1493177030[0], separator_1493177028);;
            }
            
            F.line = 105;
            addQuoted_1493177058(result_1493177030, 0, value_1493177054);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179289 += 1;
            if (!(((x_1493177026).length == L_1493179290))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_1493177030[0].push.apply(result_1493177030[0], suffix_1493177029);;
  framePtr = F.prev;

  return result_1493177030[0];

}

function HEX24_1493177020(x_1493177022) {
  var result_1493177023 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_1493177023 = nimCopy(null, collectionToString_1493177024(x_1493177022, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_1493177023;

}

function addQuoted_1493177014(s_1493177016, s_1493177016_Idx, x_1493177017) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177016[s_1493177016_Idx].push.apply(s_1493177016[s_1493177016_Idx], HEX24_1493177020(x_1493177017));;
  framePtr = F.prev;

  
}

function HEX24_1493176563(x_1493176565) {
  var result_1493176566 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1493176566[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym292_1493176577 = 0;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [105,116,101,109]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493176592(result_1493176566, 0, x_1493176565.item);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [99,111,108,111,114]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493176612(result_1493176566, 0, x_1493176565.color);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [105,110,100,101,120]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493176566, 0, x_1493176565.index);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [116,105,109,101,115,77,111,118,101,100]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493176566, 0, x_1493176565.timesMoved);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [112,105,101,99,101,115,84,97,107,101,110]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493176566, 0, x_1493176565.piecesTaken);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [116,105,108,101]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493176668(result_1493176566, 0, x_1493176565.tile);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [109,111,118,101,115]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [116,97,107,101,115]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [111,110,77,111,118,101]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [111,110,84,97,107,101]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [119,104,101,110,84,97,107,101,110]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [111,110,69,110,100,84,117,114,110]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [111,110,80,114,111,109,111,116,101]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 35;
    result_1493176566[0].push.apply(result_1493176566[0], [46,46,46]);;
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [112,114,111,109,111,116,101,100]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493175985(result_1493176566, 0, x_1493176565.promoted);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [102,105,108,101,80,97,116,104]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493176856(result_1493176566, 0, x_1493176565.filePath);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [99,111,108,111,114,97,98,108,101]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493175985(result_1493176566, 0, x_1493176565.colorable);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [114,111,116,97,116,101]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493175985(result_1493176566, 0, x_1493176565.rotate);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [100,114,117,110,107]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493175985(result_1493176566, 0, x_1493176565.drunk);
    if ((0 < countHEX60gensym292_1493176577)) {
    F.line = 23;
    result_1493176566[0].push.apply(result_1493176566[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493176566[0].push.apply(result_1493176566[0], [99,97,115,116,115]);;
    F.line = 26;
    result_1493176566[0].push.apply(result_1493176566[0], [58,32]);;
    F.line = 27;
    countHEX60gensym292_1493176577 += 1;
    F.line = 33;
    addQuoted_1493177014(result_1493176566, 0, x_1493176565.casts);
    F.line = 39;
    result_1493176566[0].push.apply(result_1493176566[0], [41]);;
  framePtr = F.prev;

  return result_1493176566[0];

}

function addQuoted_1493176557(s_1493176559, s_1493176559_Idx, x_1493176560) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493176559[s_1493176559_Idx].push.apply(s_1493176559[s_1493176559_Idx], HEX24_1493176563(x_1493176560));;
  framePtr = F.prev;

  
}

function collectionToString_1493176515(x_1493176517, prefix_1493176518, separator_1493176519, suffix_1493176520) {
  var result_1493176521 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_1493176521[0] = nimCopy(null, prefix_1493176518, NTI33554449);
    F.line = 91;
    var firstElement_1493176522 = true;
    Label1: {
      F.line = 92;
      var value_1493176553 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
      F.line = 43;
      F.filename = "iterators.nim";
      var i_1493179282 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_1493176553 = nimCopy(value_1493176553, x_1493176517[i_1493179282], NTI1224736794);
            if (firstElement_1493176522) {
            F.line = 94;
            firstElement_1493176522 = false;
            }
            else {
              F.line = 96;
            result_1493176521[0].push.apply(result_1493176521[0], separator_1493176519);;
            }
            
            F.line = 105;
            addQuoted_1493176557(result_1493176521, 0, value_1493176553);
            if ((7 <= i_1493179282)) {
            F.line = 46;
            F.filename = "iterators.nim";
            break Label2;
            }
            
            F.line = 13;
            i_1493179282 += 1;
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_1493176521[0].push.apply(result_1493176521[0], suffix_1493176520);;
  framePtr = F.prev;

  return result_1493176521[0];

}

function HEX24_1493176510(x_1493176513) {
  var result_1493176514 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "dollars.nim";
    result_1493176514 = nimCopy(null, collectionToString_1493176515(x_1493176513, [91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_1493176514;

}

function addQuoted_1493176498(s_1493176500, s_1493176500_Idx, x_1493176501) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493176500[s_1493176500_Idx].push.apply(s_1493176500[s_1493176500_Idx], HEX24_1493176510(x_1493176501));;
  framePtr = F.prev;

  
}

function HEX24_1493177269(self_1493177271) {
  var result_1493177272 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isSome_1409289449(self_1493177271)) {
    F.line = 364;
    F.filename = "options.nim";
    result_1493177272[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    F.line = 365;
    addQuoted_838862213(result_1493177272, 0, self_1493177271.val);
    F.line = 366;
    result_1493177272[0].push.apply(result_1493177272[0], [41]);;
    }
    else {
      F.line = 371;
      result_1493177272[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_1493177272[0];

}

function addQuoted_1493177257(s_1493177259, s_1493177259_Idx, x_1493177260) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177259[s_1493177259_Idx].push.apply(s_1493177259[s_1493177259_Idx], HEX24_1493177269(x_1493177260));;
  framePtr = F.prev;

  
}

function HEX24_1493177435(x_1493177437) {
  var result_1493177438 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1493177438[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym378_1493177449 = 0;
    if ((0 < countHEX60gensym378_1493177449)) {
    F.line = 23;
    result_1493177438[0].push.apply(result_1493177438[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177438[0].push.apply(result_1493177438[0], [110,97,109,101]);;
    F.line = 26;
    result_1493177438[0].push.apply(result_1493177438[0], [58,32]);;
    F.line = 27;
    countHEX60gensym378_1493177449 += 1;
    F.line = 33;
    addQuoted_1493176856(result_1493177438, 0, x_1493177437["Field0"]);
    if ((0 < countHEX60gensym378_1493177449)) {
    F.line = 23;
    result_1493177438[0].push.apply(result_1493177438[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177438[0].push.apply(result_1493177438[0], [99,111,115,116]);;
    F.line = 26;
    result_1493177438[0].push.apply(result_1493177438[0], [58,32]);;
    F.line = 27;
    countHEX60gensym378_1493177449 += 1;
    F.line = 35;
    result_1493177438[0].push.apply(result_1493177438[0], [46,46,46]);;
    if ((0 < countHEX60gensym378_1493177449)) {
    F.line = 23;
    result_1493177438[0].push.apply(result_1493177438[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177438[0].push.apply(result_1493177438[0], [97,99,116,105,111,110]);;
    F.line = 26;
    result_1493177438[0].push.apply(result_1493177438[0], [58,32]);;
    F.line = 27;
    countHEX60gensym378_1493177449 += 1;
    F.line = 35;
    result_1493177438[0].push.apply(result_1493177438[0], [46,46,46]);;
    if ((0 < countHEX60gensym378_1493177449)) {
    F.line = 23;
    result_1493177438[0].push.apply(result_1493177438[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177438[0].push.apply(result_1493177438[0], [99,111,110,100,105,116,105,111,110]);;
    F.line = 26;
    result_1493177438[0].push.apply(result_1493177438[0], [58,32]);;
    F.line = 27;
    countHEX60gensym378_1493177449 += 1;
    F.line = 35;
    result_1493177438[0].push.apply(result_1493177438[0], [46,46,46]);;
    F.line = 39;
    result_1493177438[0].push.apply(result_1493177438[0], [41]);;
  framePtr = F.prev;

  return result_1493177438[0];

}

function addQuoted_1493177429(s_1493177431, s_1493177431_Idx, x_1493177432) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177431[s_1493177431_Idx].push.apply(s_1493177431[s_1493177431_Idx], HEX24_1493177435(x_1493177432));;
  framePtr = F.prev;

  
}

function collectionToString_1493177395(x_1493177397, prefix_1493177398, separator_1493177399, suffix_1493177400) {
  var result_1493177401 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_1493177401[0] = nimCopy(null, prefix_1493177398, NTI33554449);
    F.line = 91;
    var firstElement_1493177402 = true;
    Label1: {
      F.line = 92;
      var value_1493177425 = {Field0: [], Field1: null, Field2: null, Field3: null};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1493179294 = 0;
      F.line = 250;
      var L_1493179295 = (x_1493177397).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1493179294 < L_1493179295)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_1493177425 = x_1493177397[i_1493179294];
            if (firstElement_1493177402) {
            F.line = 94;
            firstElement_1493177402 = false;
            }
            else {
              F.line = 96;
            result_1493177401[0].push.apply(result_1493177401[0], separator_1493177399);;
            }
            
            F.line = 105;
            addQuoted_1493177429(result_1493177401, 0, value_1493177425);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1493179294 += 1;
            if (!(((x_1493177397).length == L_1493179295))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_1493177401[0].push.apply(result_1493177401[0], suffix_1493177400);;
  framePtr = F.prev;

  return result_1493177401[0];

}

function HEX24_1493177391(x_1493177393) {
  var result_1493177394 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_1493177394 = nimCopy(null, collectionToString_1493177395(x_1493177393, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_1493177394;

}

function addQuoted_1493177385(s_1493177387, s_1493177387_Idx, x_1493177388) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177387[s_1493177387_Idx].push.apply(s_1493177387[s_1493177387_Idx], HEX24_1493177391(x_1493177388));;
  framePtr = F.prev;

  
}

function HEX24_1493177730(x_1493177732) {
  var result_1493177733 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1493177733[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym400_1493177744 = 0;
    if ((0 < countHEX60gensym400_1493177744)) {
    F.line = 23;
    result_1493177733[0].push.apply(result_1493177733[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177733[0].push.apply(result_1493177733[0], [115,116,114,101,110,103,116,104]);;
    F.line = 26;
    result_1493177733[0].push.apply(result_1493177733[0], [58,32]);;
    F.line = 27;
    countHEX60gensym400_1493177744 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493177733, 0, x_1493177732["Field0"]);
    if ((0 < countHEX60gensym400_1493177744)) {
    F.line = 23;
    result_1493177733[0].push.apply(result_1493177733[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177733[0].push.apply(result_1493177733[0], [97,99,116,105,111,110]);;
    F.line = 26;
    result_1493177733[0].push.apply(result_1493177733[0], [58,32]);;
    F.line = 27;
    countHEX60gensym400_1493177744 += 1;
    F.line = 35;
    result_1493177733[0].push.apply(result_1493177733[0], [46,46,46]);;
    if ((0 < countHEX60gensym400_1493177744)) {
    F.line = 23;
    result_1493177733[0].push.apply(result_1493177733[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493177733[0].push.apply(result_1493177733[0], [99,111,110,100,105,116,105,111,110]);;
    F.line = 26;
    result_1493177733[0].push.apply(result_1493177733[0], [58,32]);;
    F.line = 27;
    countHEX60gensym400_1493177744 += 1;
    F.line = 35;
    result_1493177733[0].push.apply(result_1493177733[0], [46,46,46]);;
    F.line = 39;
    result_1493177733[0].push.apply(result_1493177733[0], [41]);;
  framePtr = F.prev;

  return result_1493177733[0];

}

function addQuoted_1493177724(s_1493177726, s_1493177726_Idx, x_1493177727) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177726[s_1493177726_Idx].push.apply(s_1493177726[s_1493177726_Idx], HEX24_1493177730(x_1493177727));;
  framePtr = F.prev;

  
}

function HEX24_1493177711(self_1493177713) {
  var result_1493177714 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isSome_1493177719(self_1493177713)) {
    F.line = 364;
    F.filename = "options.nim";
    result_1493177714[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    F.line = 365;
    addQuoted_1493177724(result_1493177714, 0, self_1493177713.val);
    F.line = 366;
    result_1493177714[0].push.apply(result_1493177714[0], [41]);;
    }
    else {
      F.line = 371;
      result_1493177714[0] = nimCopy(null, [110,111,110,101,40,71,108,97,115,115,65,98,105,108,105,116,121,41], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_1493177714[0];

}

function addQuoted_1493177699(s_1493177701, s_1493177701_Idx, x_1493177702) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177701[s_1493177701_Idx].push.apply(s_1493177701[s_1493177701_Idx], HEX24_1493177711(x_1493177702));;
  framePtr = F.prev;

  
}

function collectionToString_1493177657(x_1493177659, prefix_1493177660, separator_1493177661, suffix_1493177662) {
  var result_1493177663 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_1493177663[0] = nimCopy(null, prefix_1493177660, NTI33554449);
    F.line = 91;
    var firstElement_1493177664 = true;
    Label1: {
      F.line = 92;
      var value_1493177695 = ({val: {Field0: 0, Field1: null, Field2: null}, has: false});
      F.line = 43;
      F.filename = "iterators.nim";
      var i_1493179299 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_1493177695 = nimCopy(value_1493177695, x_1493177659[i_1493179299], NTI1224736839);
            if (firstElement_1493177664) {
            F.line = 94;
            firstElement_1493177664 = false;
            }
            else {
              F.line = 96;
            result_1493177663[0].push.apply(result_1493177663[0], separator_1493177661);;
            }
            
            F.line = 105;
            addQuoted_1493177699(result_1493177663, 0, value_1493177695);
            if ((4 <= i_1493179299)) {
            F.line = 46;
            F.filename = "iterators.nim";
            break Label2;
            }
            
            F.line = 13;
            i_1493179299 += 1;
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_1493177663[0].push.apply(result_1493177663[0], suffix_1493177662);;
  framePtr = F.prev;

  return result_1493177663[0];

}

function HEX24_1493177652(x_1493177655) {
  var result_1493177656 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "dollars.nim";
    result_1493177656 = nimCopy(null, collectionToString_1493177657(x_1493177655, [91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_1493177656;

}

function addQuoted_1493177640(s_1493177642, s_1493177642_Idx, x_1493177643) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_1493177642[s_1493177642_Idx].push.apply(s_1493177642[s_1493177642_Idx], HEX24_1493177652(x_1493177643));;
  framePtr = F.prev;

  
}

function HEX24_1493175947(x_1493175949) {
  var result_1493175950 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1493175950[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym219_1493175961 = 0;
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [97,98,105,108,105,116,121,84,97,107,101,115]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493175950, 0, x_1493175949.abilityTakes);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [104,97,115,67,97,115,116,108,101,100]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_1493175985(result_1493175950, 0, x_1493175949.hasCastled);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [99,111,109,109,117,110,105,115,116]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_1493175985(result_1493175950, 0, x_1493175949.communist);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [100,110,97]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_1493176498(result_1493175950, 0, x_1493175949.dna);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [116,114,97,110,115,102,111,114,109,115]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 35;
    result_1493175950[0].push.apply(result_1493175950[0], [46,46,46]);;
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [119,97,108,108,101,116]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_1493177257(result_1493175950, 0, x_1493175949.wallet);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [98,117,121,115]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_1493177385(result_1493175950, 0, x_1493175949.buys);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [112,105,101,99,101,115,83,111,108,100]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493175950, 0, x_1493175949.piecesSold);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [112,105,101,99,101,115,83,111,108,100,84,104,105,115,84,117,114,110]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_838862213(result_1493175950, 0, x_1493175949.piecesSoldThisTurn);
    if ((0 < countHEX60gensym219_1493175961)) {
    F.line = 23;
    result_1493175950[0].push.apply(result_1493175950[0], [44,32]);;
    }
    
    F.line = 25;
    result_1493175950[0].push.apply(result_1493175950[0], [103,108,97,115,115]);;
    F.line = 26;
    result_1493175950[0].push.apply(result_1493175950[0], [58,32]);;
    F.line = 27;
    countHEX60gensym219_1493175961 += 1;
    F.line = 33;
    addQuoted_1493177640(result_1493175950, 0, x_1493175949.glass);
    F.line = 39;
    result_1493175950[0].push.apply(result_1493175950[0], [41]);;
  framePtr = F.prev;

  return result_1493175950[0];

}

function HEX3Aanonymous_1493174891(piece_1493174892, b_1493174893, state_1493174894) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1773;
    F.filename = "powers.nim";
    state_1493174894.Field1[chckIndx(piece_1493174892.color, 0, (state_1493174894.Field1).length - 1)].piecesSold = addInt(state_1493174894.Field1[chckIndx(piece_1493174892.color, 0, (state_1493174894.Field1).length - 1)].piecesSold, 1);
    F.line = 1774;
    state_1493174894.Field1[chckIndx(piece_1493174892.color, 0, (state_1493174894.Field1).length - 1)].piecesSoldThisTurn = addInt(state_1493174894.Field1[chckIndx(piece_1493174892.color, 0, (state_1493174894.Field1).length - 1)].piecesSoldThisTurn, 1);
    F.line = 1775;
    rawEcho(HEX24_1493175947(state_1493174894.Field1[chckIndx(piece_1493174892.color, 0, (state_1493174894.Field1).length - 1)]));
    F.line = 1776;
    b_1493174893[chckIndx(piece_1493174892.tile.Field1, 0, (b_1493174893).length - 1)][chckIndx(piece_1493174892.tile.Field0, 0, (b_1493174893[chckIndx(piece_1493174892.tile.Field1, 0, (b_1493174893).length - 1)]).length - 1)] = nimCopy(b_1493174893[chckIndx(piece_1493174892.tile.Field1, 0, (b_1493174893).length - 1)][chckIndx(piece_1493174892.tile.Field0, 0, (b_1493174893[chckIndx(piece_1493174892.tile.Field1, 0, (b_1493174893).length - 1)]).length - 1)], pieceCopy_1224737661(air_1275068591, b_1493174893[chckIndx(piece_1493174892.tile.Field1, 0, (b_1493174893).length - 1)][chckIndx(piece_1493174892.tile.Field0, 0, (b_1493174893[chckIndx(piece_1493174892.tile.Field1, 0, (b_1493174893).length - 1)]).length - 1)].index, piece_1493174892.tile, 6, 1, 0, 0, [], [], air_1275068591.onMove, air_1275068591.onTake, air_1275068591.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493177780(piece_1493177781, board_1493177782, s_1493177783) {
  var result_1493177784 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1783;
    F.filename = "powers.nim";
    result_1493177784 = !((piece_1493177781.item == 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493177784;

}

function HEX3Aanonymous_1493177775(piece_1493177776, b_1493177777, state_1493177778) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1779;
    F.filename = "powers.nim";
    state_1493177778.Field1[chckIndx(1, 0, (state_1493177778.Field1).length - 1)].piecesSoldThisTurn = 0;
    F.line = 1780;
    state_1493177778.Field1[chckIndx(0, 0, (state_1493177778.Field1).length - 1)].piecesSoldThisTurn = 0;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493177799(side_1493177800, __1493177801, b_1493177802, s_1493177803) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1800;
    F.filename = "powers.nim";
    s_1493177803.Field1[chckIndx(side_1493177800, 0, (s_1493177803.Field1).length - 1)].buys.push({Field0: [83,101,108,108], Field1: createPieceMarket_1493177790((-4), 1), Field2: HEX3Aanonymous_1493174891, Field3: HEX3Aanonymous_1493177780});;
    F.line = 1801;
    buff_1493172242(0, side_1493177800, b_1493177802, s_1493177803, [], [], [HEX3Aanonymous_1493177775], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function getMoney_1526726671(side_1526726672, s_1526726673) {
  var result_1526726674 = 0;

  var F = {procname: "capitalism.getMoney", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 10;
    F.filename = "capitalism.nim";
    var wallet_1526726675 = nimCopy(null, s_1526726673.Field1[chckIndx(side_1526726672, 0, (s_1526726673.Field1).length - 1)].wallet, NTI1224736866);
    if (isSome_1409289449(wallet_1526726675)) {
    F.line = 12;
    result_1526726674 = get_1409289543(wallet_1526726675);
    break BeforeRet;
    }
    else {
      F.line = 14;
      result_1526726674 = (-1);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1526726674;

}

function createTaxes_1493177818(rate_1493177819) {
    
function HEX3Aanonymous_1493177821(piece_1493177822, b_1493177823, state_1493177824) {
      var F = {procname: "createTaxes.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1810;
        F.filename = "powers.nim";
        var tax_1493177825 = (((getMoney_1526726671(piece_1493177822.color, state_1493177824) * rate_1493177819)) | 0);
        if ((tax_1493177825 == 0)) {
        F.line = 1811;
        tax_1493177825 = addInt(tax_1493177825, 1);
        }
        
        F.line = 1812;
        addMoney_1526726698(piece_1493177822.color, negInt(tax_1493177825), state_1493177824);
      framePtr = F.prev;

      
    }

  var result_1493177820 = null;

  var F = {procname: "powers.createTaxes", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1809;
    F.filename = "powers.nim";
    result_1493177820 = HEX3Aanonymous_1493177821;
  framePtr = F.prev;

  return result_1493177820;

}

function HEX3Aanonymous_1493177831(side_1493177832, __1493177833, b_1493177834, s_1493177835) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1827;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(0, side_1493177832, b_1493177834, s_1493177835, moneyForTakeAll_1493174597, false);
    F.line = 1828;
    addOnEndTurnTransform_1493172463(0, side_1493177832, b_1493177834, s_1493177835, moneyForTakeAll_1493174597, false);
    F.line = 1829;
    buff_1493172242(0, side_1493177832, b_1493177834, s_1493177835, [], [], [createTaxes_1493177818(0.15)], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493177900(piece_1493177901, __1493177902, state_1493177903) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1919;
    F.filename = "powers.nim";
    var currentMoney_1493177904 = getMoney_1526726671(piece_1493177901.color, state_1493177903);
    F.line = 1920;
    var next_1493177905 = subInt(mulInt(currentMoney_1493177904, 2), currentMoney_1493177904);
    F.line = 1921;
    addMoney_1526726698(piece_1493177901.color, next_1493177905, state_1493177903);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493177907(side_1493177908, __1493177909, b_1493177910, s_1493177911) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1933;
    F.filename = "powers.nim";
    buff_1493172242(0, side_1493177908, b_1493177910, s_1493177911, [], [], [HEX3Aanonymous_1493177900], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function createSuperLottery_1493177870() {
    
function HEX3Aanonymous_1493177873(piece_1493177874, board_1493177875, state_1493177876) {
      var F = {procname: "createSuperLottery.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (!((piece_1493177874.timesMoved == lastTimesMoved_1493177872))) {
        F.line = 1895;
        F.filename = "powers.nim";
        randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493177874.tile.Field1), mulInt(100, piece_1493177874.tile.Field0)), state_1493177876.Field0.randSeed)));
        F.line = 1896;
        var ticket_1493177877 = rand_1392509064(100);
        if ((ticket_1493177877 == 42)) {
        F.line = 1898;
        addMoney_1526726698(piece_1493177874.color, 10, state_1493177876);
        Label1: {
          F.line = 182;
          F.filename = "piece.nim";
          var xHEX60gensym410_1493177882 = null;
          F.line = 249;
          F.filename = "iterators.nim";
          var i_1493179302 = 0;
          F.line = 250;
          var L_1493179303 = (piece_1493177874.onPromote).length;
          Label2: {
            F.line = 251;
              Label3: while (true) {
              if (!(i_1493179302 < L_1493179303)) break Label3;
                F.line = 1899;
                F.filename = "powers.nim";
                xHEX60gensym410_1493177882 = piece_1493177874.onPromote[chckIndx(i_1493179302, 0, (piece_1493177874.onPromote).length - 1)];
                F.line = 183;
                F.filename = "piece.nim";
                xHEX60gensym410_1493177882(piece_1493177874, board_1493177875, state_1493177876);
                if (piece_1493177874.promoted) {
                F.line = 184;
                break Label1;
                }
                
                F.line = 13;
                F.filename = "iterators.nim";
                i_1493179302 += 1;
                if (!(((piece_1493177874.onPromote).length == L_1493179303))) {
                F.line = 254;
                failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        }
        
        }
        
        F.line = 1900;
        F.filename = "powers.nim";
        lastTimesMoved_1493177872 = piece_1493177874.timesMoved;
      framePtr = F.prev;

      
    }

  var result_1493177871 = null;

  var F = {procname: "powers.createSuperLottery", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1887;
    F.filename = "powers.nim";
    var lastTimesMoved_1493177872 = 0;
    F.line = 1893;
    result_1493177871 = HEX3Aanonymous_1493177873;
  framePtr = F.prev;

  return result_1493177871;

}

function HEX3Aanonymous_1493177885(side_1493177886, __1493177887, b_1493177888, s_1493177889) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1912;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(3, side_1493177886, b_1493177888, s_1493177889, createSuperLottery_1493177870, false);
  framePtr = F.prev;

  
}

function moneyForTakeSingle_1493174615() {
    
function HEX3Aanonymous_1493174618(piece_1493174619, b_1493174620, state_1493174621) {
      var F = {procname: "moneyForTakeSingle.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if ((lastPiecesTaken_1493174617 < piece_1493174619.piecesTaken)) {
        F.line = 1601;
        F.filename = "powers.nim";
        addMoney_1526726698(piece_1493174619.color, mulInt(subInt(piece_1493174619.piecesTaken, lastPiecesTaken_1493174617), 3), state_1493174621);
        }
        
        F.line = 1602;
        lastPiecesTaken_1493174617 = piece_1493174619.piecesTaken;
      framePtr = F.prev;

      
    }

  var result_1493174616 = null;

  var F = {procname: "powers.moneyForTakeSingle", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1598;
    F.filename = "powers.nim";
    var lastPiecesTaken_1493174617 = 0;
    F.line = 1599;
    result_1493174616 = HEX3Aanonymous_1493174618;
  framePtr = F.prev;

  return result_1493174616;

}

function HEX3Aanonymous_1493174652(side_1493174653, __1493174654, b_1493174655, s_1493174656) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1631;
    F.filename = "powers.nim";
    addOnEndTurnTransform_1493172463(0, side_1493174653, b_1493174655, s_1493174656, moneyForTakeSingle_1493174615, false);
    F.line = 1632;
    addOnEndTurnTransform_1493172463(0, side_1493174653, b_1493174655, s_1493174656, moneyForTakeSingle_1493174615, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174060(side_1493174061, __1493174062, b_1493174063, s_1493174064) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1243;
    F.filename = "powers.nim";
    buff_1493172242(6, side_1493174061, b_1493174063, s_1493174064, [], [], [HEX3Aanonymous_1493173916], true, false, [], null, null, null, true);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949625(board_1509949626, p_1509949627) {
  var result_1509949628 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 122;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968(1, 2), false, true);
    F.line = 123;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968((-1), 2), false, true);
    F.line = 124;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968(2, 1), false, true);
    F.line = 125;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968(2, (-1)), false, true);
    F.line = 126;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968(1, (-2)), false, true);
    F.line = 127;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968((-1), (-2)), false, true);
    F.line = 128;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968((-2), 1), false, true);
    F.line = 129;
    var _ = addIfTake_1291845739(result_1509949628, 0, board_1509949626, p_1509949627, p_1509949627.tile, shooterFactory_1308622968((-2), (-1)), false, true);
  framePtr = F.prev;

  return result_1509949628[0];

}

function HEX3Aanonymous_1493173119(side_1493173120, viewSide_1493173121, b_1493173122, s_1493173123) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 524;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493173120, b_1493173122, s_1493173123, [], [HEX3Aanonymous_1509949625], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1509949630(board_1509949631, p_1509949632) {
  var result_1509949633 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 132;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968(1, 3), false, true);
    F.line = 133;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968((-1), 3), false, true);
    F.line = 134;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968(3, 1), false, true);
    F.line = 135;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968(3, (-1)), false, true);
    F.line = 136;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968(1, (-3)), false, true);
    F.line = 137;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968((-1), (-3)), false, true);
    F.line = 138;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968((-3), 1), false, true);
    F.line = 139;
    var _ = addIfTake_1291845739(result_1509949633, 0, board_1509949631, p_1509949632, p_1509949632.tile, shooterFactory_1308622968((-3), (-1)), false, true);
  framePtr = F.prev;

  return result_1509949633[0];

}

function HEX3Aanonymous_1493173142(side_1493173143, viewSide_1493173144, b_1493173145, s_1493173146) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 544;
    F.filename = "powers.nim";
    buff_1493172242(1, side_1493173143, b_1493173145, s_1493173146, [], [HEX3Aanonymous_1509949630], [], false, false, [], null, null, null, false);
  framePtr = F.prev;

  
}
var F = {procname: "module powers", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
framePtr = F;
F.line = 2333;
F.filename = "powers.nim";
registerPower_1442841404(empress_1493172539);
F.line = 2334;
registerPower_1442841404(altEmpress_1493172553);
F.line = 2335;
registerPower_1442841404(mysteriousSwordsmanLeft_1493172741);
F.line = 2336;
registerPower_1442841404(mysteriousSwordsmanRight_1493172798);
F.line = 2337;
registerPower_1442841404(developed_1493172808);
F.line = 2338;
registerPower_1442841404(stepOnMe_1493172834);
F.line = 2339;
registerPower_1442841404(illegalFormationBL_1493172867);
F.line = 2340;
registerPower_1442841404(illegalFormationBR_1493172878);
F.line = 2341;
registerPower_1442841404(illegalFormationRL_1493172845);
F.line = 2342;
registerPower_1442841404(illegalFormationRR_1493172856);
F.line = 2343;
registerPower_1442841404(putInTheWork_1493172900);
F.line = 2344;
registerPower_1442841404(wanderingRoninLeft_1493172953);
F.line = 2345;
registerPower_1442841404(wanderingRoninRight_1493173006);
F.line = 2346;
registerPower_1442841404(archBishops_1493173062);
F.line = 2347;
registerPower_1442841404(werewolves_1493173048);
F.line = 2348;
registerPower_1442841404(giraffe_1493173076);
F.line = 2349;
registerPower_1442841404(sacrifice_1493173192);
F.line = 2350;
registerPower_1442841404(calvary_1493173091);
F.line = 2351;
registerPower_1442841404(backStep_1493173207);
F.line = 2352;
registerPower_1442841404(headStart_1493173222);
F.line = 2353;
registerPower_1442841404(queenTrade_1493173234);
F.line = 2354;
registerPower_1442841404(lesbianPride_1493173284);
F.line = 2355;
registerPower_1442841404(knightChargePower_1493173429);
F.line = 2356;
registerPower_1442841404(nightRider_1493173540);
F.line = 2357;
registerPower_1442841404(desegregation_1493173554);
F.line = 2358;
registerPower_1442841404(concubine_1493173616);
F.line = 2359;
registerPower_1442841404(reinforcements_1493173641);
F.line = 2360;
registerPower_1442841404(shotgunKing_1493173669);
F.line = 2361;
registerPower_1442841404(coward_1493173720);
F.line = 2363;
registerPower_1442841404(lanceLeft_1493173859);
F.line = 2364;
registerPower_1442841404(lanceRight_1493173802);
F.line = 2365;
registerPower_1442841404(drunkKnights_1493173989);
F.line = 2366;
registerPower_1442841404(alcoholism_1493173999);
F.line = 2368;
registerPower_1442841404(slumdogMillionaire_1493174369);
F.line = 2369;
registerPower_1442841404(stupidPower_1493174391);
F.line = 2370;
registerPower_1442841404(conversion_1493174427);
F.line = 2371;
registerPower_1442841404(americanDream_1493174463);
F.line = 2372;
registerPower_1442841404(sleeperAgent_1493174516);
F.line = 2373;
registerPower_1442841404(capitalismPower_1493174651);
F.line = 2374;
registerPower_1442841404(communism_1493178744);
F.line = 2376;
registerPower_1442841404(skyGlass_1493178070);
F.line = 2377;
registerPower_1442841404(zeroGlass_1493178082);
F.line = 2378;
registerSynergy_1442840657({Field0: {name: [71,108,97,115,115,58,32,66,97,110,107,114,117,112,116,99,121], technicalName: [], synergy: false, tier: 2, rarity: 8, description: makeNimstrLit("On your turn, if you have only 0 dollars, instead of moving you can choose 3 pieces to each cast Bankruptcy on  \x0A                    any non-king tiles. Any piece on these tiles will die if the cast completes. Bankruptcy cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178186, index: (-1), priority: 0}, Field1: 8, Field2: [[71,108,97,115,115,58,32,90,101,114,111], [67,97,112,105,116,97,108,105,115,109]], Field3: [[71,108,97,115,115,58,32,90,101,114,111]]}, false, false);
F.line = 2379;
registerPower_1442841404(steelGlass_1493178094);
F.line = 2380;
registerPower_1442841404(reverieGlass_1493178428);
F.line = 2381;
registerPower_1442841404(daybreakGlass_1493178474);
F.line = 2383;
registerSynergy_1442840657({Field0: {name: [65,110,105,109,101,32,66,97,116,116,108,101], technicalName: [], synergy: false, tier: 2, rarity: 0, description: makeNimstrLit("Your board is imbued with the power of anime. You feel a odd sense of regret. Or is it guilt?"), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1493173092, index: (-1), priority: 5}, Field1: 32, Field2: [[77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110]], Field3: [[77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], [65,110,105,109,101,32,66,97,116,116,108,101]]}, false, false);
F.line = 2384;
registerSynergy_1442840657({Field0: {name: [75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], technicalName: [], synergy: false, tier: 2, rarity: 4, description: [67,72,65,82,71,69,33,32,89,111,117,114,32,107,110,105,103,104,116,115,32,115,116,97,114,116,32,51,32,116,105,108,101,115,32,97,104,101,97,100,46], icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173408, index: (-1), priority: 20}, Field1: 16, Field2: [[67,97,108,118,97,114,121]], Field3: []}, false, false);
F.line = 2385;
registerSynergy_1442840657({Field0: {name: [67,114,105,109,105,110,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [], synergy: false, tier: 0, rarity: 0, description: makeNimstrLit("I guess the rules didn\'t get to you. Your pawns above both knights and both rooks swap places with those pieces."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173466, index: (-1), priority: 20}, Field1: 12, Field2: [[73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]], Field3: [[73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]]}, false, false);
F.line = 2386;
registerSynergy_1442840657({Field0: {name: [76,105,110,101,98,97,99,107,101,114,115], technicalName: [], synergy: false, tier: 2, rarity: 0, description: makeNimstrLit("Your pawns learn to fight like men. They can take one spaces ahead too."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173493, index: (-1), priority: 15}, Field1: 0, Field2: [[80,117,116,32,105,110,32,116,104,101,32,119,111,114,107,33], [72,101,97,100,115,116,97,114,116]], Field3: []}, false, false);
F.line = 2387;
registerSynergy_1442840657({Field0: {name: [72,111,108,121,32,66,105,115,104,111,112,115], technicalName: [], synergy: false, tier: 2, rarity: 8, description: [71,111,100,32,104,97,115,32,98,108,101,115,115,101,100,32,121,111,117,114,32,98,105,115,104,111,112,115,46,32], icon: [99,114,111,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493173555, index: (-1), priority: 15}, Field1: 8, Field2: [[65,114,99,104,98,105,115,104,111,112,115], [72,111,108,121]], Field3: [[65,114,99,104,98,105,115,104,111,112,115]]}, false, false);
F.line = 2388;
registerSynergy_1442840657({Field0: {name: [66,111,117,110,116,121,32,72,117,110,116,101,114], technicalName: [], synergy: false, tier: 0, rarity: 0, description: makeNimstrLit("It\'s hard to make a living these days. If your king takes 3 pieces, you automatically win."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173681, index: (-1), priority: 15}, Field1: 16, Field2: [[83,104,111,116,103,117,110,32,75,105,110,103]], Field3: []}, false, false);
F.line = 2389;
registerSynergy_1442840657({Field0: {name: [71,111,100,39,115,32,68,105,115,99,105,112,108,101], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("Your bishop has now seen god. When it takes, it has a 30% chance to convert it to your color. \x0A                    When this happens, your bishop swaps places with it instead of taking it."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174428, index: (-1), priority: 15}, Field1: 16, Field2: [[67,111,110,118,101,114,115,105,111,110], [72,111,108,121]], Field3: [[67,111,110,118,101,114,115,105,111,110]]}, false, false);
F.line = 2390;
registerSynergy_1442840657({Field0: {name: [68,105,118,105,110,101,32,87,105,110,100], technicalName: [], synergy: false, tier: 1, rarity: 8, description: makeNimstrLit("The divine wind briskly brushes your back. Your lances will take forward while sky is casting."), icon: [108,97,110,99,101,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178113, index: (-1), priority: 15}, Field1: 12, Field2: [[71,108,97,115,115,58,32,83,107,121], [75,97,109,105,107,97,122,101]], Field3: []}, false, false);
F.line = 2391;
registerSynergy_1442840657({Field0: {name: [83,117,112,101,114,32,80,97,119,110], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [89,111,117,32,104,97,118,101,32,105,110,115,97,110,101,32,112,97,119,110,115,46,32,80,108,101,97,115,101,32,100,111,110,39,116,32,115,97,99,114,105,102,105,99,101,32,116,104,101,109,46], icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173235, index: (-1), priority: 15}, Field1: 0, Field2: [[66,97,99,107,115,116,101,112], [72,101,97,100,115,116,97,114,116]], Field3: [[66,97,99,107,115,116,101,112], [72,101,97,100,115,116,97,114,116]]}, true, false);
F.line = 2392;
registerSynergy_1442840657({Field0: {name: [81,117,101,101,110,39,115,32,87,114,97,116,104], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [87,104,121,32,109,117,115,116,32,115,104,101,32,100,105,101,63], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173285, index: (-1), priority: 1}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [81,117,101,101,110,32,84,114,97,100,101]], Field3: [[76,101,115,98,105,97,110,32,80,114,105,100,101]]}, true, false);
F.line = 2393;
registerSynergy_1442840657({Field0: {name: [81,117,101,101,110,39,115,32,87,114,97,116,104], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [87,104,121,32,109,117,115,116,32,115,104,101,32,100,105,101,63], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173285, index: (-1), priority: 1}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field3: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]]}, true, false);
F.line = 2394;
registerSynergy_1442840657({Field0: {name: [66,97,116,116,108,101,32,70,111,114,109,97,116,105,111,110,33], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [82,101,97,108,32,69,115,116,97,116,101,32,105,115,32,103,111,105,110,103,32,99,114,97,122,121,32,119,105,116,104,32,104,111,119,32,100,101,118,101,108,111,112,101,100,32,116,104,101,32,98,111,97,114,100,32,105,115,46], icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173443, index: (-1), priority: 20}, Field1: 0, Field2: [[75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], [68,101,118,101,108,111,112,101,100]], Field3: [[68,101,118,101,108,111,112,101,100]]}, true, false);
F.line = 2395;
registerSynergy_1442840657({Field0: {name: [70,97,108,108,101,110,32,81,117,101,101,110,39,115,32,87,114,97,116,104], technicalName: [], synergy: false, tier: 3, rarity: 0, description: makeNimstrLit("Why must she die? They will suffer. They will suffer. They will suffer. \x0A                    They will suffer. They will suffer. They will suffer. They will suffer. \x0A                    They will suffer. They will suffer. They will suffer. They will suffer.\x0A                    They will suffer. They will suffer. They will suffer. They will suffer."), icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173317, index: (-1), priority: 0}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [81,117,101,101,110,32,84,114,97,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field3: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]]}, true, false);
F.line = 2396;
registerSynergy_1442840657({Field0: {name: [66,97,110,100,97,105,100], technicalName: [], synergy: false, tier: 3, rarity: 0, description: makeNimstrLit("It turns out that calvary plus giraffe is an automatic checkmate for white, \x0A                    so I\'m making the giraffes start one tile back. Sorry."), icon: [103,105,114,97,102,102,101,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174249, index: (-1), priority: 26}, Field1: 0, Field2: [[75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], [71,105,114,97,102,102,101]], Field3: []}, true, false);
F.line = 2397;
registerSynergy_1442840657({Field0: {name: [66,111,117,110,116,121,32,72,117,110,116,101,114,32,78,101,114,102], technicalName: [], synergy: false, tier: 0, rarity: 0, description: makeNimstrLit("Yeah, 3 pieces is way too easy for our lesbian queens, so now it\'s 7 pieces. You got this!"), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174295, index: (-1), priority: 15}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [66,111,117,110,116,121,32,72,117,110,116,101,114]], Field3: [[66,111,117,110,116,121,32,72,117,110,116,101,114]]}, true, false);
F.line = 2398;
registerSynergy_1442840657({Field0: {name: [110,105,103,104,101,116,114,105,101,100,100,101,114], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [110,105,103,104,101,116,114,105,101,100,100,101,114,46,63], icon: [110,105,103,104,116,114,105,100,101,114,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174000, index: (-1), priority: 17}, Field1: 0, Field2: [[68,114,117,110,107,32,75,110,105,103,104,116,115], [78,105,103,104,116,114,105,100,101,114]], Field3: []}, true, false);
F.line = 2399;
registerSynergy_1442840657({Field0: {name: [110,105,103,104,101,116,114,105,101,100,100,101,114], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [110,105,103,104,101,116,114,105,101,100,100,101,114,46,63], icon: [110,105,103,104,116,114,105,100,101,114,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174000, index: (-1), priority: 17}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [78,105,103,104,116,114,105,100,101,114]], Field3: []}, true, false);
F.line = 2400;
registerSynergy_1442840657({Field0: {name: [67,108,97,114,105,116,121], technicalName: [], synergy: false, tier: 3, rarity: 0, description: makeNimstrLit("You now see things in a whole new light. \x0A                It\'s not regret as much as self-disappointment."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493178540, index: (-1), priority: 15}, Field1: 0, Field2: [[71,108,97,115,115,58,32,68,97,121,98,114,101,97,107], [67,111,110,99,117,98,105,110,101]], Field3: []}, true, false);
F.line = 2401;
registerSynergy_1442840657({Field0: {name: [77,97,115,116,101,114,32,71,108,97,115,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [89,111,117,32,104,97,118,101,32,103,111,111,100,32,116,97,115,116,101,46,32,65,108,108,32,103,108,97,115,115,101,115,32,99,97,110,32,98,101,32,99,97,115,116,32,111,110,101,32,109,111,114,101,32,116,105,109,101,46], icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178559, index: (-1), priority: 30}, Field1: 0, Field2: [[71,108,97,115,115,58,32,83,107,121], [71,108,97,115,115,58,32,82,101,118,101,114,105,101], [71,108,97,115,115,58,32,90,101,114,111], [71,108,97,115,115,58,32,83,116,101,101,108], [71,108,97,115,115,58,32,68,97,121,98,114,101,97,107]], Field3: []}, true, false);
F.line = 2402;
registerSynergy_1442840657({Field0: {name: [77,97,115,116,101,114,32,71,108,97,115,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [89,111,117,32,104,97,118,101,32,103,111,111,100,32,116,97,115,116,101,46,32,65,108,108,32,103,108,97,115,115,101,115,32,99,97,110,32,98,101,32,99,97,115,116,32,111,110,101,32,109,111,114,101,32,116,105,109,101,46], icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493178559, index: (-1), priority: 30}, Field1: 0, Field2: [[71,108,97,115,115,58,32,83,107,121], [71,108,97,115,115,58,32,82,101,118,101,114,105,101], [71,108,97,115,115,58,32,66,97,110,107,114,117,112,116,99,121], [71,108,97,115,115,58,32,83,116,101,101,108], [71,108,97,115,115,58,32,68,97,121,98,114,101,97,107]], Field3: []}, true, false);
F.line = 2403;
registerSynergy_1442840657({Field0: {name: [78,117,108,108], technicalName: [], synergy: false, tier: 0, rarity: 8, description: makeNimstrLit("The tautotology is empty. \x0A                    The river flows. \x0A                    Take off thy mask and feel the world. \x0A                    Where is man? \x0A                    Where is his kin? \x0A                    When sight is white,\x0A                    when does it begin?\x0A                    Golden glimpses sunder position. \x0A                    Beauty discovers in ebb and in flow. \x0A                    Falling is height, Loss is full.\x0A                    The table must be full for the feast.\x0A                    Capture, take, collapse these pieces. \x0A                    Destroy it, destroy thyself, destroy thy world.\x0A                    Feel it. \x0A                    "), icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493178745, index: 0, priority: 10}, Field1: 0, Field2: [[67,97,112,105,116,97,108,105,115,109], [67,111,109,117,110,105,115,109]], Field3: [[67,111,109,117,110,105,115,109], [67,97,112,105,116,97,108,105,115,109], [67,97,112,105,116,97,108,105,115,109,32,73,73], [67,97,112,105,116,97,108,105,115,109,32,73,73,73], [67,97,112,105,116,97,108,105,115,109,32,73,86], [67,97,112,105,116,97,108,105,115,109,32,86], [67,97,112,105,116,97,108,105,115,109,32,77,77], [83,108,117,109,100,111,103,32,66,105,108,108,105,111,110,97,105,114,101], [71,108,97,115,115,58,32,66,97,110,107,114,117,112,116,99,121], [66,111,117,110,116,121]]}, true, false);
F.line = 2405;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,73,58,32,77,111,118,101,32,85,112], synergy: false, tier: 0, rarity: 0, description: makeNimstrLit("Money is pretty neat right? You can spend 8 dollars to move a piece one tile forward. It cannot take with this action."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174780, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2406;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,73,58,32,77,111,118,101,32,66,97,99,107], synergy: false, tier: 0, rarity: 0, description: makeNimstrLit("Money is pretty neat right? You can spend 7 dollars to move a piece one tile backwards. It cannot take with this action."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174823, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2407;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,73,58,32,73,110,99,111,109,101], synergy: false, tier: 0, rarity: 0, description: [72,101,114,101,44,32,104,97,118,101,32,49,48,32,100,111,108,108,97,114,115], icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174850, index: (-1), priority: 35}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2408;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,73,73,58,32,85,112,103,114,97,100,101,32,75,110,105,103,104,116], synergy: false, tier: 1, rarity: 0, description: makeNimstrLit("Money can be used in exchange for goods and services. You can spend 8 dollars to give a piece the movement of a knight.\x0A                    This upgrade is 30 dollars more expensive for the king. The upgraded piece still cannot take like a knight."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174857, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2409;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,73,73,58,32,85,112,103,114,97,100,101,32,71,105,114,97,102,102,101], synergy: false, tier: 1, rarity: 0, description: makeNimstrLit("Money can be used in exchange for goods and services. You can spend 8 dollars to give a piece the movement of a giraffe. \x0A                    This upgrade is 30 dollars more expensive for the king. The upgraded piece still cannot take like a giraffe."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493174874, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2410;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,86], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,86,58,32,34,73,110,102,108,97,116,105,111,110,34], synergy: false, tier: 1, rarity: 0, description: makeNimstrLit("More money equals more money! You get 3 more dollars for taking a piece. "), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493177842, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2411;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,86], technicalName: [67,97,112,105,116,97,108,105,115,109,32,73,86,58,32,72,97,110,100,111,117,116,115], synergy: false, tier: 1, rarity: 0, description: makeNimstrLit("What if everyone had money? Then everyone would have money! You get 1 dollar for taking a piece."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493177863, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2412;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,86], technicalName: [67,97,112,105,116,97,108,105,115,109,32,86,58,32,83,101,108,108], synergy: false, tier: 1, rarity: 0, description: makeNimstrLit("Who needs these pieces? AFUERA! You can sell a piece for 4 dollars. Each subsequent piece gives one dollar less. "), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493177799, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2413;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,86], technicalName: [67,97,112,105,116,97,108,105,115,109,32,86,58,32,84,97,120,101,115], synergy: false, tier: 2, rarity: 0, description: makeNimstrLit("Nothing in the world is certain except for Taxes and one other thing. \x0A                    You gain 6 more dollars for taking a piece, but you lose 15% every turn."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493177831, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: []}, false, false);
F.line = 2414;
registerSynergy_1442840657({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,77,77], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,79,32,84,72,69,32,77,79,79,78,33,33,33,33], icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1493177907, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109], [67,97,112,105,116,97,108,105,115,109,32,73,73], [67,97,112,105,116,97,108,105,115,109,32,73,73,73], [67,97,112,105,116,97,108,105,115,109,32,73,86], [67,97,112,105,116,97,108,105,115,109,32,86]], Field3: []}, true, false);
F.line = 2415;
registerSynergy_1442840657({Field0: {name: [83,108,117,109,100,111,103,32,66,105,108,108,105,111,110,97,105,114,101], technicalName: [], synergy: false, tier: 0, rarity: 0, description: makeNimstrLit("Have you seen the movie Slumdog Millionaire? It\'s kind of like that but more. \x0A                    Your pawns have a 2% chance of promoting whenever they move. When this happens, you get 10 dollars."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493177885, index: (-1), priority: 15}, Field1: 8, Field2: [[67,97,112,105,116,97,108,105,115,109], [83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101]], Field3: [[83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101]]}, true, false);
F.line = 2416;
registerSynergy_1442840657({Field0: {name: [66,111,117,110,116,121], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [80,105,101,99,101,115,32,87,97,110,116,101,100,58,32,68,101,97,100,32,111,114,32,65,108,105,118,101,46,32,66,111,117,110,116,121,58,32,54,32,100,111,108,108,97,114,115,46], icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174652, index: (-1), priority: 15}, Field1: 0, Field2: [[66,111,117,110,116,121,32,72,117,110,116,101,114], [67,97,112,105,116,97,108,105,115,109]], Field3: []}, true, false);
F.line = 2417;
registerSynergy_1442840657({Field0: {name: [66,111,117,110,116,121], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [80,105,101,99,101,115,32,87,97,110,116,101,100,58,32,68,101,97,100,32,111,114,32,65,108,105,118,101,46,32,66,111,117,110,116,121,58,32,54,32,100,111,108,108,97,114,115,46], icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174652, index: (-1), priority: 15}, Field1: 0, Field2: [[66,111,117,110,116,121,32,72,117,110,116,101,114,32,78,101,114,102], [67,97,112,105,116,97,108,105,115,109]], Field3: []}, true, false);
F.line = 2419;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [75,97,109,105,107,97,122,101], [72,101,97,100,115,116,97,114,116], [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2420;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [66,97,99,107,115,116,101,112], [75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], [69,109,112,114,101,115,115]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2421;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], [83,117,112,101,114,32,80,97,119,110], [69,109,112,114,101,115,115]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2422;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [83,116,101,112,32,111,110,32,109,101], [67,111,119,97,114,100], [83,104,111,116,103,117,110,32,75,105,110,103]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2423;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [82,101,105,110,102,111,114,99,101,109,101,110,116,115], [69,109,112,114,101,115,115], [71,105,114,97,102,102,101], [87,101,114,101,119,111,108,118,101,115]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2424;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [65,110,105,109,101,32,66,97,116,116,108,101], [68,101,118,101,108,111,112,101,100], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110], [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2425;
registerSynergy_1442840657({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493174060, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [76,105,110,101,98,97,99,107,101,114,115], [78,105,103,104,116,114,105,100,101,114], [68,101,115,101,103,114,101,103,97,116,105,111,110,32,97,110,100,32,73,110,116,101,103,114,97,116,105,111,110], [72,111,108,121]], Field3: [[65,108,99,111,104,111,108,105,115,109]]}, true, false);
F.line = 2427;
registerSynergy_1442840657({Field0: {name: [77,97,115,111,99,104,105,115,116,32,69,109,112,114,101,115,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [78,79,78,69], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173119, index: (-1), priority: 15}, Field1: 0, Field2: [[69,109,112,114,101,115,115], [83,116,101,112,32,111,110,32,109,101]], Field3: []}, true, true);
F.line = 2428;
registerSynergy_1442840657({Field0: {name: [77,97,115,111,99,104,105,115,116,32,69,109,112,114,101,115,115], technicalName: [], synergy: false, tier: 3, rarity: 0, description: [78,79,78,69], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1493173142, index: (-1), priority: 15}, Field1: 0, Field2: [[69,109,112,114,101,115,115], [83,116,101,112,32,111,110,32,109,101]], Field3: []}, true, true);
framePtr = F.prev;
var F = {procname: "module powers", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module store", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
framePtr = F;
F.line = 5;
F.filename = "store.nim";
    function incrementWins(item) {
        let last = JSON.parse(localStorage.getItem(item));
        last.wins += 1;
        localStorage.setItem(item, JSON.stringify(last));
    }

    function incrementLosses(item) {
        let last = JSON.parse(localStorage.getItem(item));
        last.losses += 1;
        localStorage.setItem(item, JSON.stringify(last));
    }

framePtr = F.prev;
var F = {procname: "module store", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module glass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module glass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module editdistance", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/editdistance.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module editdistance", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/editdistance.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function none_520093864() {
  var result_520093871 = ({val: 0, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_520093871;

}

function newSeq_1442840931(len_1442840933) {
  var result_1442840934 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1442840934 = new Array(len_1442840933); for (var i = 0 ; i < len_1442840933 ; ++i) { result_1442840934[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }  framePtr = F.prev;

  return result_1442840934;

}

function HEX3DHEX3D_1442841264(x_1442841266, y_1442841267) {
  var result_1442841268 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(x_1442841266.name, y_1442841267.name))) {
    F.line = 1714;
    F.filename = "system.nim";
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_1442841266.technicalName, y_1442841267.technicalName))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.synergy == y_1442841267.synergy))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.tier == y_1442841267.tier))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.rarity == y_1442841267.rarity))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_1442841266.description, y_1442841267.description))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_1442841266.icon, y_1442841267.icon))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.rotatable == y_1442841267.rotatable))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.noColor == y_1442841267.noColor))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.onStart == y_1442841267.onStart))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.index == y_1442841267.index))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841266.priority == y_1442841267.priority))) {
    F.line = 1714;
    result_1442841268 = false;
    break BeforeRet;
    }
    
    F.line = 1715;
    result_1442841268 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1442841268;

}

function find_1442841244(a_1442841247, item_1442841248) {
  var result_1442841249 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1442841249 = 0;
    Label1: {
      F.line = 1672;
      var i_1442841263 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520100284 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520100284 < (a_1442841247).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1442841263 = a_1442841247[chckIndx(i_520100284, 0, (a_1442841247).length - 1)];
            if (HEX3DHEX3D_1442841264(i_1442841263, item_1442841248)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1442841249 = addInt(result_1442841249, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100284 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1442841249 = (-1);
  };
  framePtr = F.prev;

  return result_1442841249;

}

function contains_1442841239(a_1442841241, item_1442841242) {
  var result_1442841243 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1442841243 = (0 <= find_1442841244(a_1442841241, item_1442841242));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1442841243;

}

function imul_1124073784(a_1124073785, b_1124073786) {
  var result_1124073787 = 0;

  var F = {procname: "hashes.imul", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 293;
    F.filename = "hashes.nim";
    var mask_1124073788 = 65535;
    F.line = 295;
    var aHi_1124073793 = (((a_1124073785 >>> 16) & mask_1124073788) >>> 0);
    F.line = 296;
    var aLo_1124073794 = ((a_1124073785 & mask_1124073788) >>> 0);
    F.line = 297;
    var bHi_1124073799 = (((b_1124073786 >>> 16) & mask_1124073788) >>> 0);
    F.line = 298;
    var bLo_1124073800 = ((b_1124073786 & mask_1124073788) >>> 0);
    F.line = 299;
    result_1124073787 = ((((aLo_1124073794 * bLo_1124073800) >>> 0) + ((((((aHi_1124073793 * bLo_1124073800) >>> 0) + ((aLo_1124073794 * bHi_1124073799) >>> 0)) >>> 0) << 16) >>> 0)) >>> 0);
  framePtr = F.prev;

  return result_1124073787;

}

function rotl32_1124073805(x_1124073806, r_1124073807) {
  var result_1124073808 = 0;

  var F = {procname: "hashes.rotl32", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "hashes.nim";
    result_1124073808 = ((((x_1124073806 << r_1124073807) >>> 0) | (x_1124073806 >>> subInt(32, r_1124073807))) >>> 0);
  framePtr = F.prev;

  return result_1124073808;

}

function murmurHash_1124073817(x_1124073818) {
  var result_1124073819 = 0;

  var F = {procname: "hashes.murmurHash", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 315;
    F.filename = "hashes.nim";
    var size_1124073828 = (x_1124073818).length;
    F.line = 316;
    var stepSize_1124073829 = 4;
    F.line = 317;
    var n_1124073830 = divInt(size_1124073828, stepSize_1124073829);
    F.line = 319;
    var h1_1124073831 = 0;
    F.line = 320;
    var i_1124073832 = 0;
    Label1: {
      F.line = 330;
        Label2: while (true) {
        if (!(i_1124073832 < mulInt(n_1124073830, stepSize_1124073829))) break Label2;
          F.line = 331;
          var k1_1124073835 = 0;
          F.line = 324;
          var jHEX60gensym19_1124073852 = stepSize_1124073829;
          Label3: {
            F.line = 339;
              Label4: while (true) {
              if (!(0 < jHEX60gensym19_1124073852)) break Label4;
                F.line = 326;
                jHEX60gensym19_1124073852 = subInt(jHEX60gensym19_1124073852, 1);
                F.line = 327;
                k1_1124073835 = ((((k1_1124073835 << 8) >>> 0) | x_1124073818[chckIndx(addInt(i_1124073832, jHEX60gensym19_1124073852), 0, (x_1124073818).length - 1)]) >>> 0);
              }
          };
          F.line = 340;
          i_1124073832 = addInt(i_1124073832, stepSize_1124073829);
          F.line = 342;
          k1_1124073835 = imul_1124073784(k1_1124073835, 3432918353);
          F.line = 343;
          k1_1124073835 = rotl32_1124073805(k1_1124073835, 15);
          F.line = 344;
          k1_1124073835 = imul_1124073784(k1_1124073835, 461845907);
          F.line = 346;
          h1_1124073831 = ((h1_1124073831 ^ k1_1124073835) >>> 0);
          F.line = 347;
          h1_1124073831 = rotl32_1124073805(h1_1124073831, 13);
          F.line = 348;
          h1_1124073831 = ((((h1_1124073831 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    F.line = 351;
    var k1_1124073870 = 0;
    F.line = 352;
    var rem_1124073871 = modInt(size_1124073828, stepSize_1124073829);
    Label5: {
      F.line = 353;
        Label6: while (true) {
        if (!(0 < rem_1124073871)) break Label6;
          F.line = 354;
          rem_1124073871 = subInt(rem_1124073871, 1);
          F.line = 355;
          k1_1124073870 = ((((k1_1124073870 << 8) >>> 0) | x_1124073818[chckIndx(addInt(i_1124073832, rem_1124073871), 0, (x_1124073818).length - 1)]) >>> 0);
        }
    };
    F.line = 356;
    k1_1124073870 = imul_1124073784(k1_1124073870, 3432918353);
    F.line = 357;
    k1_1124073870 = rotl32_1124073805(k1_1124073870, 15);
    F.line = 358;
    k1_1124073870 = imul_1124073784(k1_1124073870, 461845907);
    F.line = 359;
    h1_1124073831 = ((h1_1124073831 ^ k1_1124073870) >>> 0);
    F.line = 362;
    h1_1124073831 = ((h1_1124073831 ^ size_1124073828) >>> 0);
    F.line = 363;
    h1_1124073831 = ((h1_1124073831 ^ (h1_1124073831 >>> 16)) >>> 0);
    F.line = 364;
    h1_1124073831 = imul_1124073784(h1_1124073831, 2246822507);
    F.line = 365;
    h1_1124073831 = ((h1_1124073831 ^ (h1_1124073831 >>> 13)) >>> 0);
    F.line = 366;
    h1_1124073831 = imul_1124073784(h1_1124073831, 3266489909);
    F.line = 367;
    h1_1124073831 = ((h1_1124073831 ^ (h1_1124073831 >>> 16)) >>> 0);
    F.line = 368;
    result_1124073819 = Number(BigInt.asIntN(32, BigInt(h1_1124073831)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1124073819;

}

function hash_1124073936(x_1124073937) {
  var result_1124073938 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 394;
    F.filename = "hashes.nim";
    result_1124073938 = murmurHash_1124073817((x_1124073937.slice(0, (x_1124073937).length - 1 + 1)));
  framePtr = F.prev;

  return result_1124073938;

}

function isFilled_1107296287(hcode_1107296288) {
  var result_1107296289 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1107296289 = !((hcode_1107296288 == 0));
  framePtr = F.prev;

  return result_1107296289;

}

function nextTry_1107296290(h_1107296291, maxHash_1107296292) {
  var result_1107296293 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_1107296293 = (addInt(h_1107296291, 1) & maxHash_1107296292);
  framePtr = F.prev;

  return result_1107296293;

}

function rawGet_1442842172(t_1442842175, key_1442842176, hc_1442842177, hc_1442842177_Idx) {
  var result_1442842178 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1442842177[hc_1442842177_Idx] = hash_1124073936(key_1442842176);
    if ((hc_1442842177[hc_1442842177_Idx] == 0)) {
    F.line = 64;
    hc_1442842177[hc_1442842177_Idx] = 314159265;
    }
    
    if (((t_1442842175.data).length == 0)) {
    F.line = 43;
    result_1442842178 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1442842229 = (hc_1442842177[hc_1442842177_Idx] & (t_1442842175.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1107296287(t_1442842175.data[chckIndx(h_1442842229, 0, (t_1442842175.data).length - 1)].Field0)) break Label2;
          if (((t_1442842175.data[chckIndx(h_1442842229, 0, (t_1442842175.data).length - 1)].Field0 == hc_1442842177[hc_1442842177_Idx]) && eqStrings(t_1442842175.data[chckIndx(h_1442842229, 0, (t_1442842175.data).length - 1)].Field1, key_1442842176))) {
          F.line = 51;
          result_1442842178 = h_1442842229;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1442842229 = nextTry_1107296290(h_1442842229, (t_1442842175.data).length - 1);
        }
    };
    F.line = 53;
    result_1442842178 = subInt((-1), h_1442842229);
  };
  framePtr = F.prev;

  return result_1442842178;

}

function hasKey_1442842165(t_1442842168, key_1442842169) {
  var result_1442842170 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1442842171 = [0];
    F.line = 373;
    result_1442842170 = (0 <= rawGet_1442842172(t_1442842168, key_1442842169, hc_1442842171, 0));
  framePtr = F.prev;

  return result_1442842170;

}

function raiseKeyError_1342178950(key_1342178952) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1342178952 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1442842460(t_1442842463, key_1442842464) {
  var result_1442842465 = null;
  var result_1442842465_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_1442842466 = [0];
    F.line = 244;
    var indexHEX60gensym22_1442842473 = rawGet_1442842172(t_1442842463, key_1442842464, hcHEX60gensym22_1442842466, 0);
    if ((0 <= indexHEX60gensym22_1442842473)) {
    F.line = 245;
    result_1442842465 = t_1442842463.data[chckIndx(indexHEX60gensym22_1442842473, 0, (t_1442842463.data).length - 1)]; result_1442842465_Idx = "Field2";
    }
    else {
      F.line = 247;
    raiseKeyError_1342178950(key_1442842464);
    }
    
  framePtr = F.prev;

  return [result_1442842465, result_1442842465_Idx];

}

function nextPowerOfTwo_872415484(x_872415485) {
  var result_872415486 = 0;

    result_872415486 = (x_872415485 - 1);
    result_872415486 = (result_872415486 | (result_872415486 >> 16));
    result_872415486 = (result_872415486 | (result_872415486 >> 8));
    result_872415486 = (result_872415486 | (result_872415486 >> 4));
    result_872415486 = (result_872415486 | (result_872415486 >> 2));
    result_872415486 = (result_872415486 | (result_872415486 >> 1));
    result_872415486 += (1 + ((x_872415485 <= 0) ? 1 : 0));

  return result_872415486;

}

function slotsNeeded_1107296298(count_1107296299) {
  var result_1107296300 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "hashcommon.nim";
    result_1107296300 = nextPowerOfTwo_872415484(addInt(divInt(mulInt(count_1107296299, 3), 2), 4));
  framePtr = F.prev;

  return result_1107296300;

}

function mustRehash_1442842731(t_1442842733) {
  var result_1442842734 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1442842733.counter < (t_1442842733.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1442842734 = ((mulInt((t_1442842733.data).length, 2) < mulInt(t_1442842733.counter, 3)) || (subInt((t_1442842733.data).length, t_1442842733.counter) < 4));
  framePtr = F.prev;

  return result_1442842734;

}

function rawInsert_1442843148(t_1442843152, data_1442843153, data_1442843153_Idx, key_1442843154, val_1442843155, hc_1442843156, h_1442843157) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1442843153[data_1442843153_Idx][chckIndx(h_1442843157, 0, (data_1442843153[data_1442843153_Idx]).length - 1)].Field1 = nimCopy(null, key_1442843154, NTI33554449);
    F.line = 26;
    data_1442843153[data_1442843153_Idx][chckIndx(h_1442843157, 0, (data_1442843153[data_1442843153_Idx]).length - 1)].Field2 = nimCopy(null, val_1442843155, NTI1442841706);
    F.line = 27;
    data_1442843153[data_1442843153_Idx][chckIndx(h_1442843157, 0, (data_1442843153[data_1442843153_Idx]).length - 1)].Field0 = hc_1442843156;
  framePtr = F.prev;

  
}

function enlarge_1442842874(t_1442842877) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1442842880 = [];
    F.line = 251;
    n_1442842880 = new Array(chckRange(mulInt((t_1442842877.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1442842877.data).length, 2), 0, 2147483647) ; ++i) { n_1442842880[i] = {Field0: 0, Field1: [], Field2: []}; }    F.line = 252;
    var Temporary1 = t_1442842877.data; t_1442842877.data = n_1442842880; n_1442842880 = Temporary1;    Label2: {
      F.line = 253;
      var i_1442842940 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520100293 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__520100293 = (n_1442842880).length - 1;
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520100294 = 0;
      Label3: {
        F.line = 69;
          Label4: while (true) {
          if (!(res_520100294 <= colontmp__520100293)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1442842940 = res_520100294;
            F.line = 254;
            var eh_1442842990 = n_1442842880[chckIndx(i_1442842940, 0, (n_1442842880).length - 1)].Field0;
            if (isFilled_1107296287(eh_1442842990)) {
            F.line = 256;
            var j_1442842994 = (eh_1442842990 & (t_1442842877.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1107296287(t_1442842877.data[chckIndx(j_1442842994, 0, (t_1442842877.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1442842994 = nextTry_1107296290(j_1442842994, (t_1442842877.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1442843148(t_1442842877, t_1442842877, "data", n_1442842880[chckIndx(i_1442842940, 0, (n_1442842880).length - 1)].Field1, n_1442842880[chckIndx(i_1442842940, 0, (n_1442842880).length - 1)].Field2, eh_1442842990, j_1442842994);
            }
            
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520100294 = addInt(res_520100294, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1442843305(t_1442843308, key_1442843309, hc_1442843310) {
  var result_1442843311 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1442843308.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1442843311 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1442843358 = (hc_1442843310 & (t_1442843308.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1107296287(t_1442843308.data[chckIndx(h_1442843358, 0, (t_1442843308.data).length - 1)].Field0)) break Label2;
          if (((t_1442843308.data[chckIndx(h_1442843358, 0, (t_1442843308.data).length - 1)].Field0 == hc_1442843310) && eqStrings(t_1442843308.data[chckIndx(h_1442843358, 0, (t_1442843308.data).length - 1)].Field1, key_1442843309))) {
          F.line = 51;
          result_1442843311 = h_1442843358;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1442843358 = nextTry_1107296290(h_1442843358, (t_1442843308.data).length - 1);
        }
    };
    F.line = 53;
    result_1442843311 = subInt((-1), h_1442843358);
  };
  framePtr = F.prev;

  return result_1442843311;

}

function HEX5BHEX5DHEX3D_1442842570(t_1442842573, key_1442842574, val_1442842575) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1442842573.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym67_1442842620 = slotsNeeded_1107296298(32);
    F.line = 169;
    t_1442842573.counter = 0;
    F.line = 170;
    t_1442842573.data = new Array(chckRange(correctSizeHEX60gensym67_1442842620, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym67_1442842620, 0, 2147483647) ; ++i) { t_1442842573.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    F.line = 59;
    var hc_1442842625 = [0];
    F.line = 60;
    var index_1442842632 = rawGet_1442842172(t_1442842573, key_1442842574, hc_1442842625, 0);
    if ((0 <= index_1442842632)) {
    F.line = 61;
    t_1442842573.data[chckIndx(index_1442842632, 0, (t_1442842573.data).length - 1)].Field2 = nimCopy(null, val_1442842575, NTI1442841706);
    }
    else {
      if (((t_1442842573.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym70_1442842726 = slotsNeeded_1107296298(32);
      F.line = 169;
      t_1442842573.counter = 0;
      F.line = 170;
      t_1442842573.data = new Array(chckRange(correctSizeHEX60gensym70_1442842726, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym70_1442842726, 0, 2147483647) ; ++i) { t_1442842573.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1442842731(t_1442842573)) {
      F.line = 51;
      enlarge_1442842874(t_1442842573);
      F.line = 52;
      index_1442842632 = rawGetKnownHC_1442843305(t_1442842573, key_1442842574, hc_1442842625[0]);
      }
      
      F.line = 53;
      index_1442842632 = subInt((-1), index_1442842632);
      F.line = 54;
      rawInsert_1442843148(t_1442842573, t_1442842573, "data", key_1442842574, val_1442842575, hc_1442842625[0], index_1442842632);
      F.line = 62;
      t_1442842573.counter = addInt(t_1442842573.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function getAllPowers_1442842075() {
              var Temporary9;

  var result_1442842083 = [({data: [], counter: 0})];

  var F = {procname: "power.getAllPowers", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 228;
    F.filename = "power.nim";
    Label1: {
      F.line = 1024;
      F.filename = "sequtils.nim";
      var iHEX60gensym60_1442842104 = 0;
      F.line = 1025;
      var resultHEX60gensym60_1442842111 = newSeq_1442840931(chckRange((secretSecretSynergies_1442840652[0]).length, 0, 2147483647));
      Label2: {
        F.line = 1026;
        var it_1442842115 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []};
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520100273 = 0;
        F.line = 250;
        var L_520100274 = (secretSecretSynergies_1442840652[0]).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520100273 < L_520100274)) break Label4;
              F.line = 1026;
              F.filename = "sequtils.nim";
              it_1442842115 = secretSecretSynergies_1442840652[0][chckIndx(i_520100273, 0, (secretSecretSynergies_1442840652[0]).length - 1)];
              F.line = 228;
              F.filename = "power.nim";
              resultHEX60gensym60_1442842111[chckIndx(iHEX60gensym60_1442842104, 0, (resultHEX60gensym60_1442842111).length - 1)] = nimCopy(resultHEX60gensym60_1442842111[chckIndx(iHEX60gensym60_1442842104, 0, (resultHEX60gensym60_1442842111).length - 1)], it_1442842115.Field0, NTI1442840581);
              F.line = 1028;
              F.filename = "sequtils.nim";
              iHEX60gensym60_1442842104 = addInt(iHEX60gensym60_1442842104, 1);
              F.line = 13;
              F.filename = "iterators.nim";
              i_520100273 += 1;
              if (!(((secretSecretSynergies_1442840652[0]).length == L_520100274))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var secretSecretPowers_1442842120 = nimCopy(null, resultHEX60gensym60_1442842111, NTI1442840869);
    Label5: {
      F.line = 230;
      F.filename = "power.nim";
      var p_1442842124 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100279 = 0;
      F.line = 250;
      var L_520100280 = (powers_1442840649[0]).length;
      Label6: {
        F.line = 251;
          Label7: while (true) {
          if (!(i_520100279 < L_520100280)) break Label7;
            F.line = 230;
            F.filename = "power.nim";
            p_1442842124 = powers_1442840649[0][chckIndx(i_520100279, 0, (powers_1442840649[0]).length - 1)];
            Label8: {
              if (contains_1442841239(secretSecretPowers_1442842120, p_1442842124)) {
              F.line = 231;
              break Label8;
              }
              
              if (hasKey_1442842165(result_1442842083[0], p_1442842124.name)) {
              F.line = 233;
              var Temporary10 = nimCopy(null, p_1442842124, NTI1442840581);
              (Temporary9 = HEX5BHEX5D_1442842460(result_1442842083[0], p_1442842124.name), Temporary9)[0][Temporary9[1]].push(Temporary10);;
              }
              else {
                F.line = 235;
              HEX5BHEX5DHEX3D_1442842570(result_1442842083[0], p_1442842124.name, [nimCopy(null, p_1442842124, NTI1442840581)]);
              }
              
            };
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100279 += 1;
            if (!(((powers_1442840649[0]).length == L_520100280))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1442842083[0];

}

function initStorage_1543503887() {
  var F = {procname: "store.initStorage", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 27;
      F.filename = "store.nim";
      var power_1543503891 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100298 = 0;
      F.line = 250;
      var L_520100299 = (powers_1442840649[0]).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100298 < L_520100299)) break Label3;
            F.line = 27;
            F.filename = "store.nim";
            power_1543503891 = powers_1442840649[0][chckIndx(i_520100298, 0, (powers_1442840649[0]).length - 1)];
            if (!(localStorage.getItem(toJSStr(power_1543503891.technicalName)) !== null)) {
            F.line = 29;
            localStorage.setItem(toJSStr(power_1543503891.technicalName), JSON.stringify({wins: 0, losses: 0}));
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100298 += 1;
            if (!(((powers_1442840649[0]).length == L_520100299))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 31;
    F.filename = "store.nim";
    localStorage.setItem("wins", JSON.stringify({wins: 0, losses: 0}));
    F.line = 32;
    localStorage.setItem("losses", JSON.stringify({wins: 0, losses: 0}));
  framePtr = F.prev;

  
}

function HEX5BHEX5D_687867297(s_687867301, x_687867302) {
  var result_687867303 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_687867305 = x_687867302.a;
    F.line = 140;
    var L_687867311 = addInt(subInt(subInt((s_687867301).length, x_687867302.b), a_687867305), 1);
    F.line = 141;
    result_687867303 = new Array(chckRange(L_687867311, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_687867311, 0, 2147483647) ; ++i) { result_687867303[i] = null; }    Label1: {
      F.line = 142;
      var i_687867320 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100302 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100302 < L_687867311)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_687867320 = i_520100302;
            F.line = 142;
            result_687867303[chckIndx(i_687867320, 0, (result_687867303).length - 1)] = s_687867301[chckIndx(addInt(i_687867320, a_687867305), 0, (s_687867301).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100302 = addInt(i_520100302, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_687867303;

}

function valueHEX3D_721420741(n_721420742, v_721420743) {
  var F = {procname: "vdom.value=", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 188;
    F.filename = "vdom.nim";
    n_721420742.text = v_721420743;
  framePtr = F.prev;

  
}

function value_721420738(n_721420739) {
  var result_721420740 = null;

  var F = {procname: "vdom.value", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 187;
    F.filename = "vdom.nim";
    result_721420740 = n_721420739.text;
  framePtr = F.prev;

  return result_721420740;

}

function addEventShell_687865949(d_687865950, name_687865951, h_687865952) {
  var F = {procname: "karax.addEventShell", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "karax.nim";
    d_687865950.addEventListener(name_687865951, h_687865952, false);
    if ((d_687865950.karaxEvents == null)) {
    F.line = 96;
    d_687865950.karaxEvents = new Array(0);
    }
    
    F.line = 97;
    d_687865950.karaxEvents.push({Field0: name_687865951, Field1: h_687865952});
  framePtr = F.prev;

  
}

function wrapEvent_687866022(d_687866023, n_687866024, k_687866025, action_687866026) {
      
function laterWrapper_687866106() {
          
function HEX3Aanonymous_687866111(ev_687866112) {
              
function wrapper_687866113() {
                var F = {procname: ":anonymous.wrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
                framePtr = F;
                  F.line = 77;
                  F.filename = "karax.nim";
                  var vHEX60gensym15_687866115 = ev_687866112.target.value;
                  F.line = 78;
                  valueHEX3D_721420741(n_687866109, vHEX60gensym15_687866115);
                  if (!(!((action_687866108 == null)))) {
                  F.line = 79;
                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(79, 3) `action != nil` "));
                  }
                  
                  F.line = 80;
                  action_687866108(ev_687866112, n_687866109);
                  if (!((value_721420738(n_687866109) == vHEX60gensym15_687866115))) {
                  F.line = 82;
                  ev_687866112.target.value = value_721420738(n_687866109);
                  }
                  
                framePtr = F.prev;

                
              }

            var F = {procname: "laterWrapper.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
            framePtr = F;
              if (!((timer_687866110 == null))) {
              F.line = 126;
              F.filename = "karax.nim";
              clearTimeout(timer_687866110);
              }
              
              F.line = 127;
              timer_687866110 = setTimeout(wrapper_687866113, 400);
            framePtr = F.prev;

            
          }

        var result_687866107 = null;

        var F = {procname: "wrapEvent.laterWrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
        framePtr = F;
          F.line = 121;
          F.filename = "karax.nim";
          var action_687866108 = action_687866026;
          F.line = 122;
          var n_687866109 = n_687866024;
          F.line = 123;
          var timer_687866110 = null;
          F.line = 124;
          result_687866107 = HEX3Aanonymous_687866111;
        framePtr = F.prev;

        return result_687866107;

      }
      
function enterWrapper_687866073() {
          
function HEX3Aanonymous_687866077(ev_687866078) {
            var F = {procname: "enterWrapper.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
            framePtr = F;
              if ((ev_687866078.keyCode == 13)) {
              F.line = 77;
              F.filename = "karax.nim";
              var vHEX60gensym8_687866080 = ev_687866078.target.value;
              F.line = 78;
              valueHEX3D_721420741(n_687866076, vHEX60gensym8_687866080);
              if (!(!((action_687866075 == null)))) {
              F.line = 79;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(79, 3) `action != nil` "));
              }
              
              F.line = 80;
              action_687866075(ev_687866078, n_687866076);
              if (!((value_721420738(n_687866076) == vHEX60gensym8_687866080))) {
              F.line = 82;
              ev_687866078.target.value = value_721420738(n_687866076);
              }
              
              }
              
            framePtr = F.prev;

            
          }

        var result_687866074 = null;

        var F = {procname: "wrapEvent.enterWrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
        framePtr = F;
          F.line = 115;
          F.filename = "karax.nim";
          var action_687866075 = action_687866026;
          F.line = 116;
          var n_687866076 = n_687866024;
          F.line = 117;
          result_687866074 = HEX3Aanonymous_687866077;
        framePtr = F.prev;

        return result_687866074;

      }
      
function stdWrapper_687866028() {
          
function HEX3Aanonymous_687866032(ev_687866033) {
            var F = {procname: "stdWrapper.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
            framePtr = F;
              if ((((n_687866031.kind == 200) || (n_687866031.kind == 194)) || (n_687866031.kind == 196))) {
              F.line = 77;
              F.filename = "karax.nim";
              var vHEX60gensym1_687866047 = ev_687866033.target.value;
              F.line = 78;
              valueHEX3D_721420741(n_687866031, vHEX60gensym1_687866047);
              if (!(!((action_687866030 == null)))) {
              F.line = 79;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(79, 3) `action != nil` "));
              }
              
              F.line = 80;
              action_687866030(ev_687866033, n_687866031);
              if (!((value_721420738(n_687866031) == vHEX60gensym1_687866047))) {
              F.line = 82;
              ev_687866033.target.value = value_721420738(n_687866031);
              }
              
              }
              else {
                F.line = 112;
              action_687866030(ev_687866033, n_687866031);
              }
              
            framePtr = F.prev;

            
          }

        var result_687866029 = null;

        var F = {procname: "wrapEvent.stdWrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
        framePtr = F;
          F.line = 107;
          F.filename = "karax.nim";
          var action_687866030 = action_687866026;
          F.line = 108;
          var n_687866031 = n_687866024;
          F.line = 109;
          result_687866029 = HEX3Aanonymous_687866032;
        framePtr = F.prev;

        return result_687866029;

      }

  var result_687866027 = null;

  var F = {procname: "karax.wrapEvent", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 129;
    F.filename = "karax.nim";
    switch (k_687866025) {
    case 30:
      F.line = 131;
      result_687866027 = laterWrapper_687866106();
      F.line = 132;
      addEventShell_687865949(d_687866023, "keyup", result_687866027);
      break;
    case 29:
      F.line = 134;
      result_687866027 = enterWrapper_687866073();
      F.line = 135;
      addEventShell_687865949(d_687866023, "keyup", result_687866027);
      break;
    default: 
      F.line = 137;
      result_687866027 = stdWrapper_687866028();
      F.line = 138;
      addEventShell_687865949(d_687866023, toEventName_721420689[chckIndx(k_687866025, 0, (toEventName_721420689).length - 1)], result_687866027);
      break;
    }
  framePtr = F.prev;

  return result_687866027;

}

function applyEvents_687866149(n_687866150) {
  var F = {procname: "karax.applyEvents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 150;
    F.filename = "karax.nim";
    var dest_687866151 = n_687866150.dom;
    Label1: {
      F.line = 151;
      var i_687866159 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100325 = 0;
      F.line = 151;
      F.filename = "karax.nim";
      colontmp__520100325 = (n_687866150.events).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100326 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100326 < colontmp__520100325)) break Label3;
            F.line = 151;
            F.filename = "karax.nim";
            i_687866159 = i_520100326;
            F.line = 152;
            n_687866150.events[chckIndx(i_687866159, 0, (n_687866150.events).length - 1)]["Field2"] = wrapEvent_687866022(dest_687866151, n_687866150, n_687866150.events[chckIndx(i_687866159, 0, (n_687866150.events).length - 1)]["Field0"], n_687866150.events[chckIndx(i_687866159, 0, (n_687866150.events).length - 1)]["Field1"]);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100326 = addInt(i_520100326, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function applyStyle_788529666(n_788529667, s_788529668) {
  var F = {procname: "vstyles.applyStyle", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
  framePtr = F;
    F.line = 338;
    F.filename = "vstyles.nim";
    n_788529667.style = {};
    Label1: {
      F.line = 339;
      var i_788529681 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520100329 = 0;
      F.line = 339;
      F.filename = "vstyles.nim";
      colontmp__520100329 = subInt(s_788529668.length, 1);
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520100330 = 0;
      Label2: {
        F.line = 69;
          Label3: while (true) {
          if (!(res_520100330 <= colontmp__520100329)) break Label3;
            F.line = 339;
            F.filename = "vstyles.nim";
            i_788529681 = res_520100330;
            F.line = 340;
            n_788529667.style[s_788529668[i_788529681]] = s_788529668[addInt(i_788529681, 1)];
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520100330 = addInt(res_520100330, 2);
          }
      };
    };
  framePtr = F.prev;

  
}

function toDom_687866178(n_687866179, useAttachedNode_687866180, kxi_687866181) {
      var Temporary1;

  var result_687866182 = null;

  var F = {procname: "karax.toDom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (useAttachedNode_687866180) {
    if (!((n_687866179.dom == null))) {
    if (!((n_687866179.id == null))) {
    F.line = 167;
    F.filename = "karax.nim";
    kxi_687866181.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 168;
    result_687866182 = n_687866179.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_687866179.kind == 0)) {
    F.line = 170;
    result_687866182 = document.createTextNode(n_687866179.text);
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    }
    else {
    if ((n_687866179.kind == 6)) {
    F.line = 173;
    result_687866182 = document.createElement("div");
    F.line = 174;
    result_687866182.innerHTML = n_687866179.text;
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 176;
    break BeforeRet;
    }
    else {
    if ((n_687866179.kind == 3)) {
    F.line = 178;
    var x_687866222 = vcomponents_754974733[0][n_687866179.text](n_687866179.kids);
    F.line = 179;
    result_687866182 = toDom_687866178(x_687866222, useAttachedNode_687866180, kxi_687866181);
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 182;
    break BeforeRet;
    }
    else {
    if ((n_687866179.kind == 4)) {
    F.line = 184;
    result_687866182 = n_687866179.dom;
    if (!(!((result_687866182 == null)))) {
    F.line = 185;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(185, 5) `result != nil` "));
    }
    
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 188;
    break BeforeRet;
    }
    else {
    if ((n_687866179.kind == 5)) {
    F.line = 190;
    var x_687866252 = n_687866179;
    if (!((x_687866252.onAttachImpl == null))) {
    F.line = 191;
    x_687866252.onAttachImpl(x_687866252);
    }
    
    if (!(!((x_687866252.renderImpl == null)))) {
    F.line = 192;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(192, 5) `x.renderImpl != nil` "));
    }
    
    if ((x_687866252.expanded == null)) {
    F.line = 194;
    x_687866252.expanded = x_687866252.renderImpl(x_687866252);
    }
    
    if (!(!((x_687866252.expanded == null)))) {
    F.line = 196;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(196, 5) `x.expanded != nil` "));
    }
    
    F.line = 197;
    result_687866182 = toDom_687866178(x_687866252.expanded, useAttachedNode_687866180, kxi_687866181);
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 199;
    break BeforeRet;
    }
    else {
      F.line = 202;
      if ((ConstSet2[n_687866179.kind] != undefined)) {
      Temporary1 = document.createElementNS(toJSStr(svgNamespace_721420514[0]), toTag_721420612[chckIndx(n_687866179.kind, 0, (toTag_721420612).length - 1)]);
      }
      else {
      if ((ConstSet3[n_687866179.kind] != undefined)) {
      Temporary1 = document.createElementNS(toJSStr(mathNamespace_721420515[0]), toTag_721420612[chckIndx(n_687866179.kind, 0, (toTag_721420612).length - 1)]);
      }
      else {
      Temporary1 = document.createElement(toTag_721420612[chckIndx(n_687866179.kind, 0, (toTag_721420612).length - 1)]);
      }
      }
      result_687866182 = Temporary1;
      F.line = 146;
      n_687866179.dom = result_687866182;
      if (!((n_687866179.id == null))) {
      F.line = 147;
      kxi__.byId[n_687866179.id] = n_687866179;
      }
      
      Label2: {
        F.line = 209;
        var k_687866299 = null;
        Label3: {
          F.line = 334;
          F.filename = "vdom.nim";
          var i_520100310 = 0;
          F.line = 126;
          F.filename = "iterators_1.nim";
          var colontmp__520100311 = 0;
          F.line = 334;
          F.filename = "vdom.nim";
          colontmp__520100311 = (n_687866179.kids).length;
          F.line = 128;
          F.filename = "iterators_1.nim";
          var i_520100312 = 0;
          Label4: {
            F.line = 129;
              Label5: while (true) {
              if (!(i_520100312 < colontmp__520100311)) break Label5;
                F.line = 334;
                F.filename = "vdom.nim";
                i_520100310 = i_520100312;
                F.line = 209;
                F.filename = "karax.nim";
                k_687866299 = n_687866179.kids[chckIndx(i_520100310, 0, (n_687866179.kids).length - 1)];
                F.line = 210;
                result_687866182.appendChild(toDom_687866178(k_687866299, useAttachedNode_687866180, kxi_687866181));
                F.line = 131;
                F.filename = "iterators_1.nim";
                i_520100312 = addInt(i_520100312, 1);
              }
          };
        };
      };
      if (!((n_687866179.text == null))) {
      F.line = 213;
      F.filename = "karax.nim";
      result_687866182.value = n_687866179.text;
      }
      
    }
    }}}}
    if (!((n_687866179.id == null))) {
    F.line = 215;
    result_687866182.id = n_687866179.id;
    }
    
    if (!((n_687866179.class == null))) {
    if ((ConstSet4[n_687866179.kind] != undefined)) {
    F.line = 218;
    result_687866182.className.baseVal = n_687866179.class;
    }
    else {
      F.line = 220;
    result_687866182.className = n_687866179.class;
    }
    
    }
    
    Label6: {
      F.line = 223;
      var k_687866304 = null;
      F.line = 223;
      var v_687866305 = null;
      Label7: {
        F.line = 337;
        F.filename = "vdom.nim";
        var i_520100320 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520100321 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520100321 = subInt((n_687866179.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520100322 = 0;
        Label8: {
          F.line = 69;
            Label9: while (true) {
            if (!(res_520100322 <= colontmp__520100321)) break Label9;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520100320 = res_520100322;
              F.line = 223;
              F.filename = "karax.nim";
              k_687866304 = n_687866179.attrs[chckIndx(i_520100320, 0, (n_687866179.attrs).length - 1)];
              F.line = 223;
              v_687866305 = n_687866179.attrs[chckIndx(addInt(i_520100320, 1), 0, (n_687866179.attrs).length - 1)];
              if (!((v_687866305 == null))) {
              F.line = 225;
              result_687866182.setAttribute(k_687866304, v_687866305);
              }
              
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520100322 = addInt(res_520100322, 2);
            }
        };
      };
    };
    F.line = 226;
    F.filename = "karax.nim";
    applyEvents_687866149(n_687866179);
    if (((!((kxi_687866181 == null)) && (n_687866179 == kxi_687866181.toFocusV)) && (kxi_687866181.toFocus == null))) {
    F.line = 228;
    kxi_687866181.toFocus = result_687866182;
    }
    
    if (!((n_687866179.style == null))) {
    F.line = 230;
    applyStyle_788529666(result_687866182, n_687866179.style);
    F.line = 231;
    n_687866179.styleVersion = (n_687866179.style.__version || 0);
    }
    
  };
  framePtr = F.prev;

  return result_687866182;

}

function replaceById_687866398(id_687866399, newTree_687866400) {
  var F = {procname: "karax.replaceById", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 257;
    F.filename = "karax.nim";
    var x_687866401 = document.getElementById(id_687866399);
    F.line = 258;
    x_687866401.parentNode.replaceChild(newTree_687866400, x_687866401);
    F.line = 259;
    newTree_687866400.id = id_687866399;
  framePtr = F.prev;

  
}

function len_721421105(x_721421106) {
  var result_721421107 = 0;

  var F = {procname: "vdom.len", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 298;
    F.filename = "vdom.nim";
    result_721421107 = (x_721421106.kids).length;
  framePtr = F.prev;

  return result_721421107;

}

function HEX5BHEX5D_721421112(x_721421113, idx_721421114) {
  var result_721421115 = null;

  var F = {procname: "vdom.[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 299;
    F.filename = "vdom.nim";
    result_721421115 = x_721421113.kids[chckIndx(idx_721421114, 0, (x_721421113.kids).length - 1)];
  framePtr = F.prev;

  return result_721421115;

}

function eq_788529410(a_788529411, b_788529412) {
  var result_788529413 = false;

  var F = {procname: "vstyles.eq", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((a_788529411 == null)) {
    if ((b_788529412 == null)) {
    F.line = 236;
    F.filename = "vstyles.nim";
    result_788529413 = true;
    break BeforeRet;
    }
    else {
      F.line = 237;
      result_788529413 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_788529412 == null)) {
    F.line = 238;
    result_788529413 = false;
    break BeforeRet;
    }
    }
    if (!((a_788529411.length == b_788529412.length))) {
    F.line = 239;
    result_788529413 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 240;
      var i_788529448 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100356 = 0;
      F.line = 240;
      F.filename = "vstyles.nim";
      colontmp__520100356 = a_788529411.length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100357 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100357 < colontmp__520100356)) break Label3;
            F.line = 240;
            F.filename = "vstyles.nim";
            i_788529448 = i_520100357;
            if (!((a_788529411[i_788529448] == b_788529412[i_788529448]))) {
            F.line = 241;
            result_788529413 = false;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100357 = addInt(i_520100357, 1);
          }
      };
    };
    F.line = 242;
    F.filename = "vstyles.nim";
    result_788529413 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_788529413;

}

function versionMatch_788529457(s_788529458, version_788529459) {
  var result_788529460 = false;

  var F = {procname: "vstyles.versionMatch", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
  framePtr = F;
    F.line = 246;
    F.filename = "vstyles.nim";
    result_788529460 = ((s_788529458 == null) || ((s_788529458.__version || 0) == version_788529459));
  framePtr = F.prev;

  return result_788529460;

}

function sameAttrs_721421285(a_721421286, b_721421287) {
  var result_721421288 = false;

  var F = {procname: "vdom.sameAttrs", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((a_721421286.attrs).length == (b_721421287.attrs).length)) {
    F.line = 342;
    F.filename = "vdom.nim";
    result_721421288 = true;
    Label1: {
      F.line = 343;
      var i_721421302 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100360 = 0;
      F.line = 343;
      F.filename = "vdom.nim";
      colontmp__520100360 = (a_721421286.attrs).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100361 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100361 < colontmp__520100360)) break Label3;
            F.line = 343;
            F.filename = "vdom.nim";
            i_721421302 = i_520100361;
            if (!((a_721421286.attrs[chckIndx(i_721421302, 0, (a_721421286.attrs).length - 1)] == b_721421287.attrs[chckIndx(i_721421302, 0, (b_721421287.attrs).length - 1)]))) {
            F.line = 344;
            result_721421288 = false;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100361 = addInt(i_520100361, 1);
          }
      };
    };
    }
    
  };
  framePtr = F.prev;

  return result_721421288;

}

function eq_687866411(a_687866412, b_687866413, recursive_687866414) {
  var result_687866415 = 0;

  var F = {procname: "karax.eq", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((a_687866412.kind == b_687866413.kind))) {
    F.line = 281;
    F.filename = "karax.nim";
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if (!((a_687866412.id == b_687866413.id))) {
    F.line = 284;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    F.line = 285;
    result_687866415 = 3;
    if (!((a_687866412.index == b_687866413.index))) {
    F.line = 288;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if ((a_687866412.kind == 0)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 292;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_687866412.kind == 3)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 294;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if (!((len_721421105(a_687866412) == len_721421105(b_687866413)))) {
    F.line = 295;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 296;
      var i_687866432 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100348 = 0;
      F.line = 296;
      F.filename = "karax.nim";
      colontmp__520100348 = len_721421105(a_687866412);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100349 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100349 < colontmp__520100348)) break Label3;
            F.line = 296;
            F.filename = "karax.nim";
            i_687866432 = i_520100349;
            if ((eq_687866411(HEX5BHEX5D_721421112(a_687866412, i_687866432), HEX5BHEX5D_721421112(b_687866413, i_687866432), recursive_687866414) == 1)) {
            F.line = 297;
            result_687866415 = 1;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100349 = addInt(i_520100349, 1);
          }
      };
    };
    }
    else {
    if ((a_687866412.kind == 4)) {
    if ((a_687866412.dom == b_687866413.dom)) {
    F.line = 300;
    F.filename = "karax.nim";
    result_687866415 = 3;
    break BeforeRet;
    }
    else {
      F.line = 302;
      result_687866415 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_687866412.kind == 6)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 305;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_687866413.kind == 5)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 310;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if (!((a_687866412.key == b_687866413.key))) {
    F.line = 316;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    F.line = 317;
    result_687866415 = 0;
    break BeforeRet;
    }
    }}}}
    if (((!((a_687866412.class == b_687866413.class)) || !((eq_788529410(a_687866412.style, b_687866413.style) && versionMatch_788529457(a_687866412.style, b_687866413.styleVersion)))) || !(sameAttrs_721421285(a_687866412, b_687866413)))) {
    F.line = 324;
    result_687866415 = 2;
    break BeforeRet;
    }
    
    if (recursive_687866414) {
    if (!((len_721421105(a_687866412) == len_721421105(b_687866413)))) {
    F.line = 328;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    Label4: {
      F.line = 329;
      var i_687866458 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100352 = 0;
      F.line = 329;
      F.filename = "karax.nim";
      colontmp__520100352 = len_721421105(a_687866412);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100353 = 0;
      Label5: {
        F.line = 129;
          Label6: while (true) {
          if (!(i_520100353 < colontmp__520100352)) break Label6;
            F.line = 329;
            F.filename = "karax.nim";
            i_687866458 = i_520100353;
            if (!((eq_687866411(HEX5BHEX5D_721421112(a_687866412, i_687866458), HEX5BHEX5D_721421112(b_687866413, i_687866458), true) == 3))) {
            F.line = 331;
            result_687866415 = 1;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100353 = addInt(i_520100353, 1);
          }
      };
    };
    }
    
    F.line = 334;
    F.filename = "karax.nim";
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_687866415;

}

function updateStyles_687866479(newNode_687866480, oldNode_687866481) {
  var F = {procname: "karax.updateStyles", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((oldNode_687866481.dom == null))) {
    if (!((newNode_687866480.style == null))) {
    F.line = 340;
    F.filename = "karax.nim";
    applyStyle_788529666(oldNode_687866481.dom, newNode_687866480.style);
    F.line = 341;
    newNode_687866480.styleVersion = (newNode_687866480.style.__version || 0);
    }
    else {
      F.line = 342;
      oldNode_687866481.dom.style = {m_type: NTI805306510, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    if ((ConstSet5[oldNode_687866481.kind] != undefined)) {
    F.line = 344;
    oldNode_687866481.dom.className.baseVal = newNode_687866480.class;
    }
    else {
      F.line = 346;
    oldNode_687866481.dom.className = newNode_687866480.class;
    }
    
    }
    
    F.line = 347;
    oldNode_687866481.style = newNode_687866480.style;
    F.line = 348;
    oldNode_687866481.class = newNode_687866480.class;
  framePtr = F.prev;

  
}

function takeOverAttr_721421097(newNode_721421098, oldNode_721421099) {
  var F = {procname: "vdom.takeOverAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 278;
    F.filename = "vdom.nim";
    oldNode_721421099.attrs = newNode_721421098.attrs;
  framePtr = F.prev;

  
}

function updateAttributes_687866893(newNode_687866894, oldNode_687866895) {
  var F = {procname: "karax.updateAttributes", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((oldNode_687866895.dom == null))) {
    Label1: {
      F.line = 353;
      F.filename = "karax.nim";
      var k_687866900 = null;
      F.line = 353;
      var __687866901 = null;
      Label2: {
        F.line = 337;
        F.filename = "vdom.nim";
        var i_520100365 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520100366 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520100366 = subInt((oldNode_687866895.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520100367 = 0;
        Label3: {
          F.line = 69;
            Label4: while (true) {
            if (!(res_520100367 <= colontmp__520100366)) break Label4;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520100365 = res_520100367;
              F.line = 353;
              F.filename = "karax.nim";
              k_687866900 = oldNode_687866895.attrs[chckIndx(i_520100365, 0, (oldNode_687866895.attrs).length - 1)];
              F.line = 353;
              __687866901 = oldNode_687866895.attrs[chckIndx(addInt(i_520100365, 1), 0, (oldNode_687866895.attrs).length - 1)];
              F.line = 354;
              oldNode_687866895.dom.removeAttribute(k_687866900);
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520100367 = addInt(res_520100367, 2);
            }
        };
      };
    };
    Label5: {
      F.line = 355;
      F.filename = "karax.nim";
      var k_687866902 = null;
      F.line = 355;
      var v_687866903 = null;
      Label6: {
        F.line = 337;
        F.filename = "vdom.nim";
        var i_520100371 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520100372 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520100372 = subInt((newNode_687866894.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520100373 = 0;
        Label7: {
          F.line = 69;
            Label8: while (true) {
            if (!(res_520100373 <= colontmp__520100372)) break Label8;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520100371 = res_520100373;
              F.line = 355;
              F.filename = "karax.nim";
              k_687866902 = newNode_687866894.attrs[chckIndx(i_520100371, 0, (newNode_687866894.attrs).length - 1)];
              F.line = 355;
              v_687866903 = newNode_687866894.attrs[chckIndx(addInt(i_520100371, 1), 0, (newNode_687866894.attrs).length - 1)];
              if (!((v_687866903 == null))) {
              F.line = 357;
              oldNode_687866895.dom.setAttribute(k_687866902, v_687866903);
              }
              
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520100373 = addInt(res_520100373, 2);
            }
        };
      };
    };
    }
    
    F.line = 358;
    F.filename = "karax.nim";
    takeOverAttr_721421097(newNode_687866894, oldNode_687866895);
  framePtr = F.prev;

  
}

function getAttr_721421084(n_721421085, key_721421086) {
  var result_721421087 = null;

  var F = {procname: "vdom.getAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 271;
      F.filename = "vdom.nim";
      var i_721421096 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520100376 = 0;
      F.line = 271;
      F.filename = "vdom.nim";
      colontmp__520100376 = subInt((n_721421085.attrs).length, 2);
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520100377 = 0;
      Label2: {
        F.line = 69;
          Label3: while (true) {
          if (!(res_520100377 <= colontmp__520100376)) break Label3;
            F.line = 271;
            F.filename = "vdom.nim";
            i_721421096 = res_520100377;
            if ((n_721421085.attrs[chckIndx(i_721421096, 0, (n_721421085.attrs).length - 1)] == key_721421086)) {
            F.line = 272;
            result_721421087 = n_721421085.attrs[chckIndx(addInt(i_721421096, 1), 0, (n_721421085.attrs).length - 1)];
            break BeforeRet;
            }
            
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520100377 = addInt(res_520100377, 2);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_721421087;

}

function removeAllEventHandlers_687865980(d_687865981) {
  var F = {procname: "karax.removeAllEventHandlers", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((d_687865981.karaxEvents == null))) {
    Label1: {
      F.line = 101;
      F.filename = "karax.nim";
      var i_687865997 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100380 = 0;
      F.line = 101;
      F.filename = "karax.nim";
      colontmp__520100380 = d_687865981.karaxEvents.length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100381 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100381 < colontmp__520100380)) break Label3;
            F.line = 101;
            F.filename = "karax.nim";
            i_687865997 = i_520100381;
            F.line = 102;
            d_687865981.removeEventListener(d_687865981.karaxEvents[i_687865997]["Field0"], d_687865981.karaxEvents[i_687865997]["Field1"]);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100381 = addInt(i_520100381, 1);
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function mergeEvents_687866904(newNode_687866905, oldNode_687866906, kxi_687866907) {
  var F = {procname: "karax.mergeEvents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 361;
    F.filename = "karax.nim";
    var d_687866908 = oldNode_687866906.dom;
    if (!((d_687866908 == null))) {
    F.line = 363;
    removeAllEventHandlers_687865980(d_687866908);
    }
    
    F.line = 371;
    oldNode_687866906.events = newNode_687866905.events;
    F.line = 372;
    applyEvents_687866149(oldNode_687866906);
  framePtr = F.prev;

  
}

function addPatch_687866913(kxi_687866914, ka_687866915, parenta_687866916, currenta_687866917, na_687866918, oldNode_687866919) {
  var F = {procname: "karax.addPatch", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 389;
    F.filename = "karax.nim";
    var L_687866920 = kxi_687866914.patchLen;
    if (((kxi_687866914.patches).length <= L_687866920)) {
    F.line = 392;
    kxi_687866914.patches.push({k: ka_687866915, parent: parenta_687866916, current: currenta_687866917, newNode: na_687866918, oldNode: oldNode_687866919});;
    }
    else {
      F.line = 395;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].k = ka_687866915;
      F.line = 396;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].parent = parenta_687866916;
      F.line = 397;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].current = currenta_687866917;
      F.line = 398;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].newNode = na_687866918;
      F.line = 399;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].oldNode = oldNode_687866919;
    }
    
    F.line = 400;
    kxi_687866914.patchLen = addInt(kxi_687866914.patchLen, 1);
  framePtr = F.prev;

  
}

function diff_687867077(newNode_687867078, oldNode_687867079, parent_687867080, current_687867081, kxi_687867082) {
      var Temporary1;

  var F = {procname: "karax.diff", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 492;
    F.filename = "karax.nim";
    var result_687867083 = eq_687866411(newNode_687867078, oldNode_687867079, false);
    F.line = 493;
    switch (result_687867083) {
    case 0:
      F.line = 495;
      kxi_687867082.components.push({oldNode: oldNode_687867079, newNode: newNode_687867078, parent: parent_687867080, current: current_687867081});;
      break;
    case 3:
    case 2:
      F.line = 500;
      newNode_687867078.dom = oldNode_687867079.dom;
      if ((result_687867083 == 2)) {
      F.line = 502;
      updateStyles_687866479(newNode_687867078, oldNode_687867079);
      F.line = 503;
      updateAttributes_687866893(newNode_687867078, oldNode_687867079);
      if ((oldNode_687867079.kind == 0)) {
      F.line = 506;
      oldNode_687867079.text = newNode_687867078.text;
      F.line = 507;
      oldNode_687867079.dom.nodeValue = newNode_687867078.text;
      }
      
      if ((oldNode_687867079.kind == 194)) {
      F.line = 511;
      oldNode_687867079.dom.value = newNode_687867078.text;
      F.line = 513;
      var checked_687867100 = getAttr_721421084(newNode_687867078, "checked");
      F.line = 514;
      if ((checked_687867100 == null)) {
      Temporary1 = false;
      }
      else {
      Temporary1 = true;
      }
      
      oldNode_687867079.dom.checked = Temporary1;
      }
      
      }
      
      if ((!(((newNode_687867078.events).length == 0)) || !(((oldNode_687867079.events).length == 0)))) {
      F.line = 517;
      mergeEvents_687866904(newNode_687867078, oldNode_687867079, kxi_687867082);
      }
      
      F.line = 519;
      var newLength_687867107 = len_721421105(newNode_687867078);
      F.line = 520;
      var oldLength_687867108 = len_721421105(oldNode_687867079);
      if (((newLength_687867107 == 0) && (oldLength_687867108 == 0))) {
      F.line = 521;
      break BeforeRet;
      }
      
      F.line = 522;
      var minLength_687867109 = nimMin(newLength_687867107, oldLength_687867108);
      if (!((oldNode_687867079.kind == newNode_687867078.kind))) {
      F.line = 524;
      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(524, 5) `oldNode.kind == newNode.kind` "));
      }
      
      F.line = 525;
      var commonPrefix_687867119 = 0;
      Label2: {
        F.line = 528;
          Label3: while (true) {
          if (!(commonPrefix_687867119 < minLength_687867109)) break Label3;
            if ((eq_687866411(HEX5BHEX5D_721421112(newNode_687867078, commonPrefix_687867119), HEX5BHEX5D_721421112(oldNode_687867079, commonPrefix_687867119), true) == 3)) {
            F.line = 530;
            addPatch_687866913(kxi_687867082, 5, null, null, HEX5BHEX5D_721421112(newNode_687867078, commonPrefix_687867119), HEX5BHEX5D_721421112(oldNode_687867079, commonPrefix_687867119));
            F.line = 531;
            commonPrefix_687867119 = addInt(commonPrefix_687867119, 1);
            }
            else {
              F.line = 533;
              break Label2;
            }
            
          }
      };
      F.line = 536;
      var oldPos_687867129 = subInt(oldLength_687867108, 1);
      F.line = 537;
      var newPos_687867130 = subInt(newLength_687867107, 1);
      Label4: {
        F.line = 538;
          Label5: while (true) {
          if (!((commonPrefix_687867119 <= oldPos_687867129) && (commonPrefix_687867119 <= newPos_687867130))) break Label5;
            if ((eq_687866411(HEX5BHEX5D_721421112(newNode_687867078, newPos_687867130), HEX5BHEX5D_721421112(oldNode_687867079, oldPos_687867129), true) == 3)) {
            F.line = 540;
            addPatch_687866913(kxi_687867082, 5, null, null, HEX5BHEX5D_721421112(newNode_687867078, newPos_687867130), HEX5BHEX5D_721421112(oldNode_687867079, oldPos_687867129));
            F.line = 541;
            oldPos_687867129 = subInt(oldPos_687867129, 1);
            F.line = 542;
            newPos_687867130 = subInt(newPos_687867130, 1);
            }
            else {
              F.line = 544;
              break Label4;
            }
            
          }
      };
      F.line = 546;
      var pos_687867145 = addInt(nimMin(oldPos_687867129, newPos_687867130), 1);
      Label6: {
        F.line = 548;
        var i_687867150 = 0;
        F.line = 81;
        F.filename = "iterators_1.nim";
        var colontmp__520100335 = 0;
        F.line = 548;
        F.filename = "karax.nim";
        colontmp__520100335 = subInt(pos_687867145, 1);
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100336 = commonPrefix_687867119;
        Label7: {
          F.line = 97;
            Label8: while (true) {
            if (!(res_520100336 <= colontmp__520100335)) break Label8;
              F.line = 548;
              F.filename = "karax.nim";
              i_687867150 = res_520100336;
              F.line = 549;
              diff_687867077(HEX5BHEX5D_721421112(newNode_687867078, i_687867150), HEX5BHEX5D_721421112(oldNode_687867079, i_687867150), current_687867081, HEX5BHEX5D_721421112(oldNode_687867079, i_687867150).dom, kxi_687867082);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100336 = addInt(res_520100336, 1);
            }
        };
      };
      if ((addInt(oldPos_687867129, 1) == oldLength_687867108)) {
      Label9: {
        F.line = 552;
        F.filename = "karax.nim";
        var i_687867155 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100339 = pos_687867145;
        Label10: {
          F.line = 97;
            Label11: while (true) {
            if (!(res_520100339 <= newPos_687867130)) break Label11;
              F.line = 552;
              F.filename = "karax.nim";
              i_687867155 = res_520100339;
              F.line = 553;
              addPatch_687866913(kxi_687867082, 2, current_687867081, null, HEX5BHEX5D_721421112(newNode_687867078, i_687867155), null);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100339 = addInt(res_520100339, 1);
            }
        };
      };
      }
      else {
        F.line = 555;
        F.filename = "karax.nim";
        var before_687867156 = current_687867081.childNodes[chckIndx(addInt(oldPos_687867129, 1), 0, (current_687867081.childNodes).length - 1)];
        Label12: {
          F.line = 556;
          var i_687867161 = 0;
          F.line = 96;
          F.filename = "iterators_1.nim";
          var res_520100342 = pos_687867145;
          Label13: {
            F.line = 97;
              Label14: while (true) {
              if (!(res_520100342 <= newPos_687867130)) break Label14;
                F.line = 556;
                F.filename = "karax.nim";
                i_687867161 = res_520100342;
                F.line = 557;
                addPatch_687866913(kxi_687867082, 3, current_687867081, before_687867156, HEX5BHEX5D_721421112(newNode_687867078, i_687867161), null);
                F.line = 102;
                F.filename = "iterators_1.nim";
                res_520100342 = addInt(res_520100342, 1);
              }
          };
        };
      }
      
      Label15: {
        F.line = 559;
        F.filename = "karax.nim";
        var i_687867166 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100345 = pos_687867145;
        Label16: {
          F.line = 97;
            Label17: while (true) {
            if (!(res_520100345 <= oldPos_687867129)) break Label17;
              F.line = 559;
              F.filename = "karax.nim";
              i_687867166 = res_520100345;
              F.line = 560;
              addPatch_687866913(kxi__, 4, null, null, null, HEX5BHEX5D_721421112(oldNode_687867079, i_687867166));
              F.line = 562;
              addPatch_687866913(kxi_687867082, 1, current_687867081, current_687867081.childNodes[chckIndx(i_687867166, 0, (current_687867081.childNodes).length - 1)], null, null);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100345 = addInt(res_520100345, 1);
            }
        };
      };
      break;
    case 1:
      F.line = 564;
      F.filename = "karax.nim";
      addPatch_687866913(kxi__, 4, null, null, null, oldNode_687867079);
      F.line = 565;
      addPatch_687866913(kxi_687867082, 0, parent_687867080, current_687867081, newNode_687867078, null);
      break;
    case 4:
      if (true) {
      F.line = 566;
      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(566, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  };
  framePtr = F.prev;

  
}

function applyComponents_687867191(kxi_687867192) {
  var F = {procname: "karax.applyComponents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 574;
    F.filename = "karax.nim";
    var i_687867193 = 0;
    Label1: {
      F.line = 577;
        Label2: while (true) {
        if (!(i_687867193 < (kxi_687867192.components).length)) break Label2;
          F.line = 578;
          var x_687867198 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].oldNode;
          F.line = 579;
          var newNode_687867199 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].newNode;
          if ((!((x_687867198.changedImpl == null)) && x_687867198.changedImpl(x_687867198, newNode_687867199))) {
          F.line = 585;
          var current_687867204 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].current;
          F.line = 586;
          var parent_687867205 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].parent;
          F.line = 587;
          x_687867198.updatedImpl(x_687867198, newNode_687867199);
          F.line = 588;
          var oldExpanded_687867206 = x_687867198.expanded;
          F.line = 589;
          x_687867198.expanded = x_687867198.renderImpl(x_687867198);
          F.line = 592;
          x_687867198.renderedVersion = x_687867198.version;
          if ((oldExpanded_687867206 == null)) {
          F.line = 594;
          addPatch_687866913(kxi__, 4, null, null, null, x_687867198);
          F.line = 595;
          addPatch_687866913(kxi_687867192, 0, parent_687867205, current_687867204, x_687867198.expanded, null);
          }
          else {
            F.line = 599;
            diff_687867077(x_687867198.expanded, oldExpanded_687867206, parent_687867205, current_687867204, kxi_687867192);
          }
          
          }
          
          F.line = 614;
          i_687867193 = addInt(i_687867193, 1);
        }
    };
    F.line = 615;
    if (kxi_687867192.components.length < 0) { for (var i = kxi_687867192.components.length ; i < 0 ; ++i) kxi_687867192.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_687867192.components.length = 0; };
  framePtr = F.prev;

  
}

function reapplyEvents_687866160(n_687866161) {
  var F = {procname: "karax.reapplyEvents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 155;
    F.filename = "karax.nim";
    removeAllEventHandlers_687865980(n_687866161.dom);
    F.line = 156;
    applyEvents_687866149(n_687866161);
  framePtr = F.prev;

  
}

function moveDom_687867007(dest_687867008, src_687867009) {
  var F = {procname: "karax.moveDom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 414;
    F.filename = "karax.nim";
    dest_687867008.dom = src_687867009.dom;
    F.line = 415;
    src_687867009.dom = null;
    F.line = 416;
    reapplyEvents_687866160(dest_687867008);
    if (!((dest_687867008.id == null))) {
    F.line = 418;
    kxi__.byId[dest_687867008.id] = dest_687867008;
    }
    
    if (!((len_721421105(dest_687867008) == len_721421105(src_687867009)))) {
    F.line = 419;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(419, 3) `dest.len == src.len` "));
    }
    
    Label1: {
      F.line = 420;
      var i_687867025 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100391 = 0;
      F.line = 420;
      F.filename = "karax.nim";
      colontmp__520100391 = len_721421105(dest_687867008);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100392 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100392 < colontmp__520100391)) break Label3;
            F.line = 420;
            F.filename = "karax.nim";
            i_687867025 = i_520100392;
            F.line = 421;
            moveDom_687867007(HEX5BHEX5D_721421112(dest_687867008, i_687867025), HEX5BHEX5D_721421112(src_687867009, i_687867025));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100392 = addInt(i_520100392, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_721421116(x_721421117, idx_721421118, y_721421119) {
  var F = {procname: "vdom.[]=", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 300;
    F.filename = "vdom.nim";
    x_721421117.kids[chckIndx(idx_721421118, 0, (x_721421117.kids).length - 1)] = y_721421119;
  framePtr = F.prev;

  
}

function applyPatch_687867026(kxi_687867027) {
  var F = {procname: "karax.applyPatch", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 424;
      F.filename = "karax.nim";
      var i_687867032 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100385 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100385 < kxi_687867027.patchLen)) break Label3;
            F.line = 424;
            F.filename = "karax.nim";
            i_687867032 = i_520100385;
            F.line = 425;
            var p_687867033 = nimCopy(null, kxi_687867027.patches[chckIndx(i_687867032, 0, (kxi_687867027.patches).length - 1)], NTI687865864);
            F.line = 426;
            switch (p_687867033.k) {
            case 0:
              F.line = 428;
              var nn_687867034 = toDom_687866178(p_687867033.newNode, true, kxi_687867027);
              if ((p_687867033.parent == null)) {
              F.line = 430;
              replaceById_687866398(kxi_687867027.rootId, nn_687867034);
              }
              else {
                if ((p_687867033.current.parentNode == p_687867033.parent)) {
                F.line = 433;
                p_687867033.parent.replaceChild(nn_687867034, p_687867033.current);
                }
                else {
                  F.line = 435;
                p_687867033.parent.appendChild(nn_687867034);
                }
                
              }
              
              break;
            case 5:
              F.line = 437;
              moveDom_687867007(p_687867033.newNode, p_687867033.oldNode);
              break;
            case 1:
              F.line = 439;
              p_687867033.parent.removeChild(p_687867033.current);
              break;
            case 2:
              F.line = 441;
              var nn_687867043 = toDom_687866178(p_687867033.newNode, true, kxi_687867027);
              F.line = 442;
              p_687867033.parent.appendChild(nn_687867043);
              break;
            case 3:
              F.line = 444;
              var nn_687867044 = toDom_687866178(p_687867033.newNode, true, kxi_687867027);
              F.line = 445;
              p_687867033.parent.insertBefore(nn_687867044, p_687867033.current);
              break;
            case 4:
              F.line = 447;
              var n_687867045 = p_687867033.oldNode;
              if (!((n_687867045.id == null))) {
              F.line = 448;
              delete kxi_687867027.byId[n_687867045.id];
              }
              
              if ((n_687867045.kind == 5)) {
              F.line = 450;
              var x_687867055 = n_687867045;
              if (!((x_687867055.onDetachImpl == null))) {
              F.line = 451;
              x_687867055.onDetachImpl(x_687867055);
              }
              
              }
              
              if (!(kxi_687867027.surpressRedraws)) {
              F.line = 453;
              n_687867045.dom = null;
              }
              
              break;
            }
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100385 = addInt(i_520100385, 1);
          }
      };
    };
    F.line = 454;
    F.filename = "karax.nim";
    kxi_687867027.patchLen = 0;
    Label4: {
      F.line = 455;
      var i_687867064 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100388 = 0;
      Label5: {
        F.line = 129;
          Label6: while (true) {
          if (!(i_520100388 < kxi_687867027.patchLenV)) break Label6;
            F.line = 455;
            F.filename = "karax.nim";
            i_687867064 = i_520100388;
            F.line = 456;
            var p_687867065 = nimCopy(null, kxi_687867027.patchesV[chckIndx(i_687867064, 0, (kxi_687867027.patchesV).length - 1)], NTI687865865);
            F.line = 457;
            HEX5BHEX5DHEX3D_721421116(p_687867065.parent, p_687867065.pos, p_687867065.newChild);
            if (!(!((p_687867065.newChild.dom == null)))) {
            F.line = 458;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(458, 5) `p.newChild.dom != nil` "));
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100388 = addInt(i_520100388, 1);
          }
      };
    };
    F.line = 459;
    F.filename = "karax.nim";
    kxi_687867027.patchLenV = 0;
  framePtr = F.prev;

  
}

function dodraw_687867280(kxi_687867281) {
    
function HEX3Aanonymous_687867285() {
      var F = {procname: "dodraw.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 681;
        F.filename = "karax.nim";
        dodraw_687867280(kxi_687867281);
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.dodraw", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((kxi_687867281.renderer == null)) {
    F.line = 676;
    F.filename = "karax.nim";
    break BeforeRet;
    }
    
    F.line = 677;
    kxi_687867281.renderId = 0;
    if (kxi_687867281.rendering) {
    F.line = 681;
    kxi_687867281.renderId = window.requestAnimationFrame(HEX3Aanonymous_687867285);
    F.line = 682;
    break BeforeRet;
    }
    
    F.line = 684;
    kxi_687867281.rendering = true;
    F.line = 686;
    var rdata_687867286 = {hashPart: null, queryString: null};
    if ((window.location.hash.indexOf("?")>=0)) {
    F.line = 688;
    var hashSplit_687867287 = window.location.hash.split("?");
    F.line = 689;
    rdata_687867286.hashPart = hashSplit_687867287[chckIndx(0, 0, (hashSplit_687867287).length - 1)];
    F.line = 690;
    rdata_687867286.queryString = (HEX5BHEX5D_687867297(hashSplit_687867287, HEX2EHEX2E_1006633065(1, 1)).join("?"));
    }
    else {
      F.line = 692;
      rdata_687867286.hashPart = window.location.hash;
      F.line = 693;
      rdata_687867286.queryString = window.location.search;
    }
    
    F.line = 695;
    var newtree_687867321 = kxi_687867281.renderer(rdata_687867286);
    F.line = 696;
    kxi_687867281.runCount = addInt(kxi_687867281.runCount, 1);
    F.line = 697;
    newtree_687867321.id = kxi_687867281.rootId;
    F.line = 698;
    kxi_687867281.toFocus = null;
    if ((kxi_687867281.currentTree == null)) {
    F.line = 700;
    var asdom_687867331 = toDom_687866178(newtree_687867321, true, kxi_687867281);
    F.line = 701;
    replaceById_687866398(kxi_687867281.rootId, asdom_687867331);
    }
    else {
      F.line = 705;
      var olddom_687867332 = document.getElementById(kxi_687867281.rootId);
      F.line = 706;
      diff_687867077(newtree_687867321, kxi_687867281.currentTree, null, olddom_687867332, kxi_687867281);
    }
    
    F.line = 710;
    applyComponents_687867191(kxi_687867281);
    F.line = 715;
    applyPatch_687867026(kxi_687867281);
    F.line = 716;
    kxi_687867281.currentTree = newtree_687867321;
    if (!((kxi_687867281.postRenderCallback == null))) {
    F.line = 721;
    kxi_687867281.postRenderCallback(rdata_687867286);
    }
    
    if (!((kxi_687867281.toFocus == null))) {
    F.line = 725;
    kxi_687867281.toFocus.focus();
    }
    
    F.line = 726;
    kxi_687867281.rendering = false;
  };
  framePtr = F.prev;

  
}

function redraw_687867377(kxi_687867378) {
    
function HEX3Aanonymous_687867379() {
      var F = {procname: "redraw.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 740;
        F.filename = "karax.nim";
        dodraw_687867280(kxi_687867378);
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.redraw", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if ((kxi_687867378.renderId == 0)) {
    F.line = 740;
    F.filename = "karax.nim";
    kxi_687867378.renderId = window.requestAnimationFrame(HEX3Aanonymous_687867379);
    }
    
  framePtr = F.prev;

  
}

function resize_520093923() {
  var F = {procname: "main.resize", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 147;
    F.filename = "main.nim";
    screenWidth_520093858[0] = window.innerWidth;
    F.line = 148;
    redraw_687867377(kxi__);
  framePtr = F.prev;

  
}

function len_520094543(t_520094546) {
  var result_520094547 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 486;
    F.filename = "tables.nim";
    result_520094547 = t_520094546.counter;
  framePtr = F.prev;

  return result_520094547;

}

function HEX24_520094498(t_520094501) {
  var result_520094502 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if ((len_520094543(t_520094501) == 0)) {
    F.line = 195;
    F.filename = "tableimpl.nim";
    result_520094502[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      F.line = 197;
      result_520094502[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        F.line = 198;
        var key_520094801 = [];
        F.line = 198;
        var val_520094802 = 0;
        F.line = 695;
        F.filename = "tables.nim";
        var L_520100410 = len_520094543(t_520094501);
        Label2: {
          F.line = 696;
          var h_520100412 = 0;
          F.line = 81;
          F.filename = "iterators_1.nim";
          var colontmp__520100413 = 0;
          F.line = 696;
          F.filename = "tables.nim";
          colontmp__520100413 = (t_520094501.data).length - 1;
          F.line = 96;
          F.filename = "iterators_1.nim";
          var res_520100414 = 0;
          Label3: {
            F.line = 97;
              Label4: while (true) {
              if (!(res_520100414 <= colontmp__520100413)) break Label4;
                F.line = 696;
                F.filename = "tables.nim";
                h_520100412 = res_520100414;
                if (isFilled_1107296287(t_520094501.data[chckIndx(h_520100412, 0, (t_520094501.data).length - 1)].Field0)) {
                F.line = 198;
                F.filename = "tableimpl.nim";
                key_520094801 = t_520094501.data[chckIndx(h_520100412, 0, (t_520094501.data).length - 1)].Field1;
                F.line = 198;
                val_520094802 = t_520094501.data[chckIndx(h_520100412, 0, (t_520094501.data).length - 1)].Field2;
                if ((1 < (result_520094502[0]).length)) {
                F.line = 199;
                result_520094502[0].push.apply(result_520094502[0], [44,32]);;
                }
                
                F.line = 200;
                addQuoted_1493176856(result_520094502, 0, key_520094801);
                F.line = 201;
                result_520094502[0].push.apply(result_520094502[0], [58,32]);;
                F.line = 202;
                addQuoted_838862213(result_520094502, 0, val_520094802);
                if (!((len_520094543(t_520094501) == L_520100410))) {
                F.line = 699;
                F.filename = "tables.nim";
                failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim(699, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 102;
                F.filename = "iterators_1.nim";
                res_520100414 = addInt(res_520100414, 1);
              }
          };
        };
      };
      F.line = 203;
      F.filename = "tableimpl.nim";
      result_520094502[0].push.apply(result_520094502[0], [125]);;
    }
    
  framePtr = F.prev;

  return result_520094502[0];

}

function len_520094855(t_520094858) {
  var result_520094859 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 486;
    F.filename = "tables.nim";
    result_520094859 = t_520094858.counter;
  framePtr = F.prev;

  return result_520094859;

}

function rawGet_520095110(t_520095113, key_520095114, hc_520095115, hc_520095115_Idx) {
  var result_520095116 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_520095115[hc_520095115_Idx] = hash_1124073936(key_520095114);
    if ((hc_520095115[hc_520095115_Idx] == 0)) {
    F.line = 64;
    hc_520095115[hc_520095115_Idx] = 314159265;
    }
    
    if (((t_520095113.data).length == 0)) {
    F.line = 43;
    result_520095116 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_520095166 = (hc_520095115[hc_520095115_Idx] & (t_520095113.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1107296287(t_520095113.data[chckIndx(h_520095166, 0, (t_520095113.data).length - 1)].Field0)) break Label2;
          if (((t_520095113.data[chckIndx(h_520095166, 0, (t_520095113.data).length - 1)].Field0 == hc_520095115[hc_520095115_Idx]) && eqStrings(t_520095113.data[chckIndx(h_520095166, 0, (t_520095113.data).length - 1)].Field1, key_520095114))) {
          F.line = 51;
          result_520095116 = h_520095166;
          break BeforeRet;
          }
          
          F.line = 52;
          h_520095166 = nextTry_1107296290(h_520095166, (t_520095113.data).length - 1);
        }
    };
    F.line = 53;
    result_520095116 = subInt((-1), h_520095166);
  };
  framePtr = F.prev;

  return result_520095116;

}

function mustRehash_520095416(t_520095418) {
  var result_520095419 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_520095418.counter < (t_520095418.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_520095419 = ((mulInt((t_520095418.data).length, 2) < mulInt(t_520095418.counter, 3)) || (subInt((t_520095418.data).length, t_520095418.counter) < 4));
  framePtr = F.prev;

  return result_520095419;

}

function rawInsert_520095833(t_520095837, data_520095838, data_520095838_Idx, key_520095839, val_520095840, hc_520095841, h_520095842) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_520095838[data_520095838_Idx][chckIndx(h_520095842, 0, (data_520095838[data_520095838_Idx]).length - 1)].Field1 = nimCopy(null, key_520095839, NTI33554449);
    F.line = 26;
    data_520095838[data_520095838_Idx][chckIndx(h_520095842, 0, (data_520095838[data_520095838_Idx]).length - 1)].Field2 = val_520095840;
    F.line = 27;
    data_520095838[data_520095838_Idx][chckIndx(h_520095842, 0, (data_520095838[data_520095838_Idx]).length - 1)].Field0 = hc_520095841;
  framePtr = F.prev;

  
}

function enlarge_520095559(t_520095562) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_520095565 = [];
    F.line = 251;
    n_520095565 = new Array(chckRange(mulInt((t_520095562.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_520095562.data).length, 2), 0, 2147483647) ; ++i) { n_520095565[i] = {Field0: 0, Field1: [], Field2: 0}; }    F.line = 252;
    var Temporary1 = t_520095562.data; t_520095562.data = n_520095565; n_520095565 = Temporary1;    Label2: {
      F.line = 253;
      var i_520095625 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520100419 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__520100419 = (n_520095565).length - 1;
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520100420 = 0;
      Label3: {
        F.line = 69;
          Label4: while (true) {
          if (!(res_520100420 <= colontmp__520100419)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_520095625 = res_520100420;
            F.line = 254;
            var eh_520095675 = n_520095565[chckIndx(i_520095625, 0, (n_520095565).length - 1)].Field0;
            if (isFilled_1107296287(eh_520095675)) {
            F.line = 256;
            var j_520095679 = (eh_520095675 & (t_520095562.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1107296287(t_520095562.data[chckIndx(j_520095679, 0, (t_520095562.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_520095679 = nextTry_1107296290(j_520095679, (t_520095562.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_520095833(t_520095562, t_520095562, "data", n_520095565[chckIndx(i_520095625, 0, (n_520095565).length - 1)].Field1, n_520095565[chckIndx(i_520095625, 0, (n_520095565).length - 1)].Field2, eh_520095675, j_520095679);
            }
            
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520100420 = addInt(res_520100420, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_520095990(t_520095993, key_520095994, hc_520095995) {
  var result_520095996 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_520095993.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_520095996 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_520096043 = (hc_520095995 & (t_520095993.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1107296287(t_520095993.data[chckIndx(h_520096043, 0, (t_520095993.data).length - 1)].Field0)) break Label2;
          if (((t_520095993.data[chckIndx(h_520096043, 0, (t_520095993.data).length - 1)].Field0 == hc_520095995) && eqStrings(t_520095993.data[chckIndx(h_520096043, 0, (t_520095993.data).length - 1)].Field1, key_520095994))) {
          F.line = 51;
          result_520095996 = h_520096043;
          break BeforeRet;
          }
          
          F.line = 52;
          h_520096043 = nextTry_1107296290(h_520096043, (t_520095993.data).length - 1);
        }
    };
    F.line = 53;
    result_520095996 = subInt((-1), h_520096043);
  };
  framePtr = F.prev;

  return result_520095996;

}

function HEX5BHEX5DHEX3D_520095053(t_520095056, key_520095057, val_520095058) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_520095056.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym9_520095104 = slotsNeeded_1107296298(32);
    F.line = 169;
    t_520095056.counter = 0;
    F.line = 170;
    t_520095056.data = new Array(chckRange(correctSizeHEX60gensym9_520095104, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_520095104, 0, 2147483647) ; ++i) { t_520095056.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    F.line = 59;
    var hc_520095109 = [0];
    F.line = 60;
    var index_520095317 = rawGet_520095110(t_520095056, key_520095057, hc_520095109, 0);
    if ((0 <= index_520095317)) {
    F.line = 61;
    t_520095056.data[chckIndx(index_520095317, 0, (t_520095056.data).length - 1)].Field2 = val_520095058;
    }
    else {
      if (((t_520095056.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym14_520095411 = slotsNeeded_1107296298(32);
      F.line = 169;
      t_520095056.counter = 0;
      F.line = 170;
      t_520095056.data = new Array(chckRange(correctSizeHEX60gensym14_520095411, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_520095411, 0, 2147483647) ; ++i) { t_520095056.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_520095416(t_520095056)) {
      F.line = 51;
      enlarge_520095559(t_520095056);
      F.line = 52;
      index_520095317 = rawGetKnownHC_520095990(t_520095056, key_520095057, hc_520095109[0]);
      }
      
      F.line = 53;
      index_520095317 = subInt((-1), index_520095317);
      F.line = 54;
      rawInsert_520095833(t_520095056, t_520095056, "data", key_520095057, val_520095058, hc_520095109[0], index_520095317);
      F.line = 62;
      t_520095056.counter = addInt(t_520095056.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function initSelectedSubPower_520094035() {
  var F = {procname: "main.initSelectedSubPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 181;
    F.filename = "main.nim";
    rawEcho(HEX24_520094498(selectedSubPower_520093916[0]));
    Label1: {
      F.line = 182;
      var name_520095016 = [];
      F.line = 738;
      F.filename = "tables.nim";
      var L_520100399 = len_520094855(allPowers_520093917[0]);
      Label2: {
        F.line = 739;
        var h_520100401 = 0;
        F.line = 81;
        F.filename = "iterators_1.nim";
        var colontmp__520100402 = 0;
        F.line = 739;
        F.filename = "tables.nim";
        colontmp__520100402 = (allPowers_520093917[0].data).length - 1;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100403 = 0;
        Label3: {
          F.line = 97;
            Label4: while (true) {
            if (!(res_520100403 <= colontmp__520100402)) break Label4;
              F.line = 739;
              F.filename = "tables.nim";
              h_520100401 = res_520100403;
              if (isFilled_1107296287(allPowers_520093917[0].data[chckIndx(h_520100401, 0, (allPowers_520093917[0].data).length - 1)].Field0)) {
              F.line = 182;
              F.filename = "main.nim";
              name_520095016 = allPowers_520093917[0].data[chckIndx(h_520100401, 0, (allPowers_520093917[0].data).length - 1)]["Field1"];
              F.line = 183;
              HEX5BHEX5DHEX3D_520095053(selectedSubPower_520093916[0], name_520095016, 0);
              if (!((len_520094855(allPowers_520093917[0]) == L_520100399))) {
              F.line = 742;
              F.filename = "tables.nim";
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim(742, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100403 = addInt(res_520100403, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Ddup_1224737102(src_1224737104) {
  var result_1224737103 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

    result_1224737103.item = src_1224737104.item;
    result_1224737103.color = src_1224737104.color;
    result_1224737103.index = src_1224737104.index;
    result_1224737103.timesMoved = src_1224737104.timesMoved;
    result_1224737103.piecesTaken = src_1224737104.piecesTaken;
    result_1224737103.tile["Field0"] = src_1224737104.tile["Field0"];
    result_1224737103.tile["Field1"] = src_1224737104.tile["Field1"];
    result_1224737103.moves = nimCopy(null, src_1224737104.moves, NTI1224736849);
    result_1224737103.takes = nimCopy(null, src_1224737104.takes, NTI1224736850);
    result_1224737103.onEndTurn = nimCopy(null, src_1224737104.onEndTurn, NTI1224736851);
    result_1224737103.onPromote = nimCopy(null, src_1224737104.onPromote, NTI1224736852);
    result_1224737103.promoted = src_1224737104.promoted;
    result_1224737103.filePath = nimCopy(null, src_1224737104.filePath, NTI33554449);
    result_1224737103.colorable = src_1224737104.colorable;
    result_1224737103.rotate = src_1224737104.rotate;
    result_1224737103.drunk = src_1224737104.drunk;
    result_1224737103.casts = nimCopy(null, src_1224737104.casts, NTI1224736853);

  return result_1224737103;

}

function arrayWith_1275068777(y_1275068780) {
  var result_1275068787 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];

  var F = {procname: "arrayWith.arrayWith", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2832;
      F.filename = "system.nim";
      var i_1275068792 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100424 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100424 <= 7)) break Label3;
            F.line = 2832;
            F.filename = "system.nim";
            i_1275068792 = res_520100424;
            F.line = 2836;
            result_1275068787[chckIndx(i_1275068792, 0, (result_1275068787).length - 1)] = nimCopy(result_1275068787[chckIndx(i_1275068792, 0, (result_1275068787).length - 1)], HEX3Ddup_1224737102(y_1275068780), NTI1224736794);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100424 = addInt(res_520100424, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1275068787;

}

function inCheck_1291845637(p_1291845638, b_1291845639) {
  var result_1291845931 = false;

  var F = {procname: "moves.inCheck", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 124;
      F.filename = "moves.nim";
      var i_1291845936 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100434 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100434 <= 7)) break Label3;
            F.line = 124;
            F.filename = "moves.nim";
            i_1291845936 = res_520100434;
            Label4: {
              F.line = 125;
              var j_1291845941 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_520100432 = 0;
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_520100432 <= 7)) break Label6;
                    F.line = 125;
                    F.filename = "moves.nim";
                    j_1291845941 = res_520100432;
                    F.line = 130;
                    var piece_1291845942 = nimCopy(null, b_1291845639[chckIndx(i_1291845936, 0, (b_1291845639).length - 1)][chckIndx(j_1291845941, 0, (b_1291845639[chckIndx(i_1291845936, 0, (b_1291845639).length - 1)]).length - 1)], NTI1224736794);
                    if ((piece_1291845942.item == 0)) {
                    F.line = 131;
                    F.line = 652;
                    F.filename = "sequtils.nim";
                    var resultHEX60gensym3_1291845971 = newSeq_1291845948(0);
                    Label7: {
                      F.line = 653;
                      var it_1291845975 = null;
                      F.line = 249;
                      F.filename = "iterators.nim";
                      var i_520100429 = 0;
                      F.line = 250;
                      var L_520100430 = (piece_1291845942.takes).length;
                      Label8: {
                        F.line = 251;
                          Label9: while (true) {
                          if (!(i_520100429 < L_520100430)) break Label9;
                            F.line = 653;
                            F.filename = "sequtils.nim";
                            it_1291845975 = piece_1291845942.takes[chckIndx(i_520100429, 0, (piece_1291845942.takes).length - 1)];
                            if (!((it_1291845975 == HEX3Aanonymous_1291845895))) {
                            F.line = 654;
                            resultHEX60gensym3_1291845971.push(it_1291845975);;
                            }
                            
                            F.line = 13;
                            F.filename = "iterators.nim";
                            i_520100429 += 1;
                            if (!(((piece_1291845942.takes).length == L_520100430))) {
                            F.line = 254;
                            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    piece_1291845942.takes = nimCopy(null, resultHEX60gensym3_1291845971, NTI1291845874);
                    }
                    
                    if (((!(isAir_1224737797(piece_1291845942)) && !(sameColor_1224737805(p_1291845638, piece_1291845942))) && contains_1224737422(getTakesOn_1224737272(piece_1291845942, b_1291845639), p_1291845638.tile))) {
                    F.line = 133;
                    F.filename = "moves.nim";
                    result_1291845931 = true;
                    break BeforeRet;
                    }
                    
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_520100432 = addInt(res_520100432, 1);
                  }
              };
            };
            F.line = 102;
            res_520100434 = addInt(res_520100434, 1);
          }
      };
    };
    F.line = 135;
    F.filename = "moves.nim";
    result_1291845931 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845931;

}

function HEX3Aanonymous_1291845895(board_1291845896, p_1291845897) {
  var result_1291845898 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((!((p_1291845897.timesMoved == 0)) || !((p_1291845897.tile.Field0 == 4)))) {
    F.line = 101;
    F.filename = "moves.nim";
    result_1291845898[0] = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    
    if ((((((isAir_1224737797(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 1), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)]) && isAir_1224737797(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 2), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)])) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].item == 4)) && sameColor_1224737805(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)], p_1291845897)) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].timesMoved == 0)) && !(inCheck_1291845637(p_1291845897, board_1291845896)))) {
    F.line = 110;
    var _ = addIfTake_1291845739(result_1291845898, 0, board_1291845896, p_1291845897, p_1291845897.tile, shooterFactory_1308622968(3, 0), false, true);
    }
    
    if (((((((isAir_1224737797(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 1), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)]) && isAir_1224737797(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 2), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)])) && isAir_1224737797(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)])) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 4), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].item == 4)) && sameColor_1224737805(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)], p_1291845897)) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 4), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].timesMoved == 0)) && !(inCheck_1291845637(p_1291845897, board_1291845896)))) {
    F.line = 120;
    var _ = addIfTake_1291845739(result_1291845898, 0, board_1291845896, p_1291845897, p_1291845897.tile, shooterFactory_1308622968((-4), 0), false, true);
    }
    
  };
  framePtr = F.prev;

  return result_1291845898[0];

}

function HEX3Aanonymous_1291845827(board_1291845828, p_1291845829) {
  var result_1291845830 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    if ((p_1291845829.timesMoved == 0)) {
    F.line = 57;
    F.filename = "moves.nim";
    var next_1291845831 = addIfFree_1291845640(result_1291845830, 0, board_1291845828, p_1291845829.tile, tileAbove_1308622990);
    if (next_1291845831) {
    F.line = 59;
    var _ = addIfFree_1291845640(result_1291845830, 0, board_1291845828, tileAbove_1308622990(p_1291845829.tile), tileAbove_1308622990);
    }
    
    }
    else {
      F.line = 61;
    var _ = addIfFree_1291845640(result_1291845830, 0, board_1291845828, p_1291845829.tile, tileAbove_1308622990);
    }
    
  framePtr = F.prev;

  return result_1291845830[0];

}

function HEX3Aanonymous_1291845849(board_1291845850, p_1291845851) {
  var result_1291845852 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 67;
    F.filename = "moves.nim";
    var _ = addIfTake_1291845739(result_1291845852, 0, board_1291845850, p_1291845851, p_1291845851.tile, shooterFactory_1308622968(1, (-1)), false, false);
    F.line = 68;
    var _ = addIfTake_1291845739(result_1291845852, 0, board_1291845850, p_1291845851, p_1291845851.tile, shooterFactory_1308622968((-1), (-1)), false, false);
  framePtr = F.prev;

  return result_1291845852[0];

}

function HEX3Aanonymous_1275068598(piece_1275068599, board_1275068600, state_1275068601) {
  var F = {procname: "basePieces.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    if ((isAtEnd_1224738001(piece_1275068599) && !(piece_1275068599.promoted))) {
    Label1: {
      F.line = 182;
      F.filename = "piece.nim";
      var xHEX60gensym0_1275068606 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100437 = 0;
      F.line = 250;
      var L_520100438 = (piece_1275068599.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100437 < L_520100438)) break Label3;
            F.line = 75;
            F.filename = "basePieces.nim";
            xHEX60gensym0_1275068606 = piece_1275068599.onPromote[chckIndx(i_520100437, 0, (piece_1275068599.onPromote).length - 1)];
            F.line = 183;
            F.filename = "piece.nim";
            xHEX60gensym0_1275068606(piece_1275068599, board_1275068600, state_1275068601);
            if (piece_1275068599.promoted) {
            F.line = 184;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100437 += 1;
            if (!(((piece_1275068599.onPromote).length == L_520100438))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1275068419(taken_1275068420, taker_1275068421, board_1275068422, state_1275068423) {
  var result_1275068426 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "basePieces.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((((((taker_1275068421.item == 0) && (taken_1275068420.item == 4)) && sameColor_1224737805(taken_1275068420, taker_1275068421)) && (taker_1275068421.timesMoved == 1)) && (taken_1275068420.timesMoved == 0))) {
    F.line = 13;
    F.filename = "basePieces.nim";
    state_1275068423.Field1[chckIndx(taken_1275068420.color, 0, (state_1275068423.Field1).length - 1)].hasCastled = true;
    F.line = 14;
    var kingTile_1275068435 = nimCopy(null, taker_1275068421.tile, NTI1224736771);
    if ((taken_1275068420.tile.Field0 == 0)) {
    F.line = 16;
    pieceMove_1224737557(taker_1275068421, kingTile_1275068435.Field1, subInt(kingTile_1275068435.Field0, 2), board_1275068422, state_1275068423);
    F.line = 17;
    pieceMove_1224737557(taken_1275068420, kingTile_1275068435.Field1, subInt(kingTile_1275068435.Field0, 1), board_1275068422, state_1275068423);
    F.line = 18;
    var colontmp__520100440 = {Field0: subInt(kingTile_1275068435.Field0, 1), Field1: kingTile_1275068435.Field1};
    F.line = 18;
    var colontmp__520100441 = false;
    F.line = 18;
    result_1275068426 = nimCopy(result_1275068426, {Field0: nimCopy(null, colontmp__520100440, NTI1224736771), Field1: colontmp__520100441}, NTI1275068424);
    break BeforeRet;
    }
    else {
      F.line = 20;
      pieceMove_1224737557(taker_1275068421, kingTile_1275068435.Field1, addInt(kingTile_1275068435.Field0, 2), board_1275068422, state_1275068423);
      F.line = 21;
      pieceMove_1224737557(taken_1275068420, kingTile_1275068435.Field1, addInt(kingTile_1275068435.Field0, 1), board_1275068422, state_1275068423);
      F.line = 22;
      var colontmp__520100442 = {Field0: addInt(kingTile_1275068435.Field0, 1), Field1: kingTile_1275068435.Field1};
      F.line = 22;
      var colontmp__520100443 = false;
      F.line = 22;
      result_1275068426 = nimCopy(result_1275068426, {Field0: nimCopy(null, colontmp__520100442, NTI1224736771), Field1: colontmp__520100443}, NTI1275068424);
      break BeforeRet;
    }
    
    }
    else {
      F.line = 25;
      result_1275068426 = nimCopy(result_1275068426, HEX3Aanonymous_1224737605(taken_1275068420, taker_1275068421, board_1275068422, state_1275068423), NTI1275068424);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1275068426;

}

function HEX3Aanonymous_1291845854(board_1291845855, p_1291845856) {
  var result_1291845857 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    if ((p_1291845856.timesMoved == 0)) {
    F.line = 76;
    F.filename = "moves.nim";
    var next_1291845858 = addIfFree_1291845640(result_1291845857, 0, board_1291845855, p_1291845856.tile, tileBelow_1308622993);
    if (next_1291845858) {
    F.line = 78;
    var _ = addIfFree_1291845640(result_1291845857, 0, board_1291845855, tileBelow_1308622993(p_1291845856.tile), tileBelow_1308622993);
    }
    
    }
    else {
      F.line = 80;
    var _ = addIfFree_1291845640(result_1291845857, 0, board_1291845855, p_1291845856.tile, tileBelow_1308622993);
    }
    
  framePtr = F.prev;

  return result_1291845857[0];

}

function HEX3Aanonymous_1291845860(board_1291845861, p_1291845862) {
  var result_1291845863 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 86;
    F.filename = "moves.nim";
    var _ = addIfTake_1291845739(result_1291845863, 0, board_1291845861, p_1291845862, p_1291845862.tile, shooterFactory_1308622968(1, 1), false, false);
    F.line = 87;
    var _ = addIfTake_1291845739(result_1291845863, 0, board_1291845861, p_1291845862, p_1291845862.tile, shooterFactory_1308622968((-1), 1), false, false);
  framePtr = F.prev;

  return result_1291845863[0];

}

function startingState_1275068775() {
  var result_1275068776 = {Field0: ({nextIndex: 0, nextGroup: 0, randSeed: 0, turnNumber: 0}), Field1: [({abilityTakes: 0, hasCastled: false, communist: false, dna: [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], transforms: [[], [], [], [], [], [], [], []], wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]}), ({abilityTakes: 0, hasCastled: false, communist: false, dna: [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], transforms: [[], [], [], [], [], [], [], []], wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]})]};

  var F = {procname: "basePieces.startingState", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "basePieces.nim";
    result_1275068776.Field0 = nimCopy(result_1275068776.Field0, {nextIndex: 1, nextGroup: 1, randSeed: 0, turnNumber: 0}, NTI1224736796);
    F.line = 116;
    result_1275068776.Field1 = nimCopy(result_1275068776.Field1, [{abilityTakes: 0, hasCastled: false, communist: false, dna: arrayWith_1275068777({timesMoved: 0, piecesTaken: 0, tile: nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771), promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, item: 0, color: 0, index: 0, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], casts: []}), wallet: {val: 0, has: false}, buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [{val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}], transforms: [[], [], [], [], [], [], [], []]}, {abilityTakes: 0, hasCastled: false, communist: false, dna: arrayWith_1275068777({timesMoved: 0, piecesTaken: 0, tile: nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771), promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, item: 0, color: 0, index: 0, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], casts: []}), wallet: {val: 0, has: false}, buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [{val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}], transforms: [[], [], [], [], [], [], [], []]}], NTI1224736855);
    F.line = 118;
    result_1275068776.Field1[chckIndx(1, 0, (result_1275068776.Field1).length - 1)].dna = nimCopy(result_1275068776.Field1[chckIndx(1, 0, (result_1275068776.Field1).length - 1)].dna, [{item: 0, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291845880, HEX3Aanonymous_1291845895], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,105,110,103,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 1, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], NTI1224736857);
    F.line = 129;
    result_1275068776.Field1[chckIndx(0, 0, (result_1275068776.Field1).length - 1)].dna = nimCopy(result_1275068776.Field1[chckIndx(0, 0, (result_1275068776.Field1).length - 1)].dna, [{item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291845880, HEX3Aanonymous_1291845895], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,105,110,103,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 1, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], NTI1224736857);
  framePtr = F.prev;

  return result_1275068776;

}

function startingBoard_1275068644(state_1275068645) {
  var result_1275068646 = [[({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})]];

  var F = {procname: "basePieces.startingBoard", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    F.line = 88;
    F.filename = "basePieces.nim";
    result_1275068646 = nimCopy(result_1275068646, [[{item: 4, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 1, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291845880, HEX3Aanonymous_1291845895], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,105,110,103,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1275068598], onPromote: [HEX3Aanonymous_1275068592], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 4, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 1, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 0, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291845880, HEX3Aanonymous_1291845895], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,105,110,103,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1224737605, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737211], onPromote: [HEX3Aanonymous_1224737211], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}]], NTI1224736773);
    Label1: {
      F.line = 97;
      var i_1275068653 = 0;
      F.line = 97;
      var r_1275068654 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 164;
      F.filename = "iterators.nim";
      var i_520100450 = 0;
      Label2: {
        F.line = 165;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 97;
            F.filename = "basePieces.nim";
            i_1275068653 = i_520100450;
            F.line = 97;
            r_1275068654 = nimCopy(r_1275068654, result_1275068646[chckIndx(i_520100450, 0, (result_1275068646).length - 1)], NTI1224736772);
            Label4: {
              F.line = 98;
              var j_1275068661 = 0;
              F.line = 98;
              var x_1275068662 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 164;
              F.filename = "iterators.nim";
              var i_520100447 = 0;
              Label5: {
                F.line = 165;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 98;
                    F.filename = "basePieces.nim";
                    j_1275068661 = i_520100447;
                    F.line = 98;
                    x_1275068662 = nimCopy(x_1275068662, r_1275068654[chckIndx(i_520100447, 0, (r_1275068654).length - 1)], NTI1224736794);
                    F.line = 99;
                    result_1275068646[chckIndx(i_1275068653, 0, (result_1275068646).length - 1)][chckIndx(j_1275068661, 0, (result_1275068646[chckIndx(i_1275068653, 0, (result_1275068646).length - 1)]).length - 1)] = nimCopy(result_1275068646[chckIndx(i_1275068653, 0, (result_1275068646).length - 1)][chckIndx(j_1275068661, 0, (result_1275068646[chckIndx(i_1275068653, 0, (result_1275068646).length - 1)]).length - 1)], pieceCopy_1224737661(x_1275068662, newIndex_1224737256(state_1275068645), {Field0: nimCopy(null, j_1275068661, NTI1224736798), Field1: nimCopy(null, i_1275068653, NTI1224736804)}, x_1275068662.item, x_1275068662.color, x_1275068662.timesMoved, x_1275068662.piecesTaken, x_1275068662.moves, x_1275068662.takes, x_1275068662.onMove, x_1275068662.onTake, x_1275068662.whenTaken, x_1275068662.onEndTurn, x_1275068662.onPromote, x_1275068662.promoted, x_1275068662.filePath, x_1275068662.colorable, x_1275068662.rotate, x_1275068662.drunk), NTI1224736794);
                    if ((7 <= i_520100447)) {
                    F.line = 167;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520100447 += 1;
                  }
              };
            };
            if ((7 <= i_520100450)) {
            F.line = 167;
            break Label2;
            }
            
            F.line = 13;
            i_520100450 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1275068646;

}

function initGame_520093937() {
  var F = {procname: "main.initGame", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 160;
    F.filename = "main.nim";
    theState_520093826[0] = nimCopy(theState_520093826[0], startingState_1275068775(), NTI1224736795);
    F.line = 161;
    theBoard_520093825[0] = nimCopy(theBoard_520093825[0], startingBoard_1275068644(theState_520093826[0]), NTI1224736773);
    if (true) {
    F.line = 162;
    theState_520093826[0].Field0.randSeed = parseInt(roomId_520093800[0].Field1, 10);
    }
    
    F.line = 163;
    myDrafts_520093813[0] = nimCopy(null, [], NTI1442841214);
    F.line = 164;
    opponentDrafts_520093818[0] = nimCopy(null, [], NTI1442841214);
    F.line = 165;
    lastMove_520093844[0] = nimCopy(null, [], NTI1291845837);
    F.line = 166;
    piecesChecking_520093849[0] = nimCopy(null, [], NTI1291845837);
    F.line = 167;
    actionStack_520093877[0] = nimCopy(null, [], NTI520093829);
    F.line = 168;
    nextActionStack_520093882[0] = nimCopy(null, [], NTI520093829);
    F.line = 169;
    toSend_520093887[0] = nimCopy(null, [], NTI520093829);
    F.line = 170;
    promptHistory_520093892[0] = nimCopy(null, [], NTI1006632986);
    F.line = 171;
    promptStack_520093897[0] = nimCopy(null, [], NTI1006632986);
    F.line = 172;
    picksLeft_520093898[0] = 0;
    F.line = 173;
    picks_520093906[0] = nimCopy(null, [], NTI1291845837);
  framePtr = F.prev;

  
}

function newSeq_1442841126(len_1442841128) {
  var result_1442841129 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1442841129 = new Array(len_1442841128); for (var i = 0 ; i < len_1442841128 ; ++i) { result_1442841129[i] = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []}; }  framePtr = F.prev;

  return result_1442841129;

}

function HEX2A_989855752(x_989855753, order_989855754) {
  var result_989855755 = 0;

  var F = {procname: "algorithm.*", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 68;
    F.filename = "algorithm.nim";
    var y_989855760 = subInt(order_989855754, 1);
    F.line = 69;
    result_989855755 = subInt((x_989855753 ^ y_989855760), y_989855760);
  framePtr = F.prev;

  return result_989855755;

}

function mergeAlt_1442841159(a_1442841161, b_1442841162, lo_1442841163, m_1442841164, hi_1442841165, cmp_1442841168, order_1442841169) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((HEX2A_989855752(cmp_1442841168(a_1442841161[chckIndx(m_1442841164, 0, (a_1442841161).length - 1)], a_1442841161[chckIndx(addInt(m_1442841164, 1), 0, (a_1442841161).length - 1)]), order_1442841169) <= 0)) {
    F.line = 335;
    F.filename = "algorithm.nim";
    break BeforeRet;
    }
    
    F.line = 336;
    var j_1442841170 = lo_1442841163;
    if (!((j_1442841170 <= m_1442841164))) {
    F.line = 338;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim(338, 3) `j <= m` "));
    }
    
    F.line = 340;
    var bb_1442841176 = 0;
    Label1: {
      F.line = 341;
        Label2: while (true) {
        if (!(j_1442841170 <= m_1442841164)) break Label2;
          F.line = 342;
          b_1442841162[chckIndx(bb_1442841176, 0, (b_1442841162).length - 1)] = nimCopy(b_1442841162[chckIndx(bb_1442841176, 0, (b_1442841162).length - 1)], a_1442841161[chckIndx(j_1442841170, 0, (a_1442841161).length - 1)], NTI1442840582);
          F.line = 343;
          bb_1442841176 = addInt(bb_1442841176, 1);
          F.line = 344;
          j_1442841170 = addInt(j_1442841170, 1);
        }
    };
    F.line = 348;
    var i_1442841187 = 0;
    F.line = 349;
    var k_1442841188 = lo_1442841163;
    Label3: {
      F.line = 351;
        Label4: while (true) {
        if (!((k_1442841188 < j_1442841170) && (j_1442841170 <= hi_1442841165))) break Label4;
          if ((HEX2A_989855752(cmp_1442841168(b_1442841162[chckIndx(i_1442841187, 0, (b_1442841162).length - 1)], a_1442841161[chckIndx(j_1442841170, 0, (a_1442841161).length - 1)]), order_1442841169) <= 0)) {
          F.line = 353;
          a_1442841161[chckIndx(k_1442841188, 0, (a_1442841161).length - 1)] = nimCopy(a_1442841161[chckIndx(k_1442841188, 0, (a_1442841161).length - 1)], b_1442841162[chckIndx(i_1442841187, 0, (b_1442841162).length - 1)], NTI1442840582);
          F.line = 354;
          i_1442841187 = addInt(i_1442841187, 1);
          }
          else {
            F.line = 356;
            a_1442841161[chckIndx(k_1442841188, 0, (a_1442841161).length - 1)] = nimCopy(a_1442841161[chckIndx(k_1442841188, 0, (a_1442841161).length - 1)], a_1442841161[chckIndx(j_1442841170, 0, (a_1442841161).length - 1)], NTI1442840582);
            F.line = 357;
            j_1442841170 = addInt(j_1442841170, 1);
          }
          
          F.line = 358;
          k_1442841188 = addInt(k_1442841188, 1);
        }
    };
    Label5: {
      F.line = 361;
        Label6: while (true) {
        if (!(k_1442841188 < j_1442841170)) break Label6;
          F.line = 362;
          a_1442841161[chckIndx(k_1442841188, 0, (a_1442841161).length - 1)] = nimCopy(a_1442841161[chckIndx(k_1442841188, 0, (a_1442841161).length - 1)], b_1442841162[chckIndx(i_1442841187, 0, (b_1442841162).length - 1)], NTI1442840582);
          F.line = 363;
          k_1442841188 = addInt(k_1442841188, 1);
          F.line = 364;
          i_1442841187 = addInt(i_1442841187, 1);
        }
    };
  };
  framePtr = F.prev;

  
}

function sort_1442841142(a_1442841144, cmp_1442841147, order_1442841148) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 411;
    F.filename = "algorithm.nim";
    var n_1442841152 = (a_1442841144).length;
    F.line = 412;
    var b_1442841156 = newSeq_1442841126(chckRange(divInt(n_1442841152, 2), 0, 2147483647));
    F.line = 413;
    var s_1442841157 = 1;
    Label1: {
      F.line = 414;
        Label2: while (true) {
        if (!(s_1442841157 < n_1442841152)) break Label2;
          F.line = 415;
          var m_1442841158 = subInt(subInt(n_1442841152, 1), s_1442841157);
          Label3: {
            F.line = 416;
              Label4: while (true) {
              if (!(0 <= m_1442841158)) break Label4;
                F.line = 417;
                mergeAlt_1442841159(a_1442841144, b_1442841156, nimMax(addInt(subInt(m_1442841158, s_1442841157), 1), 0), m_1442841158, addInt(m_1442841158, s_1442841157), cmp_1442841147, order_1442841148);
                F.line = 418;
                m_1442841158 = subInt(m_1442841158, mulInt(s_1442841157, 2));
              }
          };
          F.line = 419;
          s_1442841157 = mulInt(s_1442841157, 2);
        }
    };
  framePtr = F.prev;

  
}

function sorted_1442841114(a_1442841116, cmp_1442841119, order_1442841120) {
  var result_1442841121 = [];

  var F = {procname: "sorted.sorted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "algorithm.nim";
    result_1442841121 = nimCopy(null, newSeq_1442841126(chckRange((a_1442841116).length, 0, 2147483647)), NTI1442840998);
    Label1: {
      F.line = 449;
      var i_1442841141 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100477 = 0;
      F.line = 449;
      F.filename = "algorithm.nim";
      colontmp__520100477 = (a_1442841116).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100478 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100478 <= colontmp__520100477)) break Label3;
            F.line = 449;
            F.filename = "algorithm.nim";
            i_1442841141 = res_520100478;
            F.line = 450;
            result_1442841121[chckIndx(i_1442841141, 0, (result_1442841121).length - 1)] = nimCopy(result_1442841121[chckIndx(i_1442841141, 0, (result_1442841121).length - 1)], a_1442841116[chckIndx(i_1442841141, 0, (a_1442841116).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100478 = addInt(res_520100478, 1);
          }
      };
    };
    F.line = 451;
    F.filename = "algorithm.nim";
    sort_1442841142(result_1442841121, cmp_1442841119, order_1442841120);
  framePtr = F.prev;

  return result_1442841121;

}

function cmp_33557985(x_33557987, y_33557988) {
  var result_33557989 = 0;

  var F = {procname: "cmp.cmp", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((x_33557987 == y_33557988)) {
    F.line = 892;
    F.filename = "system.nim";
    result_33557989 = 0;
    break BeforeRet;
    }
    
    if ((x_33557987 < y_33557988)) {
    F.line = 893;
    result_33557989 = (-1);
    break BeforeRet;
    }
    
    F.line = 894;
    result_33557989 = 1;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_33557989;

}

function find_1006633015(a_1006633018, item_1006633019) {
  var result_1006633020 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1006633020 = 0;
    Label1: {
      F.line = 1672;
      var i_1006633024 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520097555 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520097555 < (a_1006633018).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1006633024 = a_1006633018[chckIndx(i_520097555, 0, (a_1006633018).length - 1)];
            if (eqStrings(i_1006633024, item_1006633019)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1006633020 = addInt(result_1006633020, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520097555 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1006633020 = (-1);
  };
  framePtr = F.prev;

  return result_1006633020;

}

function contains_1006633010(a_1006633012, item_1006633013) {
  var result_1006633014 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1006633014 = (0 <= find_1006633015(a_1006633012, item_1006633013));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1006633014;

}

function HEX26_1442841016(x_1442841018, y_1442841019) {
  var result_1442841020 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1553;
    F.filename = "system.nim";
    result_1442841020 = new Array(chckRange(addInt((x_1442841018).length, 1), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1442841018).length, 1), 0, 2147483647) ; ++i) { result_1442841020[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }    Label1: {
      F.line = 1554;
      var i_1442841035 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100486 = 0;
      F.line = 1554;
      F.filename = "system.nim";
      colontmp__520100486 = subInt((x_1442841018).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100487 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100487 <= colontmp__520100486)) break Label3;
            F.line = 1554;
            F.filename = "system.nim";
            i_1442841035 = res_520100487;
            F.line = 1555;
            result_1442841020[chckIndx(i_1442841035, 0, (result_1442841020).length - 1)] = nimCopy(result_1442841020[chckIndx(i_1442841035, 0, (result_1442841020).length - 1)], x_1442841018[chckIndx(i_1442841035, 0, (x_1442841018).length - 1)], NTI1442840581);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100487 = addInt(res_520100487, 1);
          }
      };
    };
    F.line = 1556;
    F.filename = "system.nim";
    result_1442841020[chckIndx((x_1442841018).length, 0, (result_1442841020).length - 1)] = nimCopy(result_1442841020[chckIndx((x_1442841018).length, 0, (result_1442841020).length - 1)], y_1442841019, NTI1442840581);
  framePtr = F.prev;

  return result_1442841020;

}

function secretSynergize_1442841087(currentPowers_1442841088, synergies_1442841089) {
      
function HEX3Aanonymous_1442841096(xHEX60gensym23_1442841100, yHEX60gensym23_1442841101) {
        var result_1442841102 = 0;

        var F = {procname: "secretSynergize.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
        framePtr = F;
          F.line = 500;
          F.filename = "algorithm.nim";
          var it_1442841103 = nimCopy(null, xHEX60gensym23_1442841100, NTI1442840582);
          F.line = 501;
          var aHEX60gensym23_1442841104 = it_1442841103.Field0.priority;
          F.line = 502;
          it_1442841103 = nimCopy(it_1442841103, yHEX60gensym23_1442841101, NTI1442840582);
          F.line = 503;
          var bHEX60gensym23_1442841105 = it_1442841103.Field0.priority;
          F.line = 504;
          result_1442841102 = cmp_33557985(aHEX60gensym23_1442841104, bHEX60gensym23_1442841105);
        framePtr = F.prev;

        return result_1442841102;

      }

  var result_1442841090 = [];

  var F = {procname: "power.secretSynergize", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "power.nim";
    result_1442841090 = nimCopy(null, currentPowers_1442841088, NTI1442840976);
    Label1: {
      F.line = 139;
      var s_1442841238 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520100472 = [];
      F.line = 139;
      F.filename = "power.nim";
      F.line = 499;
      F.filename = "algorithm.nim";
      var resultHEX60gensym23_1442841234 = sorted_1442841114(synergies_1442841089, HEX3Aanonymous_1442841096, 1);
      colontmp__520100472 = resultHEX60gensym23_1442841234;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100473 = 0;
      F.line = 250;
      var L_520100474 = (colontmp__520100472).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100473 < L_520100474)) break Label3;
            F.line = 139;
            F.filename = "power.nim";
            s_1442841238 = colontmp__520100472[chckIndx(i_520100473, 0, (colontmp__520100472).length - 1)];
            Label4: {
              if (contains_1442841239(currentPowers_1442841088, s_1442841238.Field0)) {
              F.line = 140;
              break Label4;
              }
              
                F.line = 652;
                F.filename = "sequtils.nim";
                var resultHEX60gensym27_1442841292 = newSeq_1442840931(0);
                Label5: {
                  F.line = 653;
                  var it_1442841296 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                  F.line = 249;
                  F.filename = "iterators.nim";
                  var i_520100465 = 0;
                  F.line = 250;
                  var L_520100466 = (result_1442841090).length;
                  Label6: {
                    F.line = 251;
                      Label7: while (true) {
                      if (!(i_520100465 < L_520100466)) break Label7;
                        F.line = 653;
                        F.filename = "sequtils.nim";
                        it_1442841296 = result_1442841090[chckIndx(i_520100465, 0, (result_1442841090).length - 1)];
                        if (contains_1006633010(s_1442841238.Field2, it_1442841296.name)) {
                        F.line = 654;
                        var Temporary8 = nimCopy(null, it_1442841296, NTI1442840581);
                        resultHEX60gensym27_1442841292.push(Temporary8);;
                        }
                        
                        F.line = 13;
                        F.filename = "iterators.nim";
                        i_520100465 += 1;
                        if (!(((result_1442841090).length == L_520100466))) {
                        F.line = 254;
                        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
              if (((resultHEX60gensym27_1442841292).length == (s_1442841238.Field2).length)) {
              if (((s_1442841238.Field3).length == 0)) {
              F.line = 143;
              F.filename = "power.nim";
              var Temporary9 = nimCopy(null, powers_1442840649[0][chckIndx(s_1442841238.Field0.index, 0, (powers_1442840649[0]).length - 1)], NTI1442840581);
              result_1442841090.push(Temporary9);;
              }
              else {
                F.line = 145;
                F.line = 652;
                F.filename = "sequtils.nim";
                var resultHEX60gensym30_1442841322 = newSeq_1442840931(0);
                Label10: {
                  F.line = 653;
                  var it_1442841326 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                  F.line = 249;
                  F.filename = "iterators.nim";
                  var i_520100469 = 0;
                  F.line = 250;
                  var L_520100470 = (result_1442841090).length;
                  Label11: {
                    F.line = 251;
                      Label12: while (true) {
                      if (!(i_520100469 < L_520100470)) break Label12;
                        F.line = 653;
                        F.filename = "sequtils.nim";
                        it_1442841326 = result_1442841090[chckIndx(i_520100469, 0, (result_1442841090).length - 1)];
                        if (!(contains_1006633010(s_1442841238.Field3, it_1442841326.name))) {
                        F.line = 654;
                        var Temporary13 = nimCopy(null, it_1442841326, NTI1442840581);
                        resultHEX60gensym30_1442841322.push(Temporary13);;
                        }
                        
                        F.line = 13;
                        F.filename = "iterators.nim";
                        i_520100469 += 1;
                        if (!(((result_1442841090).length == L_520100470))) {
                        F.line = 254;
                        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                result_1442841090 = nimCopy(null, HEX26_1442841016(resultHEX60gensym30_1442841322, powers_1442840649[0][chckIndx(s_1442841238.Field0.index, 0, (powers_1442840649[0]).length - 1)]), NTI1442840934);
              }
              
              }
              
            };
            F.line = 13;
            i_520100473 += 1;
            if (!(((colontmp__520100472).length == L_520100474))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1442841090;

}

function HEX26_1442841714(x_1442841716, y_1442841717) {
  var result_1442841718 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1442841718 = new Array(chckRange(addInt((x_1442841716).length, (y_1442841717).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1442841716).length, (y_1442841717).length), 0, 2147483647) ; ++i) { result_1442841718[i] = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []}; }    Label1: {
      F.line = 1538;
      var i_1442841736 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100490 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__520100490 = subInt((x_1442841716).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100491 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100491 <= colontmp__520100490)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1442841736 = res_520100491;
            F.line = 1539;
            result_1442841718[chckIndx(i_1442841736, 0, (result_1442841718).length - 1)] = nimCopy(result_1442841718[chckIndx(i_1442841736, 0, (result_1442841718).length - 1)], x_1442841716[chckIndx(i_1442841736, 0, (x_1442841716).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100491 = addInt(res_520100491, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1442841744 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100494 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__520100494 = subInt((y_1442841717).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100495 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_520100495 <= colontmp__520100494)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1442841744 = res_520100495;
            F.line = 1541;
            result_1442841718[chckIndx(addInt(i_1442841744, (x_1442841716).length), 0, (result_1442841718).length - 1)] = nimCopy(result_1442841718[chckIndx(addInt(i_1442841744, (x_1442841716).length), 0, (result_1442841718).length - 1)], y_1442841717[chckIndx(i_1442841744, 0, (y_1442841717).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100495 = addInt(res_520100495, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841718;

}

function mergeAlt_1442841877(a_1442841879, b_1442841880, lo_1442841881, m_1442841882, hi_1442841883, cmp_1442841886, order_1442841887) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((HEX2A_989855752(cmp_1442841886(a_1442841879[chckIndx(m_1442841882, 0, (a_1442841879).length - 1)], a_1442841879[chckIndx(addInt(m_1442841882, 1), 0, (a_1442841879).length - 1)]), order_1442841887) <= 0)) {
    F.line = 335;
    F.filename = "algorithm.nim";
    break BeforeRet;
    }
    
    F.line = 336;
    var j_1442841888 = lo_1442841881;
    if (!((j_1442841888 <= m_1442841882))) {
    F.line = 338;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim(338, 3) `j <= m` "));
    }
    
    F.line = 340;
    var bb_1442841894 = 0;
    Label1: {
      F.line = 341;
        Label2: while (true) {
        if (!(j_1442841888 <= m_1442841882)) break Label2;
          F.line = 342;
          b_1442841880[chckIndx(bb_1442841894, 0, (b_1442841880).length - 1)] = nimCopy(b_1442841880[chckIndx(bb_1442841894, 0, (b_1442841880).length - 1)], a_1442841879[chckIndx(j_1442841888, 0, (a_1442841879).length - 1)], NTI1442840581);
          F.line = 343;
          bb_1442841894 = addInt(bb_1442841894, 1);
          F.line = 344;
          j_1442841888 = addInt(j_1442841888, 1);
        }
    };
    F.line = 348;
    var i_1442841905 = 0;
    F.line = 349;
    var k_1442841906 = lo_1442841881;
    Label3: {
      F.line = 351;
        Label4: while (true) {
        if (!((k_1442841906 < j_1442841888) && (j_1442841888 <= hi_1442841883))) break Label4;
          if ((HEX2A_989855752(cmp_1442841886(b_1442841880[chckIndx(i_1442841905, 0, (b_1442841880).length - 1)], a_1442841879[chckIndx(j_1442841888, 0, (a_1442841879).length - 1)]), order_1442841887) <= 0)) {
          F.line = 353;
          a_1442841879[chckIndx(k_1442841906, 0, (a_1442841879).length - 1)] = nimCopy(a_1442841879[chckIndx(k_1442841906, 0, (a_1442841879).length - 1)], b_1442841880[chckIndx(i_1442841905, 0, (b_1442841880).length - 1)], NTI1442840581);
          F.line = 354;
          i_1442841905 = addInt(i_1442841905, 1);
          }
          else {
            F.line = 356;
            a_1442841879[chckIndx(k_1442841906, 0, (a_1442841879).length - 1)] = nimCopy(a_1442841879[chckIndx(k_1442841906, 0, (a_1442841879).length - 1)], a_1442841879[chckIndx(j_1442841888, 0, (a_1442841879).length - 1)], NTI1442840581);
            F.line = 357;
            j_1442841888 = addInt(j_1442841888, 1);
          }
          
          F.line = 358;
          k_1442841906 = addInt(k_1442841906, 1);
        }
    };
    Label5: {
      F.line = 361;
        Label6: while (true) {
        if (!(k_1442841906 < j_1442841888)) break Label6;
          F.line = 362;
          a_1442841879[chckIndx(k_1442841906, 0, (a_1442841879).length - 1)] = nimCopy(a_1442841879[chckIndx(k_1442841906, 0, (a_1442841879).length - 1)], b_1442841880[chckIndx(i_1442841905, 0, (b_1442841880).length - 1)], NTI1442840581);
          F.line = 363;
          k_1442841906 = addInt(k_1442841906, 1);
          F.line = 364;
          i_1442841905 = addInt(i_1442841905, 1);
        }
    };
  };
  framePtr = F.prev;

  
}

function sort_1442841860(a_1442841862, cmp_1442841865, order_1442841866) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 411;
    F.filename = "algorithm.nim";
    var n_1442841870 = (a_1442841862).length;
    F.line = 412;
    var b_1442841874 = newSeq_1442840931(chckRange(divInt(n_1442841870, 2), 0, 2147483647));
    F.line = 413;
    var s_1442841875 = 1;
    Label1: {
      F.line = 414;
        Label2: while (true) {
        if (!(s_1442841875 < n_1442841870)) break Label2;
          F.line = 415;
          var m_1442841876 = subInt(subInt(n_1442841870, 1), s_1442841875);
          Label3: {
            F.line = 416;
              Label4: while (true) {
              if (!(0 <= m_1442841876)) break Label4;
                F.line = 417;
                mergeAlt_1442841877(a_1442841862, b_1442841874, nimMax(addInt(subInt(m_1442841876, s_1442841875), 1), 0), m_1442841876, addInt(m_1442841876, s_1442841875), cmp_1442841865, order_1442841866);
                F.line = 418;
                m_1442841876 = subInt(m_1442841876, mulInt(s_1442841875, 2));
              }
          };
          F.line = 419;
          s_1442841875 = mulInt(s_1442841875, 2);
        }
    };
  framePtr = F.prev;

  
}

function sorted_1442841838(a_1442841840, cmp_1442841843, order_1442841844) {
  var result_1442841845 = [];

  var F = {procname: "sorted.sorted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "algorithm.nim";
    result_1442841845 = nimCopy(null, newSeq_1442840931(chckRange((a_1442841840).length, 0, 2147483647)), NTI1442840869);
    Label1: {
      F.line = 449;
      var i_1442841859 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100498 = 0;
      F.line = 449;
      F.filename = "algorithm.nim";
      colontmp__520100498 = (a_1442841840).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100499 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100499 <= colontmp__520100498)) break Label3;
            F.line = 449;
            F.filename = "algorithm.nim";
            i_1442841859 = res_520100499;
            F.line = 450;
            result_1442841845[chckIndx(i_1442841859, 0, (result_1442841845).length - 1)] = nimCopy(result_1442841845[chckIndx(i_1442841859, 0, (result_1442841845).length - 1)], a_1442841840[chckIndx(i_1442841859, 0, (a_1442841840).length - 1)], NTI1442840581);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100499 = addInt(res_520100499, 1);
          }
      };
    };
    F.line = 451;
    F.filename = "algorithm.nim";
    sort_1442841860(result_1442841845, cmp_1442841843, order_1442841844);
  framePtr = F.prev;

  return result_1442841845;

}

function concat_1442841754(seqs_1442841756) {
  var result_1442841757 = [];

  var F = {procname: "concat.concat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "sequtils.nim";
    var L_1442841758 = 0;
    Label1: {
      F.line = 135;
      var seqitm_1442841772 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520100508 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520100508 < (seqs_1442841756).length)) break Label3;
            F.line = 135;
            F.filename = "sequtils.nim";
            seqitm_1442841772 = seqs_1442841756[chckIndx(i_520100508, 0, (seqs_1442841756).length - 1)];
            F.line = 135;
            L_1442841758 = addInt(L_1442841758, (seqitm_1442841772).length);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100508 += 1;
          }
      };
    };
    F.line = 136;
    F.filename = "sequtils.nim";
    result_1442841757 = new Array(chckRange(L_1442841758, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1442841758, 0, 2147483647) ; ++i) { result_1442841757[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }    F.line = 137;
    var i_1442841785 = 0;
    Label4: {
      F.line = 138;
      var s_1442841789 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520100515 = 0;
      Label5: {
        F.line = 19;
          Label6: while (true) {
          if (!(i_520100515 < (seqs_1442841756).length)) break Label6;
            F.line = 138;
            F.filename = "sequtils.nim";
            s_1442841789 = seqs_1442841756[chckIndx(i_520100515, 0, (seqs_1442841756).length - 1)];
            Label7: {
              F.line = 139;
              var itm_1442841793 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520100512 = 0;
              F.line = 250;
              var L_520100513 = (s_1442841789).length;
              Label8: {
                F.line = 251;
                  Label9: while (true) {
                  if (!(i_520100512 < L_520100513)) break Label9;
                    F.line = 139;
                    F.filename = "sequtils.nim";
                    itm_1442841793 = s_1442841789[chckIndx(i_520100512, 0, (s_1442841789).length - 1)];
                    F.line = 140;
                    result_1442841757[chckIndx(i_1442841785, 0, (result_1442841757).length - 1)] = nimCopy(result_1442841757[chckIndx(i_1442841785, 0, (result_1442841757).length - 1)], itm_1442841793, NTI1442840581);
                    F.line = 141;
                    i_1442841785 = addInt(i_1442841785, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520100512 += 1;
                    if (!(((s_1442841789).length == L_520100513))) {
                    F.line = 254;
                    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            F.line = 13;
            i_520100515 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1442841757;

}

function formatValue_1442841952(result_1442841955, result_1442841955_Idx, value_1442841956) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 492;
    F.filename = "strformat.nim";
    result_1442841955[result_1442841955_Idx].push.apply(result_1442841955[result_1442841955_Idx], HEX24_369098760(value_1442841956));;
  framePtr = F.prev;

  
}

function execute_1442841695(myDrafts_1442841696, opponentDrafts_1442841697, mySide_1442841698, board_1442841699, state_1442841700) {
      
function HEX3Aanonymous_1442841820(xHEX60gensym51_1442841824, yHEX60gensym51_1442841825) {
        var result_1442841826 = 0;

        var F = {procname: "execute.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
        framePtr = F;
          F.line = 500;
          F.filename = "algorithm.nim";
          var it_1442841827 = nimCopy(null, xHEX60gensym51_1442841824, NTI1442840581);
          F.line = 501;
          var aHEX60gensym51_1442841828 = it_1442841827.priority;
          F.line = 502;
          it_1442841827 = nimCopy(it_1442841827, yHEX60gensym51_1442841825, NTI1442840581);
          F.line = 503;
          var bHEX60gensym51_1442841829 = it_1442841827.priority;
          F.line = 504;
          result_1442841826 = cmp_33557985(aHEX60gensym51_1442841828, bHEX60gensym51_1442841829);
        framePtr = F.prev;

        return result_1442841826;

      }

  var F = {procname: "power.execute", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 197;
      F.filename = "power.nim";
      var x_1442841704 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100453 = 0;
      F.line = 250;
      var L_520100454 = (myDrafts_1442841696).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100453 < L_520100454)) break Label3;
            F.line = 197;
            F.filename = "power.nim";
            x_1442841704 = myDrafts_1442841696[chckIndx(i_520100453, 0, (myDrafts_1442841696).length - 1)];
            if (!((!(contains_1442841239(opponentDrafts_1442841697, x_1442841704)) && !(eqStrings(x_1442841704.name, [78,111,116,104,105,110,103,46,32,78,111,116,104,105,110,103,46,46,46]))))) {
            F.line = 198;
            failedAssertImpl_268435541((makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/power.nim(198, 9) `x notin opponentDrafts and x.name != emptyPower.name` ") || []).concat(x_1442841704.name || [],[32,105,115,32,115,111,109,101,104,111,119,32,105,110,32,98,111,116,104,32,112,111,111,108,115] || []));
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100453 += 1;
            if (!(((myDrafts_1442841696).length == L_520100454))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 200;
    F.filename = "power.nim";
    var mySynergizedDrafts_1442841748 = secretSynergize_1442841087(myDrafts_1442841696, HEX26_1442841714(secretSynergies_1442840651[0], secretSecretSynergies_1442840652[0]));
    F.line = 201;
    var opponentSynergizedDrafts_1442841753 = secretSynergize_1442841087(opponentDrafts_1442841697, HEX26_1442841714(secretSynergies_1442840651[0], secretSecretSynergies_1442840652[0]));
    Label4: {
      F.line = 203;
      var d_1442841941 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520100458 = [];
      F.line = 203;
      F.filename = "power.nim";
      F.line = 499;
      F.filename = "algorithm.nim";
      var resultHEX60gensym51_1442841937 = sorted_1442841838(concat_1442841754([nimCopy(null, mySynergizedDrafts_1442841748, NTI1442841453), nimCopy(null, opponentSynergizedDrafts_1442841753, NTI1442841458)]), HEX3Aanonymous_1442841820, 1);
      colontmp__520100458 = resultHEX60gensym51_1442841937;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100459 = 0;
      F.line = 250;
      var L_520100460 = (colontmp__520100458).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_520100459 < L_520100460)) break Label6;
            F.line = 203;
            F.filename = "power.nim";
            d_1442841941 = colontmp__520100458[chckIndx(i_520100459, 0, (colontmp__520100458).length - 1)];
            F.line = 204;
            Label7: {
              F.line = 204;
              var fmtRes_1442841946 = [mnewString(0)];
              F.line = 204;
              fmtRes_1442841946[0].push.apply(fmtRes_1442841946[0], [69,120,101,99,117,116,105,110,103,32]);;
              F.line = 204;
              formatValue_1442840708(fmtRes_1442841946, 0, d_1442841941.name);
              F.line = 204;
              fmtRes_1442841946[0].push.apply(fmtRes_1442841946[0], [32,119,105,116,104,32,112,114,105,111,32,111,102,32]);;
              F.line = 204;
              formatValue_1442841952(fmtRes_1442841946, 0, d_1442841941.priority);
            };
            rawEcho(fmtRes_1442841946[0]);
            if (contains_1442841239(mySynergizedDrafts_1442841748, d_1442841941)) {
            F.line = 206;
            d_1442841941.onStart(mySide_1442841698, mySide_1442841698, board_1442841699, state_1442841700);
            }
            else {
              F.line = 208;
            d_1442841941.onStart(otherSide_1224737822(mySide_1442841698), mySide_1442841698, board_1442841699, state_1442841700);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100459 += 1;
            if (!(((colontmp__520100458).length == L_520100460))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function add_520097287(x_520097289, x_520097289_Idx, y_520097290) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_520097294 = (x_520097289[x_520097289_Idx]).length;
    F.line = 1211;
    if (x_520097289[x_520097289_Idx].length < (Temporary1 = chckRange(addInt(xl_520097294, (y_520097290).length), 0, 2147483647), Temporary1)) { for (var i = x_520097289[x_520097289_Idx].length ; i < Temporary1 ; ++i) x_520097289[x_520097289_Idx].push(({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0})); }
               else { x_520097289[x_520097289_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_520097309 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100518 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__520100518 = (y_520097290).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100519 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_520100519 <= colontmp__520100518)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_520097309 = res_520100519;
            F.line = 1212;
            x_520097289[x_520097289_Idx][chckIndx(addInt(xl_520097294, i_520097309), 0, (x_520097289[x_520097289_Idx]).length - 1)] = nimCopy(x_520097289[x_520097289_Idx][chckIndx(addInt(xl_520097294, i_520097309), 0, (x_520097289[x_520097289_Idx]).length - 1)], y_520097290[chckIndx(i_520097309, 0, (y_520097290).length - 1)], NTI1442840581);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100519 = addInt(res_520100519, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174198(taken_1493174199, taker_1493174200, board_1493174201, state_1493174202) {
  var result_1493174205 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1317;
    F.filename = "powers.nim";
    var colontmp__520100522 = nimCopy(null, taker_1493174200.tile, NTI1224736771);
    F.line = 1317;
    var colontmp__520100523 = false;
    F.line = 1317;
    result_1493174205 = nimCopy(result_1493174205, {Field0: nimCopy(null, colontmp__520100522, NTI1224736771), Field1: colontmp__520100523}, NTI1493174132);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493174205;

}

function HEX3Aanonymous_1493174161(piece_1493174162, board_1493174163, state_1493174164) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(piece_1493174162.drunk)) {
    F.line = 1304;
    F.filename = "powers.nim";
    piece_1493174162.drunk = true;
    F.line = 1305;
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1493174162.tile.Field1), mulInt(100, piece_1493174162.tile.Field0)), state_1493174164.Field0.randSeed)));
    F.line = 1307;
    piece_1493174162.moves.push(HEX3Aanonymous_1291845865);;
    F.line = 1308;
    var moves_1493174169 = HEX3Aanonymous_1291845865(board_1493174163, piece_1493174162);
    F.line = 1309;
    var takes_1493174170 = HEX3Aanonymous_1291845880(board_1493174163, piece_1493174162);
    F.line = 1310;
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym76_1493174175 = newSeq_1224737520(0);
    Label1: {
      F.line = 653;
      var it_1493174179 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100525 = 0;
      F.line = 250;
      var L_520100526 = (moves_1493174169).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100525 < L_520100526)) break Label3;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1493174179 = moves_1493174169[chckIndx(i_520100525, 0, (moves_1493174169).length - 1)];
            if (!(contains_1224737422(takes_1493174170, it_1493174179))) {
            F.line = 654;
            var Temporary4 = nimCopy(null, it_1493174179, NTI1224736771);
            resultHEX60gensym76_1493174175.push(Temporary4);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100525 += 1;
            if (!(((moves_1493174169).length == L_520100526))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var attempt_1493174188 = nimCopy(null, resultHEX60gensym76_1493174175, NTI1224737341);
    if (((attempt_1493174188).length == 0)) {
    F.line = 1312;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    else {
      F.line = 1313;
    piece_1493174162.onMove(piece_1493174162, sample_1493173886(attempt_1493174188), board_1493174163, state_1493174164);
    }
    
    }
    
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1493174207(side_1493174208, __1493174209, b_1493174210, state_1493174211) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(state_1493174211.Field0.randSeed));
    F.line = 1329;
    if ((side_1493174208 == 0)) {
    Temporary1 = 5;
    }
    else {
    Temporary1 = 2;
    }
    
    var rank_1493174216 = Temporary1;
    F.line = 1330;
    var commoner_1493174233 = {item: 7, color: side_1493174208, moves: [HEX3Aanonymous_1291845865], takes: [], onMove: HEX3Aanonymous_1224737632, onTake: HEX3Aanonymous_1224737643, whenTaken: HEX3Aanonymous_1493174198, onEndTurn: [HEX3Aanonymous_1493174161], onPromote: [HEX3Aanonymous_1224737211], filePath: [99,105,118,105,108,105,97,110,46,115,118,103], timesMoved: 0, piecesTaken: 0, tile: nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771), promoted: false, colorable: true, rotate: false, drunk: false, index: 0, casts: []};
    F.line = 1334;
    var spawns_1493174234 = 0;
    F.line = 1335;
    var failsafe_1493174235 = 20;
    F.line = 1336;
    var attempt_1493174236 = rand_1392509064(7);
    Label2: {
      F.line = 1337;
        Label3: while (true) {
        if (!(!((spawns_1493174234 == 3)) && !((failsafe_1493174235 == 0)))) break Label3;
          if (isAir_1224737797(b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)][chckIndx(attempt_1493174236, 0, (b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)]).length - 1)])) {
          F.line = 1339;
          var tile_1493174237 = nimCopy(null, b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)][chckIndx(attempt_1493174236, 0, (b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)]).length - 1)].tile, NTI1224736771);
          F.line = 1340;
          b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)][chckIndx(attempt_1493174236, 0, (b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)]).length - 1)] = nimCopy(b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)][chckIndx(attempt_1493174236, 0, (b_1493174210[chckIndx(rank_1493174216, 0, (b_1493174210).length - 1)]).length - 1)], pieceCopy_1224737661(commoner_1493174233, newIndex_1224737256(state_1493174211), tile_1493174237, commoner_1493174233.item, commoner_1493174233.color, commoner_1493174233.timesMoved, commoner_1493174233.piecesTaken, commoner_1493174233.moves, commoner_1493174233.takes, commoner_1493174233.onMove, commoner_1493174233.onTake, commoner_1493174233.whenTaken, commoner_1493174233.onEndTurn, commoner_1493174233.onPromote, commoner_1493174233.promoted, commoner_1493174233.filePath, commoner_1493174233.colorable, commoner_1493174233.rotate, commoner_1493174233.drunk), NTI1224736794);
          F.line = 1341;
          spawns_1493174234 = addInt(spawns_1493174234, 1);
          }
          else {
            F.line = 1343;
          failsafe_1493174235 = subInt(failsafe_1493174235, 1);
          }
          
          F.line = 1345;
          attempt_1493174236 = rand_1392509064(7);
        }
    };
  framePtr = F.prev;

  
}

function synergize_1442840902(pool_1442840903, currentPowers_1442840904, t_1442840905) {
  var result_1442840906 = [];

  var F = {procname: "power.synergize", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 128;
    F.filename = "power.nim";
    result_1442840906 = nimCopy(null, pool_1442840903, NTI1442840845);
    Label1: {
      F.line = 129;
      var s_1442840929 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100564 = 0;
      F.line = 250;
      var L_520100565 = (draftSynergies_1442840650[0]).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100564 < L_520100565)) break Label3;
            F.line = 129;
            F.filename = "power.nim";
            s_1442840929 = draftSynergies_1442840650[0][chckIndx(i_520100564, 0, (draftSynergies_1442840650[0]).length - 1)];
              F.line = 652;
              F.filename = "sequtils.nim";
              var resultHEX60gensym16_1442840955 = newSeq_1442840931(0);
              Label4: {
                F.line = 653;
                var it_1442840977 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520100557 = 0;
                F.line = 250;
                var L_520100558 = (currentPowers_1442840904).length;
                Label5: {
                  F.line = 251;
                    Label6: while (true) {
                    if (!(i_520100557 < L_520100558)) break Label6;
                      F.line = 653;
                      F.filename = "sequtils.nim";
                      it_1442840977 = currentPowers_1442840904[chckIndx(i_520100557, 0, (currentPowers_1442840904).length - 1)];
                      if (contains_1006633010(s_1442840929.Field2, it_1442840977.name)) {
                      F.line = 654;
                      var Temporary7 = nimCopy(null, it_1442840977, NTI1442840581);
                      resultHEX60gensym16_1442840955.push(Temporary7);;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520100557 += 1;
                      if (!(((currentPowers_1442840904).length == L_520100558))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            if (((resultHEX60gensym16_1442840955).length == (s_1442840929.Field2).length)) {
            if (((s_1442840929.Field3).length == 0)) {
            F.line = 132;
            F.filename = "power.nim";
            var Temporary8 = nimCopy(null, powers_1442840649[0][chckIndx(s_1442840929.Field0.index, 0, (powers_1442840649[0]).length - 1)], NTI1442840581);
            result_1442840906.push(Temporary8);;
            }
            else {
              F.line = 134;
              F.line = 652;
              F.filename = "sequtils.nim";
              var resultHEX60gensym21_1442841003 = newSeq_1442840931(0);
              Label9: {
                F.line = 653;
                var it_1442841007 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520100561 = 0;
                F.line = 250;
                var L_520100562 = (result_1442840906).length;
                Label10: {
                  F.line = 251;
                    Label11: while (true) {
                    if (!(i_520100561 < L_520100562)) break Label11;
                      F.line = 653;
                      F.filename = "sequtils.nim";
                      it_1442841007 = result_1442840906[chckIndx(i_520100561, 0, (result_1442840906).length - 1)];
                      if (!(contains_1006633010(s_1442840929.Field3, it_1442841007.name))) {
                      F.line = 654;
                      var Temporary12 = nimCopy(null, it_1442841007, NTI1442840581);
                      resultHEX60gensym21_1442841003.push(Temporary12);;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520100561 += 1;
                      if (!(((result_1442840906).length == L_520100562))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              result_1442840906 = nimCopy(null, HEX26_1442841016(resultHEX60gensym21_1442841003, powers_1442840649[0][chckIndx(s_1442840929.Field0.index, 0, (powers_1442840649[0]).length - 1)]), NTI1442840934);
            }
            
            }
            
            F.line = 13;
            i_520100564 += 1;
            if (!(((draftSynergies_1442840650[0]).length == L_520100565))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1442840906;

}

function newSeq_503317026(len_503317028) {
  var result_503317029 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_503317029 = new Array(len_503317028); for (var i = 0 ; i < len_503317028 ; ++i) { result_503317029[i] = []; }  framePtr = F.prev;

  return result_503317029;

}

function newSeq_1442841512(len_1442841514) {
  var result_1442841515 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1442841515 = new Array(len_1442841514); for (var i = 0 ; i < len_1442841514 ; ++i) { result_1442841515[i] = 0; }  framePtr = F.prev;

  return result_1442841515;

}

function randomPower_1442841418(t_1442841419, currentPowers_1442841420, alreadySelected_1442841425) {
      var Temporary2;

  var result_1442841426 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});

  var F = {procname: "power.randomPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 163;
    F.filename = "power.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym32_1442841431 = newSeq_1442840931(0);
    Label1: {
      F.line = 653;
      var it_1442841435 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520100538 = [];
      F.line = 163;
      F.filename = "power.nim";
      colontmp__520100538 = synergize_1442840902((Temporary2 = seqOf_1442841385(t_1442841419), Temporary2)[0][Temporary2[1]], currentPowers_1442841420, t_1442841419);
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100539 = 0;
      F.line = 250;
      var L_520100540 = (colontmp__520100538).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_520100539 < L_520100540)) break Label4;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1442841435 = colontmp__520100538[chckIndx(i_520100539, 0, (colontmp__520100538).length - 1)];
              Label5: {
                F.line = 1024;
                var iHEX60gensym34_1442841456 = 0;
                F.line = 1025;
                var resultHEX60gensym34_1442841463 = newSeq_503317026(chckRange((alreadySelected_1442841425).length, 0, 2147483647));
                Label6: {
                  F.line = 1026;
                  var it_1442841467 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                  F.line = 249;
                  F.filename = "iterators.nim";
                  var i_520100535 = 0;
                  F.line = 250;
                  var L_520100536 = (alreadySelected_1442841425).length;
                  Label7: {
                    F.line = 251;
                      Label8: while (true) {
                      if (!(i_520100535 < L_520100536)) break Label8;
                        F.line = 1026;
                        F.filename = "sequtils.nim";
                        it_1442841467 = alreadySelected_1442841425[chckIndx(i_520100535, 0, (alreadySelected_1442841425).length - 1)];
                        F.line = 163;
                        F.filename = "power.nim";
                        resultHEX60gensym34_1442841463[chckIndx(iHEX60gensym34_1442841456, 0, (resultHEX60gensym34_1442841463).length - 1)] = nimCopy(null, it_1442841467.name, NTI33554449);
                        F.line = 1028;
                        F.filename = "sequtils.nim";
                        iHEX60gensym34_1442841456 = addInt(iHEX60gensym34_1442841456, 1);
                        F.line = 13;
                        F.filename = "iterators.nim";
                        i_520100535 += 1;
                        if (!(((alreadySelected_1442841425).length == L_520100536))) {
                        F.line = 254;
                        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
              };
            if (!(contains_1006633010(resultHEX60gensym34_1442841463, it_1442841435.name))) {
            F.line = 654;
            F.filename = "sequtils.nim";
            var Temporary9 = nimCopy(null, it_1442841435, NTI1442840581);
            resultHEX60gensym32_1442841431.push(Temporary9);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100539 += 1;
            if (!(((colontmp__520100538).length == L_520100540))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var search_1442841480 = nimCopy(null, resultHEX60gensym32_1442841431, NTI1442840869);
    if (((search_1442841480).length == 0)) {
    F.line = 164;
    F.filename = "power.nim";
    result_1442841426 = nimCopy(result_1442841426, emptyPower_1442840638, NTI1442840581);
    break BeforeRet;
    }
    
    F.line = 166;
    F.line = 975;
    F.filename = "sequtils.nim";
    Label10: {
      F.line = 1024;
      var iHEX60gensym38_1442841508 = 0;
      F.line = 1025;
      var resultHEX60gensym38_1442841536 = newSeq_1442841512(chckRange((search_1442841480).length, 0, 2147483647));
      Label11: {
        F.line = 1026;
        var it_1442841540 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520100544 = 0;
        F.line = 250;
        var L_520100545 = (search_1442841480).length;
        Label12: {
          F.line = 251;
            Label13: while (true) {
            if (!(i_520100544 < L_520100545)) break Label13;
              F.line = 1026;
              F.filename = "sequtils.nim";
              it_1442841540 = search_1442841480[chckIndx(i_520100544, 0, (search_1442841480).length - 1)];
              F.line = 166;
              F.filename = "power.nim";
              resultHEX60gensym38_1442841536[chckIndx(iHEX60gensym38_1442841508, 0, (resultHEX60gensym38_1442841536).length - 1)] = it_1442841540.rarity;
              F.line = 1028;
              F.filename = "sequtils.nim";
              iHEX60gensym38_1442841508 = addInt(iHEX60gensym38_1442841508, 1);
              F.line = 13;
              F.filename = "iterators.nim";
              i_520100544 += 1;
              if (!(((search_1442841480).length == L_520100545))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var sHEX60gensym37_1442841545 = nimCopy(null, resultHEX60gensym38_1442841536, NTI1442841292);
    F.line = 976;
    F.filename = "sequtils.nim";
    var nHEX60gensym37_1442841550 = (sHEX60gensym37_1442841545).length;
    if (!((0 < nHEX60gensym37_1442841550))) {
    F.line = 977;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym37 > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 978;
    var resultHEX60gensym37_1442841556 = sHEX60gensym37_1442841545[chckIndx(subInt(nHEX60gensym37_1442841550, 1), 0, (sHEX60gensym37_1442841545).length - 1)];
    Label14: {
      F.line = 979;
      var iHEX60gensym37_1442841562 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__520100548 = 0;
      F.line = 979;
      F.filename = "sequtils.nim";
      colontmp__520100548 = subInt(nHEX60gensym37_1442841550, 2);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520100549 = colontmp__520100548;
      Label15: {
        F.line = 34;
          Label16: while (true) {
          if (!(0 <= res_520100549)) break Label16;
            F.line = 979;
            F.filename = "sequtils.nim";
            iHEX60gensym37_1442841562 = res_520100549;
            F.line = 981;
            var a_1442841563 = sHEX60gensym37_1442841545[chckIndx(iHEX60gensym37_1442841562, 0, (sHEX60gensym37_1442841545).length - 1)];
            F.line = 982;
            var b_1442841564 = resultHEX60gensym37_1442841556;
            F.line = 166;
            F.filename = "power.nim";
            resultHEX60gensym37_1442841556 = addInt(a_1442841563, b_1442841564);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_520100549 = subInt(res_520100549, 1);
          }
      };
    };
    var sum_1442841565 = resultHEX60gensym37_1442841556;
    F.line = 167;
    F.filename = "power.nim";
    var x_1442841566 = rand_1392509064(sum_1442841565);
    Label17: {
      F.line = 169;
      var p_1442841570 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100552 = 0;
      F.line = 250;
      var L_520100553 = (search_1442841480).length;
      Label18: {
        F.line = 251;
          Label19: while (true) {
          if (!(i_520100552 < L_520100553)) break Label19;
            F.line = 169;
            F.filename = "power.nim";
            p_1442841570 = search_1442841480[chckIndx(i_520100552, 0, (search_1442841480).length - 1)];
            F.line = 170;
            x_1442841566 = subInt(x_1442841566, p_1442841570.rarity);
            if ((x_1442841566 <= 0)) {
            F.line = 171;
            result_1442841426 = nimCopy(result_1442841426, p_1442841570, NTI1442840581);
            break BeforeRet;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100552 += 1;
            if (!(((search_1442841480).length == L_520100553))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };
  framePtr = F.prev;

  return result_1442841426;

}

function randomTier_1442841575(w_1442841576) {
  var result_1442841577 = 0;

  var F = {procname: "power.randomTier", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((addInt(addInt(addInt(w_1442841576.Field0, w_1442841576.Field1), w_1442841576.Field2), w_1442841576.Field3) == 100))) {
    F.line = 174;
    F.filename = "power.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/power.nim(174, 5) `w.common + w.uncommon + w.rare + w.ultraRare == 100` "));
    }
    
    F.line = 175;
    var x_1442841583 = rand_1392509064(100);
    if ((x_1442841583 <= w_1442841576.Field0)) {
    F.line = 178;
    result_1442841577 = 0;
    break BeforeRet;
    }
    else {
    if ((x_1442841583 <= addInt(w_1442841576.Field0, w_1442841576.Field1))) {
    F.line = 180;
    result_1442841577 = 1;
    break BeforeRet;
    }
    else {
    if ((x_1442841583 <= addInt(addInt(w_1442841576.Field0, w_1442841576.Field1), w_1442841576.Field2))) {
    F.line = 182;
    result_1442841577 = 2;
    break BeforeRet;
    }
    else {
      F.line = 184;
      result_1442841577 = 3;
      break BeforeRet;
    }
    }}
  };
  framePtr = F.prev;

  return result_1442841577;

}

function HEX26_1442841613(x_1442841615, y_1442841616) {
  var result_1442841617 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1442841617 = new Array(chckRange(addInt((x_1442841615).length, (y_1442841616).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1442841615).length, (y_1442841616).length), 0, 2147483647) ; ++i) { result_1442841617[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }    Label1: {
      F.line = 1538;
      var i_1442841635 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100568 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__520100568 = subInt((x_1442841615).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100569 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100569 <= colontmp__520100568)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1442841635 = res_520100569;
            F.line = 1539;
            result_1442841617[chckIndx(i_1442841635, 0, (result_1442841617).length - 1)] = nimCopy(result_1442841617[chckIndx(i_1442841635, 0, (result_1442841617).length - 1)], x_1442841615[chckIndx(i_1442841635, 0, (x_1442841615).length - 1)], NTI1442840581);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100569 = addInt(res_520100569, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1442841643 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100572 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__520100572 = subInt((y_1442841616).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100573 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_520100573 <= colontmp__520100572)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1442841643 = res_520100573;
            F.line = 1541;
            result_1442841617[chckIndx(addInt(i_1442841643, (x_1442841615).length), 0, (result_1442841617).length - 1)] = nimCopy(result_1442841617[chckIndx(addInt(i_1442841643, (x_1442841615).length), 0, (result_1442841617).length - 1)], y_1442841616[chckIndx(i_1442841643, 0, (y_1442841616).length - 1)], NTI1442840581);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100573 = addInt(res_520100573, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841617;

}

function draftRandomPower_1442841651(allSelected_1442841652, drafterSelected_1442841653, options_1442841654, normalWeights_1442841655, buffedWeights_1442841656) {
    var Temporary1;

  var result_1442841657 = [];

  var F = {procname: "power.draftRandomPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 191;
    F.filename = "power.nim";
    if (contains_1442841239(drafterSelected_1442841653, holy_1442840644)) {
    Temporary1 = buffedWeights_1442841656;
    }
    else {
    Temporary1 = normalWeights_1442841655;
    }
    
    var weights_1442841662 = nimCopy(null, Temporary1, NTI1442840583);
    Label2: {
      F.line = 192;
      var x_1442841667 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100529 = 0;
      F.line = 192;
      F.filename = "power.nim";
      colontmp__520100529 = subInt(options_1442841654, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100530 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_520100530 <= colontmp__520100529)) break Label4;
            F.line = 192;
            F.filename = "power.nim";
            x_1442841667 = res_520100530;
            F.line = 193;
            result_1442841657.push(randomPower_1442841418(randomTier_1442841575(weights_1442841662), drafterSelected_1442841653, HEX26_1442841613(allSelected_1442841652, result_1442841657)));;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100530 = addInt(res_520100530, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841657;

}

function draftRandomPowerTier_1442841600(t_1442841601, allSelected_1442841602, drafterSelected_1442841603, options_1442841604, normalWeights_1442841605, buffedWeights_1442841606) {
  var result_1442841607 = [];

  var F = {procname: "power.draftRandomPowerTier", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 187;
      F.filename = "power.nim";
      var x_1442841612 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100576 = 0;
      F.line = 187;
      F.filename = "power.nim";
      colontmp__520100576 = subInt(options_1442841604, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100577 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100577 <= colontmp__520100576)) break Label3;
            F.line = 187;
            F.filename = "power.nim";
            x_1442841612 = res_520100577;
            F.line = 188;
            result_1442841607.push(randomPower_1442841418(t_1442841601, drafterSelected_1442841603, HEX26_1442841613(allSelected_1442841602, result_1442841607)));;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100577 = addInt(res_520100577, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841607;

}

function draft_520097271(allDrafts_520097276, drafter_520097281) {
  var F = {procname: "main.draft", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 368;
    F.filename = "main.nim";
    var disabled_520097286 = [[]];
    if (disableRNGPowers_520093852[0]) {
    F.line = 371;
    add_520097287(disabled_520097286, 0, rngPowers_1493178768);
    }
    
    if (!(enableExperimental_520093854[0])) {
    F.line = 373;
    add_520097287(disabled_520097286, 0, experimentalPowers_1493178773);
    }
    
    if ((gameMode_520093857[0] == 2)) {
    F.line = 376;
    draftOptions_520093820[0] = nimCopy(null, draftRandomPower_1442841651(HEX26_1442841613(allDrafts_520097276, disabled_520097286[0]), drafter_520097281, draftChoices_520093821[0], {Field0: 60, Field1: 30, Field2: 9, Field3: 1}, {Field0: 50, Field1: 36, Field2: 12, Field3: 2}), NTI1442841384);
    }
    else {
    if ((gameMode_520093857[0] == 1)) {
    F.line = 379;
    draftOptions_520093820[0] = nimCopy(null, draftRandomPowerTier_1442841600(draftTier_520093823[0], HEX26_1442841613(HEX26_1442841016(allDrafts_520097276, holy_1442840644), disabled_520097286[0]), drafter_520097281, draftChoices_520093821[0], {Field0: 60, Field1: 30, Field2: 9, Field3: 1}, {Field0: 50, Field1: 36, Field2: 12, Field3: 2}), NTI1442841347);
    }
    else {
    if ((gameMode_520093857[0] == 3)) {
    F.line = 381;
    draftOptions_520093820[0] = nimCopy(null, draftRandomPower_1442841651(HEX26_1442841613(allDrafts_520097276, disabled_520097286[0]), drafter_520097281, draftChoices_520093821[0], {Field0: 25, Field1: 35, Field2: 30, Field3: 10}, {Field0: 15, Field1: 38, Field2: 35, Field3: 12}), NTI1442841384);
    }
    }}
  framePtr = F.prev;

  
}

function newSeq_687867434(len_687867436) {
  var result_687867437 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_687867437 = new Array(len_687867436); for (var i = 0 ; i < len_687867436 ; ++i) { result_687867437[i] = ({k: 0, parent: null, current: null, newNode: null, oldNode: null}); }  framePtr = F.prev;

  return result_687867437;

}

function newSeq_687867462(len_687867464) {
  var result_687867465 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_687867465 = new Array(len_687867464); for (var i = 0 ; i < len_687867464 ; ++i) { result_687867465[i] = ({parent: null, newChild: null, pos: 0}); }  framePtr = F.prev;

  return result_687867465;

}

function init_687867382(ev_687867383) {
    
function HEX3Aanonymous_687867384() {
      var F = {procname: "init.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 747;
        F.filename = "karax.nim";
        dodraw_687867280(kxi__);
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.init", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 747;
    F.filename = "karax.nim";
    kxi__.renderId = window.requestAnimationFrame(HEX3Aanonymous_687867384);
  framePtr = F.prev;

  
}

function setRenderer_687867416(renderer_687867419, root_687867420, clientPostRenderCallback_687867423) {
    
function HEX3Aanonymous_687867496() {
      var F = {procname: "setRenderer.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 770;
        F.filename = "karax.nim";
        redraw_687867377(kxi__);
      framePtr = F.prev;

      
    }

  var result_687867424 = null;

  var F = {procname: "karax.setRenderer", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if ((document.getElementById(root_687867420) == null)) {
    F.line = 756;
    F.filename = "karax.nim";
    var msg_687867428 = (("Could not find a <div> with id=" + root_687867420) + ". Karax needs it as its rendering target.");
    F.line = 758;
    raiseException({message: cstrToNimstr(msg_687867428), parent: null, m_type: NTI33555177, name: null, trace: [], up: null}, "Exception");
    }
    
    F.line = 760;
    result_687867424 = {rootId: root_687867420, renderer: renderer_687867419, postRenderCallback: clientPostRenderCallback_687867423, patches: newSeq_687867434(60), patchesV: newSeq_687867462(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, rendering: false, patchLen: 0, patchLenV: 0, runCount: 0};
    F.line = 768;
    kxi__ = result_687867424;
    F.line = 769;
    window.addEventListener("load", init_687867382, false);
    F.line = 770;
    window.onhashchange = HEX3Aanonymous_687867496;
  framePtr = F.prev;

  return result_687867424;

}

function setRenderer_687867621(renderer_687867623, root_687867624, clientPostRenderCallback_687867626) {
    
function wrapRenderer_687867628(data_687867629) {
      var result_687867630 = null;

      var F = {procname: "setRenderer.wrapRenderer", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 775;
        F.filename = "karax.nim";
        result_687867630 = renderer_687867623();
      framePtr = F.prev;

      return result_687867630;

    }
    
function wrapPostRender_687867631(data_687867632) {
      var F = {procname: "setRenderer.wrapPostRender", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        if (!((clientPostRenderCallback_687867626 == null))) {
        F.line = 777;
        F.filename = "karax.nim";
        clientPostRenderCallback_687867626();
        }
        
      framePtr = F.prev;

      
    }

  var result_687867627 = null;

  var F = {procname: "karax.setRenderer", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 774;
    F.filename = "karax.nim";
    result_687867627 = setRenderer_687867416(wrapRenderer_687867628, root_687867624, wrapPostRender_687867631);
  framePtr = F.prev;

  return result_687867627;

}

function newVNode_721421181(kind_721421182) {
  var result_721421183 = null;

  var F = {procname: "vdom.newVNode", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 311;
    F.filename = "vdom.nim";
    result_721421183 = {kind: kind_721421182, index: (-1), m_type: NTI721420388, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};
  framePtr = F.prev;

  return result_721421183;

}

function add_721421120(parent_721421121, kid_721421122) {
  var F = {procname: "vdom.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 305;
    F.filename = "vdom.nim";
    parent_721421121.kids.push(kid_721421122);;
  framePtr = F.prev;

  
}

function tree_721421184(kind_721421185, kids_721421186) {
  var result_721421187 = null;

  var F = {procname: "vdom.tree", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 314;
    F.filename = "vdom.nim";
    result_721421187 = newVNode_721421181(kind_721421185);
    Label1: {
      F.line = 315;
      var k_721421200 = null;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520100581 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520100581 < (kids_721421186).length)) break Label3;
            F.line = 315;
            F.filename = "vdom.nim";
            k_721421200 = kids_721421186[chckIndx(i_520100581, 0, (kids_721421186).length - 1)];
            F.line = 315;
            add_721421120(result_721421187, k_721421200);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100581 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_721421187;

}

function text_721421252(s_721421253) {
  var result_721421254 = null;

  var F = {procname: "vdom.text", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 323;
    F.filename = "vdom.nim";
    result_721421254 = {kind: 0, text: toJSStr(s_721421253), index: (-1), m_type: NTI721420388, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};
  framePtr = F.prev;

  return result_721421254;

}

function addEventListener_721421303(n_721421304, event_721421305, handler_721421306) {
  var F = {procname: "vdom.addEventListener", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 347;
    F.filename = "vdom.nim";
    n_721421304.events.push({Field0: event_721421305, Field1: handler_721421306, Field2: null});;
  framePtr = F.prev;

  
}

function addEventHandler_687867670(n_687867671, k_687867672, action_687867673, kxi_687867674) {
    
function wrapper_687867675(ev_687867676, n_687867677) {
      var F = {procname: "addEventHandler.wrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 816;
        F.filename = "karax.nim";
        action_687867673(ev_687867676, n_687867677);
        if (!(kxi_687867674.surpressRedraws)) {
        F.line = 817;
        redraw_687867377(kxi_687867674);
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.addEventHandler", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 818;
    F.filename = "karax.nim";
    addEventListener_721421303(n_687867671, k_687867672, wrapper_687867675);
  framePtr = F.prev;

  
}

function toFloat_33556008(i_33556009) {
  var result_33556010 = 0.0;

  var F = {procname: "system.toFloat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1298;
    F.filename = "system.nim";
    result_33556010 = i_33556009;
  framePtr = F.prev;

  return result_33556010;

}

function HEX2F_33556020(x_33556021, y_33556022) {
  var result_33556023 = 0.0;

  var F = {procname: "system./", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1346;
    F.filename = "system.nim";
    result_33556023 = (toFloat_33556008(x_33556021) / toFloat_33556008(y_33556022));
  framePtr = F.prev;

  return result_33556023;

}

function epochTime_1409290426() {
  var result_1409290427 = 0.0;

  var F = {procname: "times.epochTime", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2808;
    F.filename = "times.nim";
    result_1409290427 = HEX2F_33556020(new Date().getTime(), 1000);
  framePtr = F.prev;

  return result_1409290427;

}

function initRand_1392509219() {
  var result_1392509220 = ({a0: 0, a1: 0});

  var F = {procname: "random.initRand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 691;
    F.filename = "random.nim";
    var time_1392509221 = (BigInt(Math.trunc((epochTime_1409290426() * 1000.0))) & 2147483647n);
    F.line = 692;
    result_1392509220 = nimCopy(result_1392509220, initRand_1392509177(time_1392509221), NTI1392508932);
  framePtr = F.prev;

  return result_1392509220;

}

function randomize_1392509226() {
  var F = {procname: "random.randomize", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 745;
    F.filename = "random.nim";
    state_1392508942[0] = nimCopy(state_1392508942[0], initRand_1392509219(), NTI1392508932);
  framePtr = F.prev;

  
}

function substr_33558084(s_33558085, first_33558086, last_33558087) {
  var result_33558088 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2676;
    F.filename = "system.nim";
    var first_33558089 = nimMax(first_33558086, 0);
    F.line = 2677;
    var L_33558090 = nimMax(addInt(subInt(nimMin(last_33558087, (s_33558085).length - 1), first_33558089), 1), 0);
    F.line = 2678;
    result_33558088 = nimCopy(null, mnewString(chckRange(L_33558090, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2679;
      var i_33558095 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100592 = 0;
      F.line = 2679;
      F.filename = "system.nim";
      colontmp__520100592 = subInt(L_33558090, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100593 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100593 <= colontmp__520100592)) break Label3;
            F.line = 2679;
            F.filename = "system.nim";
            i_33558095 = res_520100593;
            F.line = 2680;
            result_33558088[chckIndx(i_33558095, 0, (result_33558088).length - 1)] = s_33558085[chckIndx(addInt(i_33558095, first_33558089), 0, (s_33558085).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100593 = addInt(res_520100593, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558088;

}

function nsuSplitChar(s_838861345, sep_838861346, maxsplit_838861347) {
  var result_838861348 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_838861348 = nimCopy(null, [], NTI838861173);
    Label1: {
      F.line = 418;
      var xHEX60gensym67_838861354 = [];
      F.line = 389;
      var lastHEX60gensym34_520100586 = 0;
      F.line = 390;
      var splitsHEX60gensym34_520100587 = maxsplit_838861347;
      Label2: {
        F.line = 450;
          Label3: while (true) {
          if (!(lastHEX60gensym34_520100586 <= (s_838861345).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym34_520100589 = lastHEX60gensym34_520100586;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym34_520100586 < (s_838861345).length) && !((s_838861345[chckIndx(lastHEX60gensym34_520100586, 0, (s_838861345).length - 1)] == sep_838861346)))) break Label5;
                  F.line = 395;
                  lastHEX60gensym34_520100586 = addInt(lastHEX60gensym34_520100586, 1);
                }
            };
            if ((splitsHEX60gensym34_520100587 == 0)) {
            F.line = 396;
            lastHEX60gensym34_520100586 = (s_838861345).length;
            }
            
            F.line = 743;
            xHEX60gensym67_838861354 = substr_33558084(s_838861345, firstHEX60gensym34_520100589, subInt(lastHEX60gensym34_520100586, 1));
            F.line = 418;
            var Temporary6 = nimCopy(null, xHEX60gensym67_838861354, NTI33554449);
            result_838861348.push(Temporary6);;
            if ((splitsHEX60gensym34_520100587 == 0)) {
            F.line = 398;
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym34_520100587 = subInt(splitsHEX60gensym34_520100587, 1);
            F.line = 400;
            lastHEX60gensym34_520100586 = addInt(lastHEX60gensym34_520100586, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_838861348;

}

function cutMessage_1325400107(data_1325400108) {
    var Temporary1;

  var result_1325400109 = [];

  var F = {procname: "port.cutMessage", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 62;
    F.filename = "port.nim";
    result_1325400109 = nimCopy(null, (Temporary1 = nsuSplitChar(cstrToNimstr(data_1325400108), 58, (-1)), Temporary1)[chckIndx(1, 0, (Temporary1).length - 1)], NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400109;

}

function messageType_1325400087(data_1325400088) {
  var result_1325400089 = 0;

  var F = {procname: "port.messageType", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 45;
    F.filename = "port.nim";
    var str_1325400090 = cstrToNimstr(data_1325400088);
    if (contains_838862678(str_1325400090, [105,100,58])) {
    F.line = 47;
    result_1325400089 = 0;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [104,97,110,100,115,104,97,107,101,58])) {
    F.line = 49;
    result_1325400089 = 1;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [111,112,116,105,111,110,115,58])) {
    F.line = 51;
    result_1325400089 = 2;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [100,114,97,102,116,58])) {
    F.line = 53;
    result_1325400089 = 3;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [114,101,109,97,116,99,104,58])) {
    F.line = 55;
    result_1325400089 = 5;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [101,110,100,58])) {
    F.line = 57;
    result_1325400089 = 4;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [97,99,116,105,111,110,58])) {
    F.line = 59;
    result_1325400089 = 6;
    break BeforeRet;
    }
    }}}}}}
  };
  framePtr = F.prev;

  return result_1325400089;

}

function newHost_1325400110(cb_1325400114) {
    
function HEX3Aanonymous_1325400174(id_1325400175) {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 70;
        F.filename = "port.nim";
        cb_1325400114(HEX24_369098760(roomId_1325400153), 0);
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400203(c_1325400204) {
        
function HEX3Aanonymous_1325400205(data_1325400206) {
          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
          framePtr = F;
            F.line = 73;
            F.filename = "port.nim";
            cb_1325400114(cutMessage_1325400107(data_1325400206), messageType_1325400087(data_1325400206));
          framePtr = F.prev;

          
        }

      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 72;
        F.filename = "port.nim";
        conn_1325400155 = c_1325400204;
        conn_1325400155.on(("data"), (HEX3Aanonymous_1325400205));
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400244() {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 75;
        F.filename = "port.nim";
        rawEcho([68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84]);
        F.line = 76;
        peer_1325400154.id = ("9e4ada91-c493-4fd4-881d-3e05db99e100" + toJSStr(HEX24_369098760(roomId_1325400153)));
        peer_1325400154.reconnect();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400278() {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        peer_1325400154.destroy();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400283(data_1325400284) {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        conn_1325400155.send((data_1325400284));
      framePtr = F.prev;

      
    }

  var result_1325400120 = {Field0: null, Field1: null};

  var F = {procname: "port.newHost", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
    F.line = 65;
    F.filename = "port.nim";
    randomize_1392509226();
    F.line = 66;
    var roomId_1325400153 = rand_1325400130(HEX2EHEX2E_1056964656(10000, 99999));
    F.line = 67;
    var peer_1325400154 = new Peer(("9e4ada91-c493-4fd4-881d-3e05db99e100" + toJSStr(HEX24_369098760(roomId_1325400153))), {config: {
                        iceServers: [
                            {
                                urls: "turn:standard.relay.metered.ca:80",
                                username: "4eadefa5a1ad93a461469d19",
                                credential: "wLlcdHP/D2ZcRAg/",
                            }
                        ]
                    }
                })
;
    F.line = 68;
    var conn_1325400155 = null;
    peer_1325400154.on(("open"), (HEX3Aanonymous_1325400174));
    peer_1325400154.on(("connection"), (HEX3Aanonymous_1325400203));
    peer_1325400154.on(("disconnect"), (HEX3Aanonymous_1325400244));
    F.line = 79;
    result_1325400120.Field1 = HEX3Aanonymous_1325400278;
    F.line = 82;
    result_1325400120.Field0 = HEX3Aanonymous_1325400283;
  framePtr = F.prev;

  return result_1325400120;

}

function substrEq_838861055(s_838861056, pos_838861057, substr_838861058) {
    var Temporary1;

  var result_838861059 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strutils.nim";
    F.line = 370;
    var length_838861060 = (substr_838861058).length;
    if ((0 < length_838861060)) {
    F.line = 372;
    var i_838861061 = 0;
    Label2: {
      F.line = 373;
        Label3: while (true) {
        if (!(((i_838861061 < length_838861060) && (addInt(pos_838861057, i_838861061) < (s_838861056).length)) && (s_838861056[chckIndx(addInt(pos_838861057, i_838861061), 0, (s_838861056).length - 1)] == substr_838861058[chckIndx(i_838861061, 0, (substr_838861058).length - 1)]))) break Label3;
          F.line = 374;
          i_838861061 = addInt(i_838861061, 1);
        }
    };
    Temporary1 = (i_838861061 == length_838861060);
    }
    else {
    Temporary1 = false;
    }
    
    result_838861059 = Temporary1;
  framePtr = F.prev;

  return result_838861059;

}

function nsuSplitString(s_838861375, sep_838861376, maxsplit_838861377) {
      var Temporary2;

  var result_838861378 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_838861378 = nimCopy(null, [], NTI838861206);
    Label1: {
      F.line = 418;
      var xHEX60gensym69_838861384 = [];
      F.line = 529;
      if (((sep_838861376).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_838861376).length;
      }
      
      var sepLen_520100600 = Temporary2;
      F.line = 389;
      var lastHEX60gensym41_520100601 = 0;
      F.line = 390;
      var splitsHEX60gensym41_520100602 = maxsplit_838861377;
      Label3: {
        F.line = 531;
          Label4: while (true) {
          if (!(lastHEX60gensym41_520100601 <= (s_838861375).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym41_520100604 = lastHEX60gensym41_520100601;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym41_520100601 < (s_838861375).length) && !(substrEq_838861055(s_838861375, lastHEX60gensym41_520100601, sep_838861376)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym41_520100601 = addInt(lastHEX60gensym41_520100601, 1);
                }
            };
            if ((splitsHEX60gensym41_520100602 == 0)) {
            F.line = 396;
            lastHEX60gensym41_520100601 = (s_838861375).length;
            }
            
            F.line = 787;
            xHEX60gensym69_838861384 = substr_33558084(s_838861375, firstHEX60gensym41_520100604, subInt(lastHEX60gensym41_520100601, 1));
            F.line = 418;
            var Temporary7 = nimCopy(null, xHEX60gensym69_838861384, NTI33554449);
            result_838861378.push(Temporary7);;
            if ((splitsHEX60gensym41_520100602 == 0)) {
            F.line = 398;
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym41_520100602 = subInt(splitsHEX60gensym41_520100602, 1);
            F.line = 400;
            lastHEX60gensym41_520100601 = addInt(lastHEX60gensym41_520100601, sepLen_520100600);
          }
      };
    };
  framePtr = F.prev;

  return result_838861378;

}

function integerOutOfRangeError_855638341() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_855638343(s_855638344, b_855638345, b_855638345_Idx) {
      var Temporary1;
          var Temporary4;

  var result_855638346 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    F.filename = "parseutils.nim";
    var sign_855638347 = (-1n);
    F.line = 430;
    var i_855638348 = 0;
    if ((i_855638348 < (s_855638344).length)) {
    if ((s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] == 43)) {
    F.line = 432;
    i_855638348 += 1;
    }
    else {
    if ((s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] == 45)) {
    F.line = 434;
    i_855638348 += 1;
    F.line = 435;
    sign_855638347 = 1n;
    }
    }
    }
    
      if (!(i_855638348 < (s_855638344).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 437;
    b_855638345[b_855638345_Idx] = 0n;
    Label2: {
      F.line = 438;
        Label3: while (true) {
          if (!(i_855638348 < (s_855638344).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 439;
          var c_855638382 = (s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_855638382)) / 10n <= b_855638345[b_855638345_Idx])) {
          F.line = 441;
          b_855638345[b_855638345_Idx] = ((b_855638345[b_855638345_Idx] * 10n) - BigInt(c_855638382));
          }
          else {
            F.line = 443;
          integerOutOfRangeError_855638341();
          }
          
          F.line = 444;
          i_855638348 += 1;
          Label5: {
            F.line = 445;
              Label6: while (true) {
              if (!((i_855638348 < (s_855638344).length) && (s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] == 95))) break Label6;
                F.line = 445;
                i_855638348 += 1;
              }
          };
        }
    };
    if (((sign_855638347 == (-1n)) && (b_855638345[b_855638345_Idx] == (-9223372036854775808n)))) {
    F.line = 447;
    integerOutOfRangeError_855638341();
    }
    else {
      F.line = 449;
      b_855638345[b_855638345_Idx] = (b_855638345[b_855638345_Idx] * sign_855638347);
      F.line = 450;
      result_855638346 = i_855638348;
    }
    
    }
    
  framePtr = F.prev;

  return result_855638346;

}

function npuParseBiggestInt(s_855638405, number_855638406, number_855638406_Idx) {
  var result_855638407 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 464;
    F.filename = "parseutils.nim";
    var res_855638408 = [0n];
    F.line = 467;
    result_855638407 = rawParseInt_855638343(s_855638405, res_855638408, 0);
    if (!((result_855638407 == 0))) {
    F.line = 469;
    number_855638406[number_855638406_Idx] = res_855638408[0];
    }
    
  framePtr = F.prev;

  return result_855638407;

}

function npuParseInt(s_855638410, number_855638411, number_855638411_Idx) {
  var result_855638412 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    F.filename = "parseutils.nim";
    var res_855638413 = [0n];
    F.line = 483;
    result_855638412 = npuParseBiggestInt(s_855638410, res_855638413, 0);
    if (((res_855638413[0] < (-2147483648n)) || (2147483647n < res_855638413[0]))) {
    F.line = 486;
    integerOutOfRangeError_855638341();
    }
    
    if (!((result_855638412 == 0))) {
    F.line = 488;
    number_855638411[number_855638411_Idx] = chckRange(Number(res_855638413[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_855638412;

}

function parseInt_855638923(s_855638924, number_855638925, number_855638925_Idx, start_855638926) {
  var result_855638927 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 999;
    F.filename = "parseutils.nim";
    result_855638927 = npuParseInt((s_855638924.slice(start_855638926, (s_855638924).length - 1 + 1)), number_855638925, number_855638925_Idx);
  framePtr = F.prev;

  return result_855638927;

}

function nsuParseInt(s_838861657) {
  var result_838861658 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1134;
    F.filename = "strutils.nim";
    result_838861658[0] = 0;
    F.line = 1135;
    var L_838861659 = parseInt_855638923(s_838861657, result_838861658, 0, 0);
    if ((!((L_838861659 == (s_838861657).length)) || (L_838861659 == 0))) {
    F.line = 1137;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_838861657 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_838861658[0];

}

function hasWallet_1526726660(side_1526726661, s_1526726662) {
  var result_1526726663 = false;

  var F = {procname: "capitalism.hasWallet", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 7;
    F.filename = "capitalism.nim";
    result_1526726663 = isSome_1409289449(s_1526726662.Field1[chckIndx(side_1526726661, 0, (s_1526726662.Field1).length - 1)].wallet);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1526726663;

}

function pieceOf_520093924(tile_520093925) {
  var result_520093926 = null;

  var F = {procname: "main.pieceOf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 151;
    F.filename = "main.nim";
    result_520093926 = theBoard_520093825[0][chckIndx(tile_520093925.Field1, 0, (theBoard_520093825[0]).length - 1)][chckIndx(tile_520093925.Field0, 0, (theBoard_520093825[0][chckIndx(tile_520093925.Field1, 0, (theBoard_520093825[0]).length - 1)]).length - 1)];
  framePtr = F.prev;

  return result_520093926;

}

function buy_1526726764(piece_1526726765, option_1526726766, b_1526726767, s_1526726768) {
  var F = {procname: "capitalism.buy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    if (!(hasWallet_1526726660(piece_1526726765.color, s_1526726768))) {
    F.line = 24;
    F.filename = "capitalism.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim(24, 5) `piece.color.hasWallet(s)` "));
    }
    
    if (!(option_1526726766.Field3(piece_1526726765, b_1526726767, s_1526726768))) {
    F.line = 25;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim(25, 5) `option.condition(piece, b, s)` "));
    }
    
    if ((option_1526726766.Field1(piece_1526726765, b_1526726767, s_1526726768) <= getMoney_1526726671(piece_1526726765.color, s_1526726768))) {
    F.line = 28;
    addMoney_1526726698(piece_1526726765.color, negInt(option_1526726766.Field1(piece_1526726765, b_1526726767, s_1526726768)), s_1526726768);
    F.line = 29;
    option_1526726766.Field2(piece_1526726765, b_1526726767, s_1526726768);
    }
    
  framePtr = F.prev;

  
}

function otherBuy_520097018(d_520097019) {
  var F = {procname: "main.otherBuy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 274;
    F.filename = "main.nim";
    var data_520097020 = nsuSplitString(d_520097019, [44], (-1));
    if (!(eqStrings(data_520097020[chckIndx(0, 0, (data_520097020).length - 1)], [98,117,121]))) {
    F.line = 275;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(275, 5) `data[0] == \"buy\"` "));
    }
    
    F.line = 276;
    var piece_520097026 = {Field0: nsuParseInt(data_520097020[chckIndx(3, 0, (data_520097020).length - 1)]), Field1: nsuParseInt(data_520097020[chckIndx(2, 0, (data_520097020).length - 1)])};
    if (!(hasWallet_1526726660(pieceOf_520093924(piece_520097026).color, theState_520093826[0]))) {
    F.line = 277;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(277, 5) `pieceOf(piece).color.hasWallet(theState)` "));
    }
    
    Label1: {
      F.line = 279;
      var option_520097035 = {Field0: [], Field1: null, Field2: null, Field3: null};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520100610 = [];
      F.line = 279;
      F.filename = "main.nim";
      colontmp__520100610 = theState_520093826[0].Field1[chckIndx(otherSide_1224737822(side_520093807[0]), 0, (theState_520093826[0].Field1).length - 1)].buys;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100611 = 0;
      F.line = 250;
      var L_520100612 = (colontmp__520100610).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100611 < L_520100612)) break Label3;
            F.line = 279;
            F.filename = "main.nim";
            option_520097035 = colontmp__520100610[chckIndx(i_520100611, 0, (colontmp__520100610).length - 1)];
            if (eqStrings(option_520097035.Field0, data_520097020[chckIndx(1, 0, (data_520097020).length - 1)])) {
            F.line = 281;
            buy_1526726764(pieceOf_520093924(piece_520097026), option_520097035, theBoard_520093825[0], theState_520093826[0]);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100611 += 1;
            if (!(((colontmp__520100610).length == L_520100612))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function gameIsOver_1224737906(b_1224737907, s_1224737908) {
  var result_1224737909 = false;

  var F = {procname: "piece.gameIsOver", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 323;
    F.filename = "piece.nim";
    var whiteAlive_1224737910 = false;
    F.line = 324;
    var blackAlive_1224737911 = false;
    Label1: {
      F.line = 325;
      var row_1224737916 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_520100658 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 325;
            F.filename = "piece.nim";
            row_1224737916 = nimCopy(row_1224737916, b_1224737907[chckIndx(i_520100658, 0, (b_1224737907).length - 1)], NTI1224736772);
            Label4: {
              F.line = 326;
              var p_1224737921 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_520100656 = 0;
              Label5: {
                F.line = 44;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 326;
                    F.filename = "piece.nim";
                    p_1224737921 = nimCopy(p_1224737921, row_1224737916[chckIndx(i_520100656, 0, (row_1224737916).length - 1)], NTI1224736794);
                    if (isColor_1224737814(p_1224737921, 1)) {
                    if (((p_1224737921.item == 0) || s_1224737908.Field1[chckIndx(1, 0, (s_1224737908.Field1).length - 1)].communist)) {
                    F.line = 329;
                    whiteAlive_1224737910 = true;
                    F.line = 330;
                    break Label4;
                    }
                    
                    }
                    else {
                    if (isColor_1224737814(p_1224737921, 0)) {
                    if (((p_1224737921.item == 0) || s_1224737908.Field1[chckIndx(0, 0, (s_1224737908.Field1).length - 1)].communist)) {
                    F.line = 333;
                    blackAlive_1224737911 = true;
                    F.line = 334;
                    break Label4;
                    }
                    
                    }
                    }
                    if ((7 <= i_520100656)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520100656 += 1;
                  }
              };
            };
            if ((7 <= i_520100658)) {
            F.line = 46;
            break Label2;
            }
            
            F.line = 13;
            i_520100658 += 1;
          }
      };
    };
    F.line = 336;
    F.filename = "piece.nim";
    result_1224737909 = !((whiteAlive_1224737910 && blackAlive_1224737911));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737909;

}

function alive_1224737829(c_1224737830, b_1224737831, s_1224737832) {
  var result_1224737833 = false;

  var F = {procname: "piece.alive", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (s_1224737832.Field1[chckIndx(c_1224737830, 0, (s_1224737832.Field1).length - 1)].communist) {
    F.line = 314;
    F.filename = "piece.nim";
    result_1224737833 = true;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 315;
      var row_1224737859 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_520100664 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 315;
            F.filename = "piece.nim";
            row_1224737859 = nimCopy(row_1224737859, b_1224737831[chckIndx(i_520100664, 0, (b_1224737831).length - 1)], NTI1224736772);
            Label4: {
              F.line = 316;
              var p_1224737885 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_520100662 = 0;
              Label5: {
                F.line = 44;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 316;
                    F.filename = "piece.nim";
                    p_1224737885 = nimCopy(p_1224737885, row_1224737859[chckIndx(i_520100662, 0, (row_1224737859).length - 1)], NTI1224736794);
                    if (((p_1224737885.item == 0) && isColor_1224737814(p_1224737885, c_1224737830))) {
                    F.line = 318;
                    result_1224737833 = true;
                    break BeforeRet;
                    }
                    
                    if ((7 <= i_520100662)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520100662 += 1;
                  }
              };
            };
            if ((7 <= i_520100664)) {
            F.line = 46;
            break Label2;
            }
            
            F.line = 13;
            i_520100664 += 1;
          }
      };
    };
    F.line = 320;
    F.filename = "piece.nim";
    result_1224737833 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737833;

}

function addWins_1543503892(with_1543503893) {
  var F = {procname: "store.addWins", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 35;
      F.filename = "store.nim";
      var power_1543503897 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100667 = 0;
      F.line = 250;
      var L_520100668 = (with_1543503893).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100667 < L_520100668)) break Label3;
            F.line = 35;
            F.filename = "store.nim";
            power_1543503897 = with_1543503893[chckIndx(i_520100667, 0, (with_1543503893).length - 1)];
            if (!(localStorage.getItem(toJSStr(power_1543503897.technicalName)) !== null)) {
            F.line = 37;
            localStorage.setItem(toJSStr(power_1543503897.technicalName), JSON.stringify({wins: 0, losses: 0}));
            }
            
            F.line = 38;
            incrementWins(toJSStr(power_1543503897.technicalName));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100667 += 1;
            if (!(((with_1543503893).length == L_520100668))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 39;
    F.filename = "store.nim";
    incrementWins("wins");
  framePtr = F.prev;

  
}

function addLosses_1543503898(with_1543503899) {
  var F = {procname: "store.addLosses", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 42;
      F.filename = "store.nim";
      var power_1543503903 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100671 = 0;
      F.line = 250;
      var L_520100672 = (with_1543503899).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100671 < L_520100672)) break Label3;
            F.line = 42;
            F.filename = "store.nim";
            power_1543503903 = with_1543503899[chckIndx(i_520100671, 0, (with_1543503899).length - 1)];
            if (!(localStorage.getItem(toJSStr(power_1543503903.technicalName)) !== null)) {
            F.line = 44;
            localStorage.setItem(toJSStr(power_1543503903.technicalName), JSON.stringify({wins: 0, losses: 0}));
            }
            
            F.line = 45;
            incrementLosses(toJSStr(power_1543503903.technicalName));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100671 += 1;
            if (!(((with_1543503899).length == L_520100672))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 46;
    F.filename = "store.nim";
    incrementLosses("losses");
  framePtr = F.prev;

  
}

function find_520096343(a_520096346, item_520096347) {
  var result_520096348 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_520096348 = 0;
    Label1: {
      F.line = 1672;
      var i_520096352 = 0;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520100675 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520100675 < (a_520096346).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_520096352 = a_520096346[chckIndx(i_520100675, 0, (a_520096346).length - 1)];
            if ((i_520096352 == item_520096347)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_520096348 = addInt(result_520096348, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100675 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_520096348 = (-1);
  };
  framePtr = F.prev;

  return result_520096348;

}

function contains_520096338(a_520096340, item_520096341) {
  var result_520096342 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_520096342 = (0 <= find_520096343(a_520096340, item_520096341));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520096342;

}

function formatValue_520096324(result_520096327, result_520096327_Idx, value_520096328) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "strformat.nim";
    formatValue_1442840708(result_520096327, result_520096327_Idx, HEX24_1493176563(value_520096328));
  framePtr = F.prev;

  
}

function endRound_520096229() {
  var F = {procname: "main.endRound", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 186;
    F.filename = "main.nim";
    theState_520093826[0].Field0.turnNumber = addInt(theState_520093826[0].Field0.turnNumber, 1);
    Label1: {
      F.line = 188;
      var i_520096235 = 0;
      F.line = 188;
      var j_520096236 = 0;
      Label2: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_520100621 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100622 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_520100622 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100621 = i_520100622;
              Label5: {
                F.line = 126;
                var j_520100625 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100626 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_520100626 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100625 = i_520100626;
                      F.line = 188;
                      F.filename = "main.nim";
                      i_520096235 = i_520100621;
                      F.line = 188;
                      j_520096236 = j_520100625;
                      Label8: {
                        F.line = 187;
                        F.filename = "piece.nim";
                        var xHEX60gensym22_520096241 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520100616 = [];
                        F.line = 187;
                        F.filename = "piece.nim";
                        colontmp__520100616 = theBoard_520093825[0][chckIndx(i_520096235, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096236, 0, (theBoard_520093825[0][chckIndx(i_520096235, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].onEndTurn;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520100617 = 0;
                        F.line = 250;
                        var L_520100618 = (colontmp__520100616).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_520100617 < L_520100618)) break Label10;
                              F.line = 189;
                              F.filename = "main.nim";
                              xHEX60gensym22_520096241 = colontmp__520100616[chckIndx(i_520100617, 0, (colontmp__520100616).length - 1)];
                              F.line = 188;
                              F.filename = "piece.nim";
                              xHEX60gensym22_520096241(theBoard_520093825[0][chckIndx(i_520096235, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096236, 0, (theBoard_520093825[0][chckIndx(i_520096235, 0, (theBoard_520093825[0]).length - 1)]).length - 1)], theBoard_520093825[0], theState_520093826[0]);
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520100617 += 1;
                              if (!(((colontmp__520100616).length == L_520100618))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100626 = addInt(i_520100626, 1);
                    }
                };
              };
              F.line = 131;
              i_520100622 = addInt(i_520100622, 1);
            }
        };
      };
    };
    Label11: {
      F.line = 193;
      F.filename = "main.nim";
      var i_520096242 = 0;
      F.line = 193;
      var j_520096243 = 0;
      Label12: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_520100636 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100637 = 0;
        Label13: {
          F.line = 129;
            Label14: while (true) {
            if (!(i_520100637 < 8)) break Label14;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100636 = i_520100637;
              Label15: {
                F.line = 126;
                var j_520100640 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100641 = 0;
                Label16: {
                  F.line = 129;
                    Label17: while (true) {
                    if (!(i_520100641 < 8)) break Label17;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100640 = i_520100641;
                      F.line = 193;
                      F.filename = "main.nim";
                      i_520096242 = i_520100636;
                      F.line = 193;
                      j_520096243 = j_520100640;
                      Label18: {
                        F.line = 200;
                        var ic_520096306 = 0;
                        F.line = 200;
                        var c_520096307 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 180;
                        F.filename = "iterators.nim";
                        var colontmp__520100630 = [];
                        F.line = 200;
                        F.filename = "main.nim";
                        colontmp__520100630 = theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                        F.line = 182;
                        F.filename = "iterators.nim";
                        var i_520100632 = 0;
                        F.line = 183;
                        var L_520100633 = (colontmp__520100630).length;
                        Label19: {
                          F.line = 184;
                            Label20: while (true) {
                            if (!(i_520100632 < L_520100633)) break Label20;
                              F.line = 200;
                              F.filename = "main.nim";
                              ic_520096306 = i_520100632;
                              F.line = 200;
                              c_520096307 = nimCopy(c_520096307, colontmp__520100630[chckIndx(i_520100632, 0, (colontmp__520100630).length - 1)], NTI1224736788);
                              if ((c_520096307.Field2 == 2)) {
                              if (isColor_1224737814(theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)], 1)) {
                              F.line = 203;
                              theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts[chckIndx(ic_520096306, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts).length - 1)].Field0 = nimCopy(theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts[chckIndx(ic_520096306, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts).length - 1)].Field0, tileAbove_1308622990(theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].tile), NTI1224736771);
                              }
                              else {
                                F.line = 205;
                                theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts[chckIndx(ic_520096306, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts).length - 1)].Field0 = nimCopy(theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts[chckIndx(ic_520096306, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts).length - 1)].Field0, tileBelow_1308622993(theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].tile), NTI1224736771);
                              }
                              
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520100632 += 1;
                              if (!(((colontmp__520100630).length == L_520100633))) {
                              F.line = 187;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 206;
                      F.filename = "main.nim";
                      theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096243, 0, (theBoard_520093825[0][chckIndx(i_520096242, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].drunk = false;
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100641 = addInt(i_520100641, 1);
                    }
                };
              };
              F.line = 131;
              i_520100637 = addInt(i_520100637, 1);
            }
        };
      };
    };
    F.line = 208;
    F.filename = "main.nim";
    piecesChecking_520093849[0] = nimCopy(null, getPiecesChecking_1224737930(theBoard_520093825[0], side_520093807[0]), NTI1224737580);
    if (gameIsOver_1224737906(theBoard_520093825[0], theState_520093826[0])) {
    F.line = 210;
    currentScreen_520093855[0] = 6;
    if (!(practiceMode_520093850[0])) {
    if (alive_1224737829(side_520093807[0], theBoard_520093825[0], theState_520093826[0])) {
    F.line = 214;
    addWins_1543503892(myDrafts_520093813[0]);
    }
    else {
      F.line = 216;
    addLosses_1543503898(myDrafts_520093813[0]);
    }
    
    }
    
    }
    
    F.line = 221;
    var test_520096316 = [];
    Label21: {
      F.line = 222;
      var i_520096317 = 0;
      F.line = 222;
      var j_520096318 = 0;
      Label22: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_520100647 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100648 = 0;
        Label23: {
          F.line = 129;
            Label24: while (true) {
            if (!(i_520100648 < 8)) break Label24;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100647 = i_520100648;
              Label25: {
                F.line = 126;
                var j_520100651 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100652 = 0;
                Label26: {
                  F.line = 129;
                    Label27: while (true) {
                    if (!(i_520100652 < 8)) break Label27;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100651 = i_520100652;
                      F.line = 222;
                      F.filename = "main.nim";
                      i_520096317 = i_520100647;
                      F.line = 222;
                      j_520096318 = j_520100651;
                      if (!(!(contains_520096338(test_520096316, theBoard_520093825[0][chckIndx(i_520096317, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096318, 0, (theBoard_520093825[0][chckIndx(i_520096317, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].index)))) {
                      F.line = 223;
                      Label28: {
                        F.line = 223;
                        var fmtRes_520096323 = [mnewString(0)];
                        F.line = 223;
                        formatValue_520096324(fmtRes_520096323, 0, theBoard_520093825[0][chckIndx(i_520096317, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096318, 0, (theBoard_520093825[0][chckIndx(i_520096317, 0, (theBoard_520093825[0]).length - 1)]).length - 1)]);
                        F.line = 223;
                        fmtRes_520096323[0].push.apply(fmtRes_520096323[0], [32,104,97,115,32,115,111,109,101,32,105,115,115,117,101,115]);;
                      };
                      failedAssertImpl_268435541((makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(223, 9) `theBoard[i][j].index notin test` ") || []).concat(fmtRes_520096323[0] || []));
                      }
                      
                      F.line = 224;
                      test_520096316.push(theBoard_520093825[0][chckIndx(i_520096317, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096318, 0, (theBoard_520093825[0][chckIndx(i_520096317, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].index);;
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100652 = addInt(i_520100652, 1);
                    }
                };
              };
              F.line = 131;
              i_520100648 = addInt(i_520100648, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function otherMove_520097036(d_520097037) {
  var F = {procname: "main.otherMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 284;
    F.filename = "main.nim";
    var data_520097038 = nsuSplitString(d_520097037, [44], (-1));
    F.line = 285;
    var mover_520097039 = nimCopy(null, {Field0: nsuParseInt(data_520097038[chckIndx(2, 0, (data_520097038).length - 1)]), Field1: nsuParseInt(data_520097038[chckIndx(1, 0, (data_520097038).length - 1)])}, NTI1224736771);
    F.line = 286;
    var moveTo_520097040 = nimCopy(null, {Field0: nsuParseInt(data_520097038[chckIndx(4, 0, (data_520097038).length - 1)]), Field1: nsuParseInt(data_520097038[chckIndx(3, 0, (data_520097038).length - 1)])}, NTI1224736771);
    F.line = 288;
    lastMove_520093844[0] = nimCopy(null, [nimCopy(null, mover_520097039, NTI1224736771), nimCopy(null, moveTo_520097040, NTI1224736771)], NTI520095806);
    F.line = 289;
    possibleMoves_520093834[0] = nimCopy(null, [], NTI1291845837);
    F.line = 290;
    possibleTakes_520093839[0] = nimCopy(null, [], NTI1291845837);
    F.line = 292;
    rawEcho(d_520097037, data_520097038[chckIndx(0, 0, (data_520097038).length - 1)], HEX24_1224737477(mover_520097039), HEX24_1224737477(moveTo_520097040));
    if (eqStrings(data_520097038[chckIndx(0, 0, (data_520097038).length - 1)], [109,111,118,101])) {
    F.line = 294;
    pieceOf_520093924(mover_520097039).onMove(pieceOf_520093924(mover_520097039), moveTo_520097040, theBoard_520093825[0], theState_520093826[0]);
    }
    else {
    if (eqStrings(data_520097038[chckIndx(0, 0, (data_520097038).length - 1)], [116,97,107,101])) {
    F.line = 296;
    pieceOf_520093924(mover_520097039).onTake(pieceOf_520093924(mover_520097039), moveTo_520097040, theBoard_520093825[0], theState_520093826[0]);
    }
    }
  framePtr = F.prev;

  
}

function binarySearch_1040188413(c_1040188414, tab_1040188415, len_1040188416, stride_1040188417) {
  var result_1040188418 = 0;

  var F = {procname: "unicode.binarySearch", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 468;
    F.filename = "unicode.nim";
    var n_1040188419 = len_1040188416;
    F.line = 469;
    var t_1040188420 = 0;
    Label1: {
      F.line = 470;
        Label2: while (true) {
        if (!(1 < n_1040188419)) break Label2;
          F.line = 471;
          var m_1040188421 = divInt(n_1040188419, 2);
          F.line = 472;
          var p_1040188422 = addInt(t_1040188420, mulInt(m_1040188421, stride_1040188417));
          if ((tab_1040188415[chckIndx(p_1040188422, 0, (tab_1040188415).length - 1)] <= c_1040188414)) {
          F.line = 474;
          t_1040188420 = p_1040188422;
          F.line = 475;
          n_1040188419 = subInt(n_1040188419, m_1040188421);
          }
          else {
            F.line = 477;
            n_1040188419 = m_1040188421;
          }
          
        }
    };
    if ((!((n_1040188419 == 0)) && (tab_1040188415[chckIndx(t_1040188420, 0, (tab_1040188415).length - 1)] <= c_1040188414))) {
    F.line = 479;
    result_1040188418 = t_1040188420;
    break BeforeRet;
    }
    
    F.line = 480;
    result_1040188418 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040188418;

}

function nuctoLower(c_1040188424) {
  var result_1040188425 = 0;

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 491;
    F.filename = "unicode.nim";
    var c_1040188426 = c_1040188424;
    F.line = 492;
    var p_1040188435 = binarySearch_1040188413(c_1040188426, toLowerRanges_1040188404, 45, 3);
    if ((((0 <= p_1040188435) && (toLowerRanges_1040188404[chckIndx(p_1040188435, 0, (toLowerRanges_1040188404).length - 1)] <= c_1040188426)) && (c_1040188426 <= toLowerRanges_1040188404[chckIndx(addInt(p_1040188435, 1), 0, (toLowerRanges_1040188404).length - 1)]))) {
    F.line = 494;
    result_1040188425 = subInt(addInt(c_1040188426, toLowerRanges_1040188404[chckIndx(addInt(p_1040188435, 2), 0, (toLowerRanges_1040188404).length - 1)]), 500);
    break BeforeRet;
    }
    
    F.line = 495;
    p_1040188435 = binarySearch_1040188413(c_1040188426, toLowerSinglets_1040188405, 610, 2);
    if (((0 <= p_1040188435) && (c_1040188426 == toLowerSinglets_1040188405[chckIndx(p_1040188435, 0, (toLowerSinglets_1040188405).length - 1)]))) {
    F.line = 497;
    result_1040188425 = subInt(addInt(c_1040188426, toLowerSinglets_1040188405[chckIndx(addInt(p_1040188435, 1), 0, (toLowerSinglets_1040188405).length - 1)]), 500);
    break BeforeRet;
    }
    
    F.line = 498;
    result_1040188425 = c_1040188426;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040188425;

}

function HEX3CHEX3DHEX25_33555507(x_33555508, y_33555509) {
  var result_33555510 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 185;
    F.filename = "comparisons.nim";
    result_33555510 = (Number(BigInt.asUintN(32, BigInt(x_33555508))) <= Number(BigInt.asUintN(32, BigInt(y_33555509))));
  framePtr = F.prev;

  return result_33555510;

}

function nuctoLowerStr(s_1040189725) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_1040189726 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 658;
    F.filename = "unicode.nim";
    result_1040189726 = nimCopy(null, mnewString(chckRange((s_1040189725).length, 0, 2147483647)), NTI33554449);
    F.line = 660;
    var iHEX60gensym252_1040189733 = 0;
    F.line = 661;
    var resultIndexHEX60gensym252_1040189734 = 0;
    F.line = 662;
    var runeHEX60gensym252_1040189735 = 0;
    Label1: {
      F.line = 680;
        Label2: while (true) {
        if (!(iHEX60gensym252_1040189733 < (s_1040189725).length)) break Label2;
          if ((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] <= 127)) {
          F.line = 91;
          runeHEX60gensym252_1040189735 = chckRange(s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)], (-2147483648), 2147483647);
          F.line = 92;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 2))) {
          F.line = 96;
          runeHEX60gensym252_1040189735 = chckRange(((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 98;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 2);
          }
          else {
            F.line = 100;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 101;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 3))) {
          F.line = 106;
          runeHEX60gensym252_1040189735 = chckRange(((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 109;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 3);
          }
          else {
            F.line = 111;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 112;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 4))) {
          F.line = 118;
          runeHEX60gensym252_1040189735 = chckRange(((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 122;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 4);
          }
          else {
            F.line = 124;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 125;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 5))) {
          F.line = 132;
          runeHEX60gensym252_1040189735 = chckRange(((((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 4), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 137;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 5);
          }
          else {
            F.line = 139;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 140;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 6))) {
          F.line = 148;
          runeHEX60gensym252_1040189735 = chckRange(((((((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 4), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 5), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 154;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 6);
          }
          else {
            F.line = 156;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 157;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
            F.line = 159;
            runeHEX60gensym252_1040189735 = chckRange(s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)], (-2147483648), 2147483647);
            F.line = 160;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          }}}}}
          F.line = 665;
          runeHEX60gensym252_1040189735 = nuctoLower(runeHEX60gensym252_1040189735);
          F.line = 221;
          var iHEX60gensym274_1040189976 = runeHEX60gensym252_1040189735;
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 127)) {
          F.line = 223;
          if (result_1040189726.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, 2147483647), Temporary3)) { for (var i = result_1040189726.length; i < Temporary3; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary3; };
          F.line = 224;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(iHEX60gensym274_1040189976, 0, 255);
          F.line = 225;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2047)) {
          F.line = 227;
          if (result_1040189726.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, 2147483647), Temporary4)) { for (var i = result_1040189726.length; i < Temporary4; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary4; };
          F.line = 228;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 6) | 192), 0, 255);
          F.line = 229;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 230;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 65535)) {
          F.line = 232;
          if (result_1040189726.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, 2147483647), Temporary5)) { for (var i = result_1040189726.length; i < Temporary5; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary5; };
          F.line = 233;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 12) | 224), 0, 255);
          F.line = 234;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 235;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 236;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2097151)) {
          F.line = 238;
          if (result_1040189726.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, 2147483647), Temporary6)) { for (var i = result_1040189726.length; i < Temporary6; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary6; };
          F.line = 239;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 18) | 240), 0, 255);
          F.line = 240;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          F.line = 241;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 242;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 243;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 67108863)) {
          F.line = 245;
          if (result_1040189726.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 5), 0, 2147483647), Temporary7)) { for (var i = result_1040189726.length; i < Temporary7; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary7; };
          F.line = 246;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 24) | 248), 0, 255);
          F.line = 247;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 18) & 63) | 128), 0, 255);
          F.line = 248;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          F.line = 249;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 250;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 251;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2147483647)) {
          F.line = 253;
          if (result_1040189726.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 6), 0, 2147483647), Temporary8)) { for (var i = result_1040189726.length; i < Temporary8; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary8; };
          F.line = 254;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 30) | 252), 0, 255);
          F.line = 255;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 24) & 63) | 128), 0, 255);
          F.line = 256;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 18) & 63) | 128), 0, 255);
          F.line = 257;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          F.line = 258;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 259;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 5), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 260;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 6);
          }
          else {
          }
          }}}}}
        }
    };
  framePtr = F.prev;

  return result_1040189726;

}

function toLower_1040194968(s_1040194969) {
  var result_1040194970 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1302;
    F.filename = "unicode.nim";
    result_1040194970 = nimCopy(null, nuctoLowerStr((s_1040194969.slice(0, (s_1040194969).length - 1 + 1))), NTI33554449);
  framePtr = F.prev;

  return result_1040194970;

}

function toGlassType_1560281093(str_1560281094) {
  var result_1560281095 = 0;

  var F = {procname: "glass.toGlassType", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (eqStrings(toLower_1040194968(str_1560281094), [115,107,121])) {
    F.line = 8;
    F.filename = "glass.nim";
    result_1560281095 = 0;
    break BeforeRet;
    }
    else {
    if (eqStrings(toLower_1040194968(str_1560281094), [122,101,114,111])) {
    F.line = 10;
    result_1560281095 = 1;
    break BeforeRet;
    }
    else {
    if (eqStrings(toLower_1040194968(str_1560281094), [115,116,101,101,108])) {
    F.line = 12;
    result_1560281095 = 2;
    break BeforeRet;
    }
    else {
    if (eqStrings(toLower_1040194968(str_1560281094), [114,101,118,101,114,105,101])) {
    F.line = 14;
    result_1560281095 = 3;
    break BeforeRet;
    }
    else {
      F.line = 16;
    raiseAssert_268435499(([63,63,63,63,44,32] || []).concat(str_1560281094 || [],[32,105,115,32,110,111,116,32,97,32,103,108,97,115,115] || []));
    }
    }}}
  };
  framePtr = F.prev;

  return result_1560281095;

}

function newGroup_1224737264(s_1224737265) {
  var result_1224737266 = 0;

  var F = {procname: "piece.newGroup", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 205;
    F.filename = "piece.nim";
    s_1224737265.Field0.nextGroup = addInt(s_1224737265.Field0.nextGroup, 1);
    F.line = 206;
    result_1224737266 = s_1224737265.Field0.nextGroup;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737266;

}

function newSeq_520096990(len_520096992) {
  var result_520096993 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_520096993 = new Array(len_520096992); for (var i = 0 ; i < len_520096992 ; ++i) { result_520096993[i] = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0}; }  framePtr = F.prev;

  return result_520096993;

}

function isNone_520097169(self_520097171) {
  var result_520097172 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520097172 = !(self_520097171.has);
  framePtr = F.prev;

  return result_520097172;

}

function get_520097161(self_520097163) {
  var result_520097164 = null;

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (isNone_520097169(self_520097163)) {
    F.line = 230;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 231;
    result_520097164 = self_520097163.val;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097164;

}

function otherGlass_520097101(d_520097102) {
    var Temporary1;
                              var Temporary27;

  var F = {procname: "main.otherGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 299;
    F.filename = "main.nim";
    var data_520097103 = nsuSplitString(d_520097102, [44], (-1));
    if (eqStrings(data_520097103[chckIndx(0, 0, (data_520097103).length - 1)], [99,97,115,116,105,110,103,115,116,97,114,116])) {
    F.line = 301;
    (Temporary1 = theBoard_520093825[0][chckIndx(nsuParseInt(data_520097103[chckIndx(1, 0, (data_520097103).length - 1)]), 0, (theBoard_520093825[0]).length - 1)], Temporary1)[chckIndx(nsuParseInt(data_520097103[chckIndx(2, 0, (data_520097103).length - 1)]), 0, (Temporary1).length - 1)].casts.push({Field0: nimCopy(null, {Field0: nsuParseInt(data_520097103[chckIndx(4, 0, (data_520097103).length - 1)]), Field1: nsuParseInt(data_520097103[chckIndx(3, 0, (data_520097103).length - 1)])}, NTI1224736771), Field1: nsuParseInt(data_520097103[chckIndx(5, 0, (data_520097103).length - 1)]), Field2: toGlassType_1560281093(data_520097103[chckIndx(6, 0, (data_520097103).length - 1)])});;
    F.line = 306;
    var _ = newGroup_1224737264(theState_520093826[0]);
    }
    else {
    if (eqStrings(data_520097103[chckIndx(0, 0, (data_520097103).length - 1)], [99,97,115,116,105,110,103,99,97,110,99,101,108])) {
    F.line = 309;
    turn_520093808[0] = true;
    F.line = 310;
    rawEcho([116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101,58,32,111,116,104,101,114,103,108,97,115,115,32,99,97,110,99,101,108]);
    Label2: {
      F.line = 311;
      var i_520097115 = 0;
      F.line = 311;
      var j_520097116 = 0;
      Label3: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_520100684 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100685 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_520100685 < 8)) break Label5;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100684 = i_520100685;
              Label6: {
                F.line = 126;
                var j_520100688 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100689 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_520100689 < 8)) break Label8;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100688 = i_520100689;
                      F.line = 311;
                      F.filename = "main.nim";
                      i_520097115 = i_520100684;
                      F.line = 311;
                      j_520097116 = j_520100688;
                      F.line = 312;
                      F.line = 652;
                      F.filename = "sequtils.nim";
                      var resultHEX60gensym97_520097121 = newSeq_520096990(0);
                      Label9: {
                        F.line = 653;
                        var it_520097125 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520100679 = [];
                        F.line = 312;
                        F.filename = "main.nim";
                        colontmp__520100679 = theBoard_520093825[0][chckIndx(i_520097115, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097116, 0, (theBoard_520093825[0][chckIndx(i_520097115, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520100680 = 0;
                        F.line = 250;
                        var L_520100681 = (colontmp__520100679).length;
                        Label10: {
                          F.line = 251;
                            Label11: while (true) {
                            if (!(i_520100680 < L_520100681)) break Label11;
                              F.line = 653;
                              F.filename = "sequtils.nim";
                              it_520097125 = colontmp__520100679[chckIndx(i_520100680, 0, (colontmp__520100679).length - 1)];
                              if (!((it_520097125.Field1 == nsuParseInt(data_520097103[chckIndx(1, 0, (data_520097103).length - 1)])))) {
                              F.line = 654;
                              var Temporary12 = nimCopy(null, it_520097125, NTI1224736788);
                              resultHEX60gensym97_520097121.push(Temporary12);;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520100680 += 1;
                              if (!(((colontmp__520100679).length == L_520100681))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      theBoard_520093825[0][chckIndx(i_520097115, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097116, 0, (theBoard_520093825[0][chckIndx(i_520097115, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym97_520097121, NTI520095756);
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100689 = addInt(i_520100689, 1);
                    }
                };
              };
              F.line = 131;
              i_520100685 = addInt(i_520100685, 1);
            }
        };
      };
    };
    }
    else {
    if (eqStrings(data_520097103[chckIndx(0, 0, (data_520097103).length - 1)], [99,97,115,116,105,110,103,99,111,109,112,108,101,116,101])) {
    F.line = 314;
    F.filename = "main.nim";
    turn_520093808[0] = true;
    F.line = 315;
    rawEcho([116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101,58,32,111,116,104,101,114,103,108,97,115,115,32,99,111,109,112,108,101,116,101]);
    Label13: {
      F.line = 316;
      var i_520097130 = 0;
      F.line = 316;
      var j_520097131 = 0;
      Label14: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_520100703 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100704 = 0;
        Label15: {
          F.line = 129;
            Label16: while (true) {
            if (!(i_520100704 < 8)) break Label16;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100703 = i_520100704;
              Label17: {
                F.line = 126;
                var j_520100707 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100708 = 0;
                Label18: {
                  F.line = 129;
                    Label19: while (true) {
                    if (!(i_520100708 < 8)) break Label19;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100707 = i_520100708;
                      F.line = 316;
                      F.filename = "main.nim";
                      i_520097130 = i_520100703;
                      F.line = 316;
                      j_520097131 = j_520100707;
                      Label20: {
                        F.line = 317;
                        var c_520097135 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520100698 = [];
                        F.line = 317;
                        F.filename = "main.nim";
                        colontmp__520100698 = theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097131, 0, (theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520100699 = 0;
                        F.line = 250;
                        var L_520100700 = (colontmp__520100698).length;
                        Label21: {
                          F.line = 251;
                            Label22: while (true) {
                            if (!(i_520100699 < L_520100700)) break Label22;
                              F.line = 317;
                              F.filename = "main.nim";
                              c_520097135 = colontmp__520100698[chckIndx(i_520100699, 0, (colontmp__520100698).length - 1)];
                              if ((c_520097135.Field1 == nsuParseInt(data_520097103[chckIndx(1, 0, (data_520097103).length - 1)]))) {
                              F.line = 320;
                              F.line = 652;
                              F.filename = "sequtils.nim";
                              var resultHEX60gensym99_520097140 = newSeq_520096990(0);
                              Label23: {
                                F.line = 653;
                                var it_520097144 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                                F.line = 247;
                                F.filename = "iterators.nim";
                                var colontmp__520100694 = [];
                                F.line = 320;
                                F.filename = "main.nim";
                                colontmp__520100694 = theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097131, 0, (theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                                F.line = 249;
                                F.filename = "iterators.nim";
                                var i_520100695 = 0;
                                F.line = 250;
                                var L_520100696 = (colontmp__520100694).length;
                                Label24: {
                                  F.line = 251;
                                    Label25: while (true) {
                                    if (!(i_520100695 < L_520100696)) break Label25;
                                      F.line = 653;
                                      F.filename = "sequtils.nim";
                                      it_520097144 = colontmp__520100694[chckIndx(i_520100695, 0, (colontmp__520100694).length - 1)];
                                      if (!((it_520097144.Field1 == c_520097135.Field1))) {
                                      F.line = 654;
                                      var Temporary26 = nimCopy(null, it_520097144, NTI1224736788);
                                      resultHEX60gensym99_520097140.push(Temporary26);;
                                      }
                                      
                                      F.line = 13;
                                      F.filename = "iterators.nim";
                                      i_520100695 += 1;
                                      if (!(((colontmp__520100694).length == L_520100696))) {
                                      F.line = 254;
                                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                      }
                                      
                                    }
                                };
                              };
                              theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097131, 0, (theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym99_520097140, NTI520095756);
                              F.line = 321;
                              F.filename = "main.nim";
                              get_520097161((Temporary27 = theState_520093826[0].Field1[chckIndx(otherSide_1224737822(side_520093807[0]), 0, (theState_520093826[0].Field1).length - 1)].glass, Temporary27)[chckIndx(c_520097135.Field2, 0, (Temporary27).length - 1)]).Field1(theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097131, 0, (theBoard_520093825[0][chckIndx(i_520097130, 0, (theBoard_520093825[0]).length - 1)]).length - 1)], c_520097135.Field0, theBoard_520093825[0], theState_520093826[0]);
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520100699 += 1;
                              if (!(((colontmp__520100698).length == L_520100700))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100708 = addInt(i_520100708, 1);
                    }
                };
              };
              F.line = 131;
              i_520100704 = addInt(i_520100704, 1);
            }
        };
      };
    };
    }
    }}
  framePtr = F.prev;

  
}

function otherAction_520097193(d_520097194) {
  var F = {procname: "main.otherAction", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 327;
    F.filename = "main.nim";
    var data_520097195 = nsuSplitString(d_520097194, [44], (-1));
    if (eqStrings(data_520097195[chckIndx(0, 0, (data_520097195).length - 1)], [98,117,121])) {
    F.line = 329;
    otherBuy_520097018(d_520097194);
    F.line = 330;
    endRound_520096229();
    }
    else {
    if ((eqStrings(data_520097195[chckIndx(0, 0, (data_520097195).length - 1)], [109,111,118,101]) || eqStrings(data_520097195[chckIndx(0, 0, (data_520097195).length - 1)], [116,97,107,101]))) {
    F.line = 332;
    turn_520093808[0] = true;
    F.line = 333;
    rawEcho([111,116,104,101,114,97,99,116,105,111,110,32,111,102,32,109,111,118,101,47,116,97,107,101,58,32,116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101]);
    F.line = 334;
    otherMove_520097036(d_520097194);
    F.line = 335;
    endRound_520096229();
    }
    else {
    if ((toJSStr(data_520097195[chckIndx(0, 0, (data_520097195).length - 1)]).indexOf("casting")>=0)) {
    F.line = 337;
    otherGlass_520097101(d_520097194);
    }
    else {
    if (eqStrings(data_520097195[chckIndx(0, 0, (data_520097195).length - 1)], [112,97,115,115])) {
    F.line = 339;
    turn_520093808[0] = true;
    F.line = 340;
    rawEcho([111,116,104,101,114,97,99,116,105,111,110,32,111,102,32,112,97,115,115,58,32,116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101]);
    F.line = 341;
    endRound_520096229();
    }
    }}}
  framePtr = F.prev;

  
}

function hostLogic_520097343(d_520097344, m_520097345) {
  var F = {procname: "main.hostLogic", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 384;
    F.filename = "main.nim";
    rawEcho(reprEnum(m_520097345, NTI1325400069), [32,111,102,32], d_520097344, [10]);
    F.line = 385;
    switch (m_520097345) {
    case 0:
      F.line = 387;
      var colontmp__520100595 = true;
      F.line = 387;
      var colontmp__520100596 = toJSStr(d_520097344);
      F.line = 387;
      roomId_520093800[0] = nimCopy(roomId_520093800[0], {Field0: colontmp__520100595, Field1: colontmp__520100596}, NTI520093737);
      F.line = 388;
      side_520093807[0] = 1;
      break;
    case 1:
      F.line = 390;
      peer_520093806[0].Field0("options:deciding");
      F.line = 391;
      currentScreen_520093855[0] = 4;
      F.line = 392;
      initGame_520093937();
      F.line = 394;
      draftTier_520093823[0] = randomTier_1442841575({Field0: 50, Field1: 36, Field2: 12, Field3: 2});
      break;
    case 3:
      F.line = 396;
      var x_520097349 = nsuSplitString(d_520097344, [44], (-1));
      if (eqStrings(x_520097349[chckIndx(0, 0, (x_520097349).length - 1)], [109,121])) {
      F.line = 398;
      turn_520093808[0] = true;
      F.line = 399;
      var Temporary1 = nimCopy(null, powers_1442840649[0][chckIndx(nsuParseInt(x_520097349[chckIndx(1, 0, (x_520097349).length - 1)]), 0, (powers_1442840649[0]).length - 1)], NTI1442840581);
      opponentDrafts_520093818[0].push(Temporary1);;
      if ((1 <= draftsLeft_520093822[0])) {
      F.line = 401;
      draftsLeft_520093822[0] = subInt(draftsLeft_520093822[0], 1);
      F.line = 402;
      draftTier_520093823[0] = randomTier_1442841575({Field0: 50, Field1: 36, Field2: 12, Field3: 2});
      F.line = 403;
      draft_520097271(HEX26_1442841613(myDrafts_520093813[0], opponentDrafts_520093818[0]), myDrafts_520093813[0]);
      }
      else {
        F.line = 405;
        execute_1442841695(myDrafts_520093813[0], opponentDrafts_520093818[0], side_520093807[0], theBoard_520093825[0], theState_520093826[0]);
        F.line = 406;
        peer_520093806[0].Field0("handshake:gamestart");
        F.line = 407;
        currentScreen_520093855[0] = 3;
      }
      
      }
      
      break;
    case 6:
      F.line = 408;
      otherAction_520097193(d_520097344);
      break;
    case 4:
      if ((eqStrings(d_520097344, [100,105,115,99,111,110,110]) || eqStrings(d_520097344, [101,120,105,116]))) {
      F.line = 411;
      currentScreen_520093855[0] = 8;
      }
      else {
        F.line = 413;
      peer_520093806[0].Field0("end:exit");
      }
      
      F.line = 414;
      peer_520093806[0].Field1();
      F.line = 415;
      roomId_520093800[0].Field0 = false;
      break;
    default: 
      F.line = 416;
      rawEcho([117,110,105,109,112,108,101,109,101,110,116,101,100]);
      break;
    }
    F.line = 417;
    redraw_687867377(kxi__);
  framePtr = F.prev;

  
}

function createLobby_520097653() {
    
function HEX3Aanonymous_520097663(__520097664, __520097665) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 557;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 2;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097666(ev_520097667, __520097668) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 561;
        F.filename = "main.nim";
        initSelectedSubPower_520094035();
        F.line = 562;
        rawEcho([115,101,116,116,105,110,103,32,115,99,114,101,101,110,32,116,111,32,83,101,101,32,80,111,119,101,114]);
        F.line = 563;
        currentScreen_520093855[0] = 11;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097669(ev_520097670, __520097671) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if (!((peer_520093806[0].Field1 == null))) {
        F.line = 571;
        F.filename = "main.nim";
        peer_520093806[0].Field1();
        }
        
        F.line = 572;
        peer_520093806[0] = nimCopy(peer_520093806[0], newHost_1325400110(hostLogic_520097343), NTI520093739);
        F.line = 574;
        currentScreen_520093855[0] = 1;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097723(ev_520097724, __520097725) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 579;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 10;
      framePtr = F.prev;

      
    }

  var result_520097654 = null;

  var F = {procname: "main.createLobby", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 551;
    F.filename = "main.nim";
    F.line = 551;
    var tmp_520097655 = tree_721421184(44, []);
    F.line = 551;
    tmp_520097655.class = "start-column height-100";
    F.line = 552;
    var tmp_520097656 = tree_721421184(44, []);
    F.line = 552;
    tmp_520097656.class = "main";
    F.line = 553;
    var tmp_520097657 = tree_721421184(44, []);
    F.line = 553;
    tmp_520097657.class = "start-column";
    F.line = 554;
    var tmp_520097658 = tree_721421184(195, []);
    F.line = 554;
    tmp_520097658.class = " menu-button ";
    F.line = 555;
    add_721421120(tmp_520097658, text_721421252([74,111,105,110,32,97,32,82,111,111,109]));
    F.line = 556;
    addEventHandler_687867670(tmp_520097658, 0, HEX3Aanonymous_520097663, kxi__);
    F.line = 551;
    add_721421120(tmp_520097657, tmp_520097658);
    F.line = 558;
    var tmp_520097659 = tree_721421184(195, []);
    F.line = 558;
    tmp_520097659.class = " menu-button ";
    F.line = 559;
    add_721421120(tmp_520097659, text_721421252([83,101,101,32,80,111,119,101,114,115]));
    F.line = 560;
    addEventHandler_687867670(tmp_520097659, 0, HEX3Aanonymous_520097666, kxi__);
    F.line = 551;
    add_721421120(tmp_520097657, tmp_520097659);
    F.line = 551;
    add_721421120(tmp_520097656, tmp_520097657);
    F.line = 566;
    var tmp_520097660 = tree_721421184(44, []);
    F.line = 566;
    tmp_520097660.class = "start-column";
    F.line = 567;
    var tmp_520097661 = tree_721421184(195, []);
    F.line = 567;
    tmp_520097661.class = " menu-button ";
    F.line = 568;
    add_721421120(tmp_520097661, text_721421252([67,114,101,97,116,101,32,97,32,82,111,111,109]));
    F.line = 569;
    addEventHandler_687867670(tmp_520097661, 0, HEX3Aanonymous_520097669, kxi__);
    F.line = 551;
    add_721421120(tmp_520097660, tmp_520097661);
    F.line = 576;
    var tmp_520097662 = tree_721421184(195, []);
    F.line = 576;
    tmp_520097662.class = " menu-button ";
    F.line = 577;
    add_721421120(tmp_520097662, text_721421252([79,116,104,101,114]));
    F.line = 578;
    addEventHandler_687867670(tmp_520097662, 0, HEX3Aanonymous_520097723, kxi__);
    F.line = 551;
    add_721421120(tmp_520097660, tmp_520097662);
    F.line = 551;
    add_721421120(tmp_520097656, tmp_520097660);
    F.line = 551;
    add_721421120(tmp_520097655, tmp_520097656);
    result_520097654 = tmp_520097655;
  framePtr = F.prev;

  return result_520097654;

}

function text_721421255(s_721421256) {
  var result_721421257 = null;

  var F = {procname: "vdom.text", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 324;
    F.filename = "vdom.nim";
    result_721421257 = {kind: 0, text: s_721421256, index: (-1), m_type: NTI721420388, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};
  framePtr = F.prev;

  return result_721421257;

}

function createRoomMenu_520097742() {
  var result_520097743 = null;

  var F = {procname: "main.createRoomMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 582;
    F.filename = "main.nim";
    F.line = 582;
    var tmp_520097744 = tree_721421184(44, []);
    F.line = 582;
    tmp_520097744.class = "main";
    if (!(roomId_520093800[0].Field0)) {
    F.line = 584;
    add_721421120(tmp_520097744, text_721421252([67,114,101,97,116,105,110,103,32,114,111,111,109,32,107,101,121]));
    }
    else {
      F.line = 586;
      var tmp_520097745 = tree_721421184(22, []);
      F.line = 587;
      add_721421120(tmp_520097745, text_721421252([82,111,111,109,32,75,101,121,58,32]));
      F.line = 587;
      add_721421120(tmp_520097744, tmp_520097745);
      F.line = 588;
      var tmp_520097746 = tree_721421184(72, []);
      F.line = 588;
      add_721421120(tmp_520097744, tmp_520097746);
      F.line = 589;
      add_721421120(tmp_520097744, text_721421255(roomId_520093800[0].Field1));
    }
    
    result_520097743 = tmp_520097744;
  framePtr = F.prev;

  return result_520097743;

}

function getInputText_687867761(n_687867762) {
  var result_687867763 = null;

  var F = {procname: "karax.getInputText", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((n_687867762.dom == null))) {
    F.line = 891;
    F.filename = "karax.nim";
    result_687867763 = n_687867762.dom.value;
    }
    
  framePtr = F.prev;

  return result_687867763;

}

function getVNodeById_687866162(id_687866163, kxi_687866164) {
  var result_687866165 = null;

  var F = {procname: "karax.getVNodeById", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (kxi_687866164.byId.hasOwnProperty(id_687866163)) {
    F.line = 162;
    F.filename = "karax.nim";
    result_687866165 = kxi_687866164.byId[id_687866163];
    }
    
  framePtr = F.prev;

  return result_687866165;

}

function len_721421311(a_721421312) {
    var Temporary1;

  var result_721421313 = 0;

  var F = {procname: "vdom.len", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 353;
    F.filename = "vdom.nim";
    if ((a_721421312 == null)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = ((a_721421312) == null ? 0 : (a_721421312).length);
    }
    
    result_721421313 = Temporary1;
  framePtr = F.prev;

  return result_721421313;

}

function toString_721421316(n_721421317, result_721421318, result_721421318_Idx, indent_721421319) {
  var F = {procname: "vdom.toString", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 360;
      F.filename = "vdom.nim";
      var i_721421324 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100713 = 1;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100713 <= indent_721421319)) break Label3;
            F.line = 360;
            F.filename = "vdom.nim";
            i_721421324 = res_520100713;
            F.line = 360;
            addChar(result_721421318[result_721421318_Idx], 32);;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100713 = addInt(res_520100713, 1);
          }
      };
    };
    if ((0 < (result_721421318[result_721421318_Idx]).length)) {
    F.line = 361;
    F.filename = "vdom.nim";
    addChar(result_721421318[result_721421318_Idx], 10);;
    }
    
    F.line = 362;
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([60] || []).concat(reprEnum(n_721421317.kind, NTI721420291) || []));;
    if ((0 < len_721421311(n_721421317.id))) {
    F.line = 357;
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([32,105,100,32,61,32] || []).concat(cstrToNimstr(n_721421317.id) || []));;
    }
    
    if ((0 < len_721421311(n_721421317.class))) {
    F.line = 357;
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([32,99,108,97,115,115,32,61,32] || []).concat(cstrToNimstr(n_721421317.class) || []));;
    }
    
    Label4: {
      F.line = 365;
      var k_721421328 = null;
      F.line = 365;
      var v_721421329 = null;
      Label5: {
        F.line = 337;
        var i_520100717 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520100718 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520100718 = subInt((n_721421317.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520100719 = 0;
        Label6: {
          F.line = 69;
            Label7: while (true) {
            if (!(res_520100719 <= colontmp__520100718)) break Label7;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520100717 = res_520100719;
              F.line = 365;
              k_721421328 = n_721421317.attrs[chckIndx(i_520100717, 0, (n_721421317.attrs).length - 1)];
              F.line = 365;
              v_721421329 = n_721421317.attrs[chckIndx(addInt(i_520100717, 1), 0, (n_721421317.attrs).length - 1)];
              F.line = 366;
              result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([32] || []).concat(cstrToNimstr(k_721421328) || [],[32,61,32] || [],cstrToNimstr(v_721421329) || []));;
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520100719 = addInt(res_520100719, 2);
            }
        };
      };
    };
    F.line = 367;
    F.filename = "vdom.nim";
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], [62,10]);;
    if ((n_721421317.kind == 0)) {
    F.line = 369;
    add_33556373(result_721421318, result_721421318_Idx, n_721421317.text);
    }
    else {
      if ((0 < len_721421311(n_721421317.text))) {
      F.line = 372;
      result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], [32,118,97,108,117,101,32,61,32]);;
      F.line = 373;
      add_33556373(result_721421318, result_721421318_Idx, n_721421317.text);
      }
      
      Label8: {
        F.line = 374;
        var child_721421335 = null;
        Label9: {
          F.line = 334;
          var i_520100723 = 0;
          F.line = 126;
          F.filename = "iterators_1.nim";
          var colontmp__520100724 = 0;
          F.line = 334;
          F.filename = "vdom.nim";
          colontmp__520100724 = (n_721421317.kids).length;
          F.line = 128;
          F.filename = "iterators_1.nim";
          var i_520100725 = 0;
          Label10: {
            F.line = 129;
              Label11: while (true) {
              if (!(i_520100725 < colontmp__520100724)) break Label11;
                F.line = 334;
                F.filename = "vdom.nim";
                i_520100723 = i_520100725;
                F.line = 374;
                child_721421335 = n_721421317.kids[chckIndx(i_520100723, 0, (n_721421317.kids).length - 1)];
                F.line = 375;
                toString_721421316(child_721421335, result_721421318, result_721421318_Idx, addInt(indent_721421319, 2));
                F.line = 131;
                F.filename = "iterators_1.nim";
                i_520100725 = addInt(i_520100725, 1);
              }
          };
        };
      };
    }
    
    Label12: {
      F.line = 376;
      F.filename = "vdom.nim";
      var i_721421340 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100728 = 1;
      Label13: {
        F.line = 97;
          Label14: while (true) {
          if (!(res_520100728 <= indent_721421319)) break Label14;
            F.line = 376;
            F.filename = "vdom.nim";
            i_721421340 = res_520100728;
            F.line = 376;
            addChar(result_721421318[result_721421318_Idx], 32);;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100728 = addInt(res_520100728, 1);
          }
      };
    };
    F.line = 377;
    F.filename = "vdom.nim";
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([10,60,47] || []).concat(reprEnum(n_721421317.kind, NTI721420291) || [],[62] || []));;
  framePtr = F.prev;

  
}

function HEX24_721421411(n_721421412) {
  var result_721421413 = null;

  var F = {procname: "vdom.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 506;
    F.filename = "vdom.nim";
    var res_721421414 = [[]];
    F.line = 507;
    toString_721421316(n_721421412, res_721421414, 0, 0);
    F.line = 508;
    result_721421413 = toJSStr(res_721421414[0]);
  framePtr = F.prev;

  return result_721421413;

}

function newJoin_1325400311(id_1325400312, cb_1325400316) {
    
function HEX3Aanonymous_1325400325() {
        
function HEX3Aanonymous_1325400337() {
          var result_1325400338 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
          framePtr = F;
            F.line = 91;
            F.filename = "port.nim";
            result_1325400338 = conn_1325400324.send(("handshake:hello"));
          framePtr = F.prev;

          return result_1325400338;

        }
        
function HEX3Aanonymous_1325400368(data_1325400369) {
          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
          framePtr = F;
            F.line = 92;
            F.filename = "port.nim";
            cb_1325400316(cutMessage_1325400107(data_1325400369), messageType_1325400087(data_1325400369));
          framePtr = F.prev;

          
        }

      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 90;
        F.filename = "port.nim";
        conn_1325400324 = peer_1325400323.connect((("9e4ada91-c493-4fd4-881d-3e05db99e100" + id_1325400312)));
        conn_1325400324.on(("open"), (HEX3Aanonymous_1325400337));
        conn_1325400324.on(("data"), (HEX3Aanonymous_1325400368));
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400407() {
      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 94;
        F.filename = "port.nim";
        rawEcho([68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84]);
        F.line = 95;
        peer_1325400323.id = ("9e4ada91-c493-4fd4-881d-3e05db99e100" + id_1325400312);
        peer_1325400323.reconnect();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400441() {
      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        peer_1325400323.destroy();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400446(data_1325400447) {
      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        conn_1325400324.send((data_1325400447));
      framePtr = F.prev;

      
    }

  var result_1325400322 = {Field0: null, Field1: null};

  var F = {procname: "port.newJoin", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "port.nim";
    var peer_1325400323 = new Peer(null, {config: {
                        iceServers: [
                            {
                                urls: "turn:standard.relay.metered.ca:80",
                                username: "4eadefa5a1ad93a461469d19",
                                credential: "wLlcdHP/D2ZcRAg/",
                            }
                        ]
                    }
                })
;
    F.line = 88;
    var conn_1325400324 = null;
    peer_1325400323.on(("open"), (HEX3Aanonymous_1325400325));
    peer_1325400323.on(("disconnect"), (HEX3Aanonymous_1325400407));
    F.line = 98;
    result_1325400322.Field1 = HEX3Aanonymous_1325400441;
    F.line = 101;
    result_1325400322.Field0 = HEX3Aanonymous_1325400446;
  framePtr = F.prev;

  return result_1325400322;

}

function HEX5BHEX5D_520097412(s_520097416, x_520097417) {
  var result_520097418 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_520097420 = x_520097417.a;
    F.line = 140;
    var L_520097425 = addInt(subInt(subInt((s_520097416).length, x_520097417.b), a_520097420), 1);
    F.line = 141;
    result_520097418 = new Array(chckRange(L_520097425, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_520097425, 0, 2147483647) ; ++i) { result_520097418[i] = []; }    Label1: {
      F.line = 142;
      var i_520097434 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100737 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100737 < L_520097425)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_520097434 = i_520100737;
            F.line = 142;
            result_520097418[chckIndx(i_520097434, 0, (result_520097418).length - 1)] = nimCopy(null, s_520097416[chckIndx(addInt(i_520097434, a_520097420), 0, (s_520097416).length - 1)], NTI33554449);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100737 = addInt(i_520100737, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520097418;

}

function joinLogic_520097388(d_520097389, m_520097390) {
  var F = {procname: "main.joinLogic", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 420;
    F.filename = "main.nim";
    rawEcho(reprEnum(m_520097390, NTI1325400069), [32,111,102,32], d_520097389, [10]);
    F.line = 421;
    switch (m_520097390) {
    case 2:
      F.line = 423;
      currentScreen_520093855[0] = 4;
      F.line = 424;
      side_520093807[0] = 0;
      F.line = 425;
      turn_520093808[0] = false;
      F.line = 426;
      initGame_520093937();
      break;
    case 1:
      F.line = 428;
      execute_1442841695(myDrafts_520093813[0], opponentDrafts_520093818[0], side_520093807[0], theBoard_520093825[0], theState_520093826[0]);
      F.line = 429;
      currentScreen_520093855[0] = 3;
      break;
    case 5:
      if (rematch_520093824[0]) {
      F.line = 432;
      rematch_520093824[0] = false;
      F.line = 433;
      peer_520093806[0].Field0("handshake:newgame");
      }
      else {
        F.line = 435;
        rematch_520093824[0] = true;
      }
      
      break;
    case 3:
      F.line = 437;
      var x_520097394 = nsuSplitString(d_520097389, [44], (-1));
      if (eqStrings(d_520097389, [115,116,97,114,116])) {
      F.line = 439;
      currentScreen_520093855[0] = 5;
      }
      else {
      if (eqStrings(x_520097394[chckIndx(0, 0, (x_520097394).length - 1)], [109,121])) {
      F.line = 441;
      var Temporary1 = nimCopy(null, powers_1442840649[0][chckIndx(nsuParseInt(x_520097394[chckIndx(1, 0, (x_520097394).length - 1)]), 0, (powers_1442840649[0]).length - 1)], NTI1442840581);
      opponentDrafts_520093818[0].push(Temporary1);;
      }
      else {
      if (eqStrings(x_520097394[chckIndx(0, 0, (x_520097394).length - 1)], [103,111])) {
      F.line = 443;
      draftOptions_520093820[0] = nimCopy(null, [], NTI1442841214);
      Label2: {
        F.line = 444;
        var i_520097456 = [];
        F.line = 247;
        F.filename = "iterators.nim";
        var colontmp__520100731 = [];
        F.line = 444;
        F.filename = "main.nim";
        colontmp__520100731 = HEX5BHEX5D_520097412(x_520097394, HEX2EHEX2E_1006633065(1, 1));
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520100733 = 0;
        F.line = 250;
        var L_520100734 = (colontmp__520100731).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520100733 < L_520100734)) break Label4;
              F.line = 444;
              F.filename = "main.nim";
              i_520097456 = colontmp__520100731[chckIndx(i_520100733, 0, (colontmp__520100731).length - 1)];
              F.line = 445;
              var Temporary5 = nimCopy(null, powers_1442840649[0][chckIndx(nsuParseInt(i_520097456), 0, (powers_1442840649[0]).length - 1)], NTI1442840581);
              draftOptions_520093820[0].push(Temporary5);;
              F.line = 13;
              F.filename = "iterators.nim";
              i_520100733 += 1;
              if (!(((colontmp__520100731).length == L_520100734))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      F.line = 447;
      F.filename = "main.nim";
      turn_520093808[0] = true;
      }
      }}
      break;
    case 6:
      F.line = 448;
      otherAction_520097193(d_520097389);
      break;
    case 4:
      if ((eqStrings(d_520097389, [100,105,115,99,111,110,110]) || eqStrings(d_520097389, [101,120,105,116]))) {
      F.line = 451;
      currentScreen_520093855[0] = 8;
      }
      else {
        F.line = 453;
      peer_520093806[0].Field0("end:exit");
      }
      
      F.line = 454;
      peer_520093806[0].Field1();
      break;
    default: 
      F.line = 455;
      rawEcho([117,110,105,109,112,108,101,109,101,110,116,101,100]);
      break;
    }
    F.line = 456;
    redraw_687867377(kxi__);
  framePtr = F.prev;

  
}

function join_520097747(__520097748, __520097749) {
  var F = {procname: "main.join", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 592;
    F.filename = "main.nim";
    var id_520097750 = getInputText_687867761(getVNodeById_687866162("joincode", kxi__));
    F.line = 593;
    roomId_520093800[0].Field1 = id_520097750;
    F.line = 594;
    rawEcho(HEX24_721421411(getVNodeById_687866162("joincode", kxi__)));
    if (!((peer_520093806[0].Field1 == null))) {
    F.line = 596;
    peer_520093806[0].Field1();
    }
    
    F.line = 597;
    peer_520093806[0] = nimCopy(peer_520093806[0], newJoin_1325400311(id_520097750, joinLogic_520097388), NTI520093739);
  framePtr = F.prev;

  
}

function setAttr_721421035(n_721421036, key_721421037, val_721421038) {
  var F = {procname: "vdom.setAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((n_721421036.attrs).length == 0)) {
    F.line = 248;
    F.filename = "vdom.nim";
    n_721421036.attrs = nimCopy(null, [key_721421037, val_721421038], NTI721420574);
    }
    else {
      Label1: {
        F.line = 250;
        var i_721421055 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520100740 = 0;
        F.line = 250;
        F.filename = "vdom.nim";
        colontmp__520100740 = subInt((n_721421036.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520100741 = 0;
        Label2: {
          F.line = 69;
            Label3: while (true) {
            if (!(res_520100741 <= colontmp__520100740)) break Label3;
              F.line = 250;
              F.filename = "vdom.nim";
              i_721421055 = res_520100741;
              if ((n_721421036.attrs[chckIndx(i_721421055, 0, (n_721421036.attrs).length - 1)] == key_721421037)) {
              F.line = 252;
              n_721421036.attrs[chckIndx(addInt(i_721421055, 1), 0, (n_721421036.attrs).length - 1)] = val_721421038;
              F.line = 253;
              break BeforeRet;
              }
              
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520100741 = addInt(res_520100741, 2);
            }
        };
      };
      F.line = 254;
      F.filename = "vdom.nim";
      n_721421036.attrs.push(key_721421037);;
      F.line = 255;
      n_721421036.attrs.push(val_721421038);;
    }
    
  };
  framePtr = F.prev;

  
}

function addEventHandler_687867678(n_687867679, k_687867680, action_687867682, kxi_687867683) {
    
function wrapper_687867684(ev_687867685, n_687867686) {
      var F = {procname: "addEventHandler.wrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 828;
        F.filename = "karax.nim";
        action_687867682();
        if (!(kxi_687867683.surpressRedraws)) {
        F.line = 829;
        redraw_687867377(kxi_687867683);
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.addEventHandler", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 830;
    F.filename = "karax.nim";
    addEventListener_721421303(n_687867679, k_687867680, wrapper_687867684);
  framePtr = F.prev;

  
}

function getError_1207959579(field_1207959580) {
  var result_1207959581 = null;

  var F = {procname: "errors.getError", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
  framePtr = F;
    if (!(gerrorMsgs_1207959558[0].hasOwnProperty(field_1207959580))) {
    F.line = 17;
    F.filename = "errors.nim";
    result_1207959581 = "";
    }
    else {
      F.line = 19;
      result_1207959581 = gerrorMsgs_1207959558[0][field_1207959580];
    }
    
  framePtr = F.prev;

  return result_1207959581;

}

function setError_1207959594(field_1207959595, msg_1207959596) {
  var F = {procname: "errors.setError", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
  framePtr = F;
    F.line = 22;
    F.filename = "errors.nim";
    var previous_1207959597 = getError_1207959579(field_1207959595);
    if ((((msg_1207959596) == null ? 0 : (msg_1207959596).length) == 0)) {
    if (!((((previous_1207959597) == null ? 0 : (previous_1207959597).length) == 0))) {
    F.line = 24;
    gerrorCounter_1207959559[0] = subInt(gerrorCounter_1207959559[0], 1);
    }
    
    }
    else {
      if ((((previous_1207959597) == null ? 0 : (previous_1207959597).length) == 0)) {
      F.line = 26;
      gerrorCounter_1207959559[0] = addInt(gerrorCounter_1207959559[0], 1);
      }
      
    }
    
    F.line = 27;
    gerrorMsgs_1207959558[0][field_1207959595] = msg_1207959596;
  framePtr = F.prev;

  
}

function validateNotEmpty_520097467(field_520097468) {
    
function HEX3Aanonymous_520097471() {
      var F = {procname: "validateNotEmpty.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 460;
        F.filename = "main.nim";
        var x_520097472 = getInputText_687867761(getVNodeById_687866162(field_520097468, kxi__));
        if (((x_520097472 == null) || (x_520097472 == ""))) {
        F.line = 462;
        setError_1207959594(field_520097468, (field_520097468 + " must not be empty"));
        }
        else {
          F.line = 464;
        setError_1207959594(field_520097468, "");
        }
        
      framePtr = F.prev;

      
    }

  var result_520097470 = null;

  var F = {procname: "main.validateNotEmpty", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 459;
    F.filename = "main.nim";
    result_520097470 = HEX3Aanonymous_520097471;
  framePtr = F.prev;

  return result_520097470;

}

function createJoinMenu_520097772() {
  var result_520097773 = null;

  var F = {procname: "main.createJoinMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 600;
    F.filename = "main.nim";
    F.line = 600;
    var tmp_520097774 = tree_721421184(44, []);
    F.line = 600;
    tmp_520097774.class = "main cut-down";
    F.line = 600;
    tmp_520097774.id = "join";
    F.line = 600;
    addEventHandler_687867670(tmp_520097774, 29, join_520097747, kxi__);
    F.line = 601;
    var tmp_520097775 = tree_721421184(193, []);
    F.line = 601;
    setAttr_721421035(tmp_520097775, "for", "joincode");
    F.line = 602;
    add_721421120(tmp_520097775, text_721421252([74,111,105,110,32,67,111,100,101,58]));
    F.line = 602;
    add_721421120(tmp_520097774, tmp_520097775);
    F.line = 603;
    var tmp_520097776 = tree_721421184(194, []);
    F.line = 603;
    tmp_520097776.id = "joincode";
    F.line = 603;
    addEventHandler_687867678(tmp_520097776, 8, validateNotEmpty_520097467("joincode"), kxi__);
    F.line = 603;
    add_721421120(tmp_520097774, tmp_520097776);
    F.line = 604;
    var tmp_520097777 = tree_721421184(195, []);
    F.line = 604;
    addEventHandler_687867670(tmp_520097777, 0, join_520097747, kxi__);
    F.line = 605;
    add_721421120(tmp_520097777, text_721421252([69,110,116,101,114]));
    F.line = 605;
    add_721421120(tmp_520097774, tmp_520097777);
    result_520097773 = tmp_520097774;
  framePtr = F.prev;

  return result_520097773;

}

function createOptionsMenu_520097778() {
      
function HEX3Aanonymous_520097808(__520097809, __520097810) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 615;
          F.filename = "main.nim";
          peer_520093806[0].Field0("handshake:gamestart");
          F.line = 616;
          turn_520093808[0] = true;
          F.line = 617;
          currentScreen_520093855[0] = 3;
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520097813(__520097814, __520097815) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 628;
          F.filename = "main.nim";
          peer_520093806[0].Field0("draft:start");
          F.line = 629;
          currentScreen_520093855[0] = 5;
          F.line = 630;
          gameMode_520093857[0] = 1;
          F.line = 631;
          turn_520093808[0] = true;
          F.line = 632;
          baseDrafts_520093819[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftTierNumber", kxi__)), 10);
          F.line = 633;
          draftsLeft_520093822[0] = subInt(baseDrafts_520093819[0], 1);
          F.line = 634;
          draftChoices_520093821[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftChoiceTierNumber", kxi__)), 10);
          F.line = 636;
          draft_520097271([], []);
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520097834(__520097835, __520097836) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 657;
          F.filename = "main.nim";
          peer_520093806[0].Field0("draft:start");
          F.line = 658;
          currentScreen_520093855[0] = 5;
          F.line = 659;
          gameMode_520093857[0] = 2;
          F.line = 660;
          turn_520093808[0] = true;
          F.line = 662;
          baseDrafts_520093819[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftRandNumber", kxi__)), 10);
          F.line = 663;
          draftsLeft_520093822[0] = subInt(baseDrafts_520093819[0], 1);
          F.line = 664;
          draftChoices_520093821[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftChoiceRandNumber", kxi__)), 10);
          F.line = 666;
          draft_520097271([], []);
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520097839(__520097840, __520097841) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 689;
          F.filename = "main.nim";
          peer_520093806[0].Field0("draft:start");
          F.line = 690;
          currentScreen_520093855[0] = 5;
          F.line = 691;
          gameMode_520093857[0] = 3;
          F.line = 692;
          turn_520093808[0] = true;
          F.line = 694;
          baseDrafts_520093819[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftSuperRandNumber", kxi__)), 10);
          F.line = 695;
          draftsLeft_520093822[0] = subInt(baseDrafts_520093819[0], 1);
          F.line = 696;
          draftChoices_520093821[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftChoiceSuperRandNumber", kxi__)), 10);
          F.line = 698;
          draft_520097271([], []);
        framePtr = F.prev;

        
      }

  var result_520097779 = null;

  var F = {procname: "main.createOptionsMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 608;
    F.filename = "main.nim";
    F.line = 608;
    var tmp_520097780 = tree_721421184(44, []);
    F.line = 608;
    tmp_520097780.class = "main";
    if ((side_520093807[0] == 0)) {
    F.line = 610;
    add_721421120(tmp_520097780, text_721421252([87,97,105,116,105,110,103,32,102,111,114,32,104,111,115,116,32,116,111,32,100,101,99,105,100,101,32,114,117,108,101,115,101,116,46,46,46]));
    }
    else {
      F.line = 612;
      var tmp_520097781 = tree_721421184(44, []);
      F.line = 612;
      tmp_520097781.class = "column cut-down";
      F.line = 613;
      var tmp_520097782 = tree_721421184(195, []);
      F.line = 614;
      addEventHandler_687867670(tmp_520097782, 0, HEX3Aanonymous_520097808, kxi__);
      F.line = 619;
      add_721421120(tmp_520097782, text_721421252([78,111,114,109,97,108,32,67,104,101,115,115]));
      F.line = 619;
      add_721421120(tmp_520097781, tmp_520097782);
      F.line = 621;
      add_721421120(tmp_520097781, text_721421252([67,108,97,115,115,105,99,32,67,104,101,115,115,44,32,119,105,116,104,32,110,111,32,115,112,101,99,105,97,108,32,114,117,108,101,115,32,111,114,32,97,98,105,108,105,116,101,115,46]));
      F.line = 621;
      add_721421120(tmp_520097780, tmp_520097781);
      F.line = 624;
      var tmp_520097783 = tree_721421184(44, []);
      F.line = 624;
      tmp_520097783.class = "column cut-down";
      F.line = 625;
      var tmp_520097784 = tree_721421184(44, []);
      F.line = 625;
      tmp_520097784.class = "column";
      F.line = 626;
      var tmp_520097785 = tree_721421184(195, []);
      F.line = 627;
      addEventHandler_687867670(tmp_520097785, 0, HEX3Aanonymous_520097813, kxi__);
      F.line = 638;
      add_721421120(tmp_520097785, text_721421252([68,114,97,102,116,32,109,111,100,101]));
      F.line = 638;
      add_721421120(tmp_520097784, tmp_520097785);
      F.line = 639;
      add_721421120(tmp_520097784, text_721421252(makeNimstrLit("Take turns drafting power ups for your pieces, then play. \x0A                            Each side is guaranteed to get power ups of the same tier.")));
      F.line = 642;
      var tmp_520097786 = tree_721421184(193, []);
      F.line = 642;
      setAttr_721421035(tmp_520097786, "for", "draftTierNumber");
      F.line = 643;
      add_721421120(tmp_520097786, text_721421252([78,117,109,98,101,114,32,111,102,32,112,111,119,101,114,115,32,100,114,97,102,116,101,100]));
      F.line = 643;
      add_721421120(tmp_520097784, tmp_520097786);
      F.line = 644;
      var tmp_520097787 = tree_721421184(194, []);
      F.line = 644;
      tmp_520097787.id = "draftTierNumber";
      F.line = 644;
      setAttr_721421035(tmp_520097787, "type", "number");
      F.line = 644;
      addEventHandler_687867678(tmp_520097787, 8, validateNotEmpty_520097467("draftTierNumber"), kxi__);
      F.line = 645;
      setAttr_721421035(tmp_520097787, "step", "1");
      F.line = 645;
      setAttr_721421035(tmp_520097787, "min", "1");
      F.line = 645;
      setAttr_721421035(tmp_520097787, "max", "10");
      F.line = 645;
      valueHEX3D_721420741(tmp_520097787, "3");
      F.line = 645;
      setAttr_721421035(tmp_520097787, "value", "3");
      F.line = 645;
      add_721421120(tmp_520097784, tmp_520097787);
      F.line = 647;
      var tmp_520097788 = tree_721421184(193, []);
      F.line = 647;
      setAttr_721421035(tmp_520097788, "for", "draftChoiceTierNumber");
      F.line = 648;
      add_721421120(tmp_520097788, text_721421252([78,117,109,98,101,114,32,111,102,32,99,104,111,105,99,101,115,32,101,97,99,104,32,114,111,117,110,100]));
      F.line = 648;
      add_721421120(tmp_520097784, tmp_520097788);
      F.line = 649;
      var tmp_520097789 = tree_721421184(194, []);
      F.line = 649;
      tmp_520097789.id = "draftChoiceTierNumber";
      F.line = 649;
      setAttr_721421035(tmp_520097789, "type", "number");
      F.line = 649;
      addEventHandler_687867678(tmp_520097789, 8, validateNotEmpty_520097467("draftChoiceTierNumber"), kxi__);
      F.line = 650;
      setAttr_721421035(tmp_520097789, "step", "1");
      F.line = 650;
      setAttr_721421035(tmp_520097789, "min", "1");
      F.line = 650;
      setAttr_721421035(tmp_520097789, "max", "5");
      F.line = 650;
      valueHEX3D_721420741(tmp_520097789, "3");
      F.line = 650;
      setAttr_721421035(tmp_520097789, "value", "3");
      F.line = 650;
      add_721421120(tmp_520097784, tmp_520097789);
      F.line = 650;
      add_721421120(tmp_520097783, tmp_520097784);
      F.line = 652;
      var tmp_520097790 = tree_721421184(33, []);
      F.line = 652;
      add_721421120(tmp_520097783, tmp_520097790);
      F.line = 654;
      var tmp_520097791 = tree_721421184(44, []);
      F.line = 654;
      tmp_520097791.class = "column";
      F.line = 655;
      var tmp_520097792 = tree_721421184(195, []);
      F.line = 656;
      addEventHandler_687867670(tmp_520097792, 0, HEX3Aanonymous_520097834, kxi__);
      F.line = 669;
      add_721421120(tmp_520097792, text_721421252([82,97,110,100,111,109,32,109,111,100,101]));
      F.line = 669;
      add_721421120(tmp_520097791, tmp_520097792);
      F.line = 671;
      add_721421120(tmp_520097791, text_721421252(makeNimstrLit("Draft powerups of random strength and quality, then play. \x0A                            Completely luck based.")));
      F.line = 674;
      var tmp_520097793 = tree_721421184(193, []);
      F.line = 674;
      setAttr_721421035(tmp_520097793, "for", "draftRandNumber");
      F.line = 675;
      add_721421120(tmp_520097793, text_721421252([78,117,109,98,101,114,32,111,102,32,112,111,119,101,114,115,32,100,114,97,102,116,101,100]));
      F.line = 675;
      add_721421120(tmp_520097791, tmp_520097793);
      F.line = 676;
      var tmp_520097794 = tree_721421184(194, []);
      F.line = 676;
      tmp_520097794.id = "draftRandNumber";
      F.line = 676;
      setAttr_721421035(tmp_520097794, "type", "number");
      F.line = 676;
      addEventHandler_687867678(tmp_520097794, 8, validateNotEmpty_520097467("draftRandNumber"), kxi__);
      F.line = 677;
      setAttr_721421035(tmp_520097794, "step", "1");
      F.line = 677;
      setAttr_721421035(tmp_520097794, "min", "1");
      F.line = 677;
      setAttr_721421035(tmp_520097794, "max", "10");
      F.line = 677;
      valueHEX3D_721420741(tmp_520097794, "3");
      F.line = 677;
      setAttr_721421035(tmp_520097794, "value", "3");
      F.line = 677;
      add_721421120(tmp_520097791, tmp_520097794);
      F.line = 679;
      var tmp_520097795 = tree_721421184(193, []);
      F.line = 679;
      setAttr_721421035(tmp_520097795, "for", "draftChoiceRandNumber");
      F.line = 680;
      add_721421120(tmp_520097795, text_721421252([78,117,109,98,101,114,32,111,102,32,99,104,111,105,99,101,115,32,101,97,99,104,32,114,111,117,110,100]));
      F.line = 680;
      add_721421120(tmp_520097791, tmp_520097795);
      F.line = 681;
      var tmp_520097796 = tree_721421184(194, []);
      F.line = 681;
      tmp_520097796.id = "draftChoiceRandNumber";
      F.line = 681;
      setAttr_721421035(tmp_520097796, "type", "number");
      F.line = 681;
      addEventHandler_687867678(tmp_520097796, 8, validateNotEmpty_520097467("draftChoiceRandNumber"), kxi__);
      F.line = 682;
      setAttr_721421035(tmp_520097796, "step", "1");
      F.line = 682;
      setAttr_721421035(tmp_520097796, "min", "1");
      F.line = 682;
      setAttr_721421035(tmp_520097796, "max", "5");
      F.line = 682;
      valueHEX3D_721420741(tmp_520097796, "3");
      F.line = 682;
      setAttr_721421035(tmp_520097796, "value", "3");
      F.line = 682;
      add_721421120(tmp_520097791, tmp_520097796);
      F.line = 682;
      add_721421120(tmp_520097783, tmp_520097791);
      F.line = 684;
      var tmp_520097797 = tree_721421184(33, []);
      F.line = 684;
      add_721421120(tmp_520097783, tmp_520097797);
      F.line = 686;
      var tmp_520097798 = tree_721421184(44, []);
      F.line = 686;
      tmp_520097798.class = "column";
      F.line = 687;
      var tmp_520097799 = tree_721421184(195, []);
      F.line = 688;
      addEventHandler_687867670(tmp_520097799, 0, HEX3Aanonymous_520097839, kxi__);
      F.line = 701;
      add_721421120(tmp_520097799, text_721421252([83,117,112,101,114,32,82,97,110,100,111,109,32,109,111,100,101]));
      F.line = 701;
      add_721421120(tmp_520097798, tmp_520097799);
      F.line = 703;
      add_721421120(tmp_520097798, text_721421252(makeNimstrLit("Draft powerups of random strength and quality, then play. \x0A                            Completely luck based, with higher chances for rare pieces.")));
      F.line = 706;
      var tmp_520097800 = tree_721421184(193, []);
      F.line = 706;
      setAttr_721421035(tmp_520097800, "for", "draftSuperRandNumber");
      F.line = 707;
      add_721421120(tmp_520097800, text_721421252([78,117,109,98,101,114,32,111,102,32,112,111,119,101,114,115,32,100,114,97,102,116,101,100]));
      F.line = 707;
      add_721421120(tmp_520097798, tmp_520097800);
      F.line = 708;
      var tmp_520097801 = tree_721421184(194, []);
      F.line = 708;
      tmp_520097801.id = "draftSuperRandNumber";
      F.line = 708;
      setAttr_721421035(tmp_520097801, "type", "number");
      F.line = 708;
      addEventHandler_687867678(tmp_520097801, 8, validateNotEmpty_520097467("draftSuperRandNumber"), kxi__);
      F.line = 709;
      setAttr_721421035(tmp_520097801, "step", "1");
      F.line = 709;
      setAttr_721421035(tmp_520097801, "min", "1");
      F.line = 709;
      setAttr_721421035(tmp_520097801, "max", "10");
      F.line = 709;
      valueHEX3D_721420741(tmp_520097801, "3");
      F.line = 709;
      setAttr_721421035(tmp_520097801, "value", "3");
      F.line = 709;
      add_721421120(tmp_520097798, tmp_520097801);
      F.line = 711;
      var tmp_520097802 = tree_721421184(193, []);
      F.line = 711;
      setAttr_721421035(tmp_520097802, "for", "draftChoiceSuperRandNumber");
      F.line = 712;
      add_721421120(tmp_520097802, text_721421252([78,117,109,98,101,114,32,111,102,32,99,104,111,105,99,101,115,32,101,97,99,104,32,114,111,117,110,100]));
      F.line = 712;
      add_721421120(tmp_520097798, tmp_520097802);
      F.line = 713;
      var tmp_520097803 = tree_721421184(194, []);
      F.line = 713;
      tmp_520097803.id = "draftChoiceSuperRandNumber";
      F.line = 713;
      setAttr_721421035(tmp_520097803, "type", "number");
      F.line = 713;
      addEventHandler_687867678(tmp_520097803, 8, validateNotEmpty_520097467("draftChoiceSuperRandNumber"), kxi__);
      F.line = 714;
      setAttr_721421035(tmp_520097803, "step", "1");
      F.line = 714;
      setAttr_721421035(tmp_520097803, "min", "1");
      F.line = 714;
      setAttr_721421035(tmp_520097803, "max", "5");
      F.line = 714;
      valueHEX3D_721420741(tmp_520097803, "3");
      F.line = 714;
      setAttr_721421035(tmp_520097803, "value", "3");
      F.line = 714;
      add_721421120(tmp_520097798, tmp_520097803);
      F.line = 714;
      add_721421120(tmp_520097783, tmp_520097798);
      F.line = 714;
      add_721421120(tmp_520097780, tmp_520097783);
    }
    
    result_520097779 = tmp_520097780;
  framePtr = F.prev;

  return result_520097779;

}

function createPowerMenu_520097844(p_520097845) {
    var Temporary1;
    p_520097845 = nimCopy(null, p_520097845, NTI1442840581);
    
function HEX3Aanonymous_520097860(__520097861, __520097862) {
      var F = {procname: "createPowerMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 732;
        F.filename = "main.nim";
        peer_520093806[0].Field0(toJSStr(([100,114,97,102,116,58,109,121,44] || []).concat(HEX24_369098760(p_520097845.index) || [])));
        F.line = 733;
        var Temporary1 = nimCopy(null, p_520097845, NTI1442840581);
        myDrafts_520093813[0].push(Temporary1);;
        F.line = 734;
        turn_520093808[0] = false;
        if ((side_520093807[0] == 1)) {
        F.line = 736;
        draft_520097271(HEX26_1442841613(myDrafts_520093813[0], opponentDrafts_520093818[0]), opponentDrafts_520093818[0]);
        F.line = 737;
        F.line = 975;
        F.filename = "sequtils.nim";
        Label2: {
          F.line = 1024;
          var iHEX60gensym118_520097895 = 0;
          F.line = 1025;
          var resultHEX60gensym118_520097902 = newSeq_503317026(chckRange((draftOptions_520093820[0]).length, 0, 2147483647));
          Label3: {
            F.line = 1026;
            var it_520097906 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
            F.line = 249;
            F.filename = "iterators.nim";
            var i_520100758 = 0;
            F.line = 250;
            var L_520100759 = (draftOptions_520093820[0]).length;
            Label4: {
              F.line = 251;
                Label5: while (true) {
                if (!(i_520100758 < L_520100759)) break Label5;
                  F.line = 1026;
                  F.filename = "sequtils.nim";
                  it_520097906 = draftOptions_520093820[0][chckIndx(i_520100758, 0, (draftOptions_520093820[0]).length - 1)];
                  F.line = 737;
                  F.filename = "main.nim";
                  resultHEX60gensym118_520097902[chckIndx(iHEX60gensym118_520097895, 0, (resultHEX60gensym118_520097902).length - 1)] = nimCopy(null, ([44] || []).concat(HEX24_369098760(it_520097906.index) || []), NTI33554449);
                  F.line = 1028;
                  F.filename = "sequtils.nim";
                  iHEX60gensym118_520097895 = addInt(iHEX60gensym118_520097895, 1);
                  F.line = 13;
                  F.filename = "iterators.nim";
                  i_520100758 += 1;
                  if (!(((draftOptions_520093820[0]).length == L_520100759))) {
                  F.line = 254;
                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        };
        var sHEX60gensym121_520097918 = nimCopy(null, resultHEX60gensym118_520097902, NTI503316801);
        F.line = 976;
        F.filename = "sequtils.nim";
        var nHEX60gensym121_520097922 = (sHEX60gensym121_520097918).length;
        if (!((0 < nHEX60gensym121_520097922))) {
        F.line = 977;
        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym121 > 0` Can\'t fold empty sequences"));
        }
        
        F.line = 978;
        var resultHEX60gensym121_520097928 = nimCopy(null, sHEX60gensym121_520097918[chckIndx(subInt(nHEX60gensym121_520097922, 1), 0, (sHEX60gensym121_520097918).length - 1)], NTI33554449);
        Label6: {
          F.line = 979;
          var iHEX60gensym121_520097934 = 0;
          F.line = 6;
          F.filename = "iterators_1.nim";
          var colontmp__520100762 = 0;
          F.line = 979;
          F.filename = "sequtils.nim";
          colontmp__520100762 = subInt(nHEX60gensym121_520097922, 2);
          F.line = 33;
          F.filename = "iterators_1.nim";
          var res_520100763 = colontmp__520100762;
          Label7: {
            F.line = 34;
              Label8: while (true) {
              if (!(0 <= res_520100763)) break Label8;
                F.line = 979;
                F.filename = "sequtils.nim";
                iHEX60gensym121_520097934 = res_520100763;
                F.line = 981;
                var a_520097935 = nimCopy(null, sHEX60gensym121_520097918[chckIndx(iHEX60gensym121_520097934, 0, (sHEX60gensym121_520097918).length - 1)], NTI33554449);
                F.line = 982;
                var b_520097936 = nimCopy(null, resultHEX60gensym121_520097928, NTI33554449);
                F.line = 737;
                F.filename = "main.nim";
                resultHEX60gensym121_520097928 = nimCopy(null, (a_520097935 || []).concat(b_520097936 || []), NTI33554449);
                F.line = 39;
                F.filename = "iterators_1.nim";
                res_520100763 = subInt(res_520100763, 1);
              }
          };
        };
        peer_520093806[0].Field0(toJSStr(([100,114,97,102,116,58,103,111] || []).concat(resultHEX60gensym121_520097928 || [])));
        }
        
      framePtr = F.prev;

      
    }

  var result_520097846 = null;

  var F = {procname: "main.createPowerMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 717;
    F.filename = "main.nim";
    F.line = 717;
    var tmp_520097847 = tree_721421184(44, []);
    F.line = 717;
    tmp_520097847.class = "power";
    F.line = 718;
    var tmp_520097848 = tree_721421184(21, []);
    F.line = 719;
    if ((showTechnicalNames_520093851[0] && !(eqStrings(p_520097845.technicalName, [])))) {
    Temporary1 = p_520097845.technicalName;
    }
    else {
    Temporary1 = p_520097845.name;
    }
    
    add_721421120(tmp_520097848, text_721421252(Temporary1));
    F.line = 719;
    add_721421120(tmp_520097847, tmp_520097848);
    if (!(eqStrings(p_520097845.icon, []))) {
    F.line = 721;
    var src_520097853 = [46,47,105,99,111,110,115,47];
    if (!(p_520097845.noColor)) {
    F.line = 722;
    src_520097853.push.apply(src_520097853, reprEnum(side_520093807[0], NTI1224736777));;
    }
    
    F.line = 723;
    var tmp_520097849 = tree_721421184(76, []);
    F.line = 723;
    setAttr_721421035(tmp_520097849, "src", toJSStr((src_520097853 || []).concat(p_520097845.icon || [])));
    F.line = 723;
    add_721421120(tmp_520097847, tmp_520097849);
    }
    else {
      F.line = 725;
      var tmp_520097850 = tree_721421184(76, []);
      F.line = 725;
      setAttr_721421035(tmp_520097850, "src", "./icons/blackbishop.svg");
      F.line = 725;
      add_721421120(tmp_520097847, tmp_520097850);
    }
    
    F.line = 726;
    var tmp_520097851 = tree_721421184(22, []);
    F.line = 727;
    add_721421120(tmp_520097851, text_721421252(reprEnum(p_520097845.tier, NTI1442840579)));
    F.line = 727;
    add_721421120(tmp_520097847, tmp_520097851);
    F.line = 728;
    var tmp_520097852 = tree_721421184(32, []);
    F.line = 729;
    add_721421120(tmp_520097852, text_721421252(p_520097845.description));
    F.line = 729;
    add_721421120(tmp_520097847, tmp_520097852);
    F.line = 731;
    addEventHandler_687867670(tmp_520097847, 0, HEX3Aanonymous_520097860, kxi__);
    result_520097846 = tmp_520097847;
  framePtr = F.prev;

  return result_520097846;

}

function createDraftMenu_520097941() {
  var result_520097942 = null;

  var F = {procname: "main.createDraftMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 740;
    F.filename = "main.nim";
    F.line = 740;
    var tmp_520097943 = tree_721421184(44, []);
    F.line = 740;
    tmp_520097943.class = "main power-menu";
    if (turn_520093808[0]) {
    Label1: {
      F.line = 742;
      var p_520097947 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100744 = 0;
      F.line = 250;
      var L_520100745 = (draftOptions_520093820[0]).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100744 < L_520100745)) break Label3;
            F.line = 742;
            F.filename = "main.nim";
            p_520097947 = draftOptions_520093820[0][chckIndx(i_520100744, 0, (draftOptions_520093820[0]).length - 1)];
            F.line = 743;
            add_721421120(tmp_520097943, createPowerMenu_520097844(p_520097947));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100744 += 1;
            if (!(((draftOptions_520093820[0]).length == L_520100745))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      F.line = 745;
      F.filename = "main.nim";
    add_721421120(tmp_520097943, text_721421252([79,112,112,111,110,101,110,116,32,105,115,32,100,114,97,102,116,105,110,103,46,46,46]));
    }
    
    result_520097942 = tmp_520097943;
  framePtr = F.prev;

  return result_520097942;

}

function clear_520094026() {
  var F = {procname: "main.clear", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "main.nim";
    var colontmp__520100781 = (-1);
    F.line = 176;
    var colontmp__520100782 = (-1);
    F.line = 176;
    selectedTile_520093829[0] = nimCopy(selectedTile_520093829[0], {Field0: colontmp__520100781, Field1: colontmp__520100782}, NTI1224736771);
    F.line = 177;
    possibleMoves_520093834[0] = nimCopy(null, [], NTI1291845837);
    F.line = 178;
    possibleTakes_520093839[0] = nimCopy(null, [], NTI1291845837);
  framePtr = F.prev;

  
}

function replaceAnySynergies_1442842028(powers_1442842029) {
  var result_1442842030 = [];

  var F = {procname: "power.replaceAnySynergies", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 211;
    F.filename = "power.nim";
    result_1442842030 = nimCopy(null, secretSynergize_1442841087(powers_1442842029, secretSynergies_1442840651[0]), NTI1442840978);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1442842030;

}

function createPowerSummary_520097948(p_520097949, ofSide_520097950) {
    var Temporary1;

  var result_520097951 = null;

  var F = {procname: "main.createPowerSummary", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 748;
    F.filename = "main.nim";
    var class_520097952 = [105,109,97,103,101,32];
    if ((!((side_520093807[0] == ofSide_520097950)) && p_520097949.rotatable)) {
    F.line = 750;
    class_520097952.push.apply(class_520097952, [32,114,111,116,97,116,101,32]);;
    }
    
    F.line = 752;
    var src_520097957 = [46,47,105,99,111,110,115,47];
    if (!(p_520097949.noColor)) {
    F.line = 753;
    src_520097957.push.apply(src_520097957, reprEnum(ofSide_520097950, NTI1224736777));;
    }
    
    F.line = 755;
    F.line = 755;
    var tmp_520097961 = tree_721421184(44, []);
    F.line = 755;
    tmp_520097961.class = "power-grid";
    F.line = 756;
    var tmp_520097962 = tree_721421184(24, []);
    F.line = 756;
    tmp_520097962.class = "title";
    F.line = 757;
    if ((showTechnicalNames_520093851[0] && !(eqStrings(p_520097949.technicalName, [])))) {
    Temporary1 = p_520097949.technicalName;
    }
    else {
    Temporary1 = p_520097949.name;
    }
    
    add_721421120(tmp_520097962, text_721421252(Temporary1));
    F.line = 757;
    add_721421120(tmp_520097961, tmp_520097962);
    F.line = 758;
    var tmp_520097963 = tree_721421184(32, []);
    F.line = 758;
    tmp_520097963.class = "desc";
    F.line = 759;
    add_721421120(tmp_520097963, text_721421252(p_520097949.description));
    F.line = 759;
    add_721421120(tmp_520097961, tmp_520097963);
    if (!(eqStrings(p_520097949.icon, []))) {
    F.line = 761;
    var tmp_520097964 = tree_721421184(76, []);
    F.line = 761;
    tmp_520097964.class = toJSStr(class_520097952);
    F.line = 761;
    setAttr_721421035(tmp_520097964, "src", toJSStr((src_520097957 || []).concat(p_520097949.icon || [])));
    F.line = 761;
    add_721421120(tmp_520097961, tmp_520097964);
    }
    else {
      F.line = 763;
      var tmp_520097965 = tree_721421184(76, []);
      F.line = 763;
      tmp_520097965.class = toJSStr(class_520097952);
      F.line = 763;
      setAttr_721421035(tmp_520097965, "src", "./icons/blackbishop.svg");
      F.line = 763;
      add_721421120(tmp_520097961, tmp_520097965);
    }
    
    result_520097951 = tmp_520097961;
  framePtr = F.prev;

  return result_520097951;

}

function isSelected_520093927(n_520093928, m_520093929) {
  var result_520093930 = false;

  var F = {procname: "main.isSelected", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 154;
    F.filename = "main.nim";
    result_520093930 = ((selectedTile_520093829[0].Field1 == n_520093928) && (selectedTile_520093829[0].Field0 == m_520093929));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093930;

}

function busy_520093931() {
  var result_520093932 = false;

  var F = {procname: "main.busy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 157;
    F.filename = "main.nim";
    result_520093932 = ((!(((actionStack_520093877[0]).length == 0)) || !((picksLeft_520093898[0] == 0))) || !(turn_520093808[0]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093932;

}

function setAttr_721421080(n_721421081, key_721421082, val_721421083) {
    var Temporary1;

  var F = {procname: "vdom.setAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 259;
    F.filename = "vdom.nim";
    if (val_721421083) {
    Temporary1 = "";
    }
    else {
    Temporary1 = null;
    }
    
    setAttr_721421035(n_721421081, key_721421082, Temporary1);
  framePtr = F.prev;

  
}

function sendAction_520096401(data_520096402, end_520096403) {
  var F = {procname: "main.sendAction", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    if ((true && !(practiceMode_520093850[0]))) {
    F.line = 228;
    F.filename = "main.nim";
    Label1: {
      F.line = 228;
      var fmtRes_520096408 = [mnewString(0)];
      F.line = 228;
      fmtRes_520096408[0].push.apply(fmtRes_520096408[0], [97,99,116,105,111,110,58]);;
      F.line = 228;
      formatValue_1442840708(fmtRes_520096408, 0, data_520096402);
    };
    peer_520093806[0].Field0(toJSStr(fmtRes_520096408[0]));
    if (end_520096403) {
    F.line = 230;
    turn_520093808[0] = false;
    F.line = 231;
    rawEcho([115,101,110,100,32,97,99,116,105,111,110,32,99,104,97,110,103,105,110,103,32,116,117,114,110]);
    }
    
    }
    
    if (end_520096403) {
    F.line = 232;
    endRound_520096229();
    }
    
  framePtr = F.prev;

  
}

function sendBuy_520096943(option_520096944, tile_520096945) {
  var F = {procname: "main.sendBuy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 261;
    F.filename = "main.nim";
    Label1: {
      F.line = 261;
      var fmtRes_520096950 = [mnewString(0)];
      F.line = 261;
      fmtRes_520096950[0].push.apply(fmtRes_520096950[0], [98,117,121,44]);;
      F.line = 261;
      formatValue_1442840708(fmtRes_520096950, 0, option_520096944.Field0);
      F.line = 261;
      fmtRes_520096950[0].push.apply(fmtRes_520096950[0], [44]);;
      F.line = 261;
      formatValue_1442840708(fmtRes_520096950, 0, HEX24_369098760(tile_520096945.Field1));
      F.line = 261;
      fmtRes_520096950[0].push.apply(fmtRes_520096950[0], [44]);;
      F.line = 261;
      formatValue_1442840708(fmtRes_520096950, 0, HEX24_369098760(tile_520096945.Field0));
    };
    sendAction_520096401(fmtRes_520096950[0], false);
  framePtr = F.prev;

  
}

function createBuyButton_520097966(option_520097967, p_520097968) {
    var Temporary1;
      var Temporary2;
      option_520097967 = nimCopy(null, option_520097967, NTI1224736787);
      
function HEX3Aanonymous_520097996(__520097997, __520097998) {
        var F = {procname: "createBuyButton.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 776;
          F.filename = "main.nim";
          sendBuy_520096943(option_520097967, p_520097968.tile);
          F.line = 777;
          buy_1526726764(p_520097968, option_520097967, theBoard_520093825[0], theState_520093826[0]);
          F.line = 778;
          clear_520094026();
        framePtr = F.prev;

        
      }

  var result_520097969 = null;

  var F = {procname: "main.createBuyButton", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 766;
    F.filename = "main.nim";
    if (!(option_520097967.Field3(p_520097968, theBoard_520093825[0], theState_520093826[0]))) {
    F.line = 767;
    F.line = 767;
    var tmp_520097970 = tree_721421184(44, []);
    result_520097969 = tmp_520097970;
    break BeforeRet;
    }
    else {
      F.line = 769;
      var cost_520097971 = option_520097967.Field1(p_520097968, theBoard_520093825[0], theState_520093826[0]);
      F.line = 770;
      var disabled_520097972 = (busy_520093931() || (getMoney_1526726671(side_520093807[0], theState_520093826[0]) < cost_520097971));
      F.line = 772;
      if ((0 <= cost_520097971)) {
      Temporary2 = [45];
      }
      else {
      Temporary2 = [43];
      }
      
      var sign_520097973 = nimCopy(null, Temporary2, NTI33554449);
      F.line = 773;
      var tmp_520097974 = tree_721421184(195, []);
      F.line = 773;
      setAttr_721421080(tmp_520097974, "disabled", disabled_520097972);
      F.line = 774;
      Label3: {
        F.line = 774;
        var fmtRes_520097979 = [mnewString(0)];
        F.line = 774;
        formatValue_1442840708(fmtRes_520097979, 0, option_520097967.Field0);
        F.line = 774;
        fmtRes_520097979[0].push.apply(fmtRes_520097979[0], [58,32]);;
        F.line = 774;
        formatValue_1442840708(fmtRes_520097979, 0, sign_520097973);
        F.line = 774;
        fmtRes_520097979[0].push.apply(fmtRes_520097979[0], [36]);;
        F.line = 774;
        formatValue_1442841952(fmtRes_520097979, 0, absInt(cost_520097971));
      };
      add_721421120(tmp_520097974, text_721421252(fmtRes_520097979[0]));
      F.line = 775;
      addEventHandler_687867670(tmp_520097974, 0, HEX3Aanonymous_520097996, kxi__);
    Temporary1 = tmp_520097974;
    }
    
    result_520097969 = Temporary1;
  };
  framePtr = F.prev;

  return result_520097969;

}

function createPieceProfile_520097999(p_520098000) {
  var result_520098001 = null;

  var F = {procname: "main.createPieceProfile", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 781;
    F.filename = "main.nim";
    var imgClass_520098002 = [];
    if ((!((side_520093807[0] == p_520098000.color)) && p_520098000.rotate)) {
    F.line = 783;
    imgClass_520098002.push.apply(imgClass_520098002, [114,111,116,97,116,101,32]);;
    }
    
    F.line = 785;
    var src_520098007 = [46,47,105,99,111,110,115,47];
    if (p_520098000.colorable) {
    F.line = 786;
    src_520098007.push.apply(src_520098007, reprEnum(p_520098000.color, NTI1224736777));;
    }
    
    F.line = 788;
    var name_520098014 = reprEnum(p_520098000.item, NTI1224736776);
    F.line = 790;
    F.line = 790;
    var tmp_520098015 = tree_721421184(44, []);
    F.line = 790;
    tmp_520098015.class = " piece-row ";
    F.line = 791;
    var tmp_520098016 = tree_721421184(24, []);
    F.line = 792;
    add_721421120(tmp_520098016, text_721421252(name_520098014));
    F.line = 792;
    add_721421120(tmp_520098015, tmp_520098016);
    F.line = 793;
    var tmp_520098017 = tree_721421184(76, []);
    F.line = 793;
    tmp_520098017.class = toJSStr(imgClass_520098002);
    F.line = 793;
    setAttr_721421035(tmp_520098017, "src", toJSStr((src_520098007 || []).concat(p_520098000.filePath || [])));
    F.line = 793;
    add_721421120(tmp_520098015, tmp_520098017);
    F.line = 794;
    var tmp_520098018 = tree_721421184(32, []);
    F.line = 794;
    tmp_520098018.class = "take";
    F.line = 795;
    Label1: {
      F.line = 795;
      var fmtRes_520098024 = [mnewString(0)];
      F.line = 795;
      fmtRes_520098024[0].push.apply(fmtRes_520098024[0], [75,105,108,108,115,58,32]);;
      F.line = 795;
      formatValue_1442841952(fmtRes_520098024, 0, p_520098000.piecesTaken);
      F.line = 795;
      fmtRes_520098024[0].push.apply(fmtRes_520098024[0], [32,112,105,101,99,101,115,46]);;
    };
    add_721421120(tmp_520098018, text_721421252(fmtRes_520098024[0]));
    F.line = 795;
    add_721421120(tmp_520098015, tmp_520098018);
    if (isColor_1224737814(p_520098000, side_520093807[0])) {
    F.line = 797;
    var tmp_520098019 = tree_721421184(44, []);
    F.line = 797;
    tmp_520098019.class = "row";
    Label2: {
      F.line = 798;
      var option_520098034 = {Field0: [], Field1: null, Field2: null, Field3: null};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520100785 = [];
      F.line = 798;
      F.filename = "main.nim";
      colontmp__520100785 = theState_520093826[0].Field1[chckIndx(p_520098000.color, 0, (theState_520093826[0].Field1).length - 1)].buys;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100786 = 0;
      F.line = 250;
      var L_520100787 = (colontmp__520100785).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_520100786 < L_520100787)) break Label4;
            F.line = 798;
            F.filename = "main.nim";
            option_520098034 = colontmp__520100785[chckIndx(i_520100786, 0, (colontmp__520100785).length - 1)];
            F.line = 799;
            add_721421120(tmp_520098019, createBuyButton_520097966(option_520098034, p_520098000));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100786 += 1;
            if (!(((colontmp__520100785).length == L_520100787))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 799;
    F.filename = "main.nim";
    add_721421120(tmp_520098015, tmp_520098019);
    }
    
    result_520098001 = tmp_520098015;
  framePtr = F.prev;

  return result_520098001;

}

function getKing_1224738012(side_1224738013, board_1224738014) {
  var result_1224738015 = {Field0: 0, Field1: 0};

  var F = {procname: "piece.getKing", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 363;
      F.filename = "piece.nim";
      var i_1224738016 = 0;
      F.line = 363;
      var j_1224738017 = 0;
      Label2: {
        F.line = 125;
        var i_520100794 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100795 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_520100795 < 8)) break Label4;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100794 = i_520100795;
              Label5: {
                F.line = 126;
                var j_520100798 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100799 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_520100799 < 8)) break Label7;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100798 = i_520100799;
                      F.line = 363;
                      i_1224738016 = i_520100794;
                      F.line = 363;
                      j_1224738017 = j_520100798;
                      if (((board_1224738014[chckIndx(i_1224738016, 0, (board_1224738014).length - 1)][chckIndx(j_1224738017, 0, (board_1224738014[chckIndx(i_1224738016, 0, (board_1224738014).length - 1)]).length - 1)].item == 0) && (board_1224738014[chckIndx(i_1224738016, 0, (board_1224738014).length - 1)][chckIndx(j_1224738017, 0, (board_1224738014[chckIndx(i_1224738016, 0, (board_1224738014).length - 1)]).length - 1)].color == side_1224738013))) {
                      F.line = 365;
                      result_1224738015 = nimCopy(result_1224738015, board_1224738014[chckIndx(i_1224738016, 0, (board_1224738014).length - 1)][chckIndx(j_1224738017, 0, (board_1224738014[chckIndx(i_1224738016, 0, (board_1224738014).length - 1)]).length - 1)].tile, NTI1224736771);
                      break BeforeRet;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100799 = addInt(i_520100799, 1);
                    }
                };
              };
              F.line = 131;
              i_520100795 = addInt(i_520100795, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  return result_1224738015;

}

function hasGlass_1560281096(side_1560281097, state_1560281098) {
  var result_1560281099 = false;

  var F = {procname: "glass.hasGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 21;
      F.filename = "glass.nim";
      var g_1560281124 = 0;
      Label2: {
        F.line = 137;
        F.filename = "iterators.nim";
        var v_520100807 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100808 = 0;
        Label3: {
          F.line = 97;
            Label4: while (true) {
            if (!(res_520100808 <= 4)) break Label4;
              F.line = 137;
              F.filename = "iterators.nim";
              v_520100807 = res_520100808;
              F.line = 21;
              F.filename = "glass.nim";
              g_1560281124 = v_520100807;
              if (isSome_1493177719(state_1560281098.Field1[chckIndx(side_1560281097, 0, (state_1560281098.Field1).length - 1)].glass[chckIndx(g_1560281124, 0, (state_1560281098.Field1[chckIndx(side_1560281097, 0, (state_1560281098.Field1).length - 1)].glass).length - 1)])) {
              F.line = 22;
              result_1560281099 = true;
              break BeforeRet;
              }
              
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100808 = addInt(res_520100808, 1);
            }
        };
      };
    };
    F.line = 23;
    F.filename = "glass.nim";
    result_1560281099 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1560281099;

}

function isNone_520098344(self_520098346) {
  var result_520098347 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520098347 = !(self_520098346.has);
  framePtr = F.prev;

  return result_520098347;

}

function get_520098361(self_520098363) {
  var result_520098364 = null;
  var result_520098364_Idx = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (isNone_520098344(self_520098363)) {
    F.line = 230;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 231;
    result_520098364 = self_520098363; result_520098364_Idx = "val";
    break BeforeRet;
  };
  framePtr = F.prev;

  return [result_520098364, result_520098364_Idx];

}

function some_520098393(val_520098395) {
  var result_520098396 = ({val: 0, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_520098396.has = true;
    F.line = 141;
    result_520098396.val = val_520098395;
  framePtr = F.prev;

  return result_520098396;

}

function createGlassOnClick_520098331(glass_520098332) {
    
function HEX3Aanonymous_520098337(__520098338, __520098339) {
          var Temporary1;

      var F = {procname: "createGlassOnClick.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if ((isNone_520098344(selectedGlass_520093872[0]) || !(((Temporary1 = get_520098361(selectedGlass_520093872[0]), Temporary1)[0][Temporary1[1]] == glass_520098332)))) {
        F.line = 866;
        F.filename = "main.nim";
        selectedGlass_520093872[0] = nimCopy(selectedGlass_520093872[0], some_520098393(glass_520098332), NTI520093799);
        }
        else {
          F.line = 868;
          selectedGlass_520093872[0] = nimCopy(selectedGlass_520093872[0], none_520093864(), NTI520093799);
        }
        
      framePtr = F.prev;

      
    }

  var result_520098336 = null;

  var F = {procname: "main.createGlassOnClick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 864;
    F.filename = "main.nim";
    result_520098336 = HEX3Aanonymous_520098337;
  framePtr = F.prev;

  return result_520098336;

}

function isSome_520098455(self_520098457) {
  var result_520098458 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_520098458 = self_520098457.has;
  framePtr = F.prev;

  return result_520098458;

}

function cancelAllPicks_520097236() {
  var F = {procname: "main.cancelAllPicks", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 354;
    F.filename = "main.nim";
    promptHistory_520093892[0] = nimCopy(null, [], NTI1006632986);
    F.line = 355;
    promptStack_520093897[0] = nimCopy(null, [], NTI1006632986);
    F.line = 356;
    picks_520093906[0] = nimCopy(null, [], NTI1291845837);
    F.line = 357;
    picksLeft_520093898[0] = 0;
    F.line = 359;
    pickOptions_520093901[0] = nimCopy(null, [], NTI1291845837);
    F.line = 361;
    whenCollected_520093908[0] = null;
    F.line = 362;
    getPickOptions_520093900[0] = null;
  framePtr = F.prev;

  
}

function cancelAllPicks_520097268(__520097269, __520097270) {
  var F = {procname: "main.cancelAllPicks", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 365;
    F.filename = "main.nim";
    cancelAllPicks_520097236();
  framePtr = F.prev;

  
}

function formatValue_520098486(result_520098489, result_520098489_Idx, value_520098490) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "strformat.nim";
    formatValue_1442840708(result_520098489, result_520098489_Idx, reprEnum(value_520098490, NTI1224736789));
  framePtr = F.prev;

  
}

function reversed_520098595(a_520098597) {
  var result_520098598 = [];

  var F = {procname: "reversed.reversed", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 146;
    F.filename = "algorithm.nim";
    var n_520098602 = (a_520098597).length;
    F.line = 147;
    if (result_520098598.length < chckRange(n_520098602, 0, 2147483647)) { for (var i = result_520098598.length ; i < chckRange(n_520098602, 0, 2147483647) ; ++i) result_520098598.push([]); }
               else { result_520098598.length = chckRange(n_520098602, 0, 2147483647); };
    Label1: {
      F.line = 148;
      var i_520098611 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100833 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100833 < n_520098602)) break Label3;
            F.line = 148;
            F.filename = "algorithm.nim";
            i_520098611 = i_520100833;
            F.line = 148;
            result_520098598[chckIndx(i_520098611, 0, (result_520098598).length - 1)] = nimCopy(null, a_520098597[chckIndx(subInt(n_520098602, addInt(i_520098611, 1)), 0, (a_520098597).length - 1)], NTI33554449);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100833 = addInt(i_520100833, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520098598;

}

function cycle_520098569(s_520098571, n_520098572) {
  var result_520098573 = [];

  var F = {procname: "cycle.cycle", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 169;
    F.filename = "sequtils.nim";
    result_520098573 = nimCopy(null, newSeq_503317026(chckRange(mulInt(n_520098572, (s_520098571).length), 0, 2147483647)), NTI503316801);
    F.line = 170;
    var o_520098580 = 0;
    Label1: {
      F.line = 171;
      var x_520098585 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520100839 = 0;
      F.line = 171;
      F.filename = "sequtils.nim";
      colontmp__520100839 = n_520098572;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520100840 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520100840 < colontmp__520100839)) break Label3;
            F.line = 171;
            F.filename = "sequtils.nim";
            x_520098585 = i_520100840;
            Label4: {
              F.line = 172;
              var e_520098589 = [];
              F.line = 18;
              F.filename = "iterators.nim";
              var i_520100837 = 0;
              Label5: {
                F.line = 19;
                  Label6: while (true) {
                  if (!(i_520100837 < (s_520098571).length)) break Label6;
                    F.line = 172;
                    F.filename = "sequtils.nim";
                    e_520098589 = s_520098571[chckIndx(i_520100837, 0, (s_520098571).length - 1)];
                    F.line = 173;
                    result_520098573[chckIndx(o_520098580, 0, (result_520098573).length - 1)] = nimCopy(null, e_520098589, NTI33554449);
                    F.line = 174;
                    o_520098580 = addInt(o_520098580, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520100837 += 1;
                  }
              };
            };
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520100840 = addInt(i_520100840, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520098573;

}

function packageGlass_1560281132(pieces_1560281133, tiles_1560281134, action_1560281135) {
    tiles_1560281134 = nimCopy(null, tiles_1560281134, NTI1560281120);
    
function HEX3Aanonymous_1560281209(board_1560281210, state_1560281211) {
      var F = {procname: "packageGlass.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
      framePtr = F;
        Label1: {
          F.line = 31;
          F.filename = "glass.nim";
          var i_1560281212 = 0;
          F.line = 31;
          var j_1560281213 = 0;
          Label2: {
            F.line = 125;
            F.filename = "piece.nim";
            var i_520100855 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520100856 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_520100856 < 8)) break Label4;
                  F.line = 125;
                  F.filename = "piece.nim";
                  i_520100855 = i_520100856;
                  Label5: {
                    F.line = 126;
                    var j_520100859 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_520100860 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_520100860 < 8)) break Label7;
                          F.line = 126;
                          F.filename = "piece.nim";
                          j_520100859 = i_520100860;
                          F.line = 31;
                          F.filename = "glass.nim";
                          i_1560281212 = i_520100855;
                          F.line = 31;
                          j_1560281213 = j_520100859;
                          Label8: {
                            F.line = 32;
                            var indexIndex_1560281237 = 0;
                            F.line = 32;
                            var index_1560281238 = 0;
                            F.line = 182;
                            F.filename = "iterators.nim";
                            var i_520100851 = 0;
                            F.line = 183;
                            var L_520100852 = (indexes_1560281208).length;
                            Label9: {
                              F.line = 184;
                                Label10: while (true) {
                                if (!(i_520100851 < L_520100852)) break Label10;
                                  F.line = 32;
                                  F.filename = "glass.nim";
                                  indexIndex_1560281237 = i_520100851;
                                  F.line = 32;
                                  index_1560281238 = indexes_1560281208[chckIndx(i_520100851, 0, (indexes_1560281208).length - 1)];
                                  if ((index_1560281238 == board_1560281210[chckIndx(i_1560281212, 0, (board_1560281210).length - 1)][chckIndx(j_1560281213, 0, (board_1560281210[chckIndx(i_1560281212, 0, (board_1560281210).length - 1)]).length - 1)].index)) {
                                  F.line = 34;
                                  action_1560281135(board_1560281210[chckIndx(i_1560281212, 0, (board_1560281210).length - 1)][chckIndx(j_1560281213, 0, (board_1560281210[chckIndx(i_1560281212, 0, (board_1560281210).length - 1)]).length - 1)], tiles_1560281134[chckIndx(indexIndex_1560281237, 0, (tiles_1560281134).length - 1)], board_1560281210, state_1560281211);
                                  }
                                  
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_520100851 += 1;
                                  if (!(((indexes_1560281208).length == L_520100852))) {
                                  F.line = 187;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_520100860 = addInt(i_520100860, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_520100856 = addInt(i_520100856, 1);
                }
            };
          };
        };
      framePtr = F.prev;

      
    }

  var result_1560281136 = null;

  var F = {procname: "glass.packageGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
  framePtr = F;
    F.line = 29;
    F.filename = "glass.nim";
    Label1: {
      F.line = 1024;
      F.filename = "sequtils.nim";
      var iHEX60gensym0_1560281192 = 0;
      F.line = 1025;
      var resultHEX60gensym0_1560281199 = newSeq_1442841512(chckRange((pieces_1560281133).length, 0, 2147483647));
      Label2: {
        F.line = 1026;
        var it_1560281203 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520100845 = 0;
        F.line = 250;
        var L_520100846 = (pieces_1560281133).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520100845 < L_520100846)) break Label4;
              F.line = 1026;
              F.filename = "sequtils.nim";
              it_1560281203 = pieces_1560281133[chckIndx(i_520100845, 0, (pieces_1560281133).length - 1)];
              F.line = 29;
              F.filename = "glass.nim";
              resultHEX60gensym0_1560281199[chckIndx(iHEX60gensym0_1560281192, 0, (resultHEX60gensym0_1560281199).length - 1)] = it_1560281203.index;
              F.line = 1028;
              F.filename = "sequtils.nim";
              iHEX60gensym0_1560281192 = addInt(iHEX60gensym0_1560281192, 1);
              F.line = 13;
              F.filename = "iterators.nim";
              i_520100845 += 1;
              if (!(((pieces_1560281133).length == L_520100846))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var indexes_1560281208 = nimCopy(null, resultHEX60gensym0_1560281199, NTI1442841292);
    F.line = 30;
    F.filename = "glass.nim";
    result_1560281136 = HEX3Aanonymous_1560281209;
  framePtr = F.prev;

  return result_1560281136;

}

function createSendGlass_520096966(group_520096967) {
    
function HEX3Aanonymous_520096970() {
      var F = {procname: "createSendGlass.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 265;
        F.filename = "main.nim";
        Label1: {
          F.line = 265;
          var fmtRes_520096975 = [mnewString(0)];
          F.line = 265;
          fmtRes_520096975[0].push.apply(fmtRes_520096975[0], [99,97,115,116,105,110,103,99,111,109,112,108,101,116,101,44]);;
          F.line = 265;
          formatValue_1442841952(fmtRes_520096975, 0, group_520096967);
        };
        sendAction_520096401(fmtRes_520096975[0], true);
      framePtr = F.prev;

      
    }

  var result_520096969 = null;

  var F = {procname: "main.createSendGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 264;
    F.filename = "main.nim";
    result_520096969 = HEX3Aanonymous_520096970;
  framePtr = F.prev;

  return result_520096969;

}

function createCancelGlass_520096982(group_520096983) {
    
function HEX3Aanonymous_520096986() {
      var F = {procname: "createCancelGlass.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        Label1: {
          F.line = 269;
          F.filename = "main.nim";
          var i_520096987 = 0;
          F.line = 269;
          var j_520096988 = 0;
          Label2: {
            F.line = 125;
            F.filename = "piece.nim";
            var i_520100870 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520100871 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_520100871 < 8)) break Label4;
                  F.line = 125;
                  F.filename = "piece.nim";
                  i_520100870 = i_520100871;
                  Label5: {
                    F.line = 126;
                    var j_520100874 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_520100875 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_520100875 < 8)) break Label7;
                          F.line = 126;
                          F.filename = "piece.nim";
                          j_520100874 = i_520100875;
                          F.line = 269;
                          F.filename = "main.nim";
                          i_520096987 = i_520100870;
                          F.line = 269;
                          j_520096988 = j_520100874;
                          F.line = 270;
                          F.line = 652;
                          F.filename = "sequtils.nim";
                          var resultHEX60gensym88_520096998 = newSeq_520096990(0);
                          Label8: {
                            F.line = 653;
                            var it_520097002 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                            F.line = 247;
                            F.filename = "iterators.nim";
                            var colontmp__520100865 = [];
                            F.line = 270;
                            F.filename = "main.nim";
                            colontmp__520100865 = theBoard_520093825[0][chckIndx(i_520096987, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096988, 0, (theBoard_520093825[0][chckIndx(i_520096987, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                            F.line = 249;
                            F.filename = "iterators.nim";
                            var i_520100866 = 0;
                            F.line = 250;
                            var L_520100867 = (colontmp__520100865).length;
                            Label9: {
                              F.line = 251;
                                Label10: while (true) {
                                if (!(i_520100866 < L_520100867)) break Label10;
                                  F.line = 653;
                                  F.filename = "sequtils.nim";
                                  it_520097002 = colontmp__520100865[chckIndx(i_520100866, 0, (colontmp__520100865).length - 1)];
                                  if (!((it_520097002.Field1 == group_520096983))) {
                                  F.line = 654;
                                  var Temporary11 = nimCopy(null, it_520097002, NTI1224736788);
                                  resultHEX60gensym88_520096998.push(Temporary11);;
                                  }
                                  
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_520100866 += 1;
                                  if (!(((colontmp__520100865).length == L_520100867))) {
                                  F.line = 254;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          theBoard_520093825[0][chckIndx(i_520096987, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520096988, 0, (theBoard_520093825[0][chckIndx(i_520096987, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym88_520096998, NTI520095756);
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_520100875 = addInt(i_520100875, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_520100871 = addInt(i_520100871, 1);
                }
            };
          };
        };
        F.line = 271;
        F.filename = "main.nim";
        Label12: {
          F.line = 271;
          var fmtRes_520097011 = [mnewString(0)];
          F.line = 271;
          fmtRes_520097011[0].push.apply(fmtRes_520097011[0], [99,97,115,116,105,110,103,99,97,110,99,101,108,44]);;
          F.line = 271;
          formatValue_1442841952(fmtRes_520097011, 0, group_520096983);
        };
        sendAction_520096401(fmtRes_520097011[0], true);
      framePtr = F.prev;

      
    }

  var result_520096985 = null;

  var F = {procname: "main.createCancelGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 268;
    F.filename = "main.nim";
    result_520096985 = HEX3Aanonymous_520096986;
  framePtr = F.prev;

  return result_520096985;

}

function HEX5BHEX5D_520098875(s_520098877, i_520098878) {
  var result_520098879 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520098879 = s_520098877[chckIndx(subInt((s_520098877).length, i_520098878), 0, (s_520098877).length - 1)];
  framePtr = F.prev;

  return result_520098879;

}

function createGlassMenu_520098422() {
    var Temporary5;
    
function HEX3Aanonymous_520098500(__520098501, __520098502) {
        
function HEX3Aanonymous_520098620() {
          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
          framePtr = F;
            Label1: {
              F.line = 908;
              F.filename = "main.nim";
              var piece_520098661 = {Field0: 0, Field1: 0};
              F.line = 908;
              var tile_520098662 = {Field0: 0, Field1: 0};
              if (!((modInt((picks_520093906[0]).length, 2) == 0))) {
              F.line = 131;
              F.filename = "piece.nim";
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/piece.nim(131, 5) `s.len mod 2 == 0` "));
              }
              
              F.line = 132;
              var index_520100821 = 0;
              Label2: {
                F.line = 133;
                  Label3: while (true) {
                  if (!(index_520100821 < (picks_520093906[0]).length)) break Label3;
                    F.line = 908;
                    F.filename = "main.nim";
                    piece_520098661 = nimCopy(piece_520098661, picks_520093906[0][chckIndx(index_520100821, 0, (picks_520093906[0]).length - 1)], NTI1224736771);
                    F.line = 908;
                    tile_520098662 = nimCopy(tile_520098662, picks_520093906[0][chckIndx(addInt(index_520100821, 1), 0, (picks_520093906[0]).length - 1)], NTI1224736771);
                    F.line = 909;
                    rawEcho([112,105,101,99,101,116,105,108,101], HEX24_1224737477(piece_520098661), [116,105,108,101,44,32], HEX24_1224737477(tile_520098662));
                    F.line = 910;
                    var Temporary4 = nimCopy(null, HEX5BHEX5D_1224737125(theBoard_520093825[0], piece_520098661), NTI1224736794);
                    pieces_520098525.push(Temporary4);;
                    F.line = 911;
                    var Temporary5 = nimCopy(null, tile_520098662, NTI1224736771);
                    tiles_520098530.push(Temporary5);;
                    F.line = 912;
                    newCasting_520098520.push({Field0: nimCopy(null, tile_520098662, NTI1224736771), Field1: group_520098519, Field2: glass_520098475});;
                    F.line = 918;
                    HEX5BHEX5D_1224737125(theBoard_520093825[0], piece_520098661).casts.push({Field0: nimCopy(null, tile_520098662, NTI1224736771), Field1: group_520098519, Field2: glass_520098475});;
                    F.line = 924;
                    Label6: {
                      F.line = 924;
                      var fmtRes_520098799 = [mnewString(0)];
                      F.line = 924;
                      fmtRes_520098799[0].push.apply(fmtRes_520098799[0], [99,97,115,116,105,110,103,115,116,97,114,116,44]);;
                      F.line = 924;
                      formatValue_1442841952(fmtRes_520098799, 0, piece_520098661.Field1);
                      F.line = 924;
                      fmtRes_520098799[0].push.apply(fmtRes_520098799[0], [44]);;
                      F.line = 924;
                      formatValue_1442841952(fmtRes_520098799, 0, piece_520098661.Field0);
                      F.line = 924;
                      fmtRes_520098799[0].push.apply(fmtRes_520098799[0], [44]);;
                      F.line = 924;
                      formatValue_1442841952(fmtRes_520098799, 0, tile_520098662.Field1);
                      F.line = 924;
                      fmtRes_520098799[0].push.apply(fmtRes_520098799[0], [44]);;
                      F.line = 924;
                      formatValue_1442841952(fmtRes_520098799, 0, tile_520098662.Field0);
                      F.line = 924;
                      fmtRes_520098799[0].push.apply(fmtRes_520098799[0], [44]);;
                      F.line = 924;
                      formatValue_1442841952(fmtRes_520098799, 0, group_520098519);
                      F.line = 924;
                      fmtRes_520098799[0].push.apply(fmtRes_520098799[0], [44]);;
                      F.line = 924;
                      formatValue_520098486(fmtRes_520098799, 0, glass_520098475);
                    };
                    sendAction_520096401(fmtRes_520098799[0], false);
                    F.line = 925;
                    var _ = newGroup_1224737264(theState_520093826[0]);
                    F.line = 135;
                    F.filename = "piece.nim";
                    index_520100821 = addInt(index_520100821, 2);
                  }
              };
            };
            F.line = 927;
            F.filename = "main.nim";
            rawEcho([97,100,100,105,110,103,32,97,99,116,105,111,110,83,116,97,99,107]);
            F.line = 928;
            actionStack_520093877[0].push({Field0: ([67,97,115,116,105,110,103,32] || []).concat(reprEnum(glass_520098475, NTI1224736789) || []), Field1: 1, Field2: group_520098519, Field3: packageGlass_1560281132(pieces_520098525, tiles_520098530, action_520098546), Field4: true, Field5: false, Field6: createSendGlass_520096966(group_520098519), Field7: createCancelGlass_520096982(group_520098519)});;
            F.line = 938;
            rawEcho([97,118,116,105,111,110,115,116,97,99,107,32,97,100,100,101,100]);
            F.line = 939;
            sendAction_520096401([112,97,115,115], true);
          framePtr = F.prev;

          
        }
        
function HEX3Aanonymous_520098851() {
          var result_520098852 = [[]];

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
          framePtr = F;
            if ((modInt(picksLeft_520093898[0], 2) == 0)) {
            Label1: {
              F.line = 942;
              F.filename = "main.nim";
              var i_520098853 = 0;
              F.line = 942;
              var j_520098854 = 0;
              Label2: {
                F.line = 125;
                F.filename = "piece.nim";
                var i_520100825 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100826 = 0;
                Label3: {
                  F.line = 129;
                    Label4: while (true) {
                    if (!(i_520100826 < 8)) break Label4;
                      F.line = 125;
                      F.filename = "piece.nim";
                      i_520100825 = i_520100826;
                      Label5: {
                        F.line = 126;
                        var j_520100829 = 0;
                        F.line = 128;
                        F.filename = "iterators_1.nim";
                        var i_520100830 = 0;
                        Label6: {
                          F.line = 129;
                            Label7: while (true) {
                            if (!(i_520100830 < 8)) break Label7;
                              F.line = 126;
                              F.filename = "piece.nim";
                              j_520100829 = i_520100830;
                              F.line = 942;
                              F.filename = "main.nim";
                              i_520098853 = i_520100825;
                              F.line = 942;
                              j_520098854 = j_520100829;
                              if (isColor_1224737814(theBoard_520093825[0][chckIndx(i_520098853, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520098854, 0, (theBoard_520093825[0][chckIndx(i_520098853, 0, (theBoard_520093825[0]).length - 1)]).length - 1)], side_520093807[0])) {
                              F.line = 944;
                              var Temporary8 = nimCopy(null, theBoard_520093825[0][chckIndx(i_520098853, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520098854, 0, (theBoard_520093825[0][chckIndx(i_520098853, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].tile, NTI1224736771);
                              result_520098852[0].push(Temporary8);;
                              }
                              
                              F.line = 131;
                              F.filename = "iterators_1.nim";
                              i_520100830 = addInt(i_520100830, 1);
                            }
                        };
                      };
                      F.line = 131;
                      i_520100826 = addInt(i_520100826, 1);
                    }
                };
              };
            };
            }
            else {
              F.line = 946;
              F.filename = "main.nim";
              var condition_520098874 = get_520097161(theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass[chckIndx(glass_520098475, 0, (theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass).length - 1)]).Field2;
              F.line = 948;
              add_1224737299(result_520098852, 0, condition_520098874(side_520093807[0], HEX5BHEX5D_1224737125(theBoard_520093825[0], HEX5BHEX5D_520098875(picks_520093906[0], 1)), theBoard_520093825[0], theState_520093826[0]));
            }
            
          framePtr = F.prev;

          return result_520098852[0];

        }

      var F = {procname: "createGlassMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 894;
        F.filename = "main.nim";
        var strength_520098518 = get_520097161(theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass[chckIndx(glass_520098475, 0, (theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass).length - 1)]).Field0;
        F.line = 895;
        var group_520098519 = newGroup_1224737264(theState_520093826[0]);
        F.line = 896;
        var newCasting_520098520 = [];
        F.line = 897;
        var pieces_520098525 = [];
        F.line = 898;
        var tiles_520098530 = [];
        F.line = 899;
        var action_520098546 = get_520097161(theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass[chckIndx(glass_520098475, 0, (theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass).length - 1)]).Field1;
        F.line = 901;
        picksLeft_520093898[0] = mulInt(strength_520098518, 2);
        F.line = 905;
        Label1: {
          F.line = 903;
          var fmtRes_520098551 = [mnewString(0)];
          F.line = 903;
          fmtRes_520098551[0].push.apply(fmtRes_520098551[0], [80,105,99,107,32,97,32,112,105,101,99,101,32,116,111,32,115,116,97,114,116,32,99,97,115,116,105,110,103,32]);;
          F.line = 903;
          formatValue_520098486(fmtRes_520098551, 0, glass_520098475);
          F.line = 903;
          fmtRes_520098551[0].push.apply(fmtRes_520098551[0], [46]);;
        };
        Label2: {
          F.line = 904;
          var fmtRes_520098562 = [mnewString(0)];
          F.line = 904;
          fmtRes_520098562[0].push.apply(fmtRes_520098562[0], [80,105,99,107,32,97,32,116,105,108,101,32,116,111,32,99,97,115,116,32]);;
          F.line = 904;
          formatValue_520098486(fmtRes_520098562, 0, glass_520098475);
          F.line = 904;
          fmtRes_520098562[0].push.apply(fmtRes_520098562[0], [32,111,110,46]);;
        };
        promptStack_520093897[0] = nimCopy(null, reversed_520098595(cycle_520098569([nimCopy(null, fmtRes_520098551[0], NTI33554449), nimCopy(null, fmtRes_520098562[0], NTI33554449)], chckRange(strength_520098518, 0, 2147483647))), NTI520097538);
        if (!(((promptStack_520093897[0]).length == picksLeft_520093898[0]))) {
        F.line = 906;
        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(906, 21) `promptStack.len == picksLeft` "));
        }
        
        F.line = 907;
        whenCollected_520093908[0] = HEX3Aanonymous_520098620;
        F.line = 940;
        getPickOptions_520093900[0] = HEX3Aanonymous_520098851;
        F.line = 949;
        pickOptions_520093901[0] = nimCopy(null, getPickOptions_520093900[0](), NTI520093867);
        F.line = 950;
        clear_520094026();
      framePtr = F.prev;

      
    }

  var result_520098423 = null;

  var F = {procname: "main.createGlassMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 871;
    F.filename = "main.nim";
    F.line = 871;
    var tmp_520098424 = tree_721421184(44, []);
    F.line = 871;
    tmp_520098424.class = " glass-menu ";
    F.line = 872;
    var tmp_520098425 = tree_721421184(24, []);
    F.line = 872;
    tmp_520098425.class = "title";
    F.line = 873;
    add_721421120(tmp_520098425, text_721421252([71,108,97,115,115,101,115]));
    F.line = 873;
    add_721421120(tmp_520098424, tmp_520098425);
    F.line = 875;
    var tmp_520098426 = tree_721421184(44, []);
    F.line = 875;
    tmp_520098426.class = "glasses";
    Label1: {
      F.line = 876;
      var glass_520098437 = 0;
      Label2: {
        F.line = 137;
        F.filename = "iterators.nim";
        var v_520100812 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100813 = 0;
        Label3: {
          F.line = 97;
            Label4: while (true) {
            if (!(res_520100813 <= 4)) break Label4;
              F.line = 137;
              F.filename = "iterators.nim";
              v_520100812 = res_520100813;
              F.line = 876;
              F.filename = "main.nim";
              glass_520098437 = v_520100812;
              F.line = 877;
              var tmp_520098427 = tree_721421184(44, []);
              F.line = 877;
              tmp_520098427.class = "glass";
              if (isSome_1493177719(theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass[chckIndx(glass_520098437, 0, (theState_520093826[0].Field1[chckIndx(side_520093807[0], 0, (theState_520093826[0].Field1).length - 1)].glass).length - 1)])) {
              F.line = 879;
              var tmp_520098428 = tree_721421184(71, []);
              F.line = 879;
              tmp_520098428.class = toJSStr(([99,105,114,99,108,101,32] || []).concat(toLower_1040194968(reprEnum(glass_520098437, NTI1224736789)) || []));
              F.line = 879;
              addEventHandler_687867670(tmp_520098428, 0, createGlassOnClick_520098331(glass_520098437), kxi__);
              F.line = 879;
              add_721421120(tmp_520098427, tmp_520098428);
              }
              else {
                F.line = 881;
                var tmp_520098429 = tree_721421184(71, []);
                F.line = 881;
                tmp_520098429.class = "circle empty";
                F.line = 881;
                add_721421120(tmp_520098427, tmp_520098429);
              }
              
              F.line = 882;
              var tmp_520098430 = tree_721421184(32, []);
              F.line = 883;
              add_721421120(tmp_520098430, text_721421252(reprEnum(glass_520098437, NTI1224736789)));
              F.line = 883;
              add_721421120(tmp_520098427, tmp_520098430);
              F.line = 883;
              add_721421120(tmp_520098426, tmp_520098427);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100813 = addInt(res_520100813, 1);
            }
        };
      };
    };
    F.line = 883;
    F.filename = "main.nim";
    add_721421120(tmp_520098424, tmp_520098426);
    if (isSome_520098455(selectedGlass_520093872[0])) {
    F.line = 885;
    var glass_520098475 = (Temporary5 = get_520098361(selectedGlass_520093872[0]), Temporary5)[0][Temporary5[1]];
    if (!((picksLeft_520093898[0] == 0))) {
    F.line = 887;
    var tmp_520098431 = tree_721421184(195, []);
    F.line = 887;
    tmp_520098431.class = "cancel";
    F.line = 887;
    addEventHandler_687867670(tmp_520098431, 0, cancelAllPicks_520097268, kxi__);
    F.line = 888;
    add_721421120(tmp_520098431, text_721421252([67,97,110,99,101,108]));
    F.line = 888;
    add_721421120(tmp_520098424, tmp_520098431);
    }
    
    F.line = 890;
    var zerocond_520098480 = ((glass_520098475 == 1) && (theState_520093826[0].Field0.turnNumber <= 1));
    F.line = 891;
    var tmp_520098432 = tree_721421184(195, []);
    F.line = 891;
    tmp_520098432.class = "use";
    F.line = 891;
    setAttr_721421080(tmp_520098432, "disabled", (busy_520093931() || zerocond_520098480));
    F.line = 892;
    Label6: {
      F.line = 892;
      var fmtRes_520098485 = [mnewString(0)];
      F.line = 892;
      fmtRes_520098485[0].push.apply(fmtRes_520098485[0], [85,115,101,32]);;
      F.line = 892;
      formatValue_520098486(fmtRes_520098485, 0, glass_520098475);
    };
    add_721421120(tmp_520098432, text_721421252(fmtRes_520098485[0]));
    F.line = 893;
    addEventHandler_687867670(tmp_520098432, 0, HEX3Aanonymous_520098500, kxi__);
    F.line = 871;
    add_721421120(tmp_520098424, tmp_520098432);
    }
    
    result_520098423 = tmp_520098424;
  framePtr = F.prev;

  return result_520098423;

}

function HEX24_520099141(x_520099143) {
  var result_520099144 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520099144[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym179_520099155 = 0;
    if ((0 < countHEX60gensym179_520099155)) {
    F.line = 23;
    result_520099144[0].push.apply(result_520099144[0], [44,32]);;
    }
    
    F.line = 25;
    result_520099144[0].push.apply(result_520099144[0], [110,101,120,116,73,110,100,101,120]);;
    F.line = 26;
    result_520099144[0].push.apply(result_520099144[0], [58,32]);;
    F.line = 27;
    countHEX60gensym179_520099155 += 1;
    F.line = 33;
    addQuoted_838862213(result_520099144, 0, x_520099143.nextIndex);
    if ((0 < countHEX60gensym179_520099155)) {
    F.line = 23;
    result_520099144[0].push.apply(result_520099144[0], [44,32]);;
    }
    
    F.line = 25;
    result_520099144[0].push.apply(result_520099144[0], [110,101,120,116,71,114,111,117,112]);;
    F.line = 26;
    result_520099144[0].push.apply(result_520099144[0], [58,32]);;
    F.line = 27;
    countHEX60gensym179_520099155 += 1;
    F.line = 33;
    addQuoted_838862213(result_520099144, 0, x_520099143.nextGroup);
    if ((0 < countHEX60gensym179_520099155)) {
    F.line = 23;
    result_520099144[0].push.apply(result_520099144[0], [44,32]);;
    }
    
    F.line = 25;
    result_520099144[0].push.apply(result_520099144[0], [114,97,110,100,83,101,101,100]);;
    F.line = 26;
    result_520099144[0].push.apply(result_520099144[0], [58,32]);;
    F.line = 27;
    countHEX60gensym179_520099155 += 1;
    F.line = 33;
    addQuoted_838862213(result_520099144, 0, x_520099143.randSeed);
    if ((0 < countHEX60gensym179_520099155)) {
    F.line = 23;
    result_520099144[0].push.apply(result_520099144[0], [44,32]);;
    }
    
    F.line = 25;
    result_520099144[0].push.apply(result_520099144[0], [116,117,114,110,78,117,109,98,101,114]);;
    F.line = 26;
    result_520099144[0].push.apply(result_520099144[0], [58,32]);;
    F.line = 27;
    countHEX60gensym179_520099155 += 1;
    F.line = 33;
    addQuoted_838862213(result_520099144, 0, x_520099143.turnNumber);
    F.line = 39;
    result_520099144[0].push.apply(result_520099144[0], [41]);;
  framePtr = F.prev;

  return result_520099144[0];

}

function HEX24_520096612(x_520096614) {
  var result_520096615 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520096615[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym53_520096626 = 0;
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [110,97,109,101]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 33;
    addQuoted_1493176856(result_520096615, 0, x_520096614["Field0"]);
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [116,117,114,110,115]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 33;
    addQuoted_838862213(result_520096615, 0, x_520096614["Field1"]);
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [103,114,111,117,112]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 33;
    addQuoted_838862213(result_520096615, 0, x_520096614["Field2"]);
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [97,99,116,105,111,110]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 35;
    result_520096615[0].push.apply(result_520096615[0], [46,46,46]);;
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [99,97,110,99,101,108,97,98,108,101]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 33;
    addQuoted_1493175985(result_520096615, 0, x_520096614["Field4"]);
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [112,97,115,115,116,104,114,111,117,103,104]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 33;
    addQuoted_1493175985(result_520096615, 0, x_520096614["Field5"]);
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [115,101,110,100]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 35;
    result_520096615[0].push.apply(result_520096615[0], [46,46,46]);;
    if ((0 < countHEX60gensym53_520096626)) {
    F.line = 23;
    result_520096615[0].push.apply(result_520096615[0], [44,32]);;
    }
    
    F.line = 25;
    result_520096615[0].push.apply(result_520096615[0], [99,97,110,99,101,108]);;
    F.line = 26;
    result_520096615[0].push.apply(result_520096615[0], [58,32]);;
    F.line = 27;
    countHEX60gensym53_520096626 += 1;
    F.line = 35;
    result_520096615[0].push.apply(result_520096615[0], [46,46,46]);;
    F.line = 39;
    result_520096615[0].push.apply(result_520096615[0], [41]);;
  framePtr = F.prev;

  return result_520096615[0];

}

function addQuoted_520096606(s_520096608, s_520096608_Idx, x_520096609) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520096608[s_520096608_Idx].push.apply(s_520096608[s_520096608_Idx], HEX24_520096612(x_520096609));;
  framePtr = F.prev;

  
}

function collectionToString_520096573(x_520096575, prefix_520096576, separator_520096577, suffix_520096578) {
  var result_520096579 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_520096579[0] = nimCopy(null, prefix_520096576, NTI33554449);
    F.line = 91;
    var firstElement_520096580 = true;
    Label1: {
      F.line = 92;
      var value_520096602 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100880 = 0;
      F.line = 250;
      var L_520100881 = (x_520096575).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520100880 < L_520100881)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_520096602 = x_520096575[i_520100880];
            if (firstElement_520096580) {
            F.line = 94;
            firstElement_520096580 = false;
            }
            else {
              F.line = 96;
            result_520096579[0].push.apply(result_520096579[0], separator_520096577);;
            }
            
            F.line = 105;
            addQuoted_520096606(result_520096579, 0, value_520096602);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100880 += 1;
            if (!(((x_520096575).length == L_520100881))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_520096579[0].push.apply(result_520096579[0], suffix_520096578);;
  framePtr = F.prev;

  return result_520096579[0];

}

function HEX24_520096569(x_520096571) {
  var result_520096572 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_520096572 = nimCopy(null, collectionToString_520096573(x_520096571, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_520096572;

}

function formatValue_520099256(result_520099259, result_520099259_Idx, value_520099260) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "strformat.nim";
    formatValue_1442840708(result_520099259, result_520099259_Idx, HEX24_520096569(value_520099260));
  framePtr = F.prev;

  
}

function pop_520097217(s_520097219, s_520097219_Idx) {
  var result_520097220 = [];

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1702;
    F.filename = "system.nim";
    var L_520097224 = subInt((s_520097219[s_520097219_Idx]).length, 1);
    F.line = 1707;
    result_520097220 = nimCopy(null, s_520097219[s_520097219_Idx][chckIndx(L_520097224, 0, (s_520097219[s_520097219_Idx]).length - 1)], NTI33554449);
    F.line = 1708;
    if (s_520097219[s_520097219_Idx].length < chckRange(L_520097224, 0, 2147483647)) { for (var i = s_520097219[s_520097219_Idx].length ; i < chckRange(L_520097224, 0, 2147483647) ; ++i) s_520097219[s_520097219_Idx].push([]); }
               else { s_520097219[s_520097219_Idx].length = chckRange(L_520097224, 0, 2147483647); };
  framePtr = F.prev;

  return result_520097220;

}

function sendMove_520096914(moveType_520096915, start_520096916, to_520096917) {
  var F = {procname: "main.sendMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 258;
    F.filename = "main.nim";
    Label1: {
      F.line = 258;
      var fmtRes_520096922 = [mnewString(0)];
      F.line = 258;
      formatValue_1442840708(fmtRes_520096922, 0, moveType_520096915);
      F.line = 258;
      fmtRes_520096922[0].push.apply(fmtRes_520096922[0], [44]);;
      F.line = 258;
      formatValue_1442840708(fmtRes_520096922, 0, HEX24_369098760(start_520096916.Field1));
      F.line = 258;
      fmtRes_520096922[0].push.apply(fmtRes_520096922[0], [44]);;
      F.line = 707;
      F.filename = "strformat.nim";
      add_33556373(fmtRes_520096922, 0, (toJSStr(HEX24_369098760(start_520096916.Field0))));
      F.line = 258;
      F.filename = "main.nim";
      fmtRes_520096922[0].push.apply(fmtRes_520096922[0], [44]);;
      F.line = 258;
      formatValue_1442840708(fmtRes_520096922, 0, HEX24_369098760(to_520096917.Field1));
      F.line = 258;
      fmtRes_520096922[0].push.apply(fmtRes_520096922[0], [44]);;
      F.line = 258;
      formatValue_1442840708(fmtRes_520096922, 0, HEX24_369098760(to_520096917.Field0));
    };
    sendAction_520096401(fmtRes_520096922[0], true);
  framePtr = F.prev;

  
}

function createTile_520097473(p_520097474, m_520097475, n_520097476) {
    var Temporary1;
    p_520097474 = nimCopy(null, p_520097474, NTI1224736794);
    
function HEX3Aanonymous_520097562(__520097563, __520097564) {
      var F = {procname: "createTile.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if ((!((picksLeft_520093898[0] == 0)) && contains_1224737422(pickOptions_520093901[0], p_520097474.tile))) {
        F.line = 500;
        F.filename = "main.nim";
        picksLeft_520093898[0] = subInt(picksLeft_520093898[0], 1);
        F.line = 501;
        var Temporary1 = nimCopy(null, p_520097474.tile, NTI1224736771);
        picks_520093906[0].push(Temporary1);;
        F.line = 502;
        promptHistory_520093892[0].push(pop_520097217(promptStack_520093897, 0));;
        F.line = 503;
        pickOptions_520093901[0] = nimCopy(null, getPickOptions_520093900[0](), NTI520093867);
        F.line = 504;
        clear_520094026();
        if ((picksLeft_520093898[0] == 0)) {
        F.line = 506;
        rawEcho([119,104,101,110,32,99,111,108,108,101,99,116,101,100,32,115,116,97,114,116]);
        F.line = 507;
        whenCollected_520093908[0]();
        F.line = 508;
        rawEcho([87,104,101,110,32,67,111,108,108,101,99,116,101,100]);
        F.line = 509;
        cancelAllPicks_520097236();
        F.line = 510;
        rawEcho([67,97,110,99,101,108,32,65,108,108]);
        }
        
        }
        else {
        if (((contains_1224737422(possibleMoves_520093834[0], p_520097474.tile) && isColor_1224737814(pieceOf_520093924(selectedTile_520093829[0]), side_520093807[0])) && !(busy_520093931()))) {
        F.line = 513;
        pieceOf_520093924(selectedTile_520093829[0]).onMove(pieceOf_520093924(selectedTile_520093829[0]), p_520097474.tile, theBoard_520093825[0], theState_520093826[0]);
        F.line = 514;
        sendMove_520096914([109,111,118,101], selectedTile_520093829[0], p_520097474.tile);
        F.line = 515;
        rawEcho([115,101,110,100]);
        F.line = 516;
        clear_520094026();
        }
        else {
        if (((contains_1224737422(possibleTakes_520093839[0], p_520097474.tile) && isColor_1224737814(pieceOf_520093924(selectedTile_520093829[0]), side_520093807[0])) && !(busy_520093931()))) {
        F.line = 519;
        pieceOf_520093924(selectedTile_520093829[0]).onTake(pieceOf_520093924(selectedTile_520093829[0]), p_520097474.tile, theBoard_520093825[0], theState_520093826[0]);
        F.line = 520;
        sendMove_520096914([116,97,107,101], selectedTile_520093829[0], p_520097474.tile);
        F.line = 521;
        clear_520094026();
        }
        else {
        if (!(isSelected_520093927(m_520097475, n_520097476))) {
        F.line = 523;
        var colontmp__520100907 = n_520097476;
        F.line = 523;
        var colontmp__520100908 = m_520097475;
        F.line = 523;
        selectedTile_520093829[0] = nimCopy(selectedTile_520093829[0], {Field0: colontmp__520100907, Field1: colontmp__520100908}, NTI1224736771);
        F.line = 524;
        possibleMoves_520093834[0] = nimCopy(null, getMovesOn_1224737387(p_520097474, theBoard_520093825[0]), NTI1224736778);
        F.line = 525;
        possibleTakes_520093839[0] = nimCopy(null, getTakesOn_1224737272(p_520097474, theBoard_520093825[0]), NTI1224736778);
        }
        else {
          F.line = 527;
        clear_520094026();
        }
        }}}
      framePtr = F.prev;

      
    }
      var Temporary15;
      var Temporary16;

  var result_520097477 = null;

  var F = {procname: "main.createTile", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 467;
    F.filename = "main.nim";
    if ((modInt(addInt(mulInt(m_520097475, 7), n_520097476), 2) == 0)) {
    Temporary1 = [119,104,105,116,101,84,105,108,101];
    }
    else {
    Temporary1 = [98,108,97,99,107,84,105,108,101];
    }
    
    var class_520097478 = nimCopy(null, Temporary1, NTI33554449);
    Label2: {
      F.line = 469;
      var i_520097479 = 0;
      F.line = 469;
      var j_520097480 = 0;
      Label3: {
        F.line = 125;
        F.filename = "piece.nim";
        var i_520100896 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520100897 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_520100897 < 8)) break Label5;
              F.line = 125;
              F.filename = "piece.nim";
              i_520100896 = i_520100897;
              Label6: {
                F.line = 126;
                var j_520100900 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520100901 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_520100901 < 8)) break Label8;
                      F.line = 126;
                      F.filename = "piece.nim";
                      j_520100900 = i_520100901;
                      F.line = 469;
                      F.filename = "main.nim";
                      i_520097479 = i_520100896;
                      F.line = 469;
                      j_520097480 = j_520100900;
                      Label9: {
                        F.line = 470;
                        var c_520097484 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520100891 = [];
                        F.line = 470;
                        F.filename = "main.nim";
                        colontmp__520100891 = theBoard_520093825[0][chckIndx(i_520097479, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097480, 0, (theBoard_520093825[0][chckIndx(i_520097479, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520100892 = 0;
                        F.line = 250;
                        var L_520100893 = (colontmp__520100891).length;
                        Label10: {
                          F.line = 251;
                            Label11: while (true) {
                            if (!(i_520100892 < L_520100893)) break Label11;
                              F.line = 470;
                              F.filename = "main.nim";
                              c_520097484 = colontmp__520100891[chckIndx(i_520100892, 0, (colontmp__520100891).length - 1)];
                              if (HEX3DHEX3D_1224737446(p_520097474.tile, c_520097484.Field0)) {
                              F.line = 472;
                              class_520097478.push.apply(class_520097478, castingOnAnimations_520093731[chckIndx(c_520097484.Field2, 0, (castingOnAnimations_520093731).length - 1)]);;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520100892 += 1;
                              if (!(((colontmp__520100891).length == L_520100893))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520100901 = addInt(i_520100901, 1);
                    }
                };
              };
              F.line = 131;
              i_520100897 = addInt(i_520100897, 1);
            }
        };
      };
    };
    Label12: {
      F.line = 474;
      F.filename = "main.nim";
      var c_520097492 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100904 = 0;
      F.line = 250;
      var L_520100905 = (p_520097474.casts).length;
      Label13: {
        F.line = 251;
          Label14: while (true) {
          if (!(i_520100904 < L_520100905)) break Label14;
            F.line = 474;
            F.filename = "main.nim";
            c_520097492 = p_520097474.casts[chckIndx(i_520100904, 0, (p_520097474.casts).length - 1)];
            F.line = 475;
            class_520097478.push.apply(class_520097478, castingAnimations_520093730[chckIndx(c_520097492.Field2, 0, (castingAnimations_520093730).length - 1)]);;
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100904 += 1;
            if (!(((p_520097474.casts).length == L_520100905))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((isSelected_520093927(m_520097475, n_520097476) && contains_1224737422(possibleTakes_520093839[0], p_520097474.tile))) {
    F.line = 478;
    F.filename = "main.nim";
    class_520097478.push.apply(class_520097478, [32,99,97,110,45,116,97,107,101]);;
    }
    else {
    if (isSelected_520093927(m_520097475, n_520097476)) {
    F.line = 480;
    class_520097478.push.apply(class_520097478, [32,115,101,108,101,99,116,101,100]);;
    }
    else {
    if (contains_1224737422(picks_520093906[0], p_520097474.tile)) {
    F.line = 482;
    class_520097478.push.apply(class_520097478, [32,112,105,99,107,105,110,103]);;
    }
    else {
    if ((contains_1224737422(possibleMoves_520093834[0], p_520097474.tile) || contains_1224737422(pickOptions_520093901[0], p_520097474.tile))) {
    F.line = 484;
    class_520097478.push.apply(class_520097478, [32,99,97,110,45,109,111,118,101]);;
    }
    else {
    if (contains_1224737422(possibleTakes_520093839[0], p_520097474.tile)) {
    F.line = 486;
    class_520097478.push.apply(class_520097478, [32,99,97,110,45,116,97,107,101]);;
    }
    else {
      F.line = 488;
    class_520097478.push.apply(class_520097478, [32,117,110,115,101,108,101,99,116,101,100]);;
    }
    }}}}
    if (contains_1224737422(piecesChecking_520093849[0], p_520097474.tile)) {
    F.line = 491;
    class_520097478.push.apply(class_520097478, [32,99,104,101,99,107,105,110,103]);;
    }
    else {
    if (contains_1224737422(lastMove_520093844[0], p_520097474.tile)) {
    F.line = 493;
    class_520097478.push.apply(class_520097478, [32,108,97,115,116,45,109,111,118,101]);;
    }
    }
    F.line = 496;
    F.line = 497;
    var tmp_520097551 = tree_721421184(188, []);
    F.line = 497;
    tmp_520097551.class = toJSStr(class_520097478);
    F.line = 498;
    addEventHandler_687867670(tmp_520097551, 0, HEX3Aanonymous_520097562, kxi__);
    if (eqStrings(p_520097474.filePath, [])) {
    F.line = 530;
    add_721421120(tmp_520097551, text_721421252([]));
    }
    else {
      F.line = 532;
      if (p_520097474.rotate) {
      Temporary15 = [114,111,116,97,116,101];
      }
      else {
      Temporary15 = [];
      }
      
      var class_520097597 = nimCopy(null, Temporary15, NTI33554449);
      F.line = 533;
      if (p_520097474.colorable) {
      Temporary16 = reprEnum(p_520097474.color, NTI1224736777);
      }
      else {
      Temporary16 = [];
      }
      
      var color_520097601 = nimCopy(null, Temporary16, NTI33554449);
      F.line = 534;
      var tmp_520097561 = tree_721421184(76, []);
      F.line = 534;
      setAttr_721421035(tmp_520097561, "src", toJSStr(([46,47,105,99,111,110,115,47] || []).concat(color_520097601 || [],p_520097474.filePath || [])));
      F.line = 534;
      tmp_520097561.class = toJSStr(class_520097597);
      F.line = 534;
      add_721421120(tmp_520097551, tmp_520097561);
    }
    
    result_520097477 = tmp_520097551;
  framePtr = F.prev;

  return result_520097477;

}

function createBoard_520097617() {
  var result_520097618 = null;

  var F = {procname: "main.createBoard", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 537;
    F.filename = "main.nim";
    F.line = 537;
    var tmp_520097619 = tree_721421184(180, []);
    Label1: {
      F.line = 538;
      var i_520097627 = 0;
      F.line = 538;
      var r_520097628 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 164;
      F.filename = "iterators.nim";
      var i_520100887 = 0;
      Label2: {
        F.line = 165;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 538;
            F.filename = "main.nim";
            i_520097627 = i_520100887;
            F.line = 538;
            r_520097628 = nimCopy(r_520097628, theBoard_520093825[0][chckIndx(i_520100887, 0, (theBoard_520093825[0]).length - 1)], NTI1224736772);
            F.line = 539;
            var tmp_520097620 = tree_721421184(187, []);
            Label4: {
              F.line = 540;
              var j_520097635 = 0;
              F.line = 540;
              var p_520097636 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 164;
              F.filename = "iterators.nim";
              var i_520100885 = 0;
              Label5: {
                F.line = 165;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 540;
                    F.filename = "main.nim";
                    j_520097635 = i_520100885;
                    F.line = 540;
                    p_520097636 = nimCopy(p_520097636, r_520097628[chckIndx(i_520100885, 0, (r_520097628).length - 1)], NTI1224736794);
                    F.line = 541;
                    add_721421120(tmp_520097620, createTile_520097473(p_520097636, i_520097627, j_520097635));
                    if ((7 <= i_520100885)) {
                    F.line = 167;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520100885 += 1;
                  }
              };
            };
            F.line = 541;
            F.filename = "main.nim";
            add_721421120(tmp_520097619, tmp_520097620);
            if ((7 <= i_520100887)) {
            F.line = 167;
            F.filename = "iterators.nim";
            break Label2;
            }
            
            F.line = 13;
            i_520100887 += 1;
          }
      };
    };
    result_520097618 = tmp_520097619;
  framePtr = F.prev;

  return result_520097618;

}

function reverseBoard_520097637() {
  var result_520097638 = null;

  var F = {procname: "main.reverseBoard", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 544;
    F.filename = "main.nim";
    F.line = 544;
    var tmp_520097639 = tree_721421184(180, []);
    Label1: {
      F.line = 545;
      var i_520097646 = 0;
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520100914 = 7;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_520100914)) break Label3;
            F.line = 545;
            F.filename = "main.nim";
            i_520097646 = res_520100914;
            F.line = 546;
            var tmp_520097640 = tree_721421184(187, []);
            Label4: {
              F.line = 547;
              var j_520097652 = 0;
              F.line = 33;
              F.filename = "iterators_1.nim";
              var res_520100912 = 7;
              Label5: {
                F.line = 34;
                  Label6: while (true) {
                  if (!(0 <= res_520100912)) break Label6;
                    F.line = 547;
                    F.filename = "main.nim";
                    j_520097652 = res_520100912;
                    F.line = 548;
                    add_721421120(tmp_520097640, createTile_520097473(theBoard_520093825[0][chckIndx(i_520097646, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520097652, 0, (theBoard_520093825[0][chckIndx(i_520097646, 0, (theBoard_520093825[0]).length - 1)]).length - 1)], i_520097646, j_520097652));
                    F.line = 39;
                    F.filename = "iterators_1.nim";
                    res_520100912 = subInt(res_520100912, 1);
                  }
              };
            };
            F.line = 548;
            F.filename = "main.nim";
            add_721421120(tmp_520097639, tmp_520097640);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_520100914 = subInt(res_520100914, 1);
          }
      };
    };
    result_520097638 = tmp_520097639;
  framePtr = F.prev;

  return result_520097638;

}

function HEX5BHEX5D_520098052(s_520098054, i_520098055) {
  var result_520098056 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520098056 = s_520098054[chckIndx(subInt((s_520098054).length, i_520098055), 0, (s_520098054).length - 1)];
  framePtr = F.prev;

  return result_520098056;

}

function pop_520098135(s_520098137, s_520098137_Idx) {
  var result_520098138 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1702;
    F.filename = "system.nim";
    var L_520098142 = subInt((s_520098137[s_520098137_Idx]).length, 1);
    F.line = 1707;
    result_520098138 = nimCopy(result_520098138, s_520098137[s_520098137_Idx][chckIndx(L_520098142, 0, (s_520098137[s_520098137_Idx]).length - 1)], NTI520093710);
    F.line = 1708;
    if (s_520098137[s_520098137_Idx].length < chckRange(L_520098142, 0, 2147483647)) { for (var i = s_520098137[s_520098137_Idx].length ; i < chckRange(L_520098142, 0, 2147483647) ; ++i) s_520098137[s_520098137_Idx].push({Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null}); }
               else { s_520098137[s_520098137_Idx].length = chckRange(L_520098142, 0, 2147483647); };
  framePtr = F.prev;

  return result_520098138;

}

function newSeq_520096828(len_520096830) {
  var result_520096831 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_520096831 = new Array(len_520096830); for (var i = 0 ; i < len_520096830 ; ++i) { result_520096831[i] = false; }  framePtr = F.prev;

  return result_520096831;

}

function updateActionStack_520096416() {
        var Temporary7;

  var F = {procname: "main.updateActionStack", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "main.nim";
    rawEcho([97,115], HEX24_520096569(actionStack_520093877[0]));
    F.line = 236;
    rawEcho([110,97,115], HEX24_520096569(nextActionStack_520093882[0]));
    F.line = 237;
    rawEcho([115], HEX24_520096569(toSend_520093887[0]));
    if (((actionStack_520093877[0]).length == 0)) {
    if (!(((nextActionStack_520093882[0]).length == 0))) {
    Label1: {
      F.line = 240;
      var i_520096787 = 0;
      F.line = 240;
      var x_520096788 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
      F.line = 182;
      F.filename = "iterators.nim";
      var i_520100939 = 0;
      F.line = 183;
      var L_520100940 = (nextActionStack_520093882[0]).length;
      Label2: {
        F.line = 184;
          Label3: while (true) {
          if (!(i_520100939 < L_520100940)) break Label3;
            F.line = 240;
            F.filename = "main.nim";
            i_520096787 = i_520100939;
            F.line = 240;
            x_520096788 = nimCopy(x_520096788, nextActionStack_520093882[0][chckIndx(i_520100939, 0, (nextActionStack_520093882[0]).length - 1)], NTI520093710);
            F.line = 241;
            nextActionStack_520093882[0][chckIndx(i_520096787, 0, (nextActionStack_520093882[0]).length - 1)].Field1 = subInt(nextActionStack_520093882[0][chckIndx(i_520096787, 0, (nextActionStack_520093882[0]).length - 1)].Field1, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100939 += 1;
            if (!(((nextActionStack_520093882[0]).length == L_520100940))) {
            F.line = 187;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if ((true && !(practiceMode_520093850[0]))) {
    if (!(((toSend_520093887[0]).length == 0))) {
    Label4: {
      F.line = 245;
      F.filename = "main.nim";
      var x_520096800 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100943 = 0;
      F.line = 250;
      var L_520100944 = (toSend_520093887[0]).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_520100943 < L_520100944)) break Label6;
            F.line = 245;
            F.filename = "main.nim";
            x_520096800 = toSend_520093887[0][chckIndx(i_520100943, 0, (toSend_520093887[0]).length - 1)];
            F.line = 246;
            x_520096800.Field6();
            F.line = 247;
            rawEcho([115,101,110,100,44,32,116,104,105,115,32,101,110,100,115,32,116,117,114,110,32,105,102,32,46,115,101,110,100,32,100,111,101,115]);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100943 += 1;
            if (!(((toSend_520093887[0]).length == L_520100944))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
        if (!!(((nextActionStack_520093882[0]).length == 0))) Temporary7 = false; else {          F.line = 975;
          F.filename = "sequtils.nim";
          Label8: {
            F.line = 1024;
            var iHEX60gensym77_520096824 = 0;
            F.line = 1025;
            var resultHEX60gensym77_520096868 = newSeq_520096828(chckRange((nextActionStack_520093882[0]).length, 0, 2147483647));
            Label9: {
              F.line = 1026;
              var it_520096872 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520100948 = 0;
              F.line = 250;
              var L_520100949 = (nextActionStack_520093882[0]).length;
              Label10: {
                F.line = 251;
                  Label11: while (true) {
                  if (!(i_520100948 < L_520100949)) break Label11;
                    F.line = 1026;
                    F.filename = "sequtils.nim";
                    it_520096872 = nextActionStack_520093882[0][chckIndx(i_520100948, 0, (nextActionStack_520093882[0]).length - 1)];
                    F.line = 250;
                    F.filename = "main.nim";
                    resultHEX60gensym77_520096868[chckIndx(iHEX60gensym77_520096824, 0, (resultHEX60gensym77_520096868).length - 1)] = it_520096872.Field5;
                    F.line = 1028;
                    F.filename = "sequtils.nim";
                    iHEX60gensym77_520096824 = addInt(iHEX60gensym77_520096824, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520100948 += 1;
                    if (!(((nextActionStack_520093882[0]).length == L_520100949))) {
                    F.line = 254;
                    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
          };
          var sHEX60gensym80_520096884 = nimCopy(null, resultHEX60gensym77_520096868, NTI520095611);
          F.line = 976;
          F.filename = "sequtils.nim";
          var nHEX60gensym80_520096889 = (sHEX60gensym80_520096884).length;
          if (!((0 < nHEX60gensym80_520096889))) {
          F.line = 977;
          failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym80 > 0` Can\'t fold empty sequences"));
          }
          
          F.line = 978;
          var resultHEX60gensym80_520096895 = sHEX60gensym80_520096884[chckIndx(subInt(nHEX60gensym80_520096889, 1), 0, (sHEX60gensym80_520096884).length - 1)];
          Label12: {
            F.line = 979;
            var iHEX60gensym80_520096901 = 0;
            F.line = 6;
            F.filename = "iterators_1.nim";
            var colontmp__520100952 = 0;
            F.line = 979;
            F.filename = "sequtils.nim";
            colontmp__520100952 = subInt(nHEX60gensym80_520096889, 2);
            F.line = 33;
            F.filename = "iterators_1.nim";
            var res_520100953 = colontmp__520100952;
            Label13: {
              F.line = 34;
                Label14: while (true) {
                if (!(0 <= res_520100953)) break Label14;
                  F.line = 979;
                  F.filename = "sequtils.nim";
                  iHEX60gensym80_520096901 = res_520100953;
                  F.line = 981;
                  var a_520096902 = sHEX60gensym80_520096884[chckIndx(iHEX60gensym80_520096901, 0, (sHEX60gensym80_520096884).length - 1)];
                  F.line = 982;
                  var b_520096903 = resultHEX60gensym80_520096895;
                  F.line = 250;
                  F.filename = "main.nim";
                  resultHEX60gensym80_520096895 = (a_520096902 && b_520096903);
                  F.line = 39;
                  F.filename = "iterators_1.nim";
                  res_520100953 = subInt(res_520100953, 1);
                }
            };
          };
          Temporary7 = !(resultHEX60gensym80_520096895);        }      if (Temporary7) {
      F.line = 251;
      F.filename = "main.nim";
      sendAction_520096401([112,97,115,115], true);
      }
      
    }
    
    }
    
    F.line = 253;
    actionStack_520093877[0] = nimCopy(null, nextActionStack_520093882[0], NTI520093830);
    F.line = 254;
    nextActionStack_520093882[0] = nimCopy(null, [], NTI520093829);
    F.line = 255;
    toSend_520093887[0] = nimCopy(null, [], NTI520093829);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5D_520098323(s_520098325, i_520098326) {
  var result_520098327 = null;
  var result_520098327_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520098327 = s_520098325; result_520098327_Idx = chckIndx(subInt((s_520098325).length, i_520098326), 0, (s_520098325).length - 1);
  framePtr = F.prev;

  return [result_520098327, result_520098327_Idx];

}

function pop_520097205(s_520097207, s_520097207_Idx) {
  var result_520097208 = {Field0: 0, Field1: 0};

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1702;
    F.filename = "system.nim";
    var L_520097212 = subInt((s_520097207[s_520097207_Idx]).length, 1);
    F.line = 1707;
    result_520097208 = nimCopy(result_520097208, s_520097207[s_520097207_Idx][chckIndx(L_520097212, 0, (s_520097207[s_520097207_Idx]).length - 1)], NTI1224736771);
    F.line = 1708;
    if (s_520097207[s_520097207_Idx].length < chckRange(L_520097212, 0, 2147483647)) { for (var i = s_520097207[s_520097207_Idx].length ; i < chckRange(L_520097212, 0, 2147483647) ; ++i) s_520097207[s_520097207_Idx].push({Field0: 0, Field1: 0}); }
               else { s_520097207[s_520097207_Idx].length = chckRange(L_520097212, 0, 2147483647); };
  framePtr = F.prev;

  return result_520097208;

}

function cancelPick_520097196() {
  var F = {procname: "main.cancelPick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    if ((0 < (promptHistory_520093892[0]).length)) {
    F.line = 345;
    F.filename = "main.nim";
    picksLeft_520093898[0] = addInt(picksLeft_520093898[0], 1);
    F.line = 346;
    var _ = pop_520097205(picks_520093906, 0);
    F.line = 347;
    promptStack_520093897[0].push(pop_520097217(promptHistory_520093892, 0));;
    F.line = 348;
    pickOptions_520093901[0] = nimCopy(null, getPickOptions_520093900[0](), NTI520093867);
    }
    
  framePtr = F.prev;

  
}

function cancelPick_520097233(__520097234, __520097235) {
  var F = {procname: "main.cancelPick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 351;
    F.filename = "main.nim";
    cancelPick_520097196();
  framePtr = F.prev;

  
}

function createInfo_520098035() {
    
function HEX3Aanonymous_520098109(__520098110, __520098111) {
      var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 813;
        F.filename = "main.nim";
        HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field3(theBoard_520093825[0], theState_520093826[0]);
        F.line = 814;
        rawEcho([97,99,116,105,111,110,32,99,111,109,112,108,101,116,101]);
        Label1: {
          F.line = 815;
          var i_520098116 = 0;
          F.line = 815;
          var j_520098117 = 0;
          Label2: {
            F.line = 125;
            F.filename = "piece.nim";
            var i_520100930 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520100931 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_520100931 < 8)) break Label4;
                  F.line = 125;
                  F.filename = "piece.nim";
                  i_520100930 = i_520100931;
                  Label5: {
                    F.line = 126;
                    var j_520100934 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_520100935 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_520100935 < 8)) break Label7;
                          F.line = 126;
                          F.filename = "piece.nim";
                          j_520100934 = i_520100935;
                          F.line = 815;
                          F.filename = "main.nim";
                          i_520098116 = i_520100930;
                          F.line = 815;
                          j_520098117 = j_520100934;
                          F.line = 816;
                          F.line = 652;
                          F.filename = "sequtils.nim";
                          var resultHEX60gensym140_520098122 = newSeq_520096990(0);
                          Label8: {
                            F.line = 653;
                            var it_520098126 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                            F.line = 247;
                            F.filename = "iterators.nim";
                            var colontmp__520100925 = [];
                            F.line = 816;
                            F.filename = "main.nim";
                            colontmp__520100925 = theBoard_520093825[0][chckIndx(i_520098116, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520098117, 0, (theBoard_520093825[0][chckIndx(i_520098116, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts;
                            F.line = 249;
                            F.filename = "iterators.nim";
                            var i_520100926 = 0;
                            F.line = 250;
                            var L_520100927 = (colontmp__520100925).length;
                            Label9: {
                              F.line = 251;
                                Label10: while (true) {
                                if (!(i_520100926 < L_520100927)) break Label10;
                                  F.line = 653;
                                  F.filename = "sequtils.nim";
                                  it_520098126 = colontmp__520100925[chckIndx(i_520100926, 0, (colontmp__520100925).length - 1)];
                                  if (!((it_520098126.Field1 == HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field2))) {
                                  F.line = 654;
                                  var Temporary11 = nimCopy(null, it_520098126, NTI1224736788);
                                  resultHEX60gensym140_520098122.push(Temporary11);;
                                  }
                                  
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_520100926 += 1;
                                  if (!(((colontmp__520100925).length == L_520100927))) {
                                  F.line = 254;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          theBoard_520093825[0][chckIndx(i_520098116, 0, (theBoard_520093825[0]).length - 1)][chckIndx(j_520098117, 0, (theBoard_520093825[0][chckIndx(i_520098116, 0, (theBoard_520093825[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym140_520098122, NTI520095756);
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_520100935 = addInt(i_520100935, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_520100931 = addInt(i_520100931, 1);
                }
            };
          };
        };
        F.line = 817;
        F.filename = "main.nim";
        toSend_520093887[0].push(pop_520098135(actionStack_520093877, 0));;
        F.line = 818;
        rawEcho([115,101,110,116]);
        F.line = 819;
        updateActionStack_520096416();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520098224(__520098225, __520098226) {
      var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 830;
        F.filename = "main.nim";
        nextActionStack_520093882[0].push(pop_520098135(actionStack_520093877, 0));;
        F.line = 831;
        updateActionStack_520096416();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520098234(__520098235, __520098236) {
      var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 835;
        F.filename = "main.nim";
        HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field7();
        F.line = 836;
        var _ = pop_520098135(actionStack_520093877, 0);
        F.line = 837;
        updateActionStack_520096416();
      framePtr = F.prev;

      
    }
      
function HEX3Aanonymous_520098298(__520098299, __520098300) {
        var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 848;
          F.filename = "main.nim";
          nextActionStack_520093882[0].push(pop_520098135(actionStack_520093877, 0));;
          F.line = 849;
          updateActionStack_520096416();
        framePtr = F.prev;

        
      }
    var Temporary7;
      var Temporary9;

  var result_520098036 = null;

  var F = {procname: "main.createInfo", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 802;
    F.filename = "main.nim";
    F.line = 802;
    var tmp_520098037 = tree_721421184(44, []);
    F.line = 802;
    tmp_520098037.class = "bottom-info";
    if ((turn_520093808[0] && !(((actionStack_520093877[0]).length == 0)))) {
    if ((HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field1 == 0)) {
    F.line = 805;
    var tmp_520098038 = tree_721421184(23, []);
    if (HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field5) {
    F.line = 807;
    Label1: {
      F.line = 807;
      var fmtRes_520098085 = [mnewString(0)];
      F.line = 807;
      fmtRes_520098085[0].push.apply(fmtRes_520098085[0], [69,120,101,99,117,116,101,32]);;
      F.line = 807;
      formatValue_1442840708(fmtRes_520098085, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field0);
      F.line = 807;
      fmtRes_520098085[0].push.apply(fmtRes_520098085[0], makeNimstrLit(" (This will end your turn, after all other actions are resolved): "));;
    };
    add_721421120(tmp_520098038, text_721421252(fmtRes_520098085[0]));
    }
    else {
      F.line = 809;
      Label2: {
        F.line = 809;
        var fmtRes_520098099 = [mnewString(0)];
        F.line = 809;
        fmtRes_520098099[0].push.apply(fmtRes_520098099[0], [69,120,101,99,117,116,101,32]);;
        F.line = 809;
        formatValue_1442840708(fmtRes_520098099, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field0);
        F.line = 809;
        fmtRes_520098099[0].push.apply(fmtRes_520098099[0], [58,32]);;
      };
    add_721421120(tmp_520098038, text_721421252(fmtRes_520098099[0]));
    }
    
    F.line = 809;
    add_721421120(tmp_520098037, tmp_520098038);
    F.line = 810;
    var tmp_520098039 = tree_721421184(195, []);
    F.line = 811;
    add_721421120(tmp_520098039, text_721421252([69,120,101,99,117,116,101,33]));
    F.line = 811;
    add_721421120(tmp_520098037, tmp_520098039);
    F.line = 812;
    addEventHandler_687867670(tmp_520098037, 0, HEX3Aanonymous_520098109, kxi__);
    }
    else {
    if (HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field4) {
    F.line = 821;
    var tmp_520098040 = tree_721421184(23, []);
    if (HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field5) {
    F.line = 823;
    Label3: {
      F.line = 823;
      var fmtRes_520098180 = [mnewString(0)];
      F.line = 823;
      formatValue_1442840708(fmtRes_520098180, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field0);
      F.line = 823;
      fmtRes_520098180[0].push.apply(fmtRes_520098180[0], [32,119,105,108,108,32,99,111,109,112,108,101,116,101,32,105,110,32]);;
      F.line = 823;
      formatValue_1442841952(fmtRes_520098180, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field1);
      F.line = 823;
      fmtRes_520098180[0].push.apply(fmtRes_520098180[0], [46,32,67,111,110,116,105,110,117,105,110,103,32,100,111,101,115,32,110,111,116,32,101,110,100,32,121,111,117,114,32,116,117,114,110,46,32]);;
    };
    add_721421120(tmp_520098040, text_721421252(fmtRes_520098180[0]));
    }
    else {
      F.line = 825;
      Label4: {
        F.line = 825;
        var fmtRes_520098204 = [mnewString(0)];
        F.line = 825;
        formatValue_1442840708(fmtRes_520098204, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field0);
        F.line = 825;
        fmtRes_520098204[0].push.apply(fmtRes_520098204[0], [32,119,105,108,108,32,99,111,109,112,108,101,116,101,32,105,110,32]);;
        F.line = 825;
        formatValue_1442841952(fmtRes_520098204, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field1);
        F.line = 825;
        fmtRes_520098204[0].push.apply(fmtRes_520098204[0], [46,32,89,111,117,114,32,116,117,114,110,32,119,105,108,108,32,101,110,100,32,105,102,32,121,111,117,32,99,111,110,116,105,110,117,101,46]);;
      };
    add_721421120(tmp_520098040, text_721421252(fmtRes_520098204[0]));
    }
    
    F.line = 825;
    add_721421120(tmp_520098037, tmp_520098040);
    F.line = 826;
    var tmp_520098041 = tree_721421184(44, []);
    F.line = 826;
    tmp_520098041.class = "column";
    F.line = 827;
    var tmp_520098042 = tree_721421184(195, []);
    F.line = 828;
    add_721421120(tmp_520098042, text_721421252([67,111,110,116,105,110,117,101]));
    F.line = 829;
    addEventHandler_687867670(tmp_520098042, 0, HEX3Aanonymous_520098224, kxi__);
    F.line = 802;
    add_721421120(tmp_520098041, tmp_520098042);
    F.line = 832;
    var tmp_520098043 = tree_721421184(195, []);
    F.line = 833;
    add_721421120(tmp_520098043, text_721421252([67,97,110,99,101,108]));
    F.line = 834;
    addEventHandler_687867670(tmp_520098043, 0, HEX3Aanonymous_520098234, kxi__);
    F.line = 802;
    add_721421120(tmp_520098041, tmp_520098043);
    F.line = 802;
    add_721421120(tmp_520098037, tmp_520098041);
    }
    else {
      F.line = 839;
      var tmp_520098044 = tree_721421184(23, []);
      if (HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field5) {
      F.line = 841;
      Label5: {
        F.line = 841;
        var fmtRes_520098254 = [mnewString(0)];
        F.line = 841;
        formatValue_1442840708(fmtRes_520098254, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field0);
        F.line = 841;
        fmtRes_520098254[0].push.apply(fmtRes_520098254[0], [32,119,105,108,108,32,114,101,115,111,108,118,101,32,105,110,32]);;
        F.line = 841;
        formatValue_1442841952(fmtRes_520098254, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field1);
        F.line = 841;
        fmtRes_520098254[0].push.apply(fmtRes_520098254[0], [32,116,117,114,110,115,46]);;
      };
      add_721421120(tmp_520098044, text_721421252(fmtRes_520098254[0]));
      }
      else {
        F.line = 843;
        Label6: {
          F.line = 843;
          var fmtRes_520098278 = [mnewString(0)];
          F.line = 843;
          formatValue_1442840708(fmtRes_520098278, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field0);
          F.line = 843;
          fmtRes_520098278[0].push.apply(fmtRes_520098278[0], [32,119,105,108,108,32,114,101,115,111,108,118,101,32,105,110,32]);;
          F.line = 843;
          formatValue_1442841952(fmtRes_520098278, 0, HEX5BHEX5D_520098052(actionStack_520093877[0], 1).Field1);
          F.line = 843;
          fmtRes_520098278[0].push.apply(fmtRes_520098278[0], makeNimstrLit(" turns.\x0A                                    This will end your turn, once all other actions are resolved."));;
        };
      add_721421120(tmp_520098044, text_721421252(fmtRes_520098278[0]));
      }
      
      F.line = 843;
      add_721421120(tmp_520098037, tmp_520098044);
      F.line = 845;
      var tmp_520098045 = tree_721421184(195, []);
      F.line = 846;
      add_721421120(tmp_520098045, text_721421252([79,107]));
      F.line = 847;
      addEventHandler_687867670(tmp_520098045, 0, HEX3Aanonymous_520098298, kxi__);
      F.line = 802;
      add_721421120(tmp_520098037, tmp_520098045);
    }
    }
    }
    else {
    if (((promptStack_520093897[0]).length == 0)) {
    F.line = 851;
    if (turn_520093808[0]) {
    Temporary7 = [73,116,32,105,115,32,121,111,117,114,32,116,117,114,110,46,32];
    }
    else {
    Temporary7 = [79,112,112,111,110,101,110,116,32,105,115,32,109,111,118,105,110,103,46,32];
    }
    
    var text_520098311 = nimCopy(null, Temporary7, NTI33554449);
    if (hasWallet_1526726660(side_520093807[0], theState_520093826[0])) {
    F.line = 853;
    Label8: {
      F.line = 853;
      var fmtRes_520098316 = [mnewString(0)];
      F.line = 853;
      fmtRes_520098316[0].push.apply(fmtRes_520098316[0], [89,111,117,32,104,97,118,101,32]);;
      F.line = 853;
      formatValue_1442841952(fmtRes_520098316, 0, getMoney_1526726671(side_520093807[0], theState_520093826[0]));
      F.line = 853;
      fmtRes_520098316[0].push.apply(fmtRes_520098316[0], [32,100,111,108,108,97,114,115,46]);;
    };
    text_520098311.push.apply(text_520098311, fmtRes_520098316[0]);;
    }
    
    F.line = 854;
    var tmp_520098046 = tree_721421184(23, []);
    F.line = 855;
    add_721421120(tmp_520098046, text_721421252(text_520098311));
    F.line = 855;
    add_721421120(tmp_520098037, tmp_520098046);
    }
    else {
      F.line = 857;
      var tmp_520098047 = tree_721421184(23, []);
      F.line = 858;
      add_721421120(tmp_520098047, text_721421252((Temporary9 = HEX5BHEX5D_520098323(promptStack_520093897[0], 1), Temporary9)[0][Temporary9[1]]));
      F.line = 858;
      add_721421120(tmp_520098037, tmp_520098047);
      F.line = 859;
      var tmp_520098048 = tree_721421184(195, []);
      F.line = 859;
      addEventHandler_687867670(tmp_520098048, 0, cancelPick_520097233, kxi__);
      F.line = 860;
      add_721421120(tmp_520098048, text_721421252([85,110,100,111,32,108,97,115,116]));
      F.line = 860;
      add_721421120(tmp_520098037, tmp_520098048);
    }
    }
    result_520098036 = tmp_520098037;
  framePtr = F.prev;

  return result_520098036;

}

function createGame_520098968() {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    
function HEX3Aanonymous_520098990(__520098991, __520098992) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 962;
        F.filename = "main.nim";
        clear_520094026();
        F.line = 963;
        practiceMode_520093850[0] = false;
        F.line = 964;
        currentScreen_520093855[0] = 11;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520098996(__520098997, __520098998) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 970;
        F.filename = "main.nim";
        currentTab_520093856[0] = 0;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520099018(__520099019, __520099020) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 975;
        F.filename = "main.nim";
        currentTab_520093856[0] = 1;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520099021(__520099022, __520099023) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 979;
        F.filename = "main.nim";
        currentTab_520093856[0] = 2;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520099024(__520099025, __520099026) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 984;
        F.filename = "main.nim";
        currentTab_520093856[0] = 3;
      framePtr = F.prev;

      
    }
      
function HEX3Aanonymous_520099031(__520099032, __520099033) {
        var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 997;
          F.filename = "main.nim";
          showDebug_520093853[0] = true;
        framePtr = F.prev;

        
      }

  var result_520098969 = null;

  var F = {procname: "main.createGame", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 953;
    F.filename = "main.nim";
    F.line = 953;
    if ((1200 < screenWidth_520093858[0])) {
    Temporary1 = [109,97,105,110];
    }
    else {
    Temporary1 = [99,111,108,117,109,110,32,104,101,105,103,104,116,45,49,48,48];
    }
    
    var topClass_520098970 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 954;
    if ((1200 < screenWidth_520093858[0])) {
    Temporary2 = [116,97,98,45,99,111,108,117,109,110];
    }
    else {
    Temporary2 = [116,97,98,45,99,111,108,117,109,110,32,108,111,110,103];
    }
    
    var nextClass_520098971 = nimCopy(null, Temporary2, NTI33554449);
    F.line = 955;
    var tmp_520098972 = tree_721421184(44, []);
    F.line = 955;
    tmp_520098972.class = toJSStr(topClass_520098970);
    F.line = 956;
    var tmp_520098973 = tree_721421184(44, []);
    F.line = 956;
    tmp_520098973.class = toJSStr(nextClass_520098971);
    if (practiceMode_520093850[0]) {
    F.line = 958;
    if ((1200 < screenWidth_520093858[0])) {
    Temporary3 = [109,111,118,101,45,117,112,32,119,105,100,116,104,45,55,48];
    }
    else {
    Temporary3 = [109,111,118,101,45,114,105,103,104,116];
    }
    
    var class_520098989 = nimCopy(null, Temporary3, NTI33554449);
    F.line = 959;
    var tmp_520098974 = tree_721421184(195, []);
    F.line = 959;
    tmp_520098974.class = toJSStr(class_520098989);
    F.line = 959;
    tmp_520098974.id = "exit-practice";
    F.line = 960;
    add_721421120(tmp_520098974, text_721421252([69,120,105,116,32,112,114,97,99,116,105,99,101]));
    F.line = 961;
    addEventHandler_687867670(tmp_520098974, 0, HEX3Aanonymous_520098990, kxi__);
    F.line = 955;
    add_721421120(tmp_520098973, tmp_520098974);
    }
    
    F.line = 965;
    var tmp_520098975 = tree_721421184(44, []);
    F.line = 965;
    tmp_520098975.class = "tab-row extra-right";
    if (!(((myDrafts_520093813[0]).length == 0))) {
    F.line = 967;
    var tmp_520098976 = tree_721421184(195, []);
    F.line = 968;
    add_721421120(tmp_520098976, text_721421252([89,111,117,114,32,68,114,97,102,116,115]));
    F.line = 969;
    addEventHandler_687867670(tmp_520098976, 0, HEX3Aanonymous_520098996, kxi__);
    F.line = 955;
    add_721421120(tmp_520098975, tmp_520098976);
    }
    
    if (!(((opponentDrafts_520093818[0]).length == 0))) {
    F.line = 972;
    var tmp_520098977 = tree_721421184(195, []);
    F.line = 973;
    add_721421120(tmp_520098977, text_721421252([79,112,112,111,110,101,110,116,32,68,114,97,102,116,115]));
    F.line = 974;
    addEventHandler_687867670(tmp_520098977, 0, HEX3Aanonymous_520099018, kxi__);
    F.line = 955;
    add_721421120(tmp_520098975, tmp_520098977);
    }
    
    F.line = 976;
    var tmp_520098978 = tree_721421184(195, []);
    F.line = 977;
    add_721421120(tmp_520098978, text_721421252([80,111,119,101,114,32,67,111,110,116,114,111,108]));
    F.line = 978;
    addEventHandler_687867670(tmp_520098978, 0, HEX3Aanonymous_520099021, kxi__);
    F.line = 955;
    add_721421120(tmp_520098975, tmp_520098978);
    if ((false || showDebug_520093853[0])) {
    F.line = 981;
    var tmp_520098979 = tree_721421184(195, []);
    F.line = 982;
    add_721421120(tmp_520098979, text_721421252([68,101,98,117,103]));
    F.line = 983;
    addEventHandler_687867670(tmp_520098979, 0, HEX3Aanonymous_520099024, kxi__);
    F.line = 955;
    add_721421120(tmp_520098975, tmp_520098979);
    }
    
    F.line = 955;
    add_721421120(tmp_520098973, tmp_520098975);
    F.line = 989;
    var tmp_520098980 = tree_721421184(44, []);
    F.line = 989;
    tmp_520098980.class = "column-scroll";
    F.line = 990;
    switch (currentTab_520093856[0]) {
    case 0:
      Label4: {
        F.line = 992;
        var p_520099030 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
        F.line = 247;
        F.filename = "iterators.nim";
        var colontmp__520100766 = [];
        F.line = 992;
        F.filename = "main.nim";
        colontmp__520100766 = replaceAnySynergies_1442842028(myDrafts_520093813[0]);
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520100767 = 0;
        F.line = 250;
        var L_520100768 = (colontmp__520100766).length;
        Label5: {
          F.line = 251;
            Label6: while (true) {
            if (!(i_520100767 < L_520100768)) break Label6;
              F.line = 992;
              F.filename = "main.nim";
              p_520099030 = colontmp__520100766[chckIndx(i_520100767, 0, (colontmp__520100766).length - 1)];
              F.line = 993;
              add_721421120(tmp_520098980, createPowerSummary_520097948(p_520099030, side_520093807[0]));
              F.line = 13;
              F.filename = "iterators.nim";
              i_520100767 += 1;
              if (!(((colontmp__520100766).length == L_520100768))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (!(practiceMode_520093850[0])) {
      F.line = 995;
      F.filename = "main.nim";
      var tmp_520098981 = tree_721421184(44, []);
      F.line = 995;
      tmp_520098981.class = "debug";
      F.line = 996;
      addEventHandler_687867670(tmp_520098981, 0, HEX3Aanonymous_520099031, kxi__);
      F.line = 955;
      add_721421120(tmp_520098980, tmp_520098981);
      }
      
      break;
    case 1:
      Label7: {
        F.line = 1000;
        var p_520099037 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
        F.line = 247;
        F.filename = "iterators.nim";
        var colontmp__520100771 = [];
        F.line = 1000;
        F.filename = "main.nim";
        colontmp__520100771 = replaceAnySynergies_1442842028(opponentDrafts_520093818[0]);
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520100772 = 0;
        F.line = 250;
        var L_520100773 = (colontmp__520100771).length;
        Label8: {
          F.line = 251;
            Label9: while (true) {
            if (!(i_520100772 < L_520100773)) break Label9;
              F.line = 1000;
              F.filename = "main.nim";
              p_520099037 = colontmp__520100771[chckIndx(i_520100772, 0, (colontmp__520100771).length - 1)];
              F.line = 1001;
              add_721421120(tmp_520098980, createPowerSummary_520097948(p_520099037, otherSide_1224737822(side_520093807[0])));
              F.line = 13;
              F.filename = "iterators.nim";
              i_520100772 += 1;
              if (!(((colontmp__520100771).length == L_520100773))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 2:
      if ((isSelected_520093927((-1), (-1)) || isAir_1224737797(HEX5BHEX5D_1224737125(theBoard_520093825[0], selectedTile_520093829[0])))) {
      F.line = 1004;
      F.filename = "main.nim";
      add_721421120(tmp_520098980, createPieceProfile_520097999(HEX5BHEX5D_1224737125(theBoard_520093825[0], getKing_1224738012(side_520093807[0], theBoard_520093825[0]))));
      }
      else {
        F.line = 1006;
      add_721421120(tmp_520098980, createPieceProfile_520097999(pieceOf_520093924(selectedTile_520093829[0])));
      }
      
      if (hasGlass_1560281096(side_520093807[0], theState_520093826[0])) {
      F.line = 1008;
      add_721421120(tmp_520098980, createGlassMenu_520098422());
      }
      
      break;
    case 3:
      F.line = 1010;
      var tmp_520098982 = tree_721421184(44, []);
      F.line = 1011;
      Label10: {
        F.line = 1011;
        var fmtRes_520099140 = [mnewString(0)];
        F.line = 1011;
        fmtRes_520099140[0].push.apply(fmtRes_520099140[0], [83,104,97,114,101,100,58,32]);;
        F.line = 1011;
        formatValue_1442840708(fmtRes_520099140, 0, HEX24_520099141(theState_520093826[0].Field0));
      };
      add_721421120(tmp_520098982, text_721421252(fmtRes_520099140[0]));
      F.line = 1011;
      add_721421120(tmp_520098980, tmp_520098982);
      F.line = 1012;
      var tmp_520098983 = tree_721421184(44, []);
      F.line = 1013;
      Label11: {
        F.line = 1013;
        var fmtRes_520099216 = [mnewString(0)];
        F.line = 1013;
        fmtRes_520099216[0].push.apply(fmtRes_520099216[0], [87,104,105,116,101,58,32]);;
        F.line = 1013;
        formatValue_1442840708(fmtRes_520099216, 0, HEX24_1493175947(theState_520093826[0].Field1[chckIndx(1, 0, (theState_520093826[0].Field1).length - 1)]));
      };
      add_721421120(tmp_520098983, text_721421252(fmtRes_520099216[0]));
      F.line = 1013;
      add_721421120(tmp_520098980, tmp_520098983);
      F.line = 1014;
      var tmp_520098984 = tree_721421184(44, []);
      F.line = 1015;
      Label12: {
        F.line = 1015;
        var fmtRes_520099229 = [mnewString(0)];
        F.line = 1015;
        fmtRes_520099229[0].push.apply(fmtRes_520099229[0], [66,108,97,99,107,58,32]);;
        F.line = 1015;
        formatValue_1442840708(fmtRes_520099229, 0, HEX24_1493175947(theState_520093826[0].Field1[chckIndx(0, 0, (theState_520093826[0].Field1).length - 1)]));
      };
      add_721421120(tmp_520098984, text_721421252(fmtRes_520099229[0]));
      F.line = 1015;
      add_721421120(tmp_520098980, tmp_520098984);
      if (!(isSelected_520093927((-1), (-1)))) {
      F.line = 1017;
      var tmp_520098985 = tree_721421184(44, []);
      F.line = 1018;
      Label13: {
        F.line = 1018;
        var fmtRes_520099242 = [mnewString(0)];
        F.line = 1018;
        fmtRes_520099242[0].push.apply(fmtRes_520099242[0], [83,101,108,101,99,116,101,100,32,112,105,101,99,101,58,32]);;
        F.line = 1018;
        formatValue_1442840708(fmtRes_520099242, 0, HEX24_1493176563(pieceOf_520093924(selectedTile_520093829[0])));
      };
      add_721421120(tmp_520098985, text_721421252(fmtRes_520099242[0]));
      F.line = 1018;
      add_721421120(tmp_520098980, tmp_520098985);
      }
      
      F.line = 1019;
      var tmp_520098986 = tree_721421184(44, []);
      F.line = 1020;
      Label14: {
        F.line = 1020;
        var fmtRes_520099255 = [mnewString(0)];
        F.line = 1020;
        fmtRes_520099255[0].push.apply(fmtRes_520099255[0], [65,99,116,105,111,110,32,83,116,97,99,107,58,32]);;
        F.line = 1020;
        formatValue_520099256(fmtRes_520099255, 0, actionStack_520093877[0]);
      };
      add_721421120(tmp_520098986, text_721421252(fmtRes_520099255[0]));
      F.line = 1020;
      add_721421120(tmp_520098980, tmp_520098986);
      F.line = 1021;
      var tmp_520098987 = tree_721421184(44, []);
      F.line = 1022;
      Label15: {
        F.line = 1022;
        var fmtRes_520099274 = [mnewString(0)];
        F.line = 1022;
        fmtRes_520099274[0].push.apply(fmtRes_520099274[0], [78,101,120,116,32,65,99,116,105,111,110,83,116,97,99,107,58,32]);;
        F.line = 1022;
        formatValue_520099256(fmtRes_520099274, 0, nextActionStack_520093882[0]);
      };
      add_721421120(tmp_520098987, text_721421252(fmtRes_520099274[0]));
      F.line = 1022;
      add_721421120(tmp_520098980, tmp_520098987);
      break;
    }
    F.line = 1022;
    add_721421120(tmp_520098973, tmp_520098980);
    F.line = 1022;
    add_721421120(tmp_520098972, tmp_520098973);
    F.line = 1024;
    var tmp_520098988 = tree_721421184(44, []);
    F.line = 1024;
    tmp_520098988.class = "column";
    if ((side_520093807[0] == 1)) {
    F.line = 1025;
    add_721421120(tmp_520098988, createBoard_520097617());
    }
    else {
      F.line = 1025;
    add_721421120(tmp_520098988, reverseBoard_520097637());
    }
    
    F.line = 1026;
    add_721421120(tmp_520098988, createInfo_520098035());
    F.line = 1026;
    add_721421120(tmp_520098972, tmp_520098988);
    result_520098969 = tmp_520098972;
  framePtr = F.prev;

  return result_520098969;

}

function createResults_520099285() {
    
function HEX3Aanonymous_520099293(__520099294, __520099295) {
      var F = {procname: "createResults.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1040;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 0;
        F.line = 1041;
        practiceMode_520093850[0] = false;
      framePtr = F.prev;

      
    }
      
function HEX3Aanonymous_520099296(__520099297, __520099298) {
        var F = {procname: "createResults.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          if ((side_520093807[0] == 0)) {
          F.line = 1048;
          F.filename = "main.nim";
          joinLogic_520097388([], 5);
          }
          else {
            F.line = 1050;
          peer_520093806[0].Field0("rematch:please");
          }
          
          F.line = 1051;
          currentScreen_520093855[0] = 7;
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520099305(__520099306, __520099307) {
        var F = {procname: "createResults.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          if ((side_520093807[0] == 1)) {
          F.line = 1057;
          F.filename = "main.nim";
          hostLogic_520097343([], 4);
          }
          else {
          if ((side_520093807[0] == 0)) {
          F.line = 1059;
          joinLogic_520097388([], 4);
          }
          }
          F.line = 1060;
          currentScreen_520093855[0] = 0;
        framePtr = F.prev;

        
      }

  var result_520099286 = null;

  var F = {procname: "main.createResults", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1029;
    F.filename = "main.nim";
    F.line = 1029;
    var tmp_520099287 = tree_721421184(44, []);
    F.line = 1029;
    tmp_520099287.class = "start-column";
    if (alive_1224737829(side_520093807[0], theBoard_520093825[0], theState_520093826[0])) {
    F.line = 1031;
    var tmp_520099288 = tree_721421184(21, []);
    F.line = 1032;
    add_721421120(tmp_520099288, text_721421252([89,111,117,32,119,111,110,33]));
    F.line = 1032;
    add_721421120(tmp_520099287, tmp_520099288);
    }
    else {
      F.line = 1034;
      var tmp_520099289 = tree_721421184(21, []);
      F.line = 1035;
      add_721421120(tmp_520099289, text_721421252([89,111,117,32,108,111,115,116,46,46,46]));
      F.line = 1035;
      add_721421120(tmp_520099287, tmp_520099289);
    }
    
    if (practiceMode_520093850[0]) {
    F.line = 1038;
    var tmp_520099290 = tree_721421184(195, []);
    F.line = 1039;
    addEventHandler_687867670(tmp_520099290, 0, HEX3Aanonymous_520099293, kxi__);
    F.line = 1043;
    add_721421120(tmp_520099290, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
    F.line = 1043;
    add_721421120(tmp_520099287, tmp_520099290);
    }
    else {
      F.line = 1045;
      var tmp_520099291 = tree_721421184(195, []);
      F.line = 1046;
      addEventHandler_687867670(tmp_520099291, 0, HEX3Aanonymous_520099296, kxi__);
      F.line = 1052;
      add_721421120(tmp_520099291, text_721421252([82,101,109,97,116,99,104]));
      F.line = 1052;
      add_721421120(tmp_520099287, tmp_520099291);
      F.line = 1054;
      var tmp_520099292 = tree_721421184(195, []);
      F.line = 1055;
      addEventHandler_687867670(tmp_520099292, 0, HEX3Aanonymous_520099305, kxi__);
      F.line = 1062;
      add_721421120(tmp_520099292, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
      F.line = 1062;
      add_721421120(tmp_520099287, tmp_520099292);
    }
    
    result_520099286 = tmp_520099287;
  framePtr = F.prev;

  return result_520099286;

}

function createRematch_520099316() {
    
function HEX3Aanonymous_520099320(__520099321, __520099322) {
      var F = {procname: "createRematch.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1069;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 0;
        F.line = 1070;
        peer_520093806[0].Field0("end:exit");
      framePtr = F.prev;

      
    }

  var result_520099317 = null;

  var F = {procname: "main.createRematch", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1065;
    F.filename = "main.nim";
    F.line = 1065;
    var tmp_520099318 = tree_721421184(44, []);
    F.line = 1065;
    tmp_520099318.class = "main";
    F.line = 1066;
    add_721421120(tmp_520099318, text_721421252([87,97,105,116,105,110,103,32,102,111,114,32,111,112,112,111,110,101,110,116,32,116,111,32,97,99,99,101,112,116,46,46,46]));
    F.line = 1067;
    var tmp_520099319 = tree_721421184(195, []);
    F.line = 1068;
    addEventHandler_687867670(tmp_520099319, 0, HEX3Aanonymous_520099320, kxi__);
    F.line = 1071;
    add_721421120(tmp_520099319, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
    F.line = 1071;
    add_721421120(tmp_520099318, tmp_520099319);
    result_520099317 = tmp_520099318;
  framePtr = F.prev;

  return result_520099317;

}

function createDisconnect_520099325() {
    
function HEX3Aanonymous_520099329(__520099330, __520099331) {
      var F = {procname: "createDisconnect.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1078;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 0;
      framePtr = F.prev;

      
    }

  var result_520099326 = null;

  var F = {procname: "main.createDisconnect", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1074;
    F.filename = "main.nim";
    F.line = 1074;
    var tmp_520099327 = tree_721421184(44, []);
    F.line = 1074;
    tmp_520099327.class = "start-column";
    F.line = 1075;
    add_721421120(tmp_520099327, text_721421252([89,111,117,114,32,111,112,112,111,110,101,110,116,32,100,105,115,99,111,110,110,101,99,116,101,100]));
    F.line = 1076;
    var tmp_520099328 = tree_721421184(195, []);
    F.line = 1077;
    addEventHandler_687867670(tmp_520099328, 0, HEX3Aanonymous_520099329, kxi__);
    F.line = 1079;
    add_721421120(tmp_520099328, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
    F.line = 1079;
    add_721421120(tmp_520099327, tmp_520099328);
    result_520099326 = tmp_520099327;
  framePtr = F.prev;

  return result_520099326;

}

function createOther_520099332() {
    
function HEX3Aanonymous_520099340(__520099341, __520099342) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1087;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 9;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520099343(ev_520099344, __520099345) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1092;
        F.filename = "main.nim";
        alert("Unimplemented");
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520099346(ev_520099347, __520099348) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1097;
        F.filename = "main.nim";
        alert("Unimplemented");
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520099349(__520099350, __520099351) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1102;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 0;
      framePtr = F.prev;

      
    }

  var result_520099333 = null;

  var F = {procname: "main.createOther", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1082;
    F.filename = "main.nim";
    F.line = 1082;
    var tmp_520099334 = tree_721421184(44, []);
    F.line = 1082;
    tmp_520099334.class = "start-column";
    F.line = 1083;
    var tmp_520099335 = tree_721421184(44, []);
    F.line = 1083;
    tmp_520099335.class = "main";
    F.line = 1084;
    var tmp_520099336 = tree_721421184(195, []);
    F.line = 1084;
    tmp_520099336.class = " menu-button ";
    F.line = 1085;
    add_721421120(tmp_520099336, text_721421252([83,101,116,116,105,110,103,115]));
    F.line = 1086;
    addEventHandler_687867670(tmp_520099336, 0, HEX3Aanonymous_520099340, kxi__);
    F.line = 1082;
    add_721421120(tmp_520099335, tmp_520099336);
    F.line = 1089;
    var tmp_520099337 = tree_721421184(195, []);
    F.line = 1089;
    tmp_520099337.class = " menu-button ";
    F.line = 1090;
    add_721421120(tmp_520099337, text_721421252([67,104,97,110,103,101,32,76,111,103]));
    F.line = 1091;
    addEventHandler_687867670(tmp_520099337, 0, HEX3Aanonymous_520099343, kxi__);
    F.line = 1082;
    add_721421120(tmp_520099335, tmp_520099337);
    F.line = 1082;
    add_721421120(tmp_520099334, tmp_520099335);
    F.line = 1094;
    var tmp_520099338 = tree_721421184(195, []);
    F.line = 1094;
    tmp_520099338.class = "width-100";
    F.line = 1095;
    add_721421120(tmp_520099338, text_721421252([67,114,101,100,105,116,115]));
    F.line = 1096;
    addEventHandler_687867670(tmp_520099338, 0, HEX3Aanonymous_520099346, kxi__);
    F.line = 1082;
    add_721421120(tmp_520099334, tmp_520099338);
    F.line = 1099;
    var tmp_520099339 = tree_721421184(195, []);
    F.line = 1099;
    tmp_520099339.class = "width-100";
    F.line = 1100;
    add_721421120(tmp_520099339, text_721421252([82,101,116,117,114,110,32,84,111,32,76,111,98,98,121]));
    F.line = 1101;
    addEventHandler_687867670(tmp_520099339, 0, HEX3Aanonymous_520099349, kxi__);
    F.line = 1082;
    add_721421120(tmp_520099334, tmp_520099339);
    result_520099333 = tmp_520099334;
  framePtr = F.prev;

  return result_520099333;

}

function createSetting_520099352(setting_520099353, setting_520099353_Idx, title_520099354, description_520099355, defaultOption_520099356) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
    
function HEX3Aanonymous_520099364(__520099365, __520099366) {
      var F = {procname: "createSetting.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1118;
        F.filename = "main.nim";
        setting_520099353[setting_520099353_Idx] = !(setting_520099353[setting_520099353_Idx]);
      framePtr = F.prev;

      
    }

  var result_520099357 = null;

  var F = {procname: "main.createSetting", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1106;
    F.filename = "main.nim";
    F.line = 1106;
    var tmp_520099358 = tree_721421184(44, []);
    F.line = 1106;
    tmp_520099358.class = "start-column";
    F.line = 1107;
    var tmp_520099359 = tree_721421184(44, []);
    F.line = 1107;
    tmp_520099359.class = " setting-item ";
    F.line = 1108;
    var tmp_520099360 = tree_721421184(24, []);
    F.line = 1109;
    add_721421120(tmp_520099360, text_721421252(title_520099354));
    F.line = 1109;
    add_721421120(tmp_520099359, tmp_520099360);
    F.line = 1110;
    var tmp_520099361 = tree_721421184(32, []);
    F.line = 1111;
    add_721421120(tmp_520099361, text_721421252(description_520099355));
    F.line = 1111;
    add_721421120(tmp_520099359, tmp_520099361);
    F.line = 1112;
    var tmp_520099362 = tree_721421184(195, []);
    F.line = 1113;
    if (defaultOption_520099356) {
    if (!(setting_520099353[setting_520099353_Idx])) {
    Temporary2 = [68,105,115,97,98,108,101];
    }
    else {
    Temporary2 = [69,110,97,98,108,101];
    }
    
    Temporary1 = Temporary2;
    }
    else {
      if (setting_520099353[setting_520099353_Idx]) {
      Temporary3 = [68,105,115,97,98,108,101];
      }
      else {
      Temporary3 = [69,110,97,98,108,101];
      }
      
    Temporary1 = Temporary3;
    }
    
    add_721421120(tmp_520099362, text_721421252(Temporary1));
    F.line = 1117;
    addEventHandler_687867670(tmp_520099362, 0, HEX3Aanonymous_520099364, kxi__);
    F.line = 1106;
    add_721421120(tmp_520099359, tmp_520099362);
    F.line = 1106;
    add_721421120(tmp_520099358, tmp_520099359);
    F.line = 1119;
    var tmp_520099363 = tree_721421184(33, []);
    F.line = 1119;
    add_721421120(tmp_520099358, tmp_520099363);
    result_520099357 = tmp_520099358;
  framePtr = F.prev;

  return result_520099357;

}

function createSettings_520099367() {
    
function HEX3Aanonymous_520099371(__520099372, __520099373) {
      var F = {procname: "createSettings.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1142;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 10;
      framePtr = F.prev;

      
    }

  var result_520099368 = null;

  var F = {procname: "main.createSettings", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1122;
    F.filename = "main.nim";
    F.line = 1122;
    var tmp_520099369 = tree_721421184(44, []);
    F.line = 1122;
    tmp_520099369.class = "start-column gap-10";
    F.line = 1126;
    add_721421120(tmp_520099369, createSetting_520099352(showTechnicalNames_520093851, 0, [84,101,99,104,110,105,99,97,108,32,78,97,109,101,115], makeNimstrLit("Shows the technical names for synergy powers and powers with multiple variations."), false));
    F.line = 1132;
    add_721421120(tmp_520099369, createSetting_520099352(disableRNGPowers_520093852, 0, [68,105,115,97,98,108,101,32,82,78,71,32,80,111,119,101,114,115], makeNimstrLit("Removes RNG based powers, like civilians, from the draft pool. Only works when you are the host."), true));
    F.line = 1137;
    add_721421120(tmp_520099369, createSetting_520099352(enableExperimental_520093854, 0, [73,110,99,108,117,100,101,32,69,120,112,101,114,105,109,101,110,116,97,108,32,80,111,119,101,114,115], makeNimstrLit("Adds the cutting edge of SuperChess. It is likely to break or be unbalanced."), false));
    F.line = 1139;
    var tmp_520099370 = tree_721421184(195, []);
    F.line = 1139;
    tmp_520099370.class = "width-100";
    F.line = 1140;
    add_721421120(tmp_520099370, text_721421252([82,101,116,117,114,110,32,116,111,32,79,116,104,101,114]));
    F.line = 1141;
    addEventHandler_687867670(tmp_520099370, 0, HEX3Aanonymous_520099371, kxi__);
    F.line = 1122;
    add_721421120(tmp_520099369, tmp_520099370);
    result_520099368 = tmp_520099369;
  framePtr = F.prev;

  return result_520099368;

}

function newSeq_520099848(len_520099850) {
  var result_520099851 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_520099851 = new Array(len_520099850); for (var i = 0 ; i < len_520099850 ; ++i) { result_520099851[i] = []; }  framePtr = F.prev;

  return result_520099851;

}

function mergeAlt_520099897(a_520099899, b_520099900, lo_520099901, m_520099902, hi_520099903, cmp_520099906, order_520099907) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((HEX2A_989855752(cmp_520099906(a_520099899[chckIndx(m_520099902, 0, (a_520099899).length - 1)], a_520099899[chckIndx(addInt(m_520099902, 1), 0, (a_520099899).length - 1)]), order_520099907) <= 0)) {
    F.line = 335;
    F.filename = "algorithm.nim";
    break BeforeRet;
    }
    
    F.line = 336;
    var j_520099908 = lo_520099901;
    if (!((j_520099908 <= m_520099902))) {
    F.line = 338;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim(338, 3) `j <= m` "));
    }
    
    F.line = 340;
    var bb_520099914 = 0;
    Label1: {
      F.line = 341;
        Label2: while (true) {
        if (!(j_520099908 <= m_520099902)) break Label2;
          F.line = 342;
          b_520099900[chckIndx(bb_520099914, 0, (b_520099900).length - 1)] = a_520099899[chckIndx(j_520099908, 0, (a_520099899).length - 1)];
          F.line = 343;
          bb_520099914 = addInt(bb_520099914, 1);
          F.line = 344;
          j_520099908 = addInt(j_520099908, 1);
        }
    };
    F.line = 348;
    var i_520099925 = 0;
    F.line = 349;
    var k_520099926 = lo_520099901;
    Label3: {
      F.line = 351;
        Label4: while (true) {
        if (!((k_520099926 < j_520099908) && (j_520099908 <= hi_520099903))) break Label4;
          if ((HEX2A_989855752(cmp_520099906(b_520099900[chckIndx(i_520099925, 0, (b_520099900).length - 1)], a_520099899[chckIndx(j_520099908, 0, (a_520099899).length - 1)]), order_520099907) <= 0)) {
          F.line = 353;
          a_520099899[chckIndx(k_520099926, 0, (a_520099899).length - 1)] = b_520099900[chckIndx(i_520099925, 0, (b_520099900).length - 1)];
          F.line = 354;
          i_520099925 = addInt(i_520099925, 1);
          }
          else {
            F.line = 356;
            a_520099899[chckIndx(k_520099926, 0, (a_520099899).length - 1)] = a_520099899[chckIndx(j_520099908, 0, (a_520099899).length - 1)];
            F.line = 357;
            j_520099908 = addInt(j_520099908, 1);
          }
          
          F.line = 358;
          k_520099926 = addInt(k_520099926, 1);
        }
    };
    Label5: {
      F.line = 361;
        Label6: while (true) {
        if (!(k_520099926 < j_520099908)) break Label6;
          F.line = 362;
          a_520099899[chckIndx(k_520099926, 0, (a_520099899).length - 1)] = b_520099900[chckIndx(i_520099925, 0, (b_520099900).length - 1)];
          F.line = 363;
          k_520099926 = addInt(k_520099926, 1);
          F.line = 364;
          i_520099925 = addInt(i_520099925, 1);
        }
    };
  };
  framePtr = F.prev;

  
}

function sort_520099880(a_520099882, cmp_520099885, order_520099886) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 411;
    F.filename = "algorithm.nim";
    var n_520099890 = (a_520099882).length;
    F.line = 412;
    var b_520099894 = newSeq_520099848(chckRange(divInt(n_520099890, 2), 0, 2147483647));
    F.line = 413;
    var s_520099895 = 1;
    Label1: {
      F.line = 414;
        Label2: while (true) {
        if (!(s_520099895 < n_520099890)) break Label2;
          F.line = 415;
          var m_520099896 = subInt(subInt(n_520099890, 1), s_520099895);
          Label3: {
            F.line = 416;
              Label4: while (true) {
              if (!(0 <= m_520099896)) break Label4;
                F.line = 417;
                mergeAlt_520099897(a_520099882, b_520099894, nimMax(addInt(subInt(m_520099896, s_520099895), 1), 0), m_520099896, addInt(m_520099896, s_520099895), cmp_520099885, order_520099886);
                F.line = 418;
                m_520099896 = subInt(m_520099896, mulInt(s_520099895, 2));
              }
          };
          F.line = 419;
          s_520099895 = mulInt(s_520099895, 2);
        }
    };
  framePtr = F.prev;

  
}

function sorted_520099837(a_520099839, cmp_520099842, order_520099843) {
  var result_520099844 = [];

  var F = {procname: "sorted.sorted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "algorithm.nim";
    result_520099844 = nimCopy(null, newSeq_520099848(chckRange((a_520099839).length, 0, 2147483647)), NTI520098563);
    Label1: {
      F.line = 449;
      var i_520099879 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100984 = 0;
      F.line = 449;
      F.filename = "algorithm.nim";
      colontmp__520100984 = (a_520099839).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100985 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520100985 <= colontmp__520100984)) break Label3;
            F.line = 449;
            F.filename = "algorithm.nim";
            i_520099879 = res_520100985;
            F.line = 450;
            result_520099844[chckIndx(i_520099879, 0, (result_520099844).length - 1)] = nimCopy(null, a_520099839[chckIndx(i_520099879, 0, (a_520099839).length - 1)], NTI1442841706);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100985 = addInt(res_520100985, 1);
          }
      };
    };
    F.line = 451;
    F.filename = "algorithm.nim";
    sort_520099880(result_520099844, cmp_520099842, order_520099843);
  framePtr = F.prev;

  return result_520099844;

}

function HEX3DHEX3D_1040188400(a_1040188401, b_1040188402) {
  var result_1040188403 = false;

  var F = {procname: "unicode.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 462;
    F.filename = "unicode.nim";
    result_1040188403 = (((a_1040188401) | 0) == ((b_1040188402) | 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040188403;

}

function runeAt_1040194588(s_1040194589, i_1040194590) {
  var result_1040194591 = 0;

  var F = {procname: "unicode.runeAt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] <= 127)) {
    F.line = 91;
    F.filename = "unicode.nim";
    result_1040194591 = chckRange(s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)], (-2147483648), 2147483647);
    }
    else {
    if (((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] >>> 5) == 6)) {
    if ((i_1040194590 <= subInt((s_1040194589).length, 2))) {
    F.line = 96;
    result_1040194591 = chckRange(((((((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_1040194589[chckIndx(addInt(i_1040194590, 1), 0, (s_1040194589).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
    }
    else {
      F.line = 100;
      result_1040194591 = 65533;
    }
    
    }
    else {
    if (((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] >>> 4) == 14)) {
    if ((i_1040194590 <= subInt((s_1040194589).length, 3))) {
    F.line = 106;
    result_1040194591 = chckRange(((((((((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 1), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040194589[chckIndx(addInt(i_1040194590, 2), 0, (s_1040194589).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
    }
    else {
      F.line = 111;
      result_1040194591 = 65533;
    }
    
    }
    else {
    if (((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] >>> 3) == 30)) {
    if ((i_1040194590 <= subInt((s_1040194589).length, 4))) {
    F.line = 118;
    result_1040194591 = chckRange(((((((((((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 1), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 2), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040194589[chckIndx(addInt(i_1040194590, 3), 0, (s_1040194589).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
    }
    else {
      F.line = 124;
      result_1040194591 = 65533;
    }
    
    }
    else {
    if (((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] >>> 2) == 62)) {
    if ((i_1040194590 <= subInt((s_1040194589).length, 5))) {
    F.line = 132;
    result_1040194591 = chckRange(((((((((((((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 1), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 2), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 3), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040194589[chckIndx(addInt(i_1040194590, 4), 0, (s_1040194589).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
    }
    else {
      F.line = 139;
      result_1040194591 = 65533;
    }
    
    }
    else {
    if (((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] >>> 1) == 126)) {
    if ((i_1040194590 <= subInt((s_1040194589).length, 6))) {
    F.line = 148;
    result_1040194591 = chckRange(((((((((((((((s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 1), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 2), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 3), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040194589[chckIndx(addInt(i_1040194590, 4), 0, (s_1040194589).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040194589[chckIndx(addInt(i_1040194590, 5), 0, (s_1040194589).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
    }
    else {
      F.line = 156;
      result_1040194591 = 65533;
    }
    
    }
    else {
      F.line = 159;
      result_1040194591 = chckRange(s_1040194589[chckIndx(i_1040194590, 0, (s_1040194589).length - 1)], (-2147483648), 2147483647);
    }
    }}}}}
  framePtr = F.prev;

  return result_1040194591;

}

function size_1040193202(r_1040193203) {
  var result_1040193204 = 0;

  var F = {procname: "unicode.size", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 931;
    F.filename = "unicode.nim";
    var v_1040193205 = r_1040193203;
    if ((v_1040193205 <= 127)) {
    F.line = 932;
    result_1040193204 = 1;
    }
    else {
    if ((v_1040193205 <= 2047)) {
    F.line = 933;
    result_1040193204 = 2;
    }
    else {
    if ((v_1040193205 <= 65535)) {
    F.line = 934;
    result_1040193204 = 3;
    }
    else {
    if ((v_1040193205 <= 2097151)) {
    F.line = 935;
    result_1040193204 = 4;
    }
    else {
    if ((v_1040193205 <= 67108863)) {
    F.line = 936;
    result_1040193204 = 5;
    }
    else {
    if ((v_1040193205 <= 2147483647)) {
    F.line = 937;
    result_1040193204 = 6;
    }
    else {
      F.line = 938;
      result_1040193204 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_1040193204;

}

function editDistance_1577058306(a_1577058307, b_1577058308) {
            var Temporary23;
                  var Temporary26;
            var Temporary27;

  var result_1577058309 = 0;

  var F = {procname: "editdistance.editDistance", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/editdistance.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((runeLen_1040194581(b_1577058308) < runeLen_1040194581(a_1577058307))) {
    F.line = 23;
    F.filename = "editdistance.nim";
    result_1577058309 = editDistance_1577058306(b_1577058308, a_1577058307);
    break BeforeRet;
    }
    
    F.line = 26;
    var iStart_1577058310 = 0;
    F.line = 27;
    var iNextA_1577058311 = 0;
    F.line = 28;
    var iNextB_1577058312 = 0;
    F.line = 29;
    var runeA_1577058313 = 0;
    F.line = 29;
    var runeB_1577058314 = 0;
    F.line = 30;
    var lenRunesA_1577058315 = 0;
    F.line = 31;
    var lenRunesB_1577058316 = 0;
    Label1: {
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(iStart_1577058310 < (a_1577058307).length)) break Label3;
            F.line = 35;
            iNextA_1577058311 = iStart_1577058310;
            if ((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeA_1577058313 = chckRange(a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 5) == 6)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 2))) {
            F.line = 96;
            runeA_1577058313 = chckRange(((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iNextA_1577058311 = addInt(iNextA_1577058311, 2);
            }
            else {
              F.line = 100;
              runeA_1577058313 = 65533;
              F.line = 101;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 4) == 14)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 3))) {
            F.line = 106;
            runeA_1577058313 = chckRange(((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iNextA_1577058311 = addInt(iNextA_1577058311, 3);
            }
            else {
              F.line = 111;
              runeA_1577058313 = 65533;
              F.line = 112;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 3) == 30)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 4))) {
            F.line = 118;
            runeA_1577058313 = chckRange(((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iNextA_1577058311 = addInt(iNextA_1577058311, 4);
            }
            else {
              F.line = 124;
              runeA_1577058313 = 65533;
              F.line = 125;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 2) == 62)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 5))) {
            F.line = 132;
            runeA_1577058313 = chckRange(((((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iNextA_1577058311 = addInt(iNextA_1577058311, 5);
            }
            else {
              F.line = 139;
              runeA_1577058313 = 65533;
              F.line = 140;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 1) == 126)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 6))) {
            F.line = 148;
            runeA_1577058313 = chckRange(((((((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 5), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iNextA_1577058311 = addInt(iNextA_1577058311, 6);
            }
            else {
              F.line = 156;
              runeA_1577058313 = 65533;
              F.line = 157;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
              F.line = 159;
              runeA_1577058313 = chckRange(a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            }}}}}
            F.line = 37;
            F.filename = "editdistance.nim";
            iNextB_1577058312 = iStart_1577058310;
            if ((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeB_1577058314 = chckRange(b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 5) == 6)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 2))) {
            F.line = 96;
            runeB_1577058314 = chckRange(((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iNextB_1577058312 = addInt(iNextB_1577058312, 2);
            }
            else {
              F.line = 100;
              runeB_1577058314 = 65533;
              F.line = 101;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 4) == 14)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 3))) {
            F.line = 106;
            runeB_1577058314 = chckRange(((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iNextB_1577058312 = addInt(iNextB_1577058312, 3);
            }
            else {
              F.line = 111;
              runeB_1577058314 = 65533;
              F.line = 112;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 3) == 30)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 4))) {
            F.line = 118;
            runeB_1577058314 = chckRange(((((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iNextB_1577058312 = addInt(iNextB_1577058312, 4);
            }
            else {
              F.line = 124;
              runeB_1577058314 = 65533;
              F.line = 125;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 2) == 62)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 5))) {
            F.line = 132;
            runeB_1577058314 = chckRange(((((((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iNextB_1577058312 = addInt(iNextB_1577058312, 5);
            }
            else {
              F.line = 139;
              runeB_1577058314 = 65533;
              F.line = 140;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 1) == 126)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 6))) {
            F.line = 148;
            runeB_1577058314 = chckRange(((((((((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 5), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iNextB_1577058312 = addInt(iNextB_1577058312, 6);
            }
            else {
              F.line = 156;
              runeB_1577058314 = 65533;
              F.line = 157;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
              F.line = 159;
              runeB_1577058314 = chckRange(b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            }}}}}
            if (!(HEX3DHEX3D_1040188400(runeA_1577058313, runeB_1577058314))) {
            F.line = 40;
            F.filename = "editdistance.nim";
            lenRunesA_1577058315 = addInt(lenRunesA_1577058315, 1);
            F.line = 41;
            lenRunesB_1577058316 = addInt(lenRunesB_1577058316, 1);
            F.line = 42;
            break Label2;
            }
            
            F.line = 43;
            iStart_1577058310 = iNextA_1577058311;
          }
      };
    };
    F.line = 48;
    var iEndA_1577058770 = iNextA_1577058311;
    F.line = 49;
    var iEndB_1577058771 = iNextB_1577058312;
    F.line = 50;
    var iCurrentA_1577058772 = iNextA_1577058311;
    F.line = 51;
    var iCurrentB_1577058773 = iNextB_1577058312;
    Label4: {
      F.line = 54;
      var addRunesA_1577058775 = 0;
      F.line = 55;
      var addRunesB_1577058776 = 0;
      Label5: {
        F.line = 56;
          Label6: while (true) {
          if (!((iCurrentA_1577058772 < (a_1577058307).length) && (iCurrentB_1577058773 < (b_1577058308).length))) break Label6;
            F.line = 57;
            iNextA_1577058311 = iCurrentA_1577058772;
            if ((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeA_1577058313 = chckRange(a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 5) == 6)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 2))) {
            F.line = 96;
            runeA_1577058313 = chckRange(((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iNextA_1577058311 = addInt(iNextA_1577058311, 2);
            }
            else {
              F.line = 100;
              runeA_1577058313 = 65533;
              F.line = 101;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 4) == 14)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 3))) {
            F.line = 106;
            runeA_1577058313 = chckRange(((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iNextA_1577058311 = addInt(iNextA_1577058311, 3);
            }
            else {
              F.line = 111;
              runeA_1577058313 = 65533;
              F.line = 112;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 3) == 30)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 4))) {
            F.line = 118;
            runeA_1577058313 = chckRange(((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iNextA_1577058311 = addInt(iNextA_1577058311, 4);
            }
            else {
              F.line = 124;
              runeA_1577058313 = 65533;
              F.line = 125;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 2) == 62)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 5))) {
            F.line = 132;
            runeA_1577058313 = chckRange(((((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iNextA_1577058311 = addInt(iNextA_1577058311, 5);
            }
            else {
              F.line = 139;
              runeA_1577058313 = 65533;
              F.line = 140;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 1) == 126)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 6))) {
            F.line = 148;
            runeA_1577058313 = chckRange(((((((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 5), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iNextA_1577058311 = addInt(iNextA_1577058311, 6);
            }
            else {
              F.line = 156;
              runeA_1577058313 = 65533;
              F.line = 157;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
              F.line = 159;
              runeA_1577058313 = chckRange(a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            }}}}}
            F.line = 59;
            F.filename = "editdistance.nim";
            iNextB_1577058312 = iCurrentB_1577058773;
            if ((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeB_1577058314 = chckRange(b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 5) == 6)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 2))) {
            F.line = 96;
            runeB_1577058314 = chckRange(((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iNextB_1577058312 = addInt(iNextB_1577058312, 2);
            }
            else {
              F.line = 100;
              runeB_1577058314 = 65533;
              F.line = 101;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 4) == 14)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 3))) {
            F.line = 106;
            runeB_1577058314 = chckRange(((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iNextB_1577058312 = addInt(iNextB_1577058312, 3);
            }
            else {
              F.line = 111;
              runeB_1577058314 = 65533;
              F.line = 112;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 3) == 30)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 4))) {
            F.line = 118;
            runeB_1577058314 = chckRange(((((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iNextB_1577058312 = addInt(iNextB_1577058312, 4);
            }
            else {
              F.line = 124;
              runeB_1577058314 = 65533;
              F.line = 125;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 2) == 62)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 5))) {
            F.line = 132;
            runeB_1577058314 = chckRange(((((((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iNextB_1577058312 = addInt(iNextB_1577058312, 5);
            }
            else {
              F.line = 139;
              runeB_1577058314 = 65533;
              F.line = 140;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] >>> 1) == 126)) {
            if ((iNextB_1577058312 <= subInt((b_1577058308).length, 6))) {
            F.line = 148;
            runeB_1577058314 = chckRange(((((((((((((((b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iNextB_1577058312, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iNextB_1577058312, 5), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iNextB_1577058312 = addInt(iNextB_1577058312, 6);
            }
            else {
              F.line = 156;
              runeB_1577058314 = 65533;
              F.line = 157;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            
            }
            else {
              F.line = 159;
              runeB_1577058314 = chckRange(b_1577058308[chckIndx(iNextB_1577058312, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iNextB_1577058312 = addInt(iNextB_1577058312, 1);
            }
            }}}}}
            F.line = 61;
            F.filename = "editdistance.nim";
            addRunesA_1577058775 = addInt(addRunesA_1577058775, 1);
            F.line = 62;
            addRunesB_1577058776 = addInt(addRunesB_1577058776, 1);
            if (!(HEX3DHEX3D_1040188400(runeA_1577058313, runeB_1577058314))) {
            F.line = 64;
            iEndA_1577058770 = iNextA_1577058311;
            F.line = 65;
            iEndB_1577058771 = iNextB_1577058312;
            F.line = 66;
            lenRunesA_1577058315 = addInt(lenRunesA_1577058315, addRunesA_1577058775);
            F.line = 67;
            lenRunesB_1577058316 = addInt(lenRunesB_1577058316, addRunesB_1577058776);
            F.line = 68;
            addRunesA_1577058775 = 0;
            F.line = 69;
            addRunesB_1577058776 = 0;
            }
            
            F.line = 70;
            iCurrentA_1577058772 = iNextA_1577058311;
            F.line = 71;
            iCurrentB_1577058773 = iNextB_1577058312;
          }
      };
      if (((a_1577058307).length <= iCurrentA_1577058772)) {
      if ((iCurrentB_1577058773 < (b_1577058308).length)) {
      F.line = 74;
      iEndA_1577058770 = iCurrentA_1577058772;
      F.line = 75;
      iEndB_1577058771 = iCurrentB_1577058773;
      F.line = 76;
      lenRunesA_1577058315 = addInt(lenRunesA_1577058315, addRunesA_1577058775);
      F.line = 77;
      lenRunesB_1577058316 = addInt(lenRunesB_1577058316, addRunesB_1577058776);
      Label7: {
        F.line = 78;
          Label8: while (true) {
          if (!true) break Label8;
            if ((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeB_1577058314 = chckRange(b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            else {
            if (((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] >>> 5) == 6)) {
            if ((iEndB_1577058771 <= subInt((b_1577058308).length, 2))) {
            F.line = 96;
            runeB_1577058314 = chckRange(((((((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((b_1577058308[chckIndx(addInt(iEndB_1577058771, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iEndB_1577058771 = addInt(iEndB_1577058771, 2);
            }
            else {
              F.line = 100;
              runeB_1577058314 = 65533;
              F.line = 101;
              iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] >>> 4) == 14)) {
            if ((iEndB_1577058771 <= subInt((b_1577058308).length, 3))) {
            F.line = 106;
            runeB_1577058314 = chckRange(((((((((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iEndB_1577058771, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iEndB_1577058771 = addInt(iEndB_1577058771, 3);
            }
            else {
              F.line = 111;
              runeB_1577058314 = 65533;
              F.line = 112;
              iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] >>> 3) == 30)) {
            if ((iEndB_1577058771 <= subInt((b_1577058308).length, 4))) {
            F.line = 118;
            runeB_1577058314 = chckRange(((((((((((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iEndB_1577058771, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iEndB_1577058771 = addInt(iEndB_1577058771, 4);
            }
            else {
              F.line = 124;
              runeB_1577058314 = 65533;
              F.line = 125;
              iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] >>> 2) == 62)) {
            if ((iEndB_1577058771 <= subInt((b_1577058308).length, 5))) {
            F.line = 132;
            runeB_1577058314 = chckRange(((((((((((((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iEndB_1577058771, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iEndB_1577058771 = addInt(iEndB_1577058771, 5);
            }
            else {
              F.line = 139;
              runeB_1577058314 = 65533;
              F.line = 140;
              iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] >>> 1) == 126)) {
            if ((iEndB_1577058771 <= subInt((b_1577058308).length, 6))) {
            F.line = 148;
            runeB_1577058314 = chckRange(((((((((((((((b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iEndB_1577058771, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iEndB_1577058771, 5), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iEndB_1577058771 = addInt(iEndB_1577058771, 6);
            }
            else {
              F.line = 156;
              runeB_1577058314 = 65533;
              F.line = 157;
              iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            
            }
            else {
              F.line = 159;
              runeB_1577058314 = chckRange(b_1577058308[chckIndx(iEndB_1577058771, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iEndB_1577058771 = addInt(iEndB_1577058771, 1);
            }
            }}}}}
            F.line = 80;
            F.filename = "editdistance.nim";
            lenRunesB_1577058316 = addInt(lenRunesB_1577058316, 1);
            if (((b_1577058308).length <= iEndB_1577058771)) {
            F.line = 81;
            break Label7;
            }
            
          }
      };
      }
      
      }
      else {
      if (((b_1577058308).length <= iCurrentB_1577058773)) {
      F.line = 83;
      iEndA_1577058770 = iCurrentA_1577058772;
      F.line = 84;
      iEndB_1577058771 = iCurrentB_1577058773;
      F.line = 85;
      lenRunesA_1577058315 = addInt(lenRunesA_1577058315, addRunesA_1577058775);
      F.line = 86;
      lenRunesB_1577058316 = addInt(lenRunesB_1577058316, addRunesB_1577058776);
      Label9: {
        F.line = 87;
          Label10: while (true) {
          if (!true) break Label10;
            if ((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeA_1577058313 = chckRange(a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            else {
            if (((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] >>> 5) == 6)) {
            if ((iEndA_1577058770 <= subInt((a_1577058307).length, 2))) {
            F.line = 96;
            runeA_1577058313 = chckRange(((((((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((a_1577058307[chckIndx(addInt(iEndA_1577058770, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iEndA_1577058770 = addInt(iEndA_1577058770, 2);
            }
            else {
              F.line = 100;
              runeA_1577058313 = 65533;
              F.line = 101;
              iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] >>> 4) == 14)) {
            if ((iEndA_1577058770 <= subInt((a_1577058307).length, 3))) {
            F.line = 106;
            runeA_1577058313 = chckRange(((((((((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iEndA_1577058770, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iEndA_1577058770 = addInt(iEndA_1577058770, 3);
            }
            else {
              F.line = 111;
              runeA_1577058313 = 65533;
              F.line = 112;
              iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] >>> 3) == 30)) {
            if ((iEndA_1577058770 <= subInt((a_1577058307).length, 4))) {
            F.line = 118;
            runeA_1577058313 = chckRange(((((((((((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iEndA_1577058770, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iEndA_1577058770 = addInt(iEndA_1577058770, 4);
            }
            else {
              F.line = 124;
              runeA_1577058313 = 65533;
              F.line = 125;
              iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] >>> 2) == 62)) {
            if ((iEndA_1577058770 <= subInt((a_1577058307).length, 5))) {
            F.line = 132;
            runeA_1577058313 = chckRange(((((((((((((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iEndA_1577058770, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iEndA_1577058770 = addInt(iEndA_1577058770, 5);
            }
            else {
              F.line = 139;
              runeA_1577058313 = 65533;
              F.line = 140;
              iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] >>> 1) == 126)) {
            if ((iEndA_1577058770 <= subInt((a_1577058307).length, 6))) {
            F.line = 148;
            runeA_1577058313 = chckRange(((((((((((((((a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iEndA_1577058770, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iEndA_1577058770, 5), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iEndA_1577058770 = addInt(iEndA_1577058770, 6);
            }
            else {
              F.line = 156;
              runeA_1577058313 = 65533;
              F.line = 157;
              iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            
            }
            else {
              F.line = 159;
              runeA_1577058313 = chckRange(a_1577058307[chckIndx(iEndA_1577058770, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iEndA_1577058770 = addInt(iEndA_1577058770, 1);
            }
            }}}}}
            F.line = 89;
            F.filename = "editdistance.nim";
            lenRunesA_1577058315 = addInt(lenRunesA_1577058315, 1);
            if (((a_1577058307).length <= iEndA_1577058770)) {
            F.line = 90;
            break Label9;
            }
            
          }
      };
      }
      }
    };
    Label11: {
      if ((lenRunesA_1577058315 == 0)) {
      F.line = 93;
      result_1577058309 = lenRunesB_1577058316;
      break BeforeRet;
      }
      
      if ((lenRunesB_1577058316 == 0)) {
      F.line = 94;
      result_1577058309 = lenRunesA_1577058315;
      break BeforeRet;
      }
      
      if ((lenRunesA_1577058315 == 1)) {
      if ((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] <= 127)) {
      F.line = 91;
      F.filename = "unicode.nim";
      runeA_1577058313 = chckRange(a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
      }
      else {
      if (((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] >>> 5) == 6)) {
      if ((iStart_1577058310 <= subInt((a_1577058307).length, 2))) {
      F.line = 96;
      runeA_1577058313 = chckRange(((((((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((a_1577058307[chckIndx(addInt(iStart_1577058310, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
      }
      else {
        F.line = 100;
        runeA_1577058313 = 65533;
      }
      
      }
      else {
      if (((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] >>> 4) == 14)) {
      if ((iStart_1577058310 <= subInt((a_1577058307).length, 3))) {
      F.line = 106;
      runeA_1577058313 = chckRange(((((((((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iStart_1577058310, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
      }
      else {
        F.line = 111;
        runeA_1577058313 = 65533;
      }
      
      }
      else {
      if (((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] >>> 3) == 30)) {
      if ((iStart_1577058310 <= subInt((a_1577058307).length, 4))) {
      F.line = 118;
      runeA_1577058313 = chckRange(((((((((((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iStart_1577058310, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
      }
      else {
        F.line = 124;
        runeA_1577058313 = 65533;
      }
      
      }
      else {
      if (((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] >>> 2) == 62)) {
      if ((iStart_1577058310 <= subInt((a_1577058307).length, 5))) {
      F.line = 132;
      runeA_1577058313 = chckRange(((((((((((((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iStart_1577058310, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
      }
      else {
        F.line = 139;
        runeA_1577058313 = 65533;
      }
      
      }
      else {
      if (((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] >>> 1) == 126)) {
      if ((iStart_1577058310 <= subInt((a_1577058307).length, 6))) {
      F.line = 148;
      runeA_1577058313 = chckRange(((((((((((((((a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iStart_1577058310, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iStart_1577058310, 5), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
      }
      else {
        F.line = 156;
        runeA_1577058313 = 65533;
      }
      
      }
      else {
        F.line = 159;
        runeA_1577058313 = chckRange(a_1577058307[chckIndx(iStart_1577058310, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
      }
      }}}}}
      F.line = 98;
      F.filename = "editdistance.nim";
      var iCurrentB_1577059873 = iStart_1577058310;
      Label12: {
        F.line = 99;
          Label13: while (true) {
          if (!(iCurrentB_1577059873 < iEndB_1577058771)) break Label13;
            if ((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeB_1577058314 = chckRange(b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            else {
            if (((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] >>> 5) == 6)) {
            if ((iCurrentB_1577059873 <= subInt((b_1577058308).length, 2))) {
            F.line = 96;
            runeB_1577058314 = chckRange(((((((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 2);
            }
            else {
              F.line = 100;
              runeB_1577058314 = 65533;
              F.line = 101;
              iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] >>> 4) == 14)) {
            if ((iCurrentB_1577059873 <= subInt((b_1577058308).length, 3))) {
            F.line = 106;
            runeB_1577058314 = chckRange(((((((((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 3);
            }
            else {
              F.line = 111;
              runeB_1577058314 = 65533;
              F.line = 112;
              iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] >>> 3) == 30)) {
            if ((iCurrentB_1577059873 <= subInt((b_1577058308).length, 4))) {
            F.line = 118;
            runeB_1577058314 = chckRange(((((((((((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 4);
            }
            else {
              F.line = 124;
              runeB_1577058314 = 65533;
              F.line = 125;
              iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] >>> 2) == 62)) {
            if ((iCurrentB_1577059873 <= subInt((b_1577058308).length, 5))) {
            F.line = 132;
            runeB_1577058314 = chckRange(((((((((((((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 5);
            }
            else {
              F.line = 139;
              runeB_1577058314 = 65533;
              F.line = 140;
              iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] >>> 1) == 126)) {
            if ((iCurrentB_1577059873 <= subInt((b_1577058308).length, 6))) {
            F.line = 148;
            runeB_1577058314 = chckRange(((((((((((((((b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(iCurrentB_1577059873, 5), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 6);
            }
            else {
              F.line = 156;
              runeB_1577058314 = 65533;
              F.line = 157;
              iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            
            }
            else {
              F.line = 159;
              runeB_1577058314 = chckRange(b_1577058308[chckIndx(iCurrentB_1577059873, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iCurrentB_1577059873 = addInt(iCurrentB_1577059873, 1);
            }
            }}}}}
            if (HEX3DHEX3D_1040188400(runeA_1577058313, runeB_1577058314)) {
            F.line = 101;
            F.filename = "editdistance.nim";
            result_1577058309 = subInt(lenRunesB_1577058316, 1);
            break BeforeRet;
            }
            
          }
      };
      F.line = 102;
      result_1577058309 = lenRunesB_1577058316;
      break BeforeRet;
      }
      
    };
    F.line = 105;
    var len1_1577060095 = addInt(lenRunesA_1577058315, 1);
    F.line = 106;
    var len2_1577060096 = addInt(lenRunesB_1577058316, 1);
    F.line = 107;
    var row_1577060097 = [];
    F.line = 108;
    var half_1577060098 = divInt(lenRunesA_1577058315, 2);
    F.line = 109;
    row_1577060097 = new Array(chckRange(len2_1577060096, 0, 2147483647)); for (var i = 0 ; i < chckRange(len2_1577060096, 0, 2147483647) ; ++i) { row_1577060097[i] = 0; }    F.line = 110;
    var e_1577060103 = subInt(addInt(iStart_1577058310, len2_1577060096), 1);
    Label14: {
      F.line = 112;
      var i_1577060108 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520100998 = 0;
      F.line = 112;
      F.filename = "editdistance.nim";
      colontmp__520100998 = subInt(subInt(len2_1577060096, half_1577060098), 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520100999 = 1;
      Label15: {
        F.line = 97;
          Label16: while (true) {
          if (!(res_520100999 <= colontmp__520100998)) break Label16;
            F.line = 112;
            F.filename = "editdistance.nim";
            i_1577060108 = res_520100999;
            F.line = 112;
            row_1577060097[chckIndx(i_1577060108, 0, (row_1577060097).length - 1)] = i_1577060108;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520100999 = addInt(res_520100999, 1);
          }
      };
    };
    F.line = 113;
    F.filename = "editdistance.nim";
    row_1577060097[chckIndx(0, 0, (row_1577060097).length - 1)] = subInt(subInt(len1_1577060095, half_1577060098), 1);
    F.line = 114;
    iCurrentA_1577058772 = iStart_1577058310;
    F.line = 116;
    var char2pI_1577060109 = (-1);
    F.line = 117;
    var char2pPrev_1577060110 = 0;
    Label17: {
      F.line = 118;
      var i_1577060115 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520101006 = 0;
      F.line = 118;
      F.filename = "editdistance.nim";
      colontmp__520101006 = subInt(len1_1577060095, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520101007 = 1;
      Label18: {
        F.line = 97;
          Label19: while (true) {
          if (!(res_520101007 <= colontmp__520101006)) break Label19;
            F.line = 118;
            F.filename = "editdistance.nim";
            i_1577060115 = res_520101007;
            F.line = 119;
            iNextA_1577058311 = iCurrentA_1577058772;
            if ((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeA_1577058313 = chckRange(a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 5) == 6)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 2))) {
            F.line = 96;
            runeA_1577058313 = chckRange(((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            iNextA_1577058311 = addInt(iNextA_1577058311, 2);
            }
            else {
              F.line = 100;
              runeA_1577058313 = 65533;
              F.line = 101;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 4) == 14)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 3))) {
            F.line = 106;
            runeA_1577058313 = chckRange(((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            iNextA_1577058311 = addInt(iNextA_1577058311, 3);
            }
            else {
              F.line = 111;
              runeA_1577058313 = 65533;
              F.line = 112;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 3) == 30)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 4))) {
            F.line = 118;
            runeA_1577058313 = chckRange(((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            iNextA_1577058311 = addInt(iNextA_1577058311, 4);
            }
            else {
              F.line = 124;
              runeA_1577058313 = 65533;
              F.line = 125;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 2) == 62)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 5))) {
            F.line = 132;
            runeA_1577058313 = chckRange(((((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            iNextA_1577058311 = addInt(iNextA_1577058311, 5);
            }
            else {
              F.line = 139;
              runeA_1577058313 = 65533;
              F.line = 140;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
            if (((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] >>> 1) == 126)) {
            if ((iNextA_1577058311 <= subInt((a_1577058307).length, 6))) {
            F.line = 148;
            runeA_1577058313 = chckRange(((((((((((((((a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 1), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 2), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 3), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((a_1577058307[chckIndx(addInt(iNextA_1577058311, 4), 0, (a_1577058307).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((a_1577058307[chckIndx(addInt(iNextA_1577058311, 5), 0, (a_1577058307).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            iNextA_1577058311 = addInt(iNextA_1577058311, 6);
            }
            else {
              F.line = 156;
              runeA_1577058313 = 65533;
              F.line = 157;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            
            }
            else {
              F.line = 159;
              runeA_1577058313 = chckRange(a_1577058307[chckIndx(iNextA_1577058311, 0, (a_1577058307).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              iNextA_1577058311 = addInt(iNextA_1577058311, 1);
            }
            }}}}}
            F.line = 122;
            F.filename = "editdistance.nim";
            var char2p_1577060337 = 0;
            F.line = 123;
            var diff_1577060338 = 0;
            F.line = 123;
            var x_1577060339 = 0;
            F.line = 124;
            var p_1577060340 = 0;
            if ((subInt(len1_1577060095, half_1577060098) <= i_1577060115)) {
            F.line = 127;
            var offset_1577060341 = subInt(addInt(i_1577060115, half_1577060098), len1_1577060095);
            if ((char2pI_1577060109 == i_1577060115)) {
            if ((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            runeB_1577058314 = chckRange(b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            else {
            if (((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] >>> 5) == 6)) {
            if ((char2pPrev_1577060110 <= subInt((b_1577058308).length, 2))) {
            F.line = 96;
            runeB_1577058314 = chckRange(((((((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 2);
            }
            else {
              F.line = 100;
              runeB_1577058314 = 65533;
              F.line = 101;
              char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] >>> 4) == 14)) {
            if ((char2pPrev_1577060110 <= subInt((b_1577058308).length, 3))) {
            F.line = 106;
            runeB_1577058314 = chckRange(((((((((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 3);
            }
            else {
              F.line = 111;
              runeB_1577058314 = 65533;
              F.line = 112;
              char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] >>> 3) == 30)) {
            if ((char2pPrev_1577060110 <= subInt((b_1577058308).length, 4))) {
            F.line = 118;
            runeB_1577058314 = chckRange(((((((((((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 4);
            }
            else {
              F.line = 124;
              runeB_1577058314 = 65533;
              F.line = 125;
              char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] >>> 2) == 62)) {
            if ((char2pPrev_1577060110 <= subInt((b_1577058308).length, 5))) {
            F.line = 132;
            runeB_1577058314 = chckRange(((((((((((((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 5);
            }
            else {
              F.line = 139;
              runeB_1577058314 = 65533;
              F.line = 140;
              char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            
            }
            else {
            if (((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] >>> 1) == 126)) {
            if ((char2pPrev_1577060110 <= subInt((b_1577058308).length, 6))) {
            F.line = 148;
            runeB_1577058314 = chckRange(((((((((((((((b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 1), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 2), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 3), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 4), 0, (b_1577058308).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((b_1577058308[chckIndx(addInt(char2pPrev_1577060110, 5), 0, (b_1577058308).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 6);
            }
            else {
              F.line = 156;
              runeB_1577058314 = 65533;
              F.line = 157;
              char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            
            }
            else {
              F.line = 159;
              runeB_1577058314 = chckRange(b_1577058308[chckIndx(char2pPrev_1577060110, 0, (b_1577058308).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              char2pPrev_1577060110 = addInt(char2pPrev_1577060110, 1);
            }
            }}}}}
            F.line = 130;
            F.filename = "editdistance.nim";
            char2p_1577060337 = char2pPrev_1577060110;
            F.line = 131;
            char2pI_1577060109 = addInt(i_1577060115, 1);
            }
            else {
              F.line = 133;
              char2p_1577060337 = iStart_1577058310;
              Label20: {
                F.line = 134;
                var j_1577060567 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520101003 = 0;
                Label21: {
                  F.line = 129;
                    Label22: while (true) {
                    if (!(i_520101003 < offset_1577060341)) break Label22;
                      F.line = 134;
                      F.filename = "editdistance.nim";
                      j_1577060567 = i_520101003;
                      F.line = 135;
                      runeB_1577058314 = runeAt_1040194588(b_1577058308, chckRange(char2p_1577060337, 0, 2147483647));
                      F.line = 136;
                      char2p_1577060337 = addInt(char2p_1577060337, size_1040193202(runeB_1577058314));
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520101003 = addInt(i_520101003, 1);
                    }
                };
              };
              F.line = 137;
              F.filename = "editdistance.nim";
              char2pI_1577060109 = addInt(i_1577060115, 1);
              F.line = 138;
              char2pPrev_1577060110 = char2p_1577060337;
            }
            
            F.line = 139;
            p_1577060340 = offset_1577060341;
            F.line = 140;
            runeB_1577058314 = runeAt_1040194588(b_1577058308, chckRange(char2p_1577060337, 0, 2147483647));
            F.line = 141;
            if (!(HEX3DHEX3D_1040188400(runeA_1577058313, runeB_1577058314))) {
            Temporary23 = 1;
            }
            else {
            Temporary23 = 0;
            }
            
            var c3_1577060573 = addInt(row_1577060097[chckIndx(p_1577060340, 0, (row_1577060097).length - 1)], Temporary23);
            F.line = 142;
            char2p_1577060337 = addInt(char2p_1577060337, size_1040193202(runeB_1577058314));
            F.line = 143;
            p_1577060340 = addInt(p_1577060340, 1);
            F.line = 144;
            x_1577060339 = addInt(row_1577060097[chckIndx(p_1577060340, 0, (row_1577060097).length - 1)], 1);
            F.line = 145;
            diff_1577060338 = x_1577060339;
            if ((c3_1577060573 < x_1577060339)) {
            F.line = 146;
            x_1577060339 = c3_1577060573;
            }
            
            F.line = 147;
            row_1577060097[chckIndx(p_1577060340, 0, (row_1577060097).length - 1)] = x_1577060339;
            F.line = 148;
            p_1577060340 = addInt(p_1577060340, 1);
            }
            else {
              F.line = 150;
              p_1577060340 = 1;
              F.line = 151;
              char2p_1577060337 = iStart_1577058310;
              F.line = 152;
              diff_1577060338 = i_1577060115;
              F.line = 153;
              x_1577060339 = i_1577060115;
            }
            
            if ((i_1577060115 <= addInt(half_1577060098, 1))) {
            F.line = 156;
            e_1577060103 = subInt(subInt(addInt(len2_1577060096, i_1577060115), half_1577060098), 2);
            }
            
            Label24: {
              F.line = 158;
                Label25: while (true) {
                if (!(p_1577060340 <= e_1577060103)) break Label25;
                  F.line = 159;
                  diff_1577060338 = subInt(diff_1577060338, 1);
                  F.line = 160;
                  runeB_1577058314 = runeAt_1040194588(b_1577058308, chckRange(char2p_1577060337, 0, 2147483647));
                  F.line = 161;
                  if (!(HEX3DHEX3D_1040188400(runeA_1577058313, runeB_1577058314))) {
                  Temporary26 = 1;
                  }
                  else {
                  Temporary26 = 0;
                  }
                  
                  var c3_1577060594 = addInt(diff_1577060338, Temporary26);
                  F.line = 162;
                  char2p_1577060337 = addInt(char2p_1577060337, size_1040193202(runeB_1577058314));
                  F.line = 163;
                  x_1577060339 = addInt(x_1577060339, 1);
                  if ((c3_1577060594 < x_1577060339)) {
                  F.line = 164;
                  x_1577060339 = c3_1577060594;
                  }
                  
                  F.line = 165;
                  diff_1577060338 = addInt(row_1577060097[chckIndx(p_1577060340, 0, (row_1577060097).length - 1)], 1);
                  if ((diff_1577060338 < x_1577060339)) {
                  F.line = 166;
                  x_1577060339 = diff_1577060338;
                  }
                  
                  F.line = 167;
                  row_1577060097[chckIndx(p_1577060340, 0, (row_1577060097).length - 1)] = x_1577060339;
                  F.line = 168;
                  p_1577060340 = addInt(p_1577060340, 1);
                }
            };
            if ((i_1577060115 <= half_1577060098)) {
            F.line = 171;
            diff_1577060338 = subInt(diff_1577060338, 1);
            F.line = 172;
            runeB_1577058314 = runeAt_1040194588(b_1577058308, chckRange(char2p_1577060337, 0, 2147483647));
            F.line = 173;
            if (!(HEX3DHEX3D_1040188400(runeA_1577058313, runeB_1577058314))) {
            Temporary27 = 1;
            }
            else {
            Temporary27 = 0;
            }
            
            var c3_1577060615 = addInt(diff_1577060338, Temporary27);
            F.line = 174;
            x_1577060339 = addInt(x_1577060339, 1);
            if ((c3_1577060615 < x_1577060339)) {
            F.line = 175;
            x_1577060339 = c3_1577060615;
            }
            
            F.line = 176;
            row_1577060097[chckIndx(p_1577060340, 0, (row_1577060097).length - 1)] = x_1577060339;
            }
            
            F.line = 177;
            iCurrentA_1577058772 = iNextA_1577058311;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520101007 = addInt(res_520101007, 1);
          }
      };
    };
    F.line = 178;
    F.filename = "editdistance.nim";
    result_1577058309 = row_1577060097[chckIndx(e_1577060103, 0, (row_1577060097).length - 1)];
  };
  framePtr = F.prev;

  return result_1577058309;

}

function getSynergyOf_1442842031(index_1442842032) {
  var result_1442842033 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []};

  var F = {procname: "power.getSynergyOf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 214;
      F.filename = "power.nim";
      var s_1442842045 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: []};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520101020 = [];
      F.line = 214;
      F.filename = "power.nim";
      colontmp__520101020 = HEX26_1442841714(HEX26_1442841714(draftSynergies_1442840650[0], secretSynergies_1442840651[0]), secretSecretSynergies_1442840652[0]);
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520101021 = 0;
      F.line = 250;
      var L_520101022 = (colontmp__520101020).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520101021 < L_520101022)) break Label3;
            F.line = 214;
            F.filename = "power.nim";
            s_1442842045 = colontmp__520101020[chckIndx(i_520101021, 0, (colontmp__520101020).length - 1)];
            if ((s_1442842045.Field0.index == index_1442842032)) {
            F.line = 216;
            result_1442842033 = nimCopy(result_1442842033, s_1442842045, NTI1442840582);
            break BeforeRet;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520101021 += 1;
            if (!(((colontmp__520101020).length == L_520101022))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 218;
      F.filename = "power.nim";
      var fmtRes_1442842050 = [mnewString(0)];
      F.line = 218;
      fmtRes_1442842050[0].push.apply(fmtRes_1442842050[0], [112,111,119,101,114,32,111,102,32]);;
      F.line = 218;
      formatValue_1442840708(fmtRes_1442842050, 0, HEX24_369098760(index_1442842032));
      F.line = 218;
      fmtRes_1442842050[0].push.apply(fmtRes_1442842050[0], [32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,32,111,114,32,105,115,32,110,111,116,32,111,102,32,97,32,115,121,110,101,114,103,121,46]);;
    };
    F.line = 218;
    raiseException({message: nimCopy(null, fmtRes_1442842050[0], NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
  };
  framePtr = F.prev;

  return result_1442842033;

}

function add_520099414(x_520099416, x_520099416_Idx, y_520099417) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_520099421 = (x_520099416[x_520099416_Idx]).length;
    F.line = 1211;
    if (x_520099416[x_520099416_Idx].length < (Temporary1 = chckRange(addInt(xl_520099421, (y_520099417).length), 0, 2147483647), Temporary1)) { for (var i = x_520099416[x_520099416_Idx].length ; i < Temporary1 ; ++i) x_520099416[x_520099416_Idx].push([]); }
               else { x_520099416[x_520099416_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_520099436 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520101026 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__520101026 = (y_520099417).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520101027 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_520101027 <= colontmp__520101026)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_520099436 = res_520101027;
            F.line = 1212;
            x_520099416[x_520099416_Idx][chckIndx(addInt(xl_520099421, i_520099436), 0, (x_520099416[x_520099416_Idx]).length - 1)] = nimCopy(null, y_520099417[chckIndx(i_520099436, 0, (y_520099417).length - 1)], NTI33554449);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520101027 = addInt(res_520101027, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function getLinkedPowers_520099374(p_520099375, alreadyAdded_520099380) {
  var result_520099383 = {Field0: [], Field1: []};

  var F = {procname: "main.getLinkedPowers", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1146;
    F.filename = "main.nim";
    result_520099383.Field1 = nimCopy(null, alreadyAdded_520099380, NTI520098227);
    F.line = 1147;
    var Temporary1 = nimCopy(null, p_520099375, NTI1442840581);
    result_520099383.Field0.push(Temporary1);;
    F.line = 1148;
    var Temporary2 = nimCopy(null, p_520099375.name, NTI33554449);
    result_520099383.Field1.push(Temporary2);;
    if (p_520099375.synergy) {
    F.line = 1151;
    var synergy_520099392 = getSynergyOf_1442842031(p_520099375.index);
    Label3: {
      F.line = 1152;
      var name_520099396 = [];
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520101016 = 0;
      F.line = 250;
      var L_520101017 = (synergy_520099392.Field2).length;
      Label4: {
        F.line = 251;
          Label5: while (true) {
          if (!(i_520101016 < L_520101017)) break Label5;
            F.line = 1152;
            F.filename = "main.nim";
            name_520099396 = synergy_520099392.Field2[chckIndx(i_520101016, 0, (synergy_520099392.Field2).length - 1)];
            Label6: {
              if ((contains_1006633010(synergy_520099392.Field3, name_520099396) || contains_1006633010(result_520099383.Field1, name_520099396))) {
              F.line = 1154;
              break Label6;
              }
              
              Label7: {
                F.line = 1156;
                var reqPower_520099408 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520101013 = 0;
                F.line = 250;
                var L_520101014 = (powers_1442840649[0]).length;
                Label8: {
                  F.line = 251;
                    Label9: while (true) {
                    if (!(i_520101013 < L_520101014)) break Label9;
                      F.line = 1156;
                      F.filename = "main.nim";
                      reqPower_520099408 = powers_1442840649[0][chckIndx(i_520101013, 0, (powers_1442840649[0]).length - 1)];
                      if (eqStrings(reqPower_520099408.name, name_520099396)) {
                      F.line = 1158;
                      var next_520099409 = getLinkedPowers_520099374(reqPower_520099408, result_520099383.Field1);
                      F.line = 1159;
                      add_520097287(result_520099383, "Field0", next_520099409.Field0);
                      F.line = 1160;
                      add_520099414(result_520099383, "Field1", next_520099409.Field1);
                      F.line = 1161;
                      break Label7;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520101013 += 1;
                      if (!(((powers_1442840649[0]).length == L_520101014))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            F.line = 13;
            i_520101016 += 1;
            if (!(((synergy_520099392.Field2).length == L_520101017))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  return result_520099383;

}

function createSeePowerDescription_520099454(p_520099455) {
    var Temporary1;
    var Temporary2;
    p_520099455 = nimCopy(null, p_520099455, NTI1442840581);
    
function HEX3Aanonymous_520099489(__520099490, __520099491) {
      var F = {procname: "createSeePowerDescription.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1181;
        F.filename = "main.nim";
        initGame_520093937();
        F.line = 1182;
        side_520093807[0] = 0;
        F.line = 1183;
        turn_520093808[0] = true;
        F.line = 1184;
        practiceMode_520093850[0] = true;
        F.line = 1186;
        theState_520093826[0].Field0.randSeed = 0;
        F.line = 1188;
        myDrafts_520093813[0] = nimCopy(null, getLinkedPowers_520099374(p_520099455, []).Field0, NTI520098237);
        F.line = 1189;
        execute_1442841695(myDrafts_520093813[0], opponentDrafts_520093818[0], side_520093807[0], theBoard_520093825[0], theState_520093826[0]);
        F.line = 1190;
        currentScreen_520093855[0] = 3;
      framePtr = F.prev;

      
    }

  var result_520099456 = null;

  var F = {procname: "main.createSeePowerDescription", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1164;
    F.filename = "main.nim";
    if (p_520099455.noColor) {
    Temporary1 = p_520099455.icon;
    }
    else {
    Temporary1 = ([98,108,97,99,107] || []).concat(p_520099455.icon || []);
    }
    
    var src_520099460 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 1165;
    var record_520099463 = {Field0: 0, Field1: 0};
    F.line = 1166;
    if ((0 < record_520099463.Field0)) {
    Temporary2 = [115,101,101,45,112,111,119,101,114,32,104,97,115,45,119,111,110];
    }
    else {
    Temporary2 = [115,101,101,45,112,111,119,101,114];
    }
    
    var class_520099464 = nimCopy(null, Temporary2, NTI33554449);
    F.line = 1167;
    F.line = 1167;
    var tmp_520099465 = tree_721421184(44, []);
    F.line = 1167;
    tmp_520099465.class = toJSStr(class_520099464);
    F.line = 1168;
    var tmp_520099466 = tree_721421184(24, []);
    F.line = 1169;
    add_721421120(tmp_520099466, text_721421252(p_520099455.technicalName));
    F.line = 1169;
    add_721421120(tmp_520099465, tmp_520099466);
    F.line = 1170;
    var tmp_520099467 = tree_721421184(32, []);
    F.line = 1170;
    tmp_520099467.class = "desc";
    F.line = 1171;
    add_721421120(tmp_520099467, text_721421252(p_520099455.description));
    F.line = 1171;
    add_721421120(tmp_520099465, tmp_520099467);
    if (!(eqStrings(p_520099455.icon, []))) {
    F.line = 1173;
    var tmp_520099468 = tree_721421184(76, []);
    F.line = 1173;
    setAttr_721421035(tmp_520099468, "src", toJSStr(([46,47,105,99,111,110,115,47] || []).concat(src_520099460 || [])));
    F.line = 1173;
    add_721421120(tmp_520099465, tmp_520099468);
    }
    else {
      F.line = 1175;
      var tmp_520099469 = tree_721421184(76, []);
      F.line = 1175;
      setAttr_721421035(tmp_520099469, "src", "./icons/blackbishop.svg");
      F.line = 1175;
      add_721421120(tmp_520099465, tmp_520099469);
    }
    
    F.line = 1176;
    var tmp_520099470 = tree_721421184(32, []);
    F.line = 1176;
    tmp_520099470.class = "win";
    F.line = 1177;
    Label3: {
      F.line = 1177;
      var fmtRes_520099476 = [mnewString(0)];
      F.line = 1177;
      fmtRes_520099476[0].push.apply(fmtRes_520099476[0], [87,105,110,115,58,32]);;
      F.line = 1177;
      formatValue_1442841952(fmtRes_520099476, 0, record_520099463.Field0);
      F.line = 1177;
      fmtRes_520099476[0].push.apply(fmtRes_520099476[0], [44,32,76,111,115,115,101,115,58,32]);;
      F.line = 1177;
      formatValue_1442841952(fmtRes_520099476, 0, record_520099463.Field1);
    };
    add_721421120(tmp_520099470, text_721421252(fmtRes_520099476[0]));
    F.line = 1177;
    add_721421120(tmp_520099465, tmp_520099470);
    F.line = 1178;
    var tmp_520099471 = tree_721421184(195, []);
    F.line = 1179;
    add_721421120(tmp_520099471, text_721421252([80,114,97,99,116,105,99,101]));
    F.line = 1180;
    addEventHandler_687867670(tmp_520099471, 0, HEX3Aanonymous_520099489, kxi__);
    F.line = 1167;
    add_721421120(tmp_520099465, tmp_520099471);
    result_520099456 = tmp_520099465;
  framePtr = F.prev;

  return result_520099456;

}

function HEX5BHEX5D_520100082(t_520100085, key_520100086) {
  var result_520100087 = null;
  var result_520100087_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_520100088 = [0];
    F.line = 244;
    var indexHEX60gensym22_520100095 = rawGet_520095110(t_520100085, key_520100086, hcHEX60gensym22_520100088, 0);
    if ((0 <= indexHEX60gensym22_520100095)) {
    F.line = 245;
    result_520100087 = t_520100085.data[chckIndx(indexHEX60gensym22_520100095, 0, (t_520100085.data).length - 1)]; result_520100087_Idx = "Field2";
    }
    else {
      F.line = 247;
    raiseKeyError_1342178950(key_520100086);
    }
    
  framePtr = F.prev;

  return [result_520100087, result_520100087_Idx];

}

function createSeePowerOnclick_520099492(name_520099493, index_520099494) {
    name_520099493 = nimCopy(null, name_520099493, NTI33554449);
    
function HEX3Aanonymous_520099499(__520099500, __520099501) {
      var F = {procname: "createSeePowerOnclick.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1194;
        F.filename = "main.nim";
        HEX5BHEX5DHEX3D_520095053(selectedSubPower_520093916[0], name_520099493, index_520099494);
      framePtr = F.prev;

      
    }

  var result_520099498 = null;

  var F = {procname: "main.createSeePowerOnclick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1193;
    F.filename = "main.nim";
    result_520099498 = HEX3Aanonymous_520099499;
  framePtr = F.prev;

  return result_520099498;

}

function getPowerTabLength_520099544(powers_520099545) {
  var result_520099546 = 0;

  var F = {procname: "main.getPowerTabLength", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1197;
      F.filename = "main.nim";
      var p_520099550 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520101030 = 0;
      F.line = 250;
      var L_520101031 = (powers_520099545).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520101030 < L_520101031)) break Label3;
            F.line = 1197;
            F.filename = "main.nim";
            p_520099550 = powers_520099545[chckIndx(i_520101030, 0, (powers_520099545).length - 1)];
            F.line = 1198;
            result_520099546 = addInt(result_520099546, mulInt((p_520099550.technicalName).length, 15));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520101030 += 1;
            if (!(((powers_520099545).length == L_520101031))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_520099546;

}

function createSeePower_520099555() {
    
function HEX3Aanonymous_520099565(__520099566, __520099567) {
      var F = {procname: "createSeePower.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1206;
        F.filename = "main.nim";
        currentScreen_520093855[0] = 0;
      framePtr = F.prev;

      
    }
    var Temporary1;
    var Temporary3;
      
function HEX3Aanonymous_520099804(xHEX60gensym206_520099827, yHEX60gensym206_520099828) {
        var result_520099829 = 0;

        var F = {procname: "createSeePower.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
        framePtr = F;
          F.line = 500;
          F.filename = "algorithm.nim";
          var it_520099830 = nimCopy(null, xHEX60gensym206_520099827, NTI1442841706);
          F.line = 501;
          var aHEX60gensym206_520099831 = editDistance_1577058306(it_520099830[chckIndx(0, 0, (it_520099830).length - 1)].name, cstrToNimstr(search_520099568));
          F.line = 502;
          it_520099830 = nimCopy(null, yHEX60gensym206_520099828, NTI1442841706);
          F.line = 503;
          var bHEX60gensym206_520099832 = editDistance_1577058306(it_520099830[chckIndx(0, 0, (it_520099830).length - 1)].name, cstrToNimstr(search_520099568));
          F.line = 504;
          result_520099829 = cmp_33557985(aHEX60gensym206_520099831, bHEX60gensym206_520099832);
        framePtr = F.prev;

        return result_520099829;

      }
                      var Temporary20;
                        var Temporary21;
                      var Temporary22;
              var Temporary23;

  var result_520099556 = null;

  var F = {procname: "main.createSeePower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1201;
    F.filename = "main.nim";
    rawEcho([99,114,101,97,116,105,110,103,32,83,101,101,32,80,111,119,101,114]);
    F.line = 1202;
    F.line = 1202;
    var tmp_520099557 = tree_721421184(44, []);
    F.line = 1202;
    tmp_520099557.class = "tab-column";
    F.line = 1203;
    var tmp_520099558 = tree_721421184(195, []);
    F.line = 1203;
    tmp_520099558.class = "top-button";
    F.line = 1204;
    add_721421120(tmp_520099558, text_721421252([82,101,116,117,114,110,32,116,111,32,76,111,98,98,121]));
    F.line = 1205;
    addEventHandler_687867670(tmp_520099558, 0, HEX3Aanonymous_520099565, kxi__);
    F.line = 1202;
    add_721421120(tmp_520099557, tmp_520099558);
    F.line = 1208;
    var tmp_520099559 = tree_721421184(44, []);
    F.line = 1208;
    tmp_520099559.class = "search move-up";
    F.line = 1209;
    var tmp_520099560 = tree_721421184(193, []);
    F.line = 1209;
    setAttr_721421035(tmp_520099560, "for", "search");
    F.line = 1210;
    add_721421120(tmp_520099560, text_721421252([83,101,97,114,99,104,58,32]));
    F.line = 1210;
    add_721421120(tmp_520099559, tmp_520099560);
    F.line = 1211;
    var tmp_520099561 = tree_721421184(194, []);
    F.line = 1211;
    tmp_520099561.id = "search";
    F.line = 1211;
    addEventHandler_687867678(tmp_520099561, 8, validateNotEmpty_520097467("search"), kxi__);
    F.line = 1211;
    add_721421120(tmp_520099559, tmp_520099561);
    F.line = 1211;
    add_721421120(tmp_520099557, tmp_520099559);
    F.line = 1213;
    F.line = 1214;
++excHandler;
    try {
    Temporary1 = getInputText_687867761(getVNodeById_687866162("search", kxi__));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    Temporary1 = "";
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    var search_520099568 = Temporary1;
    F.line = 1218;
    if ((search_520099568 == "")) {
    F.line = 863;
    F.filename = "sequtils.nim";
    var resultHEX60gensym204_520099778 = [];
    Label4: {
      F.line = 864;
      var xHEX60gensym204_520099779 = [];
      F.line = 759;
      F.filename = "tables.nim";
      var L_520100960 = len_520094855(allPowers_520093917[0]);
      Label5: {
        F.line = 760;
        var h_520100962 = 0;
        F.line = 81;
        F.filename = "iterators_1.nim";
        var colontmp__520100963 = 0;
        F.line = 760;
        F.filename = "tables.nim";
        colontmp__520100963 = (allPowers_520093917[0].data).length - 1;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520100964 = 0;
        Label6: {
          F.line = 97;
            Label7: while (true) {
            if (!(res_520100964 <= colontmp__520100963)) break Label7;
              F.line = 760;
              F.filename = "tables.nim";
              h_520100962 = res_520100964;
              if (isFilled_1107296287(allPowers_520093917[0].data[chckIndx(h_520100962, 0, (allPowers_520093917[0].data).length - 1)].Field0)) {
              F.line = 864;
              F.filename = "sequtils.nim";
              xHEX60gensym204_520099779 = allPowers_520093917[0].data[chckIndx(h_520100962, 0, (allPowers_520093917[0].data).length - 1)]["Field2"];
              F.line = 865;
              var Temporary8 = nimCopy(null, xHEX60gensym204_520099779, NTI1442841706);
              resultHEX60gensym204_520099778.push(Temporary8);;
              if (!((len_520094855(allPowers_520093917[0]) == L_520100960))) {
              F.line = 763;
              F.filename = "tables.nim";
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim(763, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520100964 = addInt(res_520100964, 1);
            }
        };
      };
    };
    Temporary3 = resultHEX60gensym204_520099778;
    }
    else {
      F.line = 499;
      F.filename = "algorithm.nim";
      F.line = 863;
      F.filename = "sequtils.nim";
      var resultHEX60gensym205_520099793 = [];
      Label9: {
        F.line = 864;
        var xHEX60gensym205_520099794 = [];
        F.line = 759;
        F.filename = "tables.nim";
        var L_520100967 = len_520094855(allPowers_520093917[0]);
        Label10: {
          F.line = 760;
          var h_520100969 = 0;
          F.line = 81;
          F.filename = "iterators_1.nim";
          var colontmp__520100970 = 0;
          F.line = 760;
          F.filename = "tables.nim";
          colontmp__520100970 = (allPowers_520093917[0].data).length - 1;
          F.line = 96;
          F.filename = "iterators_1.nim";
          var res_520100971 = 0;
          Label11: {
            F.line = 97;
              Label12: while (true) {
              if (!(res_520100971 <= colontmp__520100970)) break Label12;
                F.line = 760;
                F.filename = "tables.nim";
                h_520100969 = res_520100971;
                if (isFilled_1107296287(allPowers_520093917[0].data[chckIndx(h_520100969, 0, (allPowers_520093917[0].data).length - 1)].Field0)) {
                F.line = 864;
                F.filename = "sequtils.nim";
                xHEX60gensym205_520099794 = allPowers_520093917[0].data[chckIndx(h_520100969, 0, (allPowers_520093917[0].data).length - 1)]["Field2"];
                F.line = 865;
                var Temporary13 = nimCopy(null, xHEX60gensym205_520099794, NTI1442841706);
                resultHEX60gensym205_520099793.push(Temporary13);;
                if (!((len_520094855(allPowers_520093917[0]) == L_520100967))) {
                F.line = 763;
                F.filename = "tables.nim";
                failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim(763, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 102;
                F.filename = "iterators_1.nim";
                res_520100971 = addInt(res_520100971, 1);
              }
          };
        };
      };
      var resultHEX60gensym206_520099972 = sorted_520099837(resultHEX60gensym205_520099793, HEX3Aanonymous_520099804, 1);
    Temporary3 = resultHEX60gensym206_520099972;
    }
    
    var sortedPowers_520099973 = nimCopy(null, Temporary3, NTI520098521);
    Label14: {
      F.line = 1221;
      F.filename = "main.nim";
      var subpowers_520099977 = [];
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520100980 = 0;
      F.line = 250;
      var L_520100981 = (sortedPowers_520099973).length;
      Label15: {
        F.line = 251;
          Label16: while (true) {
          if (!(i_520100980 < L_520100981)) break Label16;
            F.line = 1221;
            F.filename = "main.nim";
            subpowers_520099977 = sortedPowers_520099973[chckIndx(i_520100980, 0, (sortedPowers_520099973).length - 1)];
            if (((subpowers_520099977).length == 1)) {
            F.line = 1223;
            add_721421120(tmp_520099557, createSeePowerDescription_520099454(subpowers_520099977[chckIndx(0, 0, (subpowers_520099977).length - 1)]));
            }
            else {
              F.line = 1225;
              var tmp_520099562 = tree_721421184(44, []);
              F.line = 1225;
              tmp_520099562.class = "tab-row margin-t-20";
              Label17: {
                F.line = 1226;
                var index_520100031 = 0;
                F.line = 1226;
                var power_520100032 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 182;
                F.filename = "iterators.nim";
                var i_520100976 = 0;
                F.line = 183;
                var L_520100977 = (subpowers_520099977).length;
                Label18: {
                  F.line = 184;
                    Label19: while (true) {
                    if (!(i_520100976 < L_520100977)) break Label19;
                      F.line = 1226;
                      F.filename = "main.nim";
                      index_520100031 = i_520100976;
                      F.line = 1226;
                      power_520100032 = nimCopy(power_520100032, subpowers_520099977[chckIndx(i_520100976, 0, (subpowers_520099977).length - 1)], NTI1442840581);
                      F.line = 1227;
                      if ((index_520100031 == (Temporary21 = HEX5BHEX5D_520100082(selectedSubPower_520093916[0], subpowers_520099977[chckIndx(0, 0, (subpowers_520099977).length - 1)].name), Temporary21)[0][Temporary21[1]])) {
                      Temporary20 = [115,101,108,101,99,116,101,100,45,116,97,98,32,102,111,110,116,45,50,48];
                      }
                      else {
                      Temporary20 = [102,111,110,116,45,50,48];
                      }
                      
                      var class_520100164 = nimCopy(null, Temporary20, NTI33554449);
                      F.line = 1228;
                      var tmp_520099563 = tree_721421184(195, []);
                      F.line = 1228;
                      tmp_520099563.class = toJSStr(class_520100164);
                      F.line = 1228;
                      addEventHandler_687867670(tmp_520099563, 0, createSeePowerOnclick_520099492(power_520100032.name, index_520100031), kxi__);
                      F.line = 1229;
                      if ((screenWidth_520093858[0] < getPowerTabLength_520099544(subpowers_520099977))) {
                      Temporary22 = HEX24_369098760(addInt(index_520100031, 1));
                      }
                      else {
                      Temporary22 = power_520100032.technicalName;
                      }
                      
                      add_721421120(tmp_520099563, text_721421252(Temporary22));
                      F.line = 1229;
                      add_721421120(tmp_520099562, tmp_520099563);
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520100976 += 1;
                      if (!(((subpowers_520099977).length == L_520100977))) {
                      F.line = 187;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              F.line = 1229;
              F.filename = "main.nim";
              add_721421120(tmp_520099557, tmp_520099562);
              F.line = 1230;
              add_721421120(tmp_520099557, createSeePowerDescription_520099454(subpowers_520099977[chckIndx((Temporary23 = HEX5BHEX5D_520100082(selectedSubPower_520093916[0], subpowers_520099977[chckIndx(0, 0, (subpowers_520099977).length - 1)].name), Temporary23)[0][Temporary23[1]], 0, (subpowers_520099977).length - 1)]));
            }
            
            F.line = 1232;
            var tmp_520099564 = tree_721421184(33, []);
            F.line = 1232;
            add_721421120(tmp_520099557, tmp_520099564);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520100980 += 1;
            if (!(((sortedPowers_520099973).length == L_520100981))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_520099556 = tmp_520099557;
  framePtr = F.prev;

  return result_520099556;

}

function main_520100219() {
  var result_520100220 = null;

  var F = {procname: "main.main", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1235;
    F.filename = "main.nim";
    F.line = 1235;
    var tmp_520100221 = tree_721421184(44, []);
    F.line = 1235;
    tmp_520100221.class = "main scroll";
    F.line = 1236;
    switch (currentScreen_520093855[0]) {
    case 0:
      F.line = 1237;
      add_721421120(tmp_520100221, createLobby_520097653());
      break;
    case 1:
      F.line = 1238;
      add_721421120(tmp_520100221, createRoomMenu_520097742());
      break;
    case 2:
      F.line = 1239;
      add_721421120(tmp_520100221, createJoinMenu_520097772());
      break;
    case 4:
      F.line = 1240;
      add_721421120(tmp_520100221, createOptionsMenu_520097778());
      break;
    case 5:
      F.line = 1241;
      add_721421120(tmp_520100221, createDraftMenu_520097941());
      break;
    case 3:
      F.line = 1242;
      add_721421120(tmp_520100221, createGame_520098968());
      break;
    case 6:
      F.line = 1243;
      add_721421120(tmp_520100221, createResults_520099285());
      break;
    case 7:
      F.line = 1244;
      add_721421120(tmp_520100221, createRematch_520099316());
      break;
    case 8:
      F.line = 1245;
      add_721421120(tmp_520100221, createDisconnect_520099325());
      break;
    case 10:
      F.line = 1246;
      add_721421120(tmp_520100221, createOther_520099332());
      break;
    case 9:
      F.line = 1247;
      add_721421120(tmp_520100221, createSettings_520099367());
      break;
    case 11:
      F.line = 1248;
      add_721421120(tmp_520100221, createSeePower_520099555());
      break;
    case 12:
      F.line = 1249;
      var tmp_520100222 = tree_721421184(44, []);
      F.line = 1249;
      add_721421120(tmp_520100221, tmp_520100222);
      break;
    }
    result_520100220 = tmp_520100221;
  framePtr = F.prev;

  return result_520100220;

}
var F = {procname: "module main", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
framePtr = F;
F.line = 87;
F.filename = "main.nim";
var roomId_520093800 = [nimCopy(null, {Field0: false, Field1: "Waiting..."}, NTI520093737)];
F.line = 88;
var peer_520093806 = [{Field0: null, Field1: null}];
F.line = 89;
var side_520093807 = [0];
F.line = 90;
var turn_520093808 = [false];
F.line = 91;
var myDrafts_520093813 = [[]];
F.line = 92;
var opponentDrafts_520093818 = [[]];
F.line = 95;
var baseDrafts_520093819 = [0];
F.line = 96;
var draftOptions_520093820 = [[]];
F.line = 97;
var draftChoices_520093821 = [3];
F.line = 98;
var draftsLeft_520093822 = [0];
F.line = 99;
var draftTier_520093823 = [0];
F.line = 102;
var rematch_520093824 = [false];
F.line = 103;
var theBoard_520093825 = [[[({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})]]];
F.line = 104;
var theState_520093826 = [{Field0: ({nextIndex: 0, nextGroup: 0, randSeed: 0, turnNumber: 0}), Field1: [({abilityTakes: 0, hasCastled: false, communist: false, dna: [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], transforms: [[], [], [], [], [], [], [], []], wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]}), ({abilityTakes: 0, hasCastled: false, communist: false, dna: [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], transforms: [[], [], [], [], [], [], [], []], wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, piecesSoldThisTurn: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]})]}];
F.line = 105;
var selectedTile_520093829 = [nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771)];
F.line = 106;
var possibleMoves_520093834 = [[]];
F.line = 107;
var possibleTakes_520093839 = [[]];
F.line = 108;
var lastMove_520093844 = [[]];
F.line = 109;
var piecesChecking_520093849 = [[]];
F.line = 111;
var practiceMode_520093850 = [false];
F.line = 114;
var showTechnicalNames_520093851 = [false];
F.line = 115;
var disableRNGPowers_520093852 = [false];
F.line = 116;
var showDebug_520093853 = [false];
F.line = 117;
var enableExperimental_520093854 = [true];
F.line = 120;
var currentScreen_520093855 = [0];
F.line = 121;
var currentTab_520093856 = [0];
F.line = 122;
var gameMode_520093857 = [0];
F.line = 123;
var screenWidth_520093858 = [window.innerWidth];
F.line = 127;
var selectedGlass_520093872 = [none_520093864()];
F.line = 129;
var actionStack_520093877 = [[]];
F.line = 130;
var nextActionStack_520093882 = [[]];
F.line = 131;
var toSend_520093887 = [[]];
F.line = 132;
var promptHistory_520093892 = [[]];
F.line = 133;
var promptStack_520093897 = [[]];
F.line = 134;
var picksLeft_520093898 = [0];
F.line = 135;
var getPickOptions_520093900 = [null];
F.line = 136;
var pickOptions_520093901 = [[]];
F.line = 137;
var picks_520093906 = [[]];
F.line = 138;
var whenCollected_520093908 = [null];
F.line = 140;
var selectedSubPower_520093916 = [({data: [], counter: 0})];
F.line = 141;
var allPowers_520093917 = [getAllPowers_1442842075()];
F.line = 1252;
initStorage_1543503887();
F.line = 1253;
window.addEventListener('resize', resize_520093923);
F.line = 1254;
initSelectedSubPower_520094035();
if (false) {
F.line = 1257;
switch (currentScreen_520093855[0]) {
case 3:
  F.line = 1259;
  initGame_520093937();
  F.line = 1260;
  theState_520093826[0].Field0.randSeed = 0;
  F.line = 1261;
  myDrafts_520093813[0] = nimCopy(null, myDebugPowers_520093792, NTI520093719);
  F.line = 1262;
  opponentDrafts_520093818[0] = nimCopy(null, opponentDebugPowers_520093797, NTI520093728);
  F.line = 1263;
  execute_1442841695(myDrafts_520093813[0], opponentDrafts_520093818[0], side_520093807[0], theBoard_520093825[0], theState_520093826[0]);
  break;
case 5:
  F.line = 1265;
  gameMode_520093857[0] = 2;
  F.line = 1266;
  draft_520097271([], []);
  break;
default: 
  break;
}
}

setRenderer_687867621(main_520100219, "ROOT", null);
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
