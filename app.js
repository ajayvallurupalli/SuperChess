/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI520093829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520094771 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093715 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093714 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736997 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736778 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093867 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1526726688 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520096722 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1006632986 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093799 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1442840822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI503316801 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420574 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093741 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093740 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093739 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520094926 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520094995 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI838861206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400069 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI838861173 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841153 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841190 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841098 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840689 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840584 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459619664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1442841298 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841293 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840778 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840820 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093728 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093719 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442841020 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736806 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1224736804 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1224736802 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1224736798 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1275068424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736795 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736793 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224737001 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737002 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736884 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736797 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736855 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224736796 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865865 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI771751972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI771751973 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420296 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI721420387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420383 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420390 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420389 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI721420388 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420385 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306461 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306458 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306457 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306455 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306453 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306451 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306450 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306449 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306447 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306446 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306445 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306443 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306439 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306437 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306398 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306557 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306554 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI805306553 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306556 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306503 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306492 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306504 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306491 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306490 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306509 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306397 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306489 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306488 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306505 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306394 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306487 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306506 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306395 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306494 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306508 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306507 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306396 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306479 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306382 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306493 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306386 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306486 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306385 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI805306383 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI805306485 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306484 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306483 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306482 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306384 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI687865863 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI687865864 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093737 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459619444 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1459618537 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459618491 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459620827 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1006633039 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1006633045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459620800 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1459620389 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840589 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840588 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736839 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736772 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1224736773 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1291845837 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737004 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736792 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736861 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459619685 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI889192517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1392508931 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI1392508932 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459618694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1459618963 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224737489 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459618468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224737542 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737537 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224737536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737534 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068468 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291846007 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224737429 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845874 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068484 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068559 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1241514007 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736789 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736785 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736853 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736852 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736993 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736851 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736987 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736983 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736981 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736849 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736771 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736777 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736776 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736794 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308622957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555838 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840590 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1442840579 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1442840582 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI1442840579 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1442840579, name: "Common", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1442840579, name: "Uncommon", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1442840579, name: "Rare", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1442840579, name: "UltraRare", len: 0, sons: null}}};
NTI1442840579.node = NNI1442840579;
var NNI1442840582 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "technicalName", len: 0, typ: NTI33554449, name: "technicalName", sons: null}, 
{kind: 1, offset: "synergy", len: 0, typ: NTI33554466, name: "synergy", sons: null}, 
{kind: 1, offset: "tier", len: 0, typ: NTI1442840579, name: "tier", sons: null}, 
{kind: 1, offset: "rarity", len: 0, typ: NTI33554435, name: "rarity", sons: null}, 
{kind: 1, offset: "description", len: 0, typ: NTI33554449, name: "description", sons: null}, 
{kind: 1, offset: "icon", len: 0, typ: NTI33554449, name: "icon", sons: null}, 
{kind: 1, offset: "rotatable", len: 0, typ: NTI33554466, name: "rotatable", sons: null}, 
{kind: 1, offset: "noColor", len: 0, typ: NTI33554466, name: "noColor", sons: null}, 
{kind: 1, offset: "onStart", len: 0, typ: NTI1442840590, name: "onStart", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}]};
NTI1442840582.node = NNI1442840582;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555838 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555838.node = NNI33555838;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI1224736776 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1224736776, name: "King", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1224736776, name: "Queen", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1224736776, name: "Bishop", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1224736776, name: "Pawn", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1224736776, name: "Rook", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1224736776, name: "Knight", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1224736776, name: "None", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1224736776, name: "Fairy", len: 0, sons: null}}};
NTI1224736776.node = NNI1224736776;
var NNI1224736777 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1224736777, name: "black", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1224736777, name: "white", len: 0, sons: null}}};
NTI1224736777.node = NNI1224736777;
var NNI1224736771 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1224736771.node = NNI1224736771;
NTI1224736849.base = NTI1224736981;
NTI1224736850.base = NTI1224736981;
NTI1224736851.base = NTI1224736993;
NTI1224736852.base = NTI1224736993;
var NNI1224736789 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1224736789, name: "Sky", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1224736789, name: "Zero", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1224736789, name: "Steel", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1224736789, name: "Reverie", len: 0, sons: null}}};
NTI1224736789.node = NNI1224736789;
var NNI1224736785 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1224736789, name: "Field2", sons: null}]};
NTI1224736785.node = NNI1224736785;
NTI1224736853.base = NTI1224736785;
var NNI1224736794 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "item", len: 0, typ: NTI1224736776, name: "item", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1224736777, name: "color", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "timesMoved", len: 0, typ: NTI33554435, name: "timesMoved", sons: null}, 
{kind: 1, offset: "piecesTaken", len: 0, typ: NTI33554435, name: "piecesTaken", sons: null}, 
{kind: 1, offset: "tile", len: 0, typ: NTI1224736771, name: "tile", sons: null}, 
{kind: 1, offset: "moves", len: 0, typ: NTI1224736849, name: "moves", sons: null}, 
{kind: 1, offset: "takes", len: 0, typ: NTI1224736850, name: "takes", sons: null}, 
{kind: 1, offset: "onMove", len: 0, typ: NTI1224736983, name: "onMove", sons: null}, 
{kind: 1, offset: "onTake", len: 0, typ: NTI1224736983, name: "onTake", sons: null}, 
{kind: 1, offset: "whenTaken", len: 0, typ: NTI1224736987, name: "whenTaken", sons: null}, 
{kind: 1, offset: "onEndTurn", len: 0, typ: NTI1224736851, name: "onEndTurn", sons: null}, 
{kind: 1, offset: "onPromote", len: 0, typ: NTI1224736852, name: "onPromote", sons: null}, 
{kind: 1, offset: "promoted", len: 0, typ: NTI33554466, name: "promoted", sons: null}, 
{kind: 1, offset: "filePath", len: 0, typ: NTI33554449, name: "filePath", sons: null}, 
{kind: 1, offset: "colorable", len: 0, typ: NTI33554466, name: "colorable", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554466, name: "rotate", sons: null}, 
{kind: 1, offset: "drunk", len: 0, typ: NTI33554466, name: "drunk", sons: null}, 
{kind: 1, offset: "casts", len: 0, typ: NTI1224736853, name: "casts", sons: null}]};
NTI1224736794.node = NNI1224736794;
var NNI1308622957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1224736794, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1308622957.node = NNI1308622957;
var NNI1241514007 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1241514007.node = NNI1241514007;
NTI1241514007.base = NTI33555178;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI1275068559.base = NTI1224736981;
NTI1275068484.base = NTI1224736993;
NTI1291845874.base = NTI1224736981;
NTI1224737429.base = NTI1224736771;
NTI1291846007.base = NTI1224736981;
NTI1275068468.base = NTI1224736981;
NTI1224737534.base = NTI1224736981;
NTI1224737535.base = NTI1224736981;
NTI1224737536.base = NTI1224737537;
NTI1224737541.base = NTI1224737542;
var NNI1459618468 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1459618468.node = NNI1459618468;
var NNI1224737489 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1224737489.node = NNI1224737489;
var NNI1459618963 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1459618963.node = NNI1459618963;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
NTI1459618694.base = NTI1224736981;
var NNI1392508932 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI1392508931, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI1392508931, name: "a1", sons: null}]};
NTI1392508932.node = NNI1392508932;
var NNI889192517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI889192517.node = NNI889192517;
NTI1459619685.base = NTI1224736981;
var NNI1224736861 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1224736861.node = NNI1224736861;
var NNI1224736792 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1224736983, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1224737004, name: "Field2", sons: null}]};
NTI1224736792.node = NNI1224736792;
NTI1291845837.base = NTI1224736771;
NTI1224736772.base = NTI1224736794;
NTI1224736773.base = NTI1224736772;
var NNI1224736839 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1224736792, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1224736839.node = NNI1224736839;
NTI1442840588.base = NTI33554449;
NTI1442840589.base = NTI33554449;
var NNI1442840583 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1442840582, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1442840588, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1442840589, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554435, name: "Field4", sons: null}]};
NTI1442840583.node = NNI1442840583;
NTI1459620389.base = NTI1224736771;
NTI1459620800.base = NTI1224736981;
var NNI1006633045 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1006633039, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1006633045.node = NNI1006633045;
NTI1459620827.base = NTI1224736981;
var NNI1459618491 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1459618491.node = NNI1459618491;
var NNI1459618537 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1459618537.node = NNI1459618537;
NTI1459619444.base = NTI1224736993;
var NNI520093737 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554450, name: "Field1", sons: null}]};
NTI520093737.node = NNI520093737;
var NNI805306510 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI805306510.node = NNI805306510;
NTI805306510.base = NTI33555173;
var NNI687865863 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI687865863, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI687865863, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI687865863, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI687865863, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI687865863, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI687865863, name: "pkSame", len: 0, sons: null}}};
NTI687865863.node = NNI687865863;
NTI805306483.base = NTI805306384;
NTI805306484.base = NTI805306384;
NTI805306485.base = NTI805306384;
var NNI805306383 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI805306383, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI805306383, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI805306383, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI805306383, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI805306383, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI805306383, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI805306383, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI805306383, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI805306383, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI805306383, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI805306383, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI805306383, name: "NotationNode", len: 0, sons: null}}};
NTI805306383.node = NNI805306383;
var NNI805306479 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI805306479.node = NNI805306479;
NTI805306479.base = NTI33555173;
NTI805306382.base = NTI805306479;
NTI805306508.base = NTI805306386;
var NNI805306507 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI805306508, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI805306507.node = NNI805306507;
NTI805306507.base = NTI805306493;
NTI805306396.base = NTI805306507;
var NNI805306506 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI805306506.node = NNI805306506;
NTI805306506.base = NTI805306493;
NTI805306395.base = NTI805306506;
NTI805306494.base = NTI805306395;
NTI805306495.base = NTI805306395;
var NNI805306493 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI805306382, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI805306396, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI805306494, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI805306495, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI805306493.node = NNI805306493;
NTI805306493.base = NTI805306482;
NTI805306386.base = NTI805306493;
var NNI805306505 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI805306505.node = NNI805306505;
NTI805306505.base = NTI805306493;
NTI805306394.base = NTI805306505;
NTI805306487.base = NTI805306394;
NTI805306488.base = NTI805306396;
var NNI805306509 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI805306509.node = NNI805306509;
NTI805306509.base = NTI805306493;
NTI805306397.base = NTI805306509;
NTI805306489.base = NTI805306397;
NTI805306490.base = NTI805306386;
var NNI805306504 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI805306504.node = NNI805306504;
NTI805306504.base = NTI805306493;
NTI805306393.base = NTI805306504;
NTI805306491.base = NTI805306393;
var NNI805306503 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI805306503.node = NNI805306503;
NTI805306503.base = NTI805306493;
NTI805306392.base = NTI805306503;
NTI805306492.base = NTI805306392;
var NNI805306553 = {kind: 1, offset: "then", len: 0, typ: NTI805306554, name: "then", sons: null};
NTI805306553.node = NNI805306553;
NTI805306433.base = NTI805306553;
var NNI805306556 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI805306433, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI805306557, name: "onloadingdone", sons: null}]};
NTI805306556.node = NNI805306556;
NTI805306434.base = NTI805306556;
var NNI805306486 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI805306386, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI805306386, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI805306386, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI805306386, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI805306487, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI805306488, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI805306489, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI805306490, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI805306491, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI805306492, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI805306434, name: "fonts", sons: null}]};
NTI805306486.node = NNI805306486;
NTI805306486.base = NTI805306482;
NTI805306385.base = NTI805306486;
NTI805306398.base = NTI805306510;
var NNI805306482 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI805306483, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI805306484, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI805306485, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI805306384, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI805306384, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI805306384, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI805306383, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI805306384, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI805306384, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI805306384, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI805306385, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI805306398, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI805306386, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI805306482.node = NNI805306482;
var NNI805306437 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI805306438, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI805306439, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI805306440, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI805306441, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI805306442, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI805306443, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI805306444, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI805306445, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI805306446, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI805306447, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI805306448, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI805306449, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI805306450, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI805306451, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI805306452, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI805306453, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI805306454, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI805306455, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI805306456, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI805306457, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI805306458, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI805306459, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI805306460, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI805306461, name: "onloadend", sons: null}]};
NTI805306437.node = NNI805306437;
NTI805306437.base = NTI33555173;
NTI805306482.base = NTI805306437;
NTI805306384.base = NTI805306482;
var NNI721420291 = {kind: 2, offset: 0, typ: null, name: null, len: 213, sons: {"0": {kind: 1, offset: 0, typ: NTI721420291, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI721420291, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI721420291, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI721420291, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI721420291, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI721420291, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI721420291, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI721420291, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI721420291, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI721420291, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI721420291, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI721420291, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI721420291, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI721420291, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI721420291, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI721420291, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI721420291, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI721420291, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI721420291, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI721420291, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI721420291, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI721420291, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI721420291, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI721420291, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI721420291, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI721420291, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI721420291, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI721420291, name: "hgroup", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI721420291, name: "header", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI721420291, name: "footer", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI721420291, name: "address", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI721420291, name: "main", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI721420291, name: "p", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI721420291, name: "hr", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI721420291, name: "pre", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI721420291, name: "blockquote", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI721420291, name: "ol", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI721420291, name: "ul", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI721420291, name: "li", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI721420291, name: "dl", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI721420291, name: "dt", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI721420291, name: "dd", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI721420291, name: "figure", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI721420291, name: "figcaption", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI721420291, name: "div", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI721420291, name: "a", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI721420291, name: "em", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI721420291, name: "strong", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI721420291, name: "small", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI721420291, name: "s", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI721420291, name: "cite", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI721420291, name: "quote", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI721420291, name: "dfn", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI721420291, name: "abbr", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI721420291, name: "data", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI721420291, name: "time", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI721420291, name: "code", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI721420291, name: "var", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI721420291, name: "samp", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI721420291, name: "kbd", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI721420291, name: "sub", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI721420291, name: "sup", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI721420291, name: "i", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI721420291, name: "b", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI721420291, name: "u", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI721420291, name: "mark", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI721420291, name: "ruby", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI721420291, name: "rt", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI721420291, name: "rp", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI721420291, name: "bdi", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI721420291, name: "dbo", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI721420291, name: "span", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI721420291, name: "br", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI721420291, name: "wbr", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI721420291, name: "ins", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI721420291, name: "del", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI721420291, name: "img", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI721420291, name: "iframe", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI721420291, name: "embed", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI721420291, name: "object", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI721420291, name: "param", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI721420291, name: "video", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI721420291, name: "audio", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI721420291, name: "source", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI721420291, name: "track", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI721420291, name: "canvas", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI721420291, name: "map", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI721420291, name: "area", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI721420291, name: "animate", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI721420291, name: "animateMotion", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI721420291, name: "animateTransform", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI721420291, name: "circle", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI721420291, name: "clipPath", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI721420291, name: "defs", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI721420291, name: "desc", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI721420291, name: "discard", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI721420291, name: "ellipse", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI721420291, name: "feBlend", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI721420291, name: "feColorMatrix", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI721420291, name: "feComponentTransfer", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI721420291, name: "feComposite", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI721420291, name: "feConvolveMatrix", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI721420291, name: "feDiffuseLighting", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI721420291, name: "feDisplacementMap", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI721420291, name: "feDistantLight", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI721420291, name: "feDropShadow", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI721420291, name: "feFlood", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI721420291, name: "feFuncA", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI721420291, name: "feFuncB", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI721420291, name: "feFuncG", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI721420291, name: "feFuncR", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI721420291, name: "feGaussianBlur", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI721420291, name: "feImage", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI721420291, name: "feMerge", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI721420291, name: "feMergeNode", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI721420291, name: "feMorphology", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI721420291, name: "feOffset", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI721420291, name: "fePointLight", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI721420291, name: "feSpecularLighting", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI721420291, name: "feSpotLight", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI721420291, name: "feTile", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI721420291, name: "feTurbulence", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI721420291, name: "filter", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI721420291, name: "foreignObject", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI721420291, name: "g", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI721420291, name: "image", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI721420291, name: "line", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI721420291, name: "linearGradient", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI721420291, name: "marker", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI721420291, name: "mask", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI721420291, name: "metadata", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI721420291, name: "mpath", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI721420291, name: "path", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI721420291, name: "pattern", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI721420291, name: "polygon", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI721420291, name: "polyline", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI721420291, name: "radialGradient", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI721420291, name: "rect", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI721420291, name: "set", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI721420291, name: "stop", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI721420291, name: "svg", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI721420291, name: "switch", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI721420291, name: "symbol", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI721420291, name: "text", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI721420291, name: "textPath", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI721420291, name: "tspan", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI721420291, name: "unknown", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI721420291, name: "use", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI721420291, name: "view", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI721420291, name: "maction", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI721420291, name: "math", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI721420291, name: "menclose", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI721420291, name: "merror", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI721420291, name: "mfenced", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI721420291, name: "mfrac", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI721420291, name: "mglyph", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI721420291, name: "mi", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI721420291, name: "mlabeledtr", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI721420291, name: "mmultiscripts", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI721420291, name: "mn", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI721420291, name: "mo", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI721420291, name: "mover", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI721420291, name: "mpadded", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI721420291, name: "mphantom", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI721420291, name: "mroot", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI721420291, name: "mrow", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI721420291, name: "ms", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI721420291, name: "mspace", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI721420291, name: "msqrt", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI721420291, name: "mstyle", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI721420291, name: "msub", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI721420291, name: "msubsup", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI721420291, name: "msup", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI721420291, name: "mtable", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI721420291, name: "mtd", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI721420291, name: "mtext", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI721420291, name: "mtr", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI721420291, name: "munder", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI721420291, name: "munderover", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI721420291, name: "semantics", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI721420291, name: "table", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI721420291, name: "caption", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI721420291, name: "colgroup", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI721420291, name: "col", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI721420291, name: "tbody", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI721420291, name: "thead", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI721420291, name: "tfoot", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI721420291, name: "tr", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI721420291, name: "td", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI721420291, name: "th", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI721420291, name: "form", len: 0, sons: null}, 
"191": {kind: 1, offset: 191, typ: NTI721420291, name: "fieldset", len: 0, sons: null}, 
"192": {kind: 1, offset: 192, typ: NTI721420291, name: "legend", len: 0, sons: null}, 
"193": {kind: 1, offset: 193, typ: NTI721420291, name: "label", len: 0, sons: null}, 
"194": {kind: 1, offset: 194, typ: NTI721420291, name: "input", len: 0, sons: null}, 
"195": {kind: 1, offset: 195, typ: NTI721420291, name: "button", len: 0, sons: null}, 
"196": {kind: 1, offset: 196, typ: NTI721420291, name: "select", len: 0, sons: null}, 
"197": {kind: 1, offset: 197, typ: NTI721420291, name: "datalist", len: 0, sons: null}, 
"198": {kind: 1, offset: 198, typ: NTI721420291, name: "optgroup", len: 0, sons: null}, 
"199": {kind: 1, offset: 199, typ: NTI721420291, name: "option", len: 0, sons: null}, 
"200": {kind: 1, offset: 200, typ: NTI721420291, name: "textarea", len: 0, sons: null}, 
"201": {kind: 1, offset: 201, typ: NTI721420291, name: "keygen", len: 0, sons: null}, 
"202": {kind: 1, offset: 202, typ: NTI721420291, name: "output", len: 0, sons: null}, 
"203": {kind: 1, offset: 203, typ: NTI721420291, name: "progress", len: 0, sons: null}, 
"204": {kind: 1, offset: 204, typ: NTI721420291, name: "meter", len: 0, sons: null}, 
"205": {kind: 1, offset: 205, typ: NTI721420291, name: "details", len: 0, sons: null}, 
"206": {kind: 1, offset: 206, typ: NTI721420291, name: "summary", len: 0, sons: null}, 
"207": {kind: 1, offset: 207, typ: NTI721420291, name: "command", len: 0, sons: null}, 
"208": {kind: 1, offset: 208, typ: NTI721420291, name: "menu", len: 0, sons: null}, 
"209": {kind: 1, offset: 209, typ: NTI721420291, name: "bdo", len: 0, sons: null}, 
"210": {kind: 1, offset: 210, typ: NTI721420291, name: "dialog", len: 0, sons: null}, 
"211": {kind: 1, offset: 211, typ: NTI721420291, name: "slot", len: 0, sons: null}, 
"212": {kind: 1, offset: 212, typ: NTI721420291, name: "template", len: 0, sons: null}}};
NTI721420291.node = NNI721420291;
NTI721420389.base = NTI721420385;
NTI721420390.base = NTI33554450;
var NNI721420296 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI721420296, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI721420296, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI721420296, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI721420296, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI721420296, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI721420296, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI721420296, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI721420296, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI721420296, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI721420296, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI721420296, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI721420296, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI721420296, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI721420296, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI721420296, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI721420296, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI721420296, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI721420296, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI721420296, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI721420296, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI721420296, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI721420296, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI721420296, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI721420296, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI721420296, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI721420296, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI721420296, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI721420296, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI721420296, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI721420296, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI721420296, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI721420296, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI721420296, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI721420296, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI721420296, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI721420296, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI721420296, name: "onwheel", len: 0, sons: null}}};
NTI721420296.node = NNI721420296;
var NNI721420387 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI721420296, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI721420397, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI721420398, name: "Field2", sons: null}]};
NTI721420387.node = NNI721420387;
NTI721420383.base = NTI721420387;
var NNI771751972 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI771751972.node = NNI771751972;
NTI771751973.base = NTI771751972;
var NNI721420388 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI721420291, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554450, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI33554450, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI721420389, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI721420390, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI721420383, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI771751973, name: "style", sons: null}, 
{kind: 1, offset: "styleVersion", len: 0, typ: NTI33554435, name: "styleVersion", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI805306384, name: "dom", sons: null}]};
NTI721420388.node = NNI721420388;
NTI721420388.base = NTI33555173;
NTI721420385.base = NTI721420388;
var NNI687865864 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI687865863, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI805306384, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI805306384, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI721420385, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI721420385, name: "oldNode", sons: null}]};
NTI687865864.node = NNI687865864;
var NNI687865865 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI721420385, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI721420385, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI687865865.node = NNI687865865;
var NNI1224736796 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nextIndex", len: 0, typ: NTI33554435, name: "nextIndex", sons: null}, 
{kind: 1, offset: "nextGroup", len: 0, typ: NTI33554435, name: "nextGroup", sons: null}, 
{kind: 1, offset: "randSeed", len: 0, typ: NTI33554435, name: "randSeed", sons: null}, 
{kind: 1, offset: "turnNumber", len: 0, typ: NTI33554435, name: "turnNumber", sons: null}]};
NTI1224736796.node = NNI1224736796;
var NNI1224736788 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1224737002, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1224736993, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1224737001, name: "Field3", sons: null}]};
NTI1224736788.node = NNI1224736788;
NTI1224736884.base = NTI1224736788;
NTI1224736793.base = NTI1224736839;
var NNI1224736797 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "abilityTakes", len: 0, typ: NTI33554435, name: "abilityTakes", sons: null}, 
{kind: 1, offset: "wallet", len: 0, typ: NTI1224736861, name: "wallet", sons: null}, 
{kind: 1, offset: "buys", len: 0, typ: NTI1224736884, name: "buys", sons: null}, 
{kind: 1, offset: "piecesSold", len: 0, typ: NTI33554435, name: "piecesSold", sons: null}, 
{kind: 1, offset: "glass", len: 0, typ: NTI1224736793, name: "glass", sons: null}]};
NTI1224736797.node = NNI1224736797;
NTI1224736855.base = NTI1224736797;
var NNI1224736795 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736796, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1224736855, name: "Field1", sons: null}]};
NTI1224736795.node = NNI1224736795;
var NNI1275068424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1275068424.node = NNI1275068424;
NTI1224736798.base = NTI1224736802;
NTI1224736804.base = NTI1224736806;
NTI1442841020.base = NTI1442840582;
NTI520093719.base = NTI1442840582;
NTI520093728.base = NTI1442840582;
NTI1442840820.base = NTI1442840582;
NTI1442840842.base = NTI1442840583;
NTI1442840778.base = NTI1442840582;
NTI1442840713.base = NTI1442840582;
NTI1442841293.base = NTI1442840582;
NTI1442841298.base = NTI1442840582;
var NNI1459619664 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI1459619664.node = NNI1459619664;
var NNI1442840584 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554435, name: "Field3", sons: null}]};
NTI1442840584.node = NNI1442840584;
NTI1442840689.base = NTI1442840582;
NTI1442841098.base = NTI33554435;
NTI1442841190.base = NTI1442840582;
NTI1442841153.base = NTI1442840582;
NTI838861173.base = NTI33554449;
var NNI1325400069 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400069, name: "Id", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400069, name: "Handshake", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400069, name: "Options", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1325400069, name: "Draft", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1325400069, name: "End", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1325400069, name: "Rematch", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1325400069, name: "Action", len: 0, sons: null}}};
NTI1325400069.node = NNI1325400069;
NTI838861206.base = NTI33554449;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
NTI1224737635.base = NTI1224736771;
NTI520094995.base = NTI1224736771;
NTI520094926.base = NTI1224736785;
var NNI520093739 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI520093740, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI520093741, name: "Field1", sons: null}]};
NTI520093739.node = NNI520093739;
NTI721420574.base = NTI33554450;
NTI503316801.base = NTI33554449;
NTI1442840822.base = NTI1442840582;
var NNI520093799 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1224736789, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI520093799.node = NNI520093799;
NTI1006632986.base = NTI33554449;
NTI520096722.base = NTI33554449;
NTI1526726688.base = NTI1224736771;
NTI520093867.base = NTI1224736771;
NTI1224736778.base = NTI1224736771;
var NNI520093710 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1224736997, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554466, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI33554466, name: "Field5", sons: null}, 
{kind: 1, offset: "Field6", len: 0, typ: NTI520093714, name: "Field6", sons: null}, 
{kind: 1, offset: "Field7", len: 0, typ: NTI520093715, name: "Field7", sons: null}]};
NTI520093710.node = NNI520093710;
NTI520094771.base = NTI33554466;
NTI520093830.base = NTI520093710;
NTI520093829.base = NTI520093710;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var holy_1442840645 = {name: [72,111,108,121], technicalName: [], synergy: true, tier: 0, rarity: 12, description: makeNimstrLit("You are favored slightly more by god. Your next powers are more likely to be uncommon, rare, and ultra rare"), icon: [99,114,111,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1442840640, index: (-1), priority: 20};
var empress_1459617872 = {name: [69,109,112,114,101,115,115], technicalName: [], synergy: true, tier: 1, rarity: 8, description: [89,111,117,114,32,113,117,101,101,110,32,97,115,99,101,110,100,115,44,32,103,97,105,110,105,110,103,32,116,104,101,32,109,111,118,101,109,101,110,116,32,111,102,32,97,32,115,116,97,110,100,97,114,100,32,107,110,105,103,104,116,46,32], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459617810, index: (-1), priority: 15};
var altEmpress_1459617900 = {name: [69,109,112,114,101,115,115], technicalName: [65,108,116,101,114,110,97,116,101,32,69,109,112,114,101,115,115], synergy: true, tier: 1, rarity: 4, description: [89,111,117,114,32,113,117,101,101,110,32,97,115,99,101,110,100,115,44,32,103,97,105,110,105,110,103,32,116,104,101,32,109,111,118,101,109,101,110,116,32,111,102,32,97,32,103,105,114,97,102,102,101,46,32], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459617873, index: (-1), priority: 15};
var mysteriousSwordsmanLeft_1459618083 = {name: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], technicalName: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110,32,76,101,102,116], synergy: true, tier: 0, rarity: 4, description: makeNimstrLit("A mysterious swordsman joins your rank. \x0A        Your second pawn from the left is replaced with a silver general from Shogi."), icon: [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459618000, index: (-1), priority: 5};
var mysteriousSwordsmanRight_1459618135 = {name: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], technicalName: [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110,32,82,105,103,104,116], synergy: true, tier: 0, rarity: 4, description: makeNimstrLit("A mysterious swordsman joins your rank. \x0A        Your second pawn from the right is replaced with a silver general from Shogi."), icon: [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459618084, index: (-1), priority: 5};
var developed_1459618145 = {name: [68,101,118,101,108,111,112,101,100], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Your board arrives a little developed. Your 2 center pawns start one tile forward. \x0A        They can still move up 2 for their first move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618136, index: (-1), priority: 20};
var stepOnMe_1459618165 = {name: [83,116,101,112,32,111,110,32,109,101], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Your Queen can take your own pieces. It\'s literally useless, but if that\'s your thing..."), icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618146, index: (-1), priority: 15};
var illegalFormationBL_1459618198 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,76,101,102,116,32,66,105,115,104,111,112], synergy: true, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR LEFT BISHOP SWAPS PLACES WITH YOUR LEFT BISHOP"), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618188, index: (-1), priority: 20};
var illegalFormationBR_1459618209 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,82,105,103,104,116,32,66,105,115,104,111,112], synergy: true, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR RIGHT BISHOP SWAPS PLACES WITH YOUR RIGHT BISHOP"), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618199, index: (-1), priority: 20};
var illegalFormationRL_1459618176 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,76,101,102,116,32,82,111,111,107], synergy: true, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR LEFT ROOK SWAPS PLACES WITH YOUR LEFT ROOK"), icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618166, index: (-1), priority: 20};
var illegalFormationRR_1459618187 = {name: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110,32,82,105,103,104,116,32,82,111,111,107], synergy: true, tier: 0, rarity: 2, description: makeNimstrLit("ILLEGAL FORMATION: YOUR PAWN ABOVE YOUR RIGHT ROOK SWAPS PLACES WITH YOUR RIGHT ROOK"), icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618177, index: (-1), priority: 20};
var putInTheWork_1459618237 = {name: [80,117,116,32,105,110,32,116,104,101,32,119,111,114,107,33], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Get to work son. If any of your pawns take 3 pieces, they automatically promote."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618222, index: (-1), priority: 10};
var wanderingRoninLeft_1459618285 = {name: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], technicalName: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110,32,76,101,102,116], synergy: true, tier: 1, rarity: 4, description: makeNimstrLit("A wandering Ronin joins your rank. \x0A        Your third pawn from the left is replaced with a gold general from Shogi."), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459618238, index: (-1), priority: 5};
var wanderingRoninRight_1459618333 = {name: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], technicalName: [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110,32,82,105,103,104,116], synergy: true, tier: 1, rarity: 4, description: makeNimstrLit("A wandering Ronin joins your rank. \x0A        Your third pawn from the right is replaced with a gold general from Shogi."), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459618286, index: (-1), priority: 5};
var archBishops_1459618395 = {name: [65,114,99,104,98,105,115,104,111,112,115], technicalName: [], synergy: true, tier: 2, rarity: 8, description: makeNimstrLit("Your bishops ascend to archbishops, gaining the movement of a knight."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618376, index: (-1), priority: 15};
var werewolves_1459618375 = {name: [87,101,114,101,119,111,108,118,101,115], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Your leftmost and rightmost pawns are secretly werewolves! When they take a piece, they eat it and gain the ability to jump like a knight and giraffe. They can still promote."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618357, index: (-1), priority: 15};
var giraffe_1459618424 = {name: [71,105,114,97,102,102,101], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Your knights try riding giraffes. It works surprisingly well. Their leap is improved, moving 3 across instead of 2 across."), icon: [103,105,114,97,102,102,101,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618396, index: (-1), priority: 5};
    var air_1275068615 = {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []};
var sacrifice_1459618570 = {name: [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110], technicalName: [], synergy: true, tier: 3, rarity: 1, description: [83,65,67,82,73,70,73,67,69,32,84,72,89,32,77,65,73,68,69,78,83,32,84,79,32,84,72,69,32,66,76,79,79,68,32,71,79,68], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618555, index: (-1), priority: 25};
var calvary_1459618448 = {name: [67,97,108,118,97,114,121], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Your knights learn to ride forward. They aren\'t very good at it, but they\'re trying their best. \x0A            They can charge forward up to 2 tiles, but only to take a piece. They cannot jump for this move."), icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618425, index: (-1), priority: 15};
var backStep_1459618710 = {name: [66,97,99,107,115,116,101,112], technicalName: [], synergy: true, tier: 2, rarity: 8, description: makeNimstrLit("Your pawns receive some training. They can move one tile back. They cannot take this way."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618683, index: (-1), priority: 15};
var headStart_1459618738 = {name: [72,101,97,100,115,116,97,114,116], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Your pawns can always move 2 forward. They still take like normal. It\'s kind of boring, don\'t you think?"), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618711, index: (-1), priority: 15};
var queenTrade_1459618750 = {name: [81,117,101,101,110,32,84,114,97,100,101], technicalName: [], synergy: true, tier: 2, rarity: 8, description: [84,104,101,32,112,97,116,114,105,97,114,99,104,121,32,99,111,110,116,105,110,117,101,115,46,32,66,111,116,104,32,113,117,101,101,110,115,32,109,121,115,116,101,114,105,111,117,115,108,121,32,100,105,101,46], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618739, index: (-1), priority: 20};
                      var whiteQueen_1275068580 = {item: 1, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []};
var lesbianPride_1459618814 = {name: [76,101,115,98,105,97,110,32,80,114,105,100,101], technicalName: [], synergy: true, tier: 3, rarity: 1, description: [240,159,167,161,240,159,164,141,240,159,169,183], icon: [108,101,115,98,105,97,110,112,114,105,100,101,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459618799, index: (-1), priority: 1};
var knightChargePower_1459618962 = {name: [75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], technicalName: [], synergy: true, tier: 2, rarity: 4, description: [67,72,65,82,71,69,33,32,89,111,117,114,32,107,110,105,103,104,116,115,32,115,116,97,114,116,32,51,32,116,105,108,101,115,32,97,104,101,97,100,46], icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618941, index: (-1), priority: 20};
var nightRider_1459619090 = {name: [78,105,103,104,116,114,105,100,101,114], technicalName: [], synergy: true, tier: 3, rarity: 8, description: [78,105,103,104,116,114,105,100,101,114,46], icon: [110,105,103,104,116,114,105,100,101,114,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619071, index: (-1), priority: 3};
var desegregation_1459619110 = {name: [68,101,115,101,103,114,101,103,97,116,105,111,110,32,97,110,100,32,73,110,116,101,103,114,97,116,105,111,110], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Your bishops learn to accept their differences. They can move left and right."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619091, index: (-1), priority: 15};
      var blackQueen_1275068503 = {item: 1, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []};
var concubine_1459619209 = {name: [67,111,110,99,117,98,105,110,101], technicalName: [], synergy: true, tier: 2, rarity: 8, description: [89,111,117,114,32,114,111,111,107,32,98,101,99,111,109,101,115,32,97,32,113,117,101,101,110,32,119,104,101,110,32,105,116,32,99,97,115,116,108,101,115,46,46,46,46,32,89,111,117,39,114,101,32,115,105,99,107,46], icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619178, index: (-1), priority: 15};
    var whitePawn_1275068701 = {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []};
      var blackPawn_1275068684 = {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []};

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}
var reinforcements_1459619250 = {name: [82,101,105,110,102,111,114,99,101,109,101,110,116,115], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Do you really need more than 8 pawns? Your rooks spawn a pawn for every 2 pieces they takes."), icon: [114,111,111,107,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619210, index: (-1), priority: 25};
var shotgunKing_1459619297 = {name: [83,104,111,116,103,117,110,32,75,105,110,103], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Your king knows its 2nd ammendment rights. It can take pieces two ahead or two behind. \x0A                    If it does this take, it does not move from its initial tile."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619269, index: (-1), priority: 5};
var coward_1459619355 = {name: [67,111,119,97,114,100], technicalName: [], synergy: true, tier: 0, rarity: 8, description: [89,111,117,32,99,111,119,97,114,100,46,32,89,111,117,114,32,107,105,110,103,32,115,119,97,112,115,32,112,105,101,99,101,115,32,119,105,116,104,32,116,104,101,32,107,105,110,103,39,115,32,115,105,100,101,32,107,110,105,103,104,116,46], icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619339, index: (-1), priority: 25};
var lanceLeft_1459619549 = {name: [75,97,109,105,107,97,122,101], technicalName: [75,97,109,105,107,97,122,101,32,76,101,102,116], synergy: true, tier: 1, rarity: 4, description: makeNimstrLit("The divine wind is behind you. \x0A        Your left pawn is replaced with a lance from Shogi."), icon: [108,97,110,99,101,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459619498, index: (-1), priority: 5};
var lanceRight_1459619497 = {name: [75,97,109,105,107,97,122,101], technicalName: [75,97,109,105,107,97,122,101,32,82,105,103,104,116], synergy: true, tier: 1, rarity: 4, description: makeNimstrLit("The divine wind is behind you. \x0A        Your right pawn is replaced with a lance from Shogi."), icon: [108,97,110,99,101,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459619446, index: (-1), priority: 5};
                      var helper_1392508974 = new Uint32Array([3198944359, 3630892171]);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var drunkKnights_1459619685 = {name: [68,114,117,110,107,32,75,110,105,103,104,116,115], technicalName: [], synergy: true, tier: 2, rarity: 8, description: makeNimstrLit("Drunk riding is dangerous, your knights should be ashamed of themselves. \x0A        After every other turn, they randomly move."), icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619670, index: (-1), priority: 15};
var alcoholism_1459619697 = {name: [65,108,99,111,104,111,108,105,115,109], technicalName: [], synergy: true, tier: 3, rarity: 4, description: [89,111,117,39,114,101,32,102,97,109,105,108,105,101,115,32,97,110,100,32,102,114,105,101,110,100,115,32,109,105,115,115,32,121,111,117,46,32,84,104,101,32,114,101,97,108,32,121,111,117,46], icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619686, index: (-1), priority: 15};
var slumdogMillionaire_1459620081 = {name: [83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Have you seen the movie Slumdog Millionaire? It\'s kind of like that. \x0A                    Your pawns have a 1% chance of promoting whenever they move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620066, index: (-1), priority: 15};
var stupidPower_1459620109 = {name: [83,116,117,112,105,100,32,80,111,119,101,114], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("You have a 0.1% chance to automatically win each turn. Yeah, I\'m out of ideas. I\'m sorry."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620094, index: (-1), priority: 15};
var conversion_1459620144 = {name: [67,111,110,118,101,114,115,105,111,110], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("When your bishop takes a piece, it has a 15% chance to convert it to your color. \x0A                    When this happens, your bishop swaps places with it instead of taking it."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620133, index: (-1), priority: 15};
var americanDream_1459620216 = {name: [65,109,101,114,105,99,97,110,32,68,114,101,97,109], technicalName: [], synergy: true, tier: 2, rarity: 8, description: makeNimstrLit("All pieces, you and your opponent, are killed when they promote. It\'s not real."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620201, index: (-1), priority: 30};
var sleeperAgent_1459620269 = {name: [83,108,101,101,112,101,114,32,65,103,101,110,116], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("The silent river collapses in pieces. \x0A                    One of your pawns is a sleeper agent. They can take forward."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620217, index: (-1), priority: 30};
var capitalismPower_1459620411 = {name: [67,97,112,105,116,97,108,105,115,109], technicalName: [], synergy: true, tier: 1, rarity: 24, description: makeNimstrLit("The power of the free market is unmatched. \x0A                    All of your pieces get the ability to buy upgrades. \x0A                    You get 3 dollars for taking a piece.\x0A                    With 30 dollars, you can promote one piece. The promoted piece cannot move on the turn it is promoted."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620368, index: (-1), priority: 30};
var skyGlass_1459620885 = {name: [71,108,97,115,115,58,32,83,107,121], technicalName: [], synergy: true, tier: 1, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Sky on any \x0A                    open tile. These pieces teleport to their selected tile when the cast completes. \x0A                    Pieces cannot try to teleport to a tile where they would check the king. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620872, index: (-1), priority: 15};
var zeroGlass_1459620897 = {name: [71,108,97,115,115,58,32,90,101,114,111], technicalName: [], synergy: true, tier: 2, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Zero on  \x0A                    any non-king tile. Any piece on these tiles will die if the cast completes. Zero cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620886, index: (-1), priority: 15};
var steelGlass_1459620990 = {name: [71,108,97,115,115,58,32,83,116,101,101,108], technicalName: [], synergy: true, tier: 0, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 5 pieces to each cast Steel. \x0A                    If there is an enemy one tile in front of them when the cast completes, they take forward. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,116,101,101,108,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620973, index: (-1), priority: 15};
var reverieGlass_1459621493 = {name: [71,108,97,115,115,58,32,82,101,118,101,114,105,101], technicalName: [], synergy: true, tier: 0, rarity: 6, description: makeNimstrLit("On your turn, instead of moving you can choose 3 pieces to each cast Reverie on \x0A                    an opponent tile. When the cast completes, \x0A                    they swap moves and takes with whatever piece is on that tile. If that piece \x0A                    is a king, the cast fails. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [114,101,118,101,114,105,101,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459621482, index: (-1), priority: 0};
var ConstSet2 = setConstr([88, 148]);
      var toTag_721420612 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "html", "head", "title", "base", "link", "meta", "style", "script", "noscript", "body", "section", "nav", "article", "aside", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "header", "footer", "address", "main", "p", "hr", "pre", "blockquote", "ol", "ul", "li", "dl", "dt", "dd", "figure", "figcaption", "div", "a", "em", "strong", "small", "s", "cite", "quote", "dfn", "abbr", "data", "time", "code", "var", "samp", "kbd", "sub", "sup", "i", "b", "u", "mark", "ruby", "rt", "rp", "bdi", "dbo", "span", "br", "wbr", "ins", "del", "img", "iframe", "embed", "object", "param", "video", "audio", "source", "track", "canvas", "map", "area", "animate", "animateMotion", "animateTransform", "circle", "clipPath", "defs", "desc", "discard", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "set", "stop", "svg", "switch", "symbol", "text", "textPath", "tspan", "unknown", "use", "view", "maction", "math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msubsup", "msup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "semantics", "table", "caption", "colgroup", "col", "tbody", "thead", "tfoot", "tr", "td", "th", "form", "fieldset", "legend", "label", "input", "button", "select", "datalist", "optgroup", "option", "textarea", "keygen", "output", "progress", "meter", "details", "summary", "command", "menu", "bdo", "dialog", "slot", "template"];
var ConstSet3 = setConstr([149, 179]);
var ConstSet4 = setConstr([88, 148]);
      var toEventName_721420689 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];
var ConstSet5 = setConstr([88, 148]);

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}
  var myDebugPowers_520093787 = [{name: [67,97,112,105,116,97,108,105,115,109], technicalName: [], synergy: true, tier: 1, rarity: 24, description: makeNimstrLit("The power of the free market is unmatched. \x0A                    All of your pieces get the ability to buy upgrades. \x0A                    You get 3 dollars for taking a piece.\x0A                    With 30 dollars, you can promote one piece. The promoted piece cannot move on the turn it is promoted."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620368, index: (-1), priority: 30}, {name: [67,97,112,105,116,97,108,105,115,109,32,73,86], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,83,101,108,108], synergy: true, tier: 1, rarity: 0, description: makeNimstrLit("Who needs these pieces? AFUERA! You can sell a piece for 4 dollars. Each subsequent piece sold gives one less. "), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620653, index: (-1), priority: 15}, {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,73,110,99,111,109,101], synergy: true, tier: 0, rarity: 0, description: [72,101,114,101,44,32,104,97,118,101,32,49,48,32,100,111,108,108,97,114,115], icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620580, index: (-1), priority: 35}, {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,77,111,118,101,32,85,112], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("Money is pretty neat right? You can spend 8 dollars to move a piece one tile forward. It cannot take with this action."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620509, index: (-1), priority: 15}, {name: [67,97,112,105,116,97,108,105,115,109,32,73,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,85,112,103,114,97,100,101,32,75,110,105,103,104,116], synergy: true, tier: 1, rarity: 0, description: makeNimstrLit("Money can be used in exchange for goods and services. You can spend 8 dollars to give a piece the movement of a knight.\x0A                    This upgrade is 30 dollars more expensive for the king. The upgraded piece still cannot take like a knight."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620587, index: (-1), priority: 15}, {name: [67,97,112,105,116,97,108,105,115,109,32,77,77], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,79,32,84,72,69,32,77,79,79,78,33,33,33,33], icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620715, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,83,107,121], technicalName: [], synergy: true, tier: 1, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Sky on any \x0A                    open tile. These pieces teleport to their selected tile when the cast completes. \x0A                    Pieces cannot try to teleport to a tile where they would check the king. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620872, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,83,116,101,101,108], technicalName: [], synergy: true, tier: 0, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 5 pieces to each cast Steel. \x0A                    If there is an enemy one tile in front of them when the cast completes, they take forward. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,116,101,101,108,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620973, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,90,101,114,111], technicalName: [], synergy: true, tier: 2, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Zero on  \x0A                    any non-king tile. Any piece on these tiles will die if the cast completes. Zero cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620886, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,82,101,118,101,114,105,101], technicalName: [], synergy: true, tier: 0, rarity: 6, description: makeNimstrLit("On your turn, instead of moving you can choose 3 pieces to each cast Reverie on \x0A                    an opponent tile. When the cast completes, \x0A                    they swap moves and takes with whatever piece is on that tile. If that piece \x0A                    is a king, the cast fails. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [114,101,118,101,114,105,101,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459621482, index: (-1), priority: 0}];
  var opponentDebugPowers_520093792 = [{name: [68,101,118,101,108,111,112,101,100], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Your board arrives a little developed. Your 2 center pawns start one tile forward. \x0A        They can still move up 2 for their first move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618136, index: (-1), priority: 20}];

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}
    var rngPowers_1459621498 = [{name: [65,108,99,111,104,111,108,105,115,109], technicalName: [], synergy: true, tier: 3, rarity: 4, description: [89,111,117,39,114,101,32,102,97,109,105,108,105,101,115,32,97,110,100,32,102,114,105,101,110,100,115,32,109,105,115,115,32,121,111,117,46,32,84,104,101,32,114,101,97,108,32,121,111,117,46], icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619686, index: (-1), priority: 15}, {name: [68,114,117,110,107,32,75,110,105,103,104,116,115], technicalName: [], synergy: true, tier: 2, rarity: 8, description: makeNimstrLit("Drunk riding is dangerous, your knights should be ashamed of themselves. \x0A        After every other turn, they randomly move."), icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619670, index: (-1), priority: 15}, {name: [67,105,118,105,108,105,97,110,115], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Of course, a battle will have its civillians. And of course, the enemy won\'t kill them.\x0A                    3 civillians spawn on the enemy side. They randomly move and cannot be taken."), icon: [99,105,118,105,108,105,97,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619916, index: (-1), priority: 30}, {name: [83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("Have you seen the movie Slumdog Millionaire? It\'s kind of like that. \x0A                    Your pawns have a 1% chance of promoting whenever they move."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620066, index: (-1), priority: 15}, {name: [83,116,117,112,105,100,32,80,111,119,101,114], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("You have a 0.1% chance to automatically win each turn. Yeah, I\'m out of ideas. I\'m sorry."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620094, index: (-1), priority: 15}, {name: [83,108,101,101,112,101,114,32,65,103,101,110,116], technicalName: [], synergy: true, tier: 0, rarity: 8, description: makeNimstrLit("The silent river collapses in pieces. \x0A                    One of your pawns is a sleeper agent. They can take forward."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620217, index: (-1), priority: 30}, {name: [67,111,110,118,101,114,115,105,111,110], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("When your bishop takes a piece, it has a 15% chance to convert it to your color. \x0A                    When this happens, your bishop swaps places with it instead of taking it."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620133, index: (-1), priority: 15}];
    var experimentalPowers_1459621503 = [{name: [71,108,97,115,115,58,32,83,107,121], technicalName: [], synergy: true, tier: 1, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Sky on any \x0A                    open tile. These pieces teleport to their selected tile when the cast completes. \x0A                    Pieces cannot try to teleport to a tile where they would check the king. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,107,121,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620872, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,90,101,114,111], technicalName: [], synergy: true, tier: 2, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 2 pieces to each cast Zero on  \x0A                    any non-king tile. Any piece on these tiles will die if the cast completes. Zero cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620886, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,83,116,101,101,108], technicalName: [], synergy: true, tier: 0, rarity: 6, description: makeNimstrLit("On your turn, instead of moving, you can choose 5 pieces to each cast Steel. \x0A                    If there is an enemy one tile in front of them when the cast completes, they take forward. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [115,116,101,101,108,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620973, index: (-1), priority: 15}, {name: [71,108,97,115,115,58,32,82,101,118,101,114,105,101], technicalName: [], synergy: true, tier: 0, rarity: 6, description: makeNimstrLit("On your turn, instead of moving you can choose 3 pieces to each cast Reverie on \x0A                    an opponent tile. When the cast completes, \x0A                    they swap moves and takes with whatever piece is on that tile. If that piece \x0A                    is a king, the cast fails. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [114,101,118,101,114,105,101,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459621482, index: (-1), priority: 0}];
    var emptyPower_1442840639 = {name: [78,111,116,104,105,110,103,46,32,78,111,116,104,105,110,103,46,46,46], technicalName: [], synergy: true, tier: 0, rarity: 8, description: [84,104,105,115,32,100,111,101,115,32,110,111,116,104,105,110,103,46,32,85,110,108,117,99,107,121,33], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1442840634, index: 0, priority: 10};

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function negInt(a_33557092) {
  var result_33557093 = 0;

    result_33557093 = (a_33557092 * (-1));

  return result_33557093;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
    var toLowerRanges_1040188404 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, (-2508), 7357, 7359, (-2508), 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, (-10315), 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_1040188405 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, (-7115), 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, (-7017), 8490, (-7883), 8491, (-7762), 8498, 528, 8579, 501, 11360, 501, 11362, (-10243), 11363, (-3314), 11364, (-10227), 11367, 501, 11369, 501, 11371, 501, 11373, (-10280), 11374, (-10249), 11375, (-10283), 11376, (-10282), 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, (-34832), 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, (-41780), 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, (-41808), 42923, (-41819), 42924, (-41815), 42925, (-41805), 42926, (-41808), 42928, (-41758), 42929, (-41782), 42930, (-41761), 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, (-41807), 42950, (-34884)]);

function absInt(a_33557098) {
    var Temporary1;

  var result_33557099 = 0;

    if ((a_33557098 < 0)) {
    Temporary1 = (a_33557098 * (-1));
    }
    else {
    Temporary1 = a_33557098;
    }
    
    result_33557099 = Temporary1;

  return result_33557099;

}
                              var castingOnAnimations_520093728 = [[32,99,97,115,116,105,110,103,45,111,110,45,115,107,121,32], [32,99,97,115,116,105,110,103,45,111,110,45,122,101,114,111,32], [32,99,97,115,116,105,110,103,45,111,110,45,115,116,101,101,108,32], [32,99,97,115,116,105,110,103,45,111,110,45,114,101,118,101,114,105,101,32]];
            var castingAnimations_520093727 = [[32,99,97,115,116,105,110,103,45,115,107,121,32], [32,99,97,115,116,105,110,103,45,122,101,114,111,32], [32,99,97,115,116,105,110,103,45,115,116,101,101,108,32], [32,99,97,115,116,105,110,103,45,114,101,118,101,114,105,101,32]];
var F = {procname: "module kbase", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module kbase", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module kdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kdom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module kdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/kdom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jdict", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jdict.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jdict", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jdict.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jstrutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jstrutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jstrutils", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/jstrutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vstyles", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vstyles", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
framePtr = F;
F.line = 75;
F.filename = "vdom.nim";
var svgNamespace_721420514 = [[104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,48,47,115,118,103]];
F.line = 76;
var mathNamespace_721420515 = [[104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,56,47,77,97,116,104,47,77,97,116,104,77,76]];
F.line = 224;
var gid_721421004 = [0];
framePtr = F.prev;
var F = {procname: "module vdom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1124073649 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compact", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/compact.nim", line: 0};
framePtr = F;
F.line = 10;
F.filename = "compact.nim";
var vcomponents_754974733 = [{}];
F.line = 22;
framePtr = F.prev;
var F = {procname: "module compact", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/compact.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module karax", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
framePtr = F;
F.line = 60;
F.filename = "karax.nim";
var kxi__ = null;
framePtr = F.prev;
var F = {procname: "module karax", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module karaxdsl", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karaxdsl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module karaxdsl", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karaxdsl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module errors", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
framePtr = F;
F.line = 6;
F.filename = "errors.nim";
var gerrorMsgs_1207959558 = [{}];
F.line = 7;
var gerrorCounter_1207959559 = [0];
framePtr = F.prev;
var F = {procname: "module errors", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module piece", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module piece", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module board", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module board", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module moves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module moves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module basePieces", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module basePieces", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_1409287800 === undefined) {
  globalThis.utcInstance_1409287800 = [null];
}
F.line = 1372;
if (globalThis.localInstance_1409287801 === undefined) {
  globalThis.localInstance_1409287801 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module random", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
framePtr = F;
F.line = 109;
F.filename = "random.nim";
var state_1392508942 = [{a0: 1773455756, a1: 4275166512}];
framePtr = F.prev;
var F = {procname: "module random", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module port", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module port", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function HEX3Aanonymous_1442840634(__1442840635, __1442840636, __1442840637, __1442840638) {
  var F = {procname: "power.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1442841916 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_1442841916 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_1442841916;
            F.line = 46;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1442841916 = addInt(i_1442841916, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555838);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__1442841908 = 0;
      colontmp__1442841908 = (i_33556519 - 1);
      var res_1442841910 = colontmp__1442841908;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_1442841910)) break Label7;
            j_33556554 = res_1442841910;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_1442841910 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function seqOf_1442841183(t_1442841184) {
  var result_1442841185 = null;
  var result_1442841185_Idx = 0;

  var F = {procname: "power.seqOf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 134;
    F.filename = "power.nim";
    switch (t_1442841184) {
    case 0:
      F.line = 135;
      result_1442841185 = commonPowers_1442840654; result_1442841185_Idx = 0;
      break BeforeRet;
      break;
    case 1:
      F.line = 136;
      result_1442841185 = uncommonPowers_1442840655; result_1442841185_Idx = 0;
      break BeforeRet;
      break;
    case 2:
      F.line = 137;
      result_1442841185 = rarePowers_1442840656; result_1442841185_Idx = 0;
      break BeforeRet;
      break;
    case 3:
      F.line = 138;
      result_1442841185 = ultraRarePowers_1442840657; result_1442841185_Idx = 0;
      break BeforeRet;
      break;
    }
  };
  framePtr = F.prev;

  return [result_1442841185, result_1442841185_Idx];

}

function registerPower_1442841202(p_1442841203) {
    var Temporary2;

  var F = {procname: "power.registerPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 141;
    F.filename = "power.nim";
    var x_1442841204 = nimCopy(null, p_1442841203, NTI1442840582);
    F.line = 142;
    x_1442841204.index = addInt(powers_1442840650[0][chckIndx(subInt((powers_1442840650[0]).length, 1), 0, (powers_1442840650[0]).length - 1)].index, 1);
    if (eqStrings(x_1442841204.technicalName, [])) {
    F.line = 143;
    x_1442841204.technicalName = nimCopy(null, x_1442841204.name, NTI33554449);
    }
    
    F.line = 145;
    var Temporary1 = nimCopy(null, x_1442841204, NTI1442840582);
    powers_1442840650[0].push(Temporary1);;
    F.line = 146;
    var Temporary3 = nimCopy(null, x_1442841204, NTI1442840582);
    (Temporary2 = seqOf_1442841183(x_1442841204.tier), Temporary2)[0][Temporary2[1]].push(Temporary3);;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1442840640(__1442840641, __1442840642, __1442840643, __1442840644) {
  var F = {procname: "power.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}
var F = {procname: "module power", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
framePtr = F;
F.line = 74;
F.filename = "power.nim";
var powers_1442840650 = [[{name: [78,111,116,104,105,110,103,46,32,78,111,116,104,105,110,103,46,46,46], technicalName: [], synergy: true, tier: 0, rarity: 8, description: [84,104,105,115,32,100,111,101,115,32,110,111,116,104,105,110,103,46,32,85,110,108,117,99,107,121,33], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1442840634, index: 0, priority: 10}]];
F.line = 75;
var draftSynergies_1442840651 = [[]];
F.line = 76;
var secretSynergies_1442840652 = [[]];
F.line = 77;
var secretSecretSynergies_1442840653 = [[]];
F.line = 78;
var commonPowers_1442840654 = [[]];
F.line = 79;
var uncommonPowers_1442840655 = [[]];
F.line = 80;
var rarePowers_1442840656 = [[]];
F.line = 81;
var ultraRarePowers_1442840657 = [[]];
F.line = 198;
registerPower_1442841202(holy_1442840645);
framePtr = F.prev;
var F = {procname: "module power", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module extramoves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module extramoves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module capitalism", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module capitalism", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isAir_1224737900(p_1224737901) {
  var result_1224737902 = false;

  var F = {procname: "piece.isAir", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 270;
    F.filename = "piece.nim";
    result_1224737902 = (p_1224737901.item == 6);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737902;

}

function isColor_1224737917(a_1224737918, b_1224737919) {
  var result_1224737920 = false;

  var F = {procname: "piece.isColor", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 276;
    F.filename = "piece.nim";
    result_1224737920 = ((a_1224737918.color == b_1224737919) && !(isAir_1224737900(a_1224737918)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737920;

}

function add_1459617825(x_1459617827, x_1459617827_Idx, y_1459617828) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_1459617832 = (x_1459617827[x_1459617827_Idx]).length;
    F.line = 1211;
    if (x_1459617827[x_1459617827_Idx].length < (Temporary1 = chckRange(addInt(xl_1459617832, (y_1459617828).length), 0, 2147483647), Temporary1)) { for (var i = x_1459617827[x_1459617827_Idx].length ; i < Temporary1 ; ++i) x_1459617827[x_1459617827_Idx].push(null); }
               else { x_1459617827[x_1459617827_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_1459617847 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459621520 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__1459621520 = (y_1459617828).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621521 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1459621521 <= colontmp__1459621520)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_1459617847 = res_1459621521;
            F.line = 1212;
            x_1459617827[x_1459617827_Idx][chckIndx(addInt(xl_1459617832, i_1459617847), 0, (x_1459617827[x_1459617827_Idx]).length - 1)] = y_1459617828[chckIndx(i_1459617847, 0, (y_1459617828).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459621521 = addInt(res_1459621521, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function none_1308623032() {
  var result_1308623039 = ({val: ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1308623039;

}

function some_1308623040(val_1308623042) {
  var result_1308623043 = ({val: ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1308623043.has = true;
    F.line = 141;
    result_1308623043.val = nimCopy(result_1308623043.val, val_1308623042, NTI1224736794);
  framePtr = F.prev;

  return result_1308623043;

}

function boardRef_1308623009(b_1308623010, t_1308623011) {
  var result_1308623017 = ({val: ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), has: false});

  var F = {procname: "board.boardRef", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((((t_1308623011.Field0 < 0) || (8 <= t_1308623011.Field0)) || (t_1308623011.Field1 < 0)) || (8 <= t_1308623011.Field1))) {
    F.line = 57;
    F.filename = "board.nim";
    result_1308623017 = nimCopy(result_1308623017, none_1308623032(), NTI1308622957);
    break BeforeRet;
    }
    else {
      F.line = 59;
      result_1308623017 = nimCopy(result_1308623017, some_1308623040(b_1308623010[chckIndx(t_1308623011.Field1, 0, (b_1308623010).length - 1)][chckIndx(t_1308623011.Field0, 0, (b_1308623010[chckIndx(t_1308623011.Field1, 0, (b_1308623010).length - 1)]).length - 1)]), NTI1308622957);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1308623017;

}

function isSome_1291845652(self_1291845654) {
  var result_1291845655 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1291845655 = self_1291845654.has;
  framePtr = F.prev;

  return result_1291845655;

}

function isNone_1291845677(self_1291845679) {
  var result_1291845680 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_1291845680 = !(self_1291845679.has);
  framePtr = F.prev;

  return result_1291845680;

}

function get_1291845669(self_1291845671) {
  var result_1291845672 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_1291845677(self_1291845671)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_1291845672 = self_1291845671.val;
  framePtr = F.prev;

  return result_1291845672;

}

function sameColor_1224737908(a_1224737909, b_1224737910) {
  var result_1224737911 = false;

  var F = {procname: "piece.sameColor", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 273;
    F.filename = "piece.nim";
    result_1224737911 = (((a_1224737909.color == b_1224737910.color) && !(isAir_1224737900(a_1224737909))) && !(isAir_1224737900(b_1224737910)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737911;

}

function addIfTake_1291845739(addTo_1291845740, addTo_1291845740_Idx, board_1291845741, initialPiece_1291845742, t_1291845743, shoot_1291845744, throughFlag_1291845745, cannibalismFlag_1291845746) {
  var result_1291845747 = false;

  var F = {procname: "moves.addIfTake", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 26;
    F.filename = "moves.nim";
    var target_1291845749 = boardRef_1308623009(board_1291845741, shoot_1291845744(t_1291845743));
    if (((isSome_1291845652(target_1291845749) && !(isAir_1224737900(get_1291845669(target_1291845749)))) && (!(sameColor_1224737908(initialPiece_1291845742, get_1291845669(target_1291845749))) || cannibalismFlag_1291845746))) {
    F.line = 29;
    addTo_1291845740[addTo_1291845740_Idx].push(shoot_1291845744(t_1291845743));;
    F.line = 30;
    result_1291845747 = (false || throughFlag_1291845745);
    break BeforeRet;
    }
    
    F.line = 31;
    result_1291845747 = (isSome_1291845652(target_1291845749) && (isAir_1224737900(get_1291845669(target_1291845749)) || throughFlag_1291845745));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845747;

}

function shooterFactory_1308622968(m_1308622969, n_1308622970) {
    
function HEX3Aanonymous_1308622972(t_1308622973) {
      var result_1308622974 = {Field0: 0, Field1: 0};

      var F = {procname: "shooterFactory.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
      framePtr = F;
        F.line = 32;
        F.filename = "board.nim";
        var colontmp__1459621523 = addInt(t_1308622973.Field0, m_1308622969);
        F.line = 32;
        var colontmp__1459621524 = addInt(t_1308622973.Field1, n_1308622970);
        F.line = 32;
        result_1308622974 = nimCopy(result_1308622974, {Field0: colontmp__1459621523, Field1: colontmp__1459621524}, NTI1224736771);
      framePtr = F.prev;

      return result_1308622974;

    }

  var result_1308622971 = null;

  var F = {procname: "board.shooterFactory", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "board.nim";
    result_1308622971 = HEX3Aanonymous_1308622972;
  framePtr = F.prev;

  return result_1308622971;

}

function HEX3Aanonymous_1291846087(board_1291846088, p_1291846089) {
  var result_1291846090 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 175;
    F.filename = "moves.nim";
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(1, 2), false, false);
    F.line = 176;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-1), 2), false, false);
    F.line = 177;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(2, 1), false, false);
    F.line = 178;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(2, (-1)), false, false);
    F.line = 179;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968(1, (-2)), false, false);
    F.line = 180;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-1), (-2)), false, false);
    F.line = 181;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-2), 1), false, false);
    F.line = 182;
    var _ = addIfTake_1291845739(result_1291846090, 0, board_1291846088, p_1291846089, p_1291846089.tile, shooterFactory_1308622968((-2), (-1)), false, false);
  framePtr = F.prev;

  return result_1291846090[0];

}

function addIfFree_1291845640(addTo_1291845641, addTo_1291845641_Idx, board_1291845642, t_1291845643, shoot_1291845644) {
  var result_1291845645 = false;

  var F = {procname: "moves.addIfFree", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 13;
    F.filename = "moves.nim";
    var target_1291845647 = boardRef_1308623009(board_1291845642, shoot_1291845644(t_1291845643));
    if ((isSome_1291845652(target_1291845647) && isAir_1224737900(get_1291845669(target_1291845647)))) {
    F.line = 15;
    addTo_1291845641[addTo_1291845641_Idx].push(shoot_1291845644(t_1291845643));;
    F.line = 16;
    result_1291845645 = true;
    break BeforeRet;
    }
    
    F.line = 17;
    result_1291845645 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845645;

}

function HEX3Aanonymous_1291846082(board_1291846083, p_1291846084) {
  var result_1291846085 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "moves.nim";
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(1, 2));
    F.line = 166;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-1), 2));
    F.line = 167;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(1, (-2)));
    F.line = 168;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-1), (-2)));
    F.line = 169;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(2, 1));
    F.line = 170;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968(2, (-1)));
    F.line = 171;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-2), 1));
    F.line = 172;
    var _ = addIfFree_1291845640(result_1291846085, 0, board_1291846083, p_1291846084.tile, shooterFactory_1308622968((-2), (-1)));
  framePtr = F.prev;

  return result_1291846085[0];

}

function HEX3Aanonymous_1459617810(side_1459617811, __1459617812, b_1459617813, __1459617814) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 67;
      F.filename = "powers.nim";
      var i_1459617815 = 0;
      F.line = 67;
      var j_1459617816 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621512 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621513 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621513 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621512 = i_1459621513;
              Label5: {
                F.line = 114;
                var j_1459621516 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621517 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621517 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621516 = i_1459621517;
                      F.line = 67;
                      F.filename = "powers.nim";
                      i_1459617815 = i_1459621512;
                      F.line = 67;
                      j_1459617816 = j_1459621516;
                      if (((b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)][chckIndx(j_1459617816, 0, (b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)][chckIndx(j_1459617816, 0, (b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)]).length - 1)], side_1459617811))) {
                      F.line = 69;
                      add_1459617825(b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)][chckIndx(j_1459617816, 0, (b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1291846087]);
                      F.line = 70;
                      add_1459617825(b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)][chckIndx(j_1459617816, 0, (b_1459617813[chckIndx(i_1459617815, 0, (b_1459617813).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1291846082]);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621517 = addInt(i_1459621517, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621513 = addInt(i_1459621513, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395179(board_1476395180, p_1476395181) {
  var result_1476395182 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 123;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968(1, 3), false, false);
    F.line = 124;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968((-1), 3), false, false);
    F.line = 125;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968(1, (-3)), false, false);
    F.line = 126;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968((-1), (-3)), false, false);
    F.line = 127;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968(3, 1), false, false);
    F.line = 128;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968(3, (-1)), false, false);
    F.line = 129;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968((-3), 1), false, false);
    F.line = 130;
    var _ = addIfTake_1291845739(result_1476395182, 0, board_1476395180, p_1476395181, p_1476395181.tile, shooterFactory_1308622968((-3), (-1)), false, false);
  framePtr = F.prev;

  return result_1476395182[0];

}

function HEX3Aanonymous_1476395184(board_1476395185, p_1476395186) {
  var result_1476395187 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 133;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968(1, 3));
    F.line = 134;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968((-1), 3));
    F.line = 135;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968(1, (-3)));
    F.line = 136;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968((-1), (-3)));
    F.line = 137;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968(3, 1));
    F.line = 138;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968(3, (-1)));
    F.line = 139;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968((-3), 1));
    F.line = 140;
    var _ = addIfFree_1291845640(result_1476395187, 0, board_1476395185, p_1476395186.tile, shooterFactory_1308622968((-3), (-1)));
  framePtr = F.prev;

  return result_1476395187[0];

}

function HEX3Aanonymous_1459617873(side_1459617874, __1459617875, b_1459617876, __1459617877) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 83;
      F.filename = "powers.nim";
      var i_1459617878 = 0;
      F.line = 83;
      var j_1459617879 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621527 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621528 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621528 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621527 = i_1459621528;
              Label5: {
                F.line = 114;
                var j_1459621531 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621532 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621532 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621531 = i_1459621532;
                      F.line = 83;
                      F.filename = "powers.nim";
                      i_1459617878 = i_1459621527;
                      F.line = 83;
                      j_1459617879 = j_1459621531;
                      if (((b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)][chckIndx(j_1459617879, 0, (b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)][chckIndx(j_1459617879, 0, (b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)]).length - 1)], side_1459617874))) {
                      F.line = 85;
                      add_1459617825(b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)][chckIndx(j_1459617879, 0, (b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1476395179]);
                      F.line = 86;
                      add_1459617825(b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)][chckIndx(j_1459617879, 0, (b_1459617876[chckIndx(i_1459617878, 0, (b_1459617876).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1476395184]);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621532 = addInt(i_1459621532, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621528 = addInt(i_1459621528, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395033(board_1476395034, p_1476395035) {
  var result_1476395036 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 29;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395036, 0, board_1476395034, p_1476395035.tile, shooterFactory_1308622968(1, 1));
    F.line = 30;
    var _ = addIfFree_1291845640(result_1476395036, 0, board_1476395034, p_1476395035.tile, shooterFactory_1308622968((-1), 1));
    F.line = 31;
    var _ = addIfFree_1291845640(result_1476395036, 0, board_1476395034, p_1476395035.tile, shooterFactory_1308622968(1, (-1)));
    F.line = 32;
    var _ = addIfFree_1291845640(result_1476395036, 0, board_1476395034, p_1476395035.tile, shooterFactory_1308622968((-1), (-1)));
  framePtr = F.prev;

  return result_1476395036[0];

}

function tileBelow_1308622993(t_1308622994) {
  var result_1308622995 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileBelow", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 38;
    F.filename = "board.nim";
    var colontmp__1459621534 = t_1308622994.Field0;
    F.line = 38;
    var colontmp__1459621535 = addInt(t_1308622994.Field1, 1);
    F.line = 38;
    result_1308622995 = nimCopy(result_1308622995, {Field0: colontmp__1459621534, Field1: colontmp__1459621535}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622995;

}

function HEX3Aanonymous_1476395058(board_1476395059, p_1476395060) {
  var result_1476395061 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395061, 0, board_1476395059, p_1476395060.tile, tileBelow_1308622993);
  framePtr = F.prev;

  return result_1476395061[0];

}

function HEX3Aanonymous_1476395038(board_1476395039, p_1476395040) {
  var result_1476395041 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 35;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395041, 0, board_1476395039, p_1476395040, p_1476395040.tile, shooterFactory_1308622968(1, 1), false, false);
    F.line = 36;
    var _ = addIfTake_1291845739(result_1476395041, 0, board_1476395039, p_1476395040, p_1476395040.tile, shooterFactory_1308622968((-1), 1), false, false);
    F.line = 37;
    var _ = addIfTake_1291845739(result_1476395041, 0, board_1476395039, p_1476395040, p_1476395040.tile, shooterFactory_1308622968(1, (-1)), false, false);
    F.line = 38;
    var _ = addIfTake_1291845739(result_1476395041, 0, board_1476395039, p_1476395040, p_1476395040.tile, shooterFactory_1308622968((-1), (-1)), false, false);
  framePtr = F.prev;

  return result_1476395041[0];

}

function HEX3Aanonymous_1476395068(board_1476395069, p_1476395070) {
  var result_1476395071 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 58;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395071, 0, board_1476395069, p_1476395070, p_1476395070.tile, tileBelow_1308622993, false, false);
  framePtr = F.prev;

  return result_1476395071[0];

}

function tileAbove_1308622990(t_1308622991) {
  var result_1308622992 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileAbove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 35;
    F.filename = "board.nim";
    var colontmp__1459621536 = t_1308622991.Field0;
    F.line = 35;
    var colontmp__1459621537 = subInt(t_1308622991.Field1, 1);
    F.line = 35;
    result_1308622992 = nimCopy(result_1308622992, {Field0: colontmp__1459621536, Field1: colontmp__1459621537}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622992;

}

function HEX3Aanonymous_1476395053(board_1476395054, p_1476395055) {
  var result_1476395056 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 49;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395056, 0, board_1476395054, p_1476395055.tile, tileAbove_1308622990);
  framePtr = F.prev;

  return result_1476395056[0];

}

function HEX3Aanonymous_1476395063(board_1476395064, p_1476395065) {
  var result_1476395066 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395066, 0, board_1476395064, p_1476395065, p_1476395065.tile, tileAbove_1308622990, false, false);
  framePtr = F.prev;

  return result_1476395066[0];

}

function isAtEnd_1224738102(piece_1224738103) {
  var result_1224738104 = false;

  var F = {procname: "piece.isAtEnd", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 319;
    F.filename = "piece.nim";
    result_1224738104 = (((piece_1224738103.tile.Field1 == 7) && (piece_1224738103.color == 0)) || ((piece_1224738103.tile.Field1 == 0) && (piece_1224738103.color == 1)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224738104;

}

function HEX3Aanonymous_1459617988(piece_1459617989, board_1459617990, state_1459617991) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((isAtEnd_1224738102(piece_1459617989) && !(piece_1459617989.promoted))) {
    Label1: {
      F.line = 169;
      F.filename = "piece.nim";
      var xHEX60gensym12_1459617996 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621540 = 0;
      F.line = 250;
      var L_1459621541 = (piece_1459617989.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621540 < L_1459621541)) break Label3;
            F.line = 107;
            F.filename = "powers.nim";
            xHEX60gensym12_1459617996 = piece_1459617989.onPromote[chckIndx(i_1459621540, 0, (piece_1459617989.onPromote).length - 1)];
            F.line = 170;
            F.filename = "piece.nim";
            xHEX60gensym12_1459617996(piece_1459617989, board_1459617990, state_1459617991);
            if (piece_1459617989.promoted) {
            F.line = 171;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621540 += 1;
            if (!(((piece_1459617989.onPromote).length == L_1459621541))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function newSeq_1291845948(len_1291845950) {
  var result_1291845951 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1291845951 = new Array(len_1291845950); for (var i = 0 ; i < len_1291845950 ; ++i) { result_1291845951[i] = null; }  framePtr = F.prev;

  return result_1291845951;

}

function HEX3Aanonymous_1476395013(board_1476395014, p_1476395015) {
  var result_1476395016 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 13;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395016, 0, board_1476395014, p_1476395015.tile, shooterFactory_1308622968(1, (-1)));
    F.line = 14;
    var _ = addIfFree_1291845640(result_1476395016, 0, board_1476395014, p_1476395015.tile, shooterFactory_1308622968((-1), (-1)));
  framePtr = F.prev;

  return result_1476395016[0];

}

function tileLeft_1308622996(t_1308622997) {
  var result_1308622998 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileLeft", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 41;
    F.filename = "board.nim";
    var colontmp__1459621552 = subInt(t_1308622997.Field0, 1);
    F.line = 41;
    var colontmp__1459621553 = t_1308622997.Field1;
    F.line = 41;
    result_1308622998 = nimCopy(result_1308622998, {Field0: colontmp__1459621552, Field1: colontmp__1459621553}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622998;

}

function tileRight_1308622999(t_1308623000) {
  var result_1308623001 = {Field0: 0, Field1: 0};

  var F = {procname: "board.tileRight", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 44;
    F.filename = "board.nim";
    var colontmp__1459621554 = addInt(t_1308623000.Field0, 1);
    F.line = 44;
    var colontmp__1459621555 = t_1308623000.Field1;
    F.line = 44;
    result_1308623001 = nimCopy(result_1308623001, {Field0: colontmp__1459621554, Field1: colontmp__1459621555}, NTI1224736771);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308623001;

}

function HEX3Aanonymous_1476395043(board_1476395044, p_1476395045) {
  var result_1476395046 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395046, 0, board_1476395044, p_1476395045.tile, tileLeft_1308622996);
    F.line = 42;
    var _ = addIfFree_1291845640(result_1476395046, 0, board_1476395044, p_1476395045.tile, tileRight_1308622999);
  framePtr = F.prev;

  return result_1476395046[0];

}

function HEX3Aanonymous_1476395023(board_1476395024, p_1476395025) {
  var result_1476395026 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395026, 0, board_1476395024, p_1476395025, p_1476395025.tile, shooterFactory_1308622968(1, (-1)), false, false);
    F.line = 22;
    var _ = addIfTake_1291845739(result_1476395026, 0, board_1476395024, p_1476395025, p_1476395025.tile, shooterFactory_1308622968((-1), (-1)), false, false);
  framePtr = F.prev;

  return result_1476395026[0];

}

function HEX3Aanonymous_1476395048(board_1476395049, p_1476395050) {
  var result_1476395051 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 45;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395051, 0, board_1476395049, p_1476395050, p_1476395050.tile, tileLeft_1308622996, false, false);
    F.line = 46;
    var _ = addIfTake_1291845739(result_1476395051, 0, board_1476395049, p_1476395050, p_1476395050.tile, tileRight_1308622999, false, false);
  framePtr = F.prev;

  return result_1476395051[0];

}

function HEX3Aanonymous_1476395018(board_1476395019, p_1476395020) {
  var result_1476395021 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395021, 0, board_1476395019, p_1476395020.tile, shooterFactory_1308622968(1, 1));
    F.line = 18;
    var _ = addIfFree_1291845640(result_1476395021, 0, board_1476395019, p_1476395020.tile, shooterFactory_1308622968((-1), 1));
  framePtr = F.prev;

  return result_1476395021[0];

}

function HEX3Aanonymous_1476395028(board_1476395029, p_1476395030) {
  var result_1476395031 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395031, 0, board_1476395029, p_1476395030, p_1476395030.tile, shooterFactory_1308622968(1, 1), false, false);
    F.line = 26;
    var _ = addIfTake_1291845739(result_1476395031, 0, board_1476395029, p_1476395030, p_1476395030.tile, shooterFactory_1308622968((-1), 1), false, false);
  framePtr = F.prev;

  return result_1476395031[0];

}

function HEX3Aanonymous_1459617901(piece_1459617902, board_1459617903, state_1459617904) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "powers.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym4_1459617909 = newSeq_1291845948(0);
    Label1: {
      F.line = 653;
      var it_1459617913 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621545 = 0;
      F.line = 250;
      var L_1459621546 = (piece_1459617902.moves).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621545 < L_1459621546)) break Label3;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1459617913 = piece_1459617902.moves[chckIndx(i_1459621545, 0, (piece_1459617902.moves).length - 1)];
            if (!((it_1459617913 == HEX3Aanonymous_1476395033))) {
            F.line = 654;
            resultHEX60gensym4_1459617909.push(it_1459617913);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621545 += 1;
            if (!(((piece_1459617902.moves).length == L_1459621546))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    piece_1459617902.moves = nimCopy(null, resultHEX60gensym4_1459617909, NTI1291845874);
    F.line = 92;
    F.filename = "powers.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym6_1459617926 = newSeq_1291845948(0);
    Label4: {
      F.line = 653;
      var it_1459617930 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621549 = 0;
      F.line = 250;
      var L_1459621550 = (piece_1459617902.takes).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_1459621549 < L_1459621550)) break Label6;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1459617930 = piece_1459617902.takes[chckIndx(i_1459621549, 0, (piece_1459617902.takes).length - 1)];
            if (!((it_1459617930 == HEX3Aanonymous_1476395038))) {
            F.line = 654;
            resultHEX60gensym6_1459617926.push(it_1459617930);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621549 += 1;
            if (!(((piece_1459617902.takes).length == L_1459621550))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    piece_1459617902.takes = nimCopy(null, resultHEX60gensym6_1459617926, NTI1291845874);
    if (isColor_1224737917(piece_1459617902, 1)) {
    F.line = 97;
    F.filename = "powers.nim";
    add_1459617825(piece_1459617902, "moves", [HEX3Aanonymous_1476395058, HEX3Aanonymous_1476395013, HEX3Aanonymous_1476395043]);
    F.line = 98;
    add_1459617825(piece_1459617902, "takes", [HEX3Aanonymous_1476395068, HEX3Aanonymous_1476395023, HEX3Aanonymous_1476395048]);
    }
    else {
      F.line = 100;
      add_1459617825(piece_1459617902, "moves", [HEX3Aanonymous_1476395053, HEX3Aanonymous_1476395018, HEX3Aanonymous_1476395043]);
      F.line = 101;
      add_1459617825(piece_1459617902, "takes", [HEX3Aanonymous_1476395063, HEX3Aanonymous_1476395028, HEX3Aanonymous_1476395048]);
    }
    
    F.line = 102;
    piece_1459617902.promoted = true;
    F.line = 103;
    piece_1459617902.filePath = nimCopy(null, [112,114,111,109,111,116,101,100,115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618000(side_1459618001, viewSide_1459618002, b_1459618003, __1459618004) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 123;
    F.filename = "powers.nim";
    if ((side_1459618001 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618009 = Temporary1;
    if (!((b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].color == side_1459618001))) {
    F.line = 124;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(124, 13) `b[rank][1].color == side` "));
    }
    
    if ((side_1459618001 == 0)) {
    F.line = 126;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395058], NTI1275068559);
    F.line = 127;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395068], NTI1275068559);
    }
    else {
      F.line = 129;
      b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395053], NTI1275068559);
      F.line = 130;
      b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395063], NTI1275068559);
    }
    
    F.line = 131;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1459617988], NTI1275068484);
    F.line = 132;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1459617901], NTI1275068484);
    F.line = 133;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].item = 7;
    F.line = 134;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].filePath = nimCopy(null, [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 135;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].colorable = false;
    if (!((side_1459618001 == viewSide_1459618002))) {
    F.line = 136;
    b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)][chckIndx(1, 0, (b_1459618003[chckIndx(rank_1459618009, 0, (b_1459618003).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618084(side_1459618085, viewSide_1459618086, b_1459618087, __1459618088) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 153;
    F.filename = "powers.nim";
    if ((side_1459618085 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618093 = Temporary1;
    if (!((b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].color == side_1459618085))) {
    F.line = 154;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(154, 13) `b[rank][6].color == side` "));
    }
    
    if ((side_1459618085 == 0)) {
    F.line = 156;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395058], NTI1275068559);
    F.line = 157;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395068], NTI1275068559);
    }
    else {
      F.line = 159;
      b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395053], NTI1275068559);
      F.line = 160;
      b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395063], NTI1275068559);
    }
    
    F.line = 161;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1459617988], NTI1275068484);
    F.line = 162;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1459617901], NTI1275068484);
    F.line = 163;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].item = 7;
    F.line = 164;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].filePath = nimCopy(null, [115,105,108,118,101,114,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 165;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].colorable = false;
    if (!((side_1459618085 == viewSide_1459618086))) {
    F.line = 166;
    b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)][chckIndx(6, 0, (b_1459618087[chckIndx(rank_1459618093, 0, (b_1459618087).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function newIndex_1224737419(s_1224737420) {
  var result_1224737421 = 0;

  var F = {procname: "piece.newIndex", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "piece.nim";
    s_1224737420.Field0.nextIndex = addInt(s_1224737420.Field0.nextIndex, 1);
    F.line = 185;
    result_1224737421 = s_1224737420.Field0.nextIndex;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737421;

}

function pieceMove_1224737720(p_1224737721, rank_1224737722, file_1224737723, board_1224737724, state_1224737725) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 211;
    F.filename = "piece.nim";
    board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)][chckIndx(file_1224737723, 0, (board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)]).length - 1)] = nimCopy(board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)][chckIndx(file_1224737723, 0, (board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)]).length - 1)], board_1224737724[chckIndx(p_1224737721.tile.Field1, 0, (board_1224737724).length - 1)][chckIndx(p_1224737721.tile.Field0, 0, (board_1224737724[chckIndx(p_1224737721.tile.Field1, 0, (board_1224737724).length - 1)]).length - 1)], NTI1224736794);
    F.line = 212;
    board_1224737724[chckIndx(p_1224737721.tile.Field1, 0, (board_1224737724).length - 1)][chckIndx(p_1224737721.tile.Field0, 0, (board_1224737724[chckIndx(p_1224737721.tile.Field1, 0, (board_1224737724).length - 1)]).length - 1)] = nimCopy(board_1224737724[chckIndx(p_1224737721.tile.Field1, 0, (board_1224737724).length - 1)][chckIndx(p_1224737721.tile.Field0, 0, (board_1224737724[chckIndx(p_1224737721.tile.Field1, 0, (board_1224737724).length - 1)]).length - 1)], {index: newIndex_1224737419(state_1224737725), item: 6, tile: nimCopy(null, p_1224737721.tile, NTI1224736771), timesMoved: 0, piecesTaken: 0, promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, color: 0, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], casts: []}, NTI1224736794);
    F.line = 213;
    var colontmp__1459621556 = file_1224737723;
    F.line = 213;
    var colontmp__1459621557 = rank_1224737722;
    F.line = 213;
    board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)][chckIndx(file_1224737723, 0, (board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)]).length - 1)].tile = nimCopy(board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)][chckIndx(file_1224737723, 0, (board_1224737724[chckIndx(rank_1224737722, 0, (board_1224737724).length - 1)]).length - 1)].tile, {Field0: colontmp__1459621556, Field1: colontmp__1459621557}, NTI1224736771);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618136(side_1459618137, __1459618138, b_1459618139, s_1459618140) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1459618137 == 0)) {
    F.line = 182;
    F.filename = "powers.nim";
    pieceMove_1224737720(b_1459618139[chckIndx(1, 0, (b_1459618139).length - 1)][chckIndx(3, 0, (b_1459618139[chckIndx(1, 0, (b_1459618139).length - 1)]).length - 1)], 2, 3, b_1459618139, s_1459618140);
    F.line = 183;
    pieceMove_1224737720(b_1459618139[chckIndx(1, 0, (b_1459618139).length - 1)][chckIndx(4, 0, (b_1459618139[chckIndx(1, 0, (b_1459618139).length - 1)]).length - 1)], 2, 4, b_1459618139, s_1459618140);
    }
    else {
      F.line = 185;
      pieceMove_1224737720(b_1459618139[chckIndx(6, 0, (b_1459618139).length - 1)][chckIndx(3, 0, (b_1459618139[chckIndx(6, 0, (b_1459618139).length - 1)]).length - 1)], 5, 3, b_1459618139, s_1459618140);
      F.line = 186;
      pieceMove_1224737720(b_1459618139[chckIndx(6, 0, (b_1459618139).length - 1)][chckIndx(4, 0, (b_1459618139[chckIndx(6, 0, (b_1459618139).length - 1)]).length - 1)], 5, 4, b_1459618139, s_1459618140);
    }
    
  framePtr = F.prev;

  
}

function add_1224737462(x_1224737464, x_1224737464_Idx, y_1224737465) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_1224737470 = (x_1224737464[x_1224737464_Idx]).length;
    F.line = 1211;
    if (x_1224737464[x_1224737464_Idx].length < (Temporary1 = chckRange(addInt(xl_1224737470, (y_1224737465).length), 0, 2147483647), Temporary1)) { for (var i = x_1224737464[x_1224737464_Idx].length ; i < Temporary1 ; ++i) x_1224737464[x_1224737464_Idx].push({Field0: 0, Field1: 0}); }
               else { x_1224737464[x_1224737464_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_1224737486 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459621568 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__1459621568 = (y_1224737465).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621569 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1459621569 <= colontmp__1459621568)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_1224737486 = res_1459621569;
            F.line = 1212;
            x_1224737464[x_1224737464_Idx][chckIndx(addInt(xl_1224737470, i_1224737486), 0, (x_1224737464[x_1224737464_Idx]).length - 1)] = nimCopy(x_1224737464[x_1224737464_Idx][chckIndx(addInt(xl_1224737470, i_1224737486), 0, (x_1224737464[x_1224737464_Idx]).length - 1)], y_1224737465[chckIndx(i_1224737486, 0, (y_1224737465).length - 1)], NTI1224736771);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459621569 = addInt(res_1459621569, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function lineTakes_1291845819(board_1291845820, p_1291845821, shoot_1291845822, throughFlag_1291845823, cannibalismFlag_1291845824) {
  var result_1291845825 = [[]];

  var F = {procname: "moves.lineTakes", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 46;
    F.filename = "moves.nim";
    var next_1291845826 = nimCopy(null, p_1291845821.tile, NTI1224736771);
    Label1: {
      F.line = 47;
        Label2: while (true) {
        if (!addIfTake_1291845739(result_1291845825, 0, board_1291845820, p_1291845821, next_1291845826, shoot_1291845822, throughFlag_1291845823, cannibalismFlag_1291845824)) break Label2;
          F.line = 48;
          next_1291845826 = nimCopy(next_1291845826, shoot_1291845822(next_1291845826), NTI1224736771);
        }
    };
  framePtr = F.prev;

  return result_1291845825[0];

}

function HEX3Aanonymous_1476395120(board_1476395121, p_1476395122) {
  var result_1476395123 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395123, 0, lineTakes_1291845819(board_1476395121, p_1476395122, shooterFactory_1308622968(1, 1), false, true));
    F.line = 91;
    add_1224737462(result_1476395123, 0, lineTakes_1291845819(board_1476395121, p_1476395122, shooterFactory_1308622968((-1), 1), false, true));
    F.line = 92;
    add_1224737462(result_1476395123, 0, lineTakes_1291845819(board_1476395121, p_1476395122, shooterFactory_1308622968(1, (-1)), false, true));
    F.line = 93;
    add_1224737462(result_1476395123, 0, lineTakes_1291845819(board_1476395121, p_1476395122, shooterFactory_1308622968((-1), (-1)), false, true));
  framePtr = F.prev;

  return result_1476395123[0];

}

function newSeq_1224737683(len_1224737685) {
  var result_1224737686 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1224737686 = new Array(len_1224737685); for (var i = 0 ; i < len_1224737685 ; ++i) { result_1224737686[i] = {Field0: 0, Field1: 0}; }  framePtr = F.prev;

  return result_1224737686;

}

function HEX3DHEX3D_1308622964(a_1308622965, b_1308622966) {
  var result_1308622967 = false;

  var F = {procname: "board.==", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 25;
    F.filename = "board.nim";
    result_1308622967 = ((a_1308622965.Field0 == b_1308622966.Field0) && (a_1308622965.Field1 == b_1308622966.Field1));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1308622967;

}

function HEX3Aanonymous_1476395141(board_1476395142, p_1476395143) {
  var result_1476395144 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 96;
    F.filename = "extramoves.nim";
    Label1: {
      F.line = 96;
      var i_1476395149 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621576 = (-1);
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459621576 <= 1)) break Label3;
            F.line = 96;
            F.filename = "extramoves.nim";
            i_1476395149 = res_1459621576;
            Label4: {
              F.line = 97;
              var j_1476395154 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_1459621574 = (-1);
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_1459621574 <= 1)) break Label6;
                    F.line = 97;
                    F.filename = "extramoves.nim";
                    j_1476395154 = res_1459621574;
                    F.line = 98;
                    var _ = addIfTake_1291845739(result_1476395144, 0, board_1476395142, p_1476395143, p_1476395143.tile, shooterFactory_1308622968(i_1476395149, j_1476395154), false, true);
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_1459621574 = addInt(res_1459621574, 1);
                  }
              };
            };
            F.line = 102;
            res_1459621576 = addInt(res_1459621576, 1);
          }
      };
    };
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym0_1476395159 = newSeq_1224737683(0);
    Label7: {
      F.line = 653;
      var it_1476395163 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621580 = 0;
      F.line = 250;
      var L_1459621581 = (result_1476395144[0]).length;
      Label8: {
        F.line = 251;
          Label9: while (true) {
          if (!(i_1459621580 < L_1459621581)) break Label9;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1476395163 = result_1476395144[0][chckIndx(i_1459621580, 0, (result_1476395144[0]).length - 1)];
            if (!(HEX3DHEX3D_1308622964(it_1476395163, p_1476395143.tile))) {
            F.line = 654;
            var Temporary10 = nimCopy(null, it_1476395163, NTI1224736771);
            resultHEX60gensym0_1476395159.push(Temporary10);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621580 += 1;
            if (!(((result_1476395144[0]).length == L_1459621581))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1476395144[0] = nimCopy(null, resultHEX60gensym0_1476395159, NTI1224737429);
  framePtr = F.prev;

  return result_1476395144[0];

}

function HEX3Aanonymous_1476395099(board_1476395100, p_1476395101) {
  var result_1476395102 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 84;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395102, 0, lineTakes_1291845819(board_1476395100, p_1476395101, tileAbove_1308622990, false, true));
    F.line = 85;
    add_1224737462(result_1476395102, 0, lineTakes_1291845819(board_1476395100, p_1476395101, tileBelow_1308622993, false, true));
    F.line = 86;
    add_1224737462(result_1476395102, 0, lineTakes_1291845819(board_1476395100, p_1476395101, tileLeft_1308622996, false, true));
    F.line = 87;
    add_1224737462(result_1476395102, 0, lineTakes_1291845819(board_1476395100, p_1476395101, tileRight_1308622999, false, true));
  framePtr = F.prev;

  return result_1476395102[0];

}

function HEX3Aanonymous_1459618146(side_1459618147, __1459618148, b_1459618149, __1459618150) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 198;
      F.filename = "powers.nim";
      var i_1459618151 = 0;
      F.line = 198;
      var j_1459618152 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621560 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621561 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621561 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621560 = i_1459621561;
              Label5: {
                F.line = 114;
                var j_1459621564 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621565 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621565 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621564 = i_1459621565;
                      F.line = 198;
                      F.filename = "powers.nim";
                      i_1459618151 = i_1459621560;
                      F.line = 198;
                      j_1459618152 = j_1459621564;
                      if (((b_1459618149[chckIndx(i_1459618151, 0, (b_1459618149).length - 1)][chckIndx(j_1459618152, 0, (b_1459618149[chckIndx(i_1459618151, 0, (b_1459618149).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618149[chckIndx(i_1459618151, 0, (b_1459618149).length - 1)][chckIndx(j_1459618152, 0, (b_1459618149[chckIndx(i_1459618151, 0, (b_1459618149).length - 1)]).length - 1)], side_1459618147))) {
                      F.line = 200;
                      add_1459617825(b_1459618149[chckIndx(i_1459618151, 0, (b_1459618149).length - 1)][chckIndx(j_1459618152, 0, (b_1459618149[chckIndx(i_1459618151, 0, (b_1459618149).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1476395120, HEX3Aanonymous_1476395141, HEX3Aanonymous_1476395099]);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621565 = addInt(i_1459621565, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621561 = addInt(i_1459621561, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function pieceSwap_1224737759(p1_1224737760, p2_1224737761, board_1224737762) {
  var F = {procname: "piece.pieceSwap", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 225;
    F.filename = "piece.nim";
    var temp_1224737763 = nimCopy(null, p1_1224737760, NTI1224736794);
    F.line = 227;
    board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(p1_1224737760.tile.Field0, 0, (board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)] = nimCopy(board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(p1_1224737760.tile.Field0, 0, (board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)], p2_1224737761, NTI1224736794);
    F.line = 228;
    board_1224737762[chckIndx(p2_1224737761.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(p2_1224737761.tile.Field0, 0, (board_1224737762[chckIndx(p2_1224737761.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)] = nimCopy(board_1224737762[chckIndx(p2_1224737761.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(p2_1224737761.tile.Field0, 0, (board_1224737762[chckIndx(p2_1224737761.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)], temp_1224737763, NTI1224736794);
    F.line = 229;
    var colontmp__1459621583 = p1_1224737760.tile.Field0;
    F.line = 229;
    var colontmp__1459621584 = p1_1224737760.tile.Field1;
    F.line = 229;
    board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(p1_1224737760.tile.Field0, 0, (board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)].tile = nimCopy(board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(p1_1224737760.tile.Field0, 0, (board_1224737762[chckIndx(p1_1224737760.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)].tile, {Field0: colontmp__1459621583, Field1: colontmp__1459621584}, NTI1224736771);
    F.line = 230;
    var colontmp__1459621585 = temp_1224737763.tile.Field0;
    F.line = 230;
    var colontmp__1459621586 = temp_1224737763.tile.Field1;
    F.line = 230;
    board_1224737762[chckIndx(temp_1224737763.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(temp_1224737763.tile.Field0, 0, (board_1224737762[chckIndx(temp_1224737763.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)].tile = nimCopy(board_1224737762[chckIndx(temp_1224737763.tile.Field1, 0, (board_1224737762).length - 1)][chckIndx(temp_1224737763.tile.Field0, 0, (board_1224737762[chckIndx(temp_1224737763.tile.Field1, 0, (board_1224737762).length - 1)]).length - 1)].tile, {Field0: colontmp__1459621585, Field1: colontmp__1459621586}, NTI1224736771);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618188(side_1459618189, __1459618190, b_1459618191, __1459618192) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "powers.nim";
    if ((side_1459618189 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618197 = Temporary1;
    F.line = 245;
    pieceSwap_1224737759(b_1459618191[chckIndx(rank_1459618197, 0, (b_1459618191).length - 1)][chckIndx(2, 0, (b_1459618191[chckIndx(rank_1459618197, 0, (b_1459618191).length - 1)]).length - 1)], (Temporary2 = b_1459618191[chckIndx(addInt(rank_1459618197, 1), 0, (b_1459618191).length - 1)], Temporary2)[chckIndx(2, 0, (Temporary2).length - 1)], b_1459618191);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618199(side_1459618200, __1459618201, b_1459618202, __1459618203) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 259;
    F.filename = "powers.nim";
    if ((side_1459618200 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618208 = Temporary1;
    F.line = 260;
    pieceSwap_1224737759(b_1459618202[chckIndx(rank_1459618208, 0, (b_1459618202).length - 1)][chckIndx(5, 0, (b_1459618202[chckIndx(rank_1459618208, 0, (b_1459618202).length - 1)]).length - 1)], (Temporary2 = b_1459618202[chckIndx(addInt(rank_1459618208, 1), 0, (b_1459618202).length - 1)], Temporary2)[chckIndx(5, 0, (Temporary2).length - 1)], b_1459618202);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618166(side_1459618167, __1459618168, b_1459618169, __1459618170) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 214;
    F.filename = "powers.nim";
    if ((side_1459618167 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618175 = Temporary1;
    F.line = 215;
    pieceSwap_1224737759(b_1459618169[chckIndx(rank_1459618175, 0, (b_1459618169).length - 1)][chckIndx(0, 0, (b_1459618169[chckIndx(rank_1459618175, 0, (b_1459618169).length - 1)]).length - 1)], (Temporary2 = b_1459618169[chckIndx(addInt(rank_1459618175, 1), 0, (b_1459618169).length - 1)], Temporary2)[chckIndx(0, 0, (Temporary2).length - 1)], b_1459618169);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618177(side_1459618178, __1459618179, b_1459618180, __1459618181) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 229;
    F.filename = "powers.nim";
    if ((side_1459618178 == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618186 = Temporary1;
    F.line = 230;
    pieceSwap_1224737759(b_1459618180[chckIndx(rank_1459618186, 0, (b_1459618180).length - 1)][chckIndx(7, 0, (b_1459618180[chckIndx(rank_1459618186, 0, (b_1459618180).length - 1)]).length - 1)], (Temporary2 = b_1459618180[chckIndx(addInt(rank_1459618186, 1), 0, (b_1459618180).length - 1)], Temporary2)[chckIndx(7, 0, (Temporary2).length - 1)], b_1459618180);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618210(piece_1459618211, board_1459618212, state_1459618213) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((piece_1459618211.piecesTaken == 3)) {
    Label1: {
      F.line = 169;
      F.filename = "piece.nim";
      var xHEX60gensym20_1459618218 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621597 = 0;
      F.line = 250;
      var L_1459621598 = (piece_1459618211.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621597 < L_1459621598)) break Label3;
            F.line = 265;
            F.filename = "powers.nim";
            xHEX60gensym20_1459618218 = piece_1459618211.onPromote[chckIndx(i_1459621597, 0, (piece_1459618211.onPromote).length - 1)];
            F.line = 170;
            F.filename = "piece.nim";
            xHEX60gensym20_1459618218(piece_1459618211, board_1459618212, state_1459618213);
            if (piece_1459618211.promoted) {
            F.line = 171;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621597 += 1;
            if (!(((piece_1459618211.onPromote).length == L_1459621598))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618222(side_1459618223, __1459618224, b_1459618225, __1459618226) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 278;
      F.filename = "powers.nim";
      var i_1459618227 = 0;
      F.line = 278;
      var j_1459618228 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621589 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621590 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621590 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621589 = i_1459621590;
              Label5: {
                F.line = 114;
                var j_1459621593 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621594 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621594 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621593 = i_1459621594;
                      F.line = 278;
                      F.filename = "powers.nim";
                      i_1459618227 = i_1459621589;
                      F.line = 278;
                      j_1459618228 = j_1459621593;
                      if (((b_1459618225[chckIndx(i_1459618227, 0, (b_1459618225).length - 1)][chckIndx(j_1459618228, 0, (b_1459618225[chckIndx(i_1459618227, 0, (b_1459618225).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459618225[chckIndx(i_1459618227, 0, (b_1459618225).length - 1)][chckIndx(j_1459618228, 0, (b_1459618225[chckIndx(i_1459618227, 0, (b_1459618225).length - 1)]).length - 1)], side_1459618223))) {
                      F.line = 280;
                      b_1459618225[chckIndx(i_1459618227, 0, (b_1459618225).length - 1)][chckIndx(j_1459618228, 0, (b_1459618225[chckIndx(i_1459618227, 0, (b_1459618225).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459618210);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621594 = addInt(i_1459621594, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621590 = addInt(i_1459621590, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737374(piece_1224737375, board_1224737376, state_1224737377) {
  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618238(side_1459618239, viewSide_1459618240, b_1459618241, __1459618242) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 298;
    F.filename = "powers.nim";
    if ((side_1459618239 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618247 = Temporary1;
    if (!((b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].color == side_1459618239))) {
    F.line = 299;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(299, 13) `b[rank][2].color == side` "));
    }
    
    if ((side_1459618239 == 0)) {
    F.line = 301;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395058, HEX3Aanonymous_1476395043], NTI1291846007);
    F.line = 302;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395068, HEX3Aanonymous_1476395048], NTI1291846007);
    }
    else {
      F.line = 304;
      b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395053, HEX3Aanonymous_1476395043], NTI1291846007);
      F.line = 305;
      b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395063, HEX3Aanonymous_1476395048], NTI1291846007);
    }
    
    F.line = 306;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1224737374], NTI1275068484);
    F.line = 307;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].item = 7;
    F.line = 308;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].filePath = nimCopy(null, [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 309;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].colorable = false;
    if (!((side_1459618239 == viewSide_1459618240))) {
    F.line = 310;
    b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)][chckIndx(2, 0, (b_1459618241[chckIndx(rank_1459618247, 0, (b_1459618241).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618286(side_1459618287, viewSide_1459618288, b_1459618289, __1459618290) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 327;
    F.filename = "powers.nim";
    if ((side_1459618287 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618295 = Temporary1;
    if (!((b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].color == side_1459618287))) {
    F.line = 328;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(328, 13) `b[rank][5].color == side` "));
    }
    
    if ((side_1459618287 == 0)) {
    F.line = 330;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395058, HEX3Aanonymous_1476395043], NTI1291846007);
    F.line = 331;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395068, HEX3Aanonymous_1476395048], NTI1291846007);
    }
    else {
      F.line = 333;
      b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395053, HEX3Aanonymous_1476395043], NTI1291846007);
      F.line = 334;
      b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395063, HEX3Aanonymous_1476395048], NTI1291846007);
    }
    
    F.line = 335;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1224737374], NTI1275068484);
    F.line = 336;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].item = 7;
    F.line = 337;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].filePath = nimCopy(null, [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], NTI33554449);
    F.line = 338;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].colorable = false;
    if (!((side_1459618287 == viewSide_1459618288))) {
    F.line = 339;
    b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)][chckIndx(5, 0, (b_1459618289[chckIndx(rank_1459618295, 0, (b_1459618289).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618376(side_1459618377, __1459618378, b_1459618379, __1459618380) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 378;
      F.filename = "powers.nim";
      var i_1459618381 = 0;
      F.line = 378;
      var j_1459618382 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621602 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621603 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621603 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621602 = i_1459621603;
              Label5: {
                F.line = 114;
                var j_1459621606 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621607 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621607 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621606 = i_1459621607;
                      F.line = 378;
                      F.filename = "powers.nim";
                      i_1459618381 = i_1459621602;
                      F.line = 378;
                      j_1459618382 = j_1459621606;
                      if (((b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)][chckIndx(j_1459618382, 0, (b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)]).length - 1)].item == 2) && isColor_1224737917(b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)][chckIndx(j_1459618382, 0, (b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)]).length - 1)], side_1459618377))) {
                      F.line = 380;
                      b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)][chckIndx(j_1459618382, 0, (b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1291846082);;
                      F.line = 381;
                      b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)][chckIndx(j_1459618382, 0, (b_1459618379[chckIndx(i_1459618381, 0, (b_1459618379).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1291846087);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621607 = addInt(i_1459621607, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621603 = addInt(i_1459621603, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function createWerewolf_1459618334() {
    
function HEX3Aanonymous_1459618337(piece_1459618338, board_1459618339, state_1459618340) {
      var F = {procname: "createWerewolf.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (((1 <= piece_1459618338.piecesTaken) && !(transformed_1459618336))) {
        F.line = 350;
        F.filename = "powers.nim";
        add_1459617825(piece_1459618338, "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1476395184]);
        F.line = 351;
        add_1459617825(piece_1459618338, "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1476395179]);
        F.line = 352;
        piece_1459618338.rotate = true;
        F.line = 353;
        transformed_1459618336 = true;
        }
        
      framePtr = F.prev;

      
    }

  var result_1459618335 = null;

  var F = {procname: "powers.createWerewolf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 346;
    F.filename = "powers.nim";
    var transformed_1459618336 = false;
    F.line = 348;
    result_1459618335 = HEX3Aanonymous_1459618337;
  framePtr = F.prev;

  return result_1459618335;

}

function HEX3Aanonymous_1459618357(side_1459618358, __1459618359, b_1459618360, __1459618361) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 364;
    F.filename = "powers.nim";
    if ((side_1459618358 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459618366 = Temporary1;
    F.line = 365;
    b_1459618360[chckIndx(rank_1459618366, 0, (b_1459618360).length - 1)][chckIndx(0, 0, (b_1459618360[chckIndx(rank_1459618366, 0, (b_1459618360).length - 1)]).length - 1)].onEndTurn.push(createWerewolf_1459618334());;
    F.line = 366;
    b_1459618360[chckIndx(rank_1459618366, 0, (b_1459618360).length - 1)][chckIndx(7, 0, (b_1459618360[chckIndx(rank_1459618366, 0, (b_1459618360).length - 1)]).length - 1)].onEndTurn.push(createWerewolf_1459618334());;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618396(side_1459618397, __1459618398, b_1459618399, __1459618400) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 393;
      F.filename = "powers.nim";
      var i_1459618401 = 0;
      F.line = 393;
      var j_1459618402 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621611 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621612 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621612 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621611 = i_1459621612;
              Label5: {
                F.line = 114;
                var j_1459621615 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621616 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621616 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621615 = i_1459621616;
                      F.line = 393;
                      F.filename = "powers.nim";
                      i_1459618401 = i_1459621611;
                      F.line = 393;
                      j_1459618402 = j_1459621615;
                      if (((b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)][chckIndx(j_1459618402, 0, (b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)]).length - 1)].item == 5) && isColor_1224737917(b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)][chckIndx(j_1459618402, 0, (b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)]).length - 1)], side_1459618397))) {
                      if (!((b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)][chckIndx(j_1459618402, 0, (b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)]).length - 1)].color == side_1459618397))) {
                      F.line = 395;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(395, 21) `b[i][j].color == side` "));
                      }
                      
                      F.line = 396;
                      b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)][chckIndx(j_1459618402, 0, (b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395184], NTI1275068468);
                      F.line = 397;
                      b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)][chckIndx(j_1459618402, 0, (b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395179], NTI1275068468);
                      F.line = 398;
                      b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)][chckIndx(j_1459618402, 0, (b_1459618399[chckIndx(i_1459618401, 0, (b_1459618399).length - 1)]).length - 1)].filePath = nimCopy(null, [103,105,114,97,102,102,101,46,115,118,103], NTI33554449);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621616 = addInt(i_1459621616, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621612 = addInt(i_1459621612, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_1224737308(b_1224737309, tile_1224737310, newPiece_1224737311) {
  var F = {procname: "piece.[]=", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "piece.nim";
    b_1224737309[chckIndx(tile_1224737310.Field1, 0, (b_1224737309).length - 1)][chckIndx(tile_1224737310.Field0, 0, (b_1224737309[chckIndx(tile_1224737310.Field1, 0, (b_1224737309).length - 1)]).length - 1)] = nimCopy(b_1224737309[chckIndx(tile_1224737310.Field1, 0, (b_1224737309).length - 1)][chckIndx(tile_1224737310.Field0, 0, (b_1224737309[chckIndx(tile_1224737310.Field1, 0, (b_1224737309).length - 1)]).length - 1)], newPiece_1224737311, NTI1224736794);
  framePtr = F.prev;

  
}

function pieceCopy_1224737824(initial_1224737825, index_1224737826, item_1224737827, color_1224737828, timesMoved_1224737829, piecesTaken_1224737830, tile_1224737831, moves_1224737832, takes_1224737833, onMove_1224737834, onTake_1224737835, whenTaken_1224737836, onEndTurn_1224737841, onPromote_1224737846, promoted_1224737847, filePath_1224737848, colorable_1224737849, rotate_1224737850, drunk_1224737851) {
  var result_1224737852 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

  var F = {procname: "piece.pieceCopy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 264;
    F.filename = "piece.nim";
    result_1224737852 = nimCopy(result_1224737852, {index: index_1224737826, item: item_1224737827, color: color_1224737828, timesMoved: timesMoved_1224737829, piecesTaken: piecesTaken_1224737830, tile: nimCopy(null, tile_1224737831, NTI1224736771), moves: nimCopy(null, moves_1224737832, NTI1224737534), takes: nimCopy(null, takes_1224737833, NTI1224737535), onMove: onMove_1224737834, onTake: onTake_1224737835, whenTaken: whenTaken_1224737836, onEndTurn: nimCopy(null, onEndTurn_1224737841, NTI1224737536), onPromote: nimCopy(null, onPromote_1224737846, NTI1224737541), promoted: promoted_1224737847, filePath: nimCopy(null, filePath_1224737848, NTI33554449), rotate: rotate_1224737850, drunk: drunk_1224737851, colorable: colorable_1224737849, casts: []}, NTI1224736794);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737852;

}

function pieceMove_1224737754(p_1224737755, t_1224737756, board_1224737757, state_1224737758) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 222;
    F.filename = "piece.nim";
    pieceMove_1224737720(p_1224737755, t_1224737756.tile.Field1, t_1224737756.tile.Field0, board_1224737757, state_1224737758);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737768(taken_1224737769, taker_1224737770, board_1224737771, state_1224737772) {
  var result_1224737775 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 233;
    F.filename = "piece.nim";
    pieceMove_1224737754(taker_1224737770, taken_1224737769, board_1224737771, state_1224737772);
    F.line = 234;
    var colontmp__1459621643 = nimCopy(null, taken_1224737769.tile, NTI1224736771);
    F.line = 234;
    var colontmp__1459621644 = true;
    F.line = 234;
    result_1224737775 = nimCopy(result_1224737775, {Field0: nimCopy(null, colontmp__1459621643, NTI1224736771), Field1: colontmp__1459621644}, NTI1224737489);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737775;

}

function HEX3Aanonymous_1459618537(taken_1459618538, taker_1459618539, board_1459618540, state_1459618541) {
  var result_1459618544 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (HEX3DHEX3D_1308622964(taken_1459618538.tile, taker_1459618539.tile)) {
    Label1: {
      F.line = 490;
      F.filename = "powers.nim";
      var i_1459618545 = 0;
      F.line = 490;
      var j_1459618546 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621634 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621635 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621635 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621634 = i_1459621635;
              Label5: {
                F.line = 114;
                var j_1459621638 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621639 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621639 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621638 = i_1459621639;
                      F.line = 490;
                      F.filename = "powers.nim";
                      i_1459618545 = i_1459621634;
                      F.line = 490;
                      j_1459618546 = j_1459621638;
                      if ((sameColor_1224737908(board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)][chckIndx(j_1459618546, 0, (board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)]).length - 1)], taken_1459618538) && !(board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)][chckIndx(j_1459618546, 0, (board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)]).length - 1)].promoted))) {
                      Label8: {
                        F.line = 169;
                        F.filename = "piece.nim";
                        var xHEX60gensym39_1459618551 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1459621629 = [];
                        F.line = 169;
                        F.filename = "piece.nim";
                        colontmp__1459621629 = board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)][chckIndx(j_1459618546, 0, (board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)]).length - 1)].onPromote;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1459621630 = 0;
                        F.line = 250;
                        var L_1459621631 = (colontmp__1459621629).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1459621630 < L_1459621631)) break Label10;
                              F.line = 492;
                              F.filename = "powers.nim";
                              xHEX60gensym39_1459618551 = colontmp__1459621629[chckIndx(i_1459621630, 0, (colontmp__1459621629).length - 1)];
                              F.line = 170;
                              F.filename = "piece.nim";
                              xHEX60gensym39_1459618551(board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)][chckIndx(j_1459618546, 0, (board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)]).length - 1)], board_1459618540, state_1459618541);
                              if (board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)][chckIndx(j_1459618546, 0, (board_1459618540[chckIndx(i_1459618545, 0, (board_1459618540).length - 1)]).length - 1)].promoted) {
                              F.line = 171;
                              break Label8;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1459621630 += 1;
                              if (!(((colontmp__1459621629).length == L_1459621631))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621639 = addInt(i_1459621639, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621635 = addInt(i_1459621635, 1);
            }
        };
      };
    };
    F.line = 493;
    F.filename = "powers.nim";
    HEX5BHEX5DHEX3D_1224737308(board_1459618540, taken_1459618538.tile, pieceCopy_1224737824(air_1275068615, taken_1459618538.index, 6, 1, 0, 0, taken_1459618538.tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false));
    F.line = 494;
    var colontmp__1459621641 = nimCopy(null, taken_1459618538.tile, NTI1224736771);
    F.line = 494;
    var colontmp__1459621642 = false;
    F.line = 494;
    result_1459618544 = nimCopy(result_1459618544, {Field0: nimCopy(null, colontmp__1459621641, NTI1224736771), Field1: colontmp__1459621642}, NTI1459618468);
    break BeforeRet;
    }
    else {
      F.line = 496;
      result_1459618544 = nimCopy(result_1459618544, HEX3Aanonymous_1224737768(taken_1459618538, taker_1459618539, board_1459618540, state_1459618541), NTI1459618468);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1459618544;

}

function HEX3Aanonymous_1476395189(board_1476395190, p_1476395191) {
  var result_1476395192 = [];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 143;
    F.filename = "extramoves.nim";
    var Temporary1 = nimCopy(null, p_1476395191.tile, NTI1224736771);
    result_1476395192.push(Temporary1);;
  framePtr = F.prev;

  return result_1476395192;

}

function HEX3Aanonymous_1459618555(side_1459618556, viewSide_1459618557, b_1459618558, __1459618559) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 508;
      F.filename = "powers.nim";
      var i_1459618560 = 0;
      F.line = 508;
      var j_1459618561 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621620 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621621 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621621 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621620 = i_1459621621;
              Label5: {
                F.line = 114;
                var j_1459621624 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621625 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621625 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621624 = i_1459621625;
                      F.line = 508;
                      F.filename = "powers.nim";
                      i_1459618560 = i_1459621620;
                      F.line = 508;
                      j_1459618561 = j_1459621624;
                      if (((b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)][chckIndx(j_1459618561, 0, (b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)][chckIndx(j_1459618561, 0, (b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)]).length - 1)], side_1459618556))) {
                      F.line = 510;
                      b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)][chckIndx(j_1459618561, 0, (b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)]).length - 1)].whenTaken = HEX3Aanonymous_1459618537;
                      F.line = 511;
                      b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)][chckIndx(j_1459618561, 0, (b_1459618558[chckIndx(i_1459618560, 0, (b_1459618558).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395189);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621625 = addInt(i_1459621625, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621621 = addInt(i_1459621621, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395081(board_1476395082, p_1476395083) {
  var result_1476395084 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 69;
    F.filename = "extramoves.nim";
    var next_1476395085 = addIfTake_1291845739(result_1476395084, 0, board_1476395082, p_1476395083, p_1476395083.tile, tileBelow_1308622993, false, false);
    if (next_1476395085) {
    F.line = 71;
    var _ = addIfTake_1291845739(result_1476395084, 0, board_1476395082, p_1476395083, tileBelow_1308622993(p_1476395083.tile), tileBelow_1308622993, false, false);
    }
    
  framePtr = F.prev;

  return result_1476395084[0];

}

function HEX3Aanonymous_1476395075(board_1476395076, p_1476395077) {
  var result_1476395078 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 64;
    F.filename = "extramoves.nim";
    var next_1476395079 = addIfTake_1291845739(result_1476395078, 0, board_1476395076, p_1476395077, p_1476395077.tile, tileAbove_1308622990, false, false);
    if (next_1476395079) {
    F.line = 66;
    var _ = addIfTake_1291845739(result_1476395078, 0, board_1476395076, p_1476395077, tileAbove_1308622990(p_1476395077.tile), tileAbove_1308622990, false, false);
    }
    
  framePtr = F.prev;

  return result_1476395078[0];

}

function HEX3Aanonymous_1459618425(side_1459618426, __1459618427, b_1459618428, __1459618429) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 411;
      F.filename = "powers.nim";
      var i_1459618430 = 0;
      F.line = 411;
      var j_1459618431 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621647 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621648 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621648 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621647 = i_1459621648;
              Label5: {
                F.line = 114;
                var j_1459621651 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621652 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621652 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621651 = i_1459621652;
                      F.line = 411;
                      F.filename = "powers.nim";
                      i_1459618430 = i_1459621647;
                      F.line = 411;
                      j_1459618431 = j_1459621651;
                      if (((b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)][chckIndx(j_1459618431, 0, (b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)]).length - 1)].item == 5) && isColor_1224737917(b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)][chckIndx(j_1459618431, 0, (b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)]).length - 1)], side_1459618426))) {
                      if ((side_1459618426 == 0)) {
                      F.line = 414;
                      b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)][chckIndx(j_1459618431, 0, (b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395081);;
                      }
                      else {
                        F.line = 416;
                        b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)][chckIndx(j_1459618431, 0, (b_1459618428[chckIndx(i_1459618430, 0, (b_1459618428).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395075);;
                      }
                      
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621652 = addInt(i_1459621652, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621648 = addInt(i_1459621648, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618683(side_1459618684, viewSide_1459618685, b_1459618686, __1459618687) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 598;
      F.filename = "powers.nim";
      var i_1459618688 = 0;
      F.line = 598;
      var j_1459618689 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621656 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621657 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621657 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621656 = i_1459621657;
              Label5: {
                F.line = 114;
                var j_1459621660 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621661 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621661 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621660 = i_1459621661;
                      F.line = 598;
                      F.filename = "powers.nim";
                      i_1459618688 = i_1459621656;
                      F.line = 598;
                      j_1459618689 = j_1459621660;
                      if (((b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)][chckIndx(j_1459618689, 0, (b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)][chckIndx(j_1459618689, 0, (b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)]).length - 1)], side_1459618684))) {
                      if ((b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)][chckIndx(j_1459618689, 0, (b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)]).length - 1)].color == 0)) {
                      F.line = 601;
                      b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)][chckIndx(j_1459618689, 0, (b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395053);;
                      }
                      else {
                      if ((b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)][chckIndx(j_1459618689, 0, (b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)]).length - 1)].color == 1)) {
                      F.line = 603;
                      b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)][chckIndx(j_1459618689, 0, (b_1459618686[chckIndx(i_1459618688, 0, (b_1459618686).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395058);;
                      }
                      }
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621661 = addInt(i_1459621661, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621657 = addInt(i_1459621657, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395093(board_1476395094, p_1476395095) {
  var result_1476395096 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 79;
    F.filename = "extramoves.nim";
    var next_1476395097 = addIfFree_1291845640(result_1476395096, 0, board_1476395094, p_1476395095.tile, tileBelow_1308622993);
    if (next_1476395097) {
    F.line = 81;
    var _ = addIfFree_1291845640(result_1476395096, 0, board_1476395094, tileBelow_1308622993(p_1476395095.tile), tileBelow_1308622993);
    }
    
  framePtr = F.prev;

  return result_1476395096[0];

}

function HEX3Aanonymous_1476395087(board_1476395088, p_1476395089) {
  var result_1476395090 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 74;
    F.filename = "extramoves.nim";
    var next_1476395091 = addIfFree_1291845640(result_1476395090, 0, board_1476395088, p_1476395089.tile, tileAbove_1308622990);
    if (next_1476395091) {
    F.line = 76;
    var _ = addIfFree_1291845640(result_1476395090, 0, board_1476395088, tileAbove_1308622990(p_1476395089.tile), tileAbove_1308622990);
    }
    
  framePtr = F.prev;

  return result_1476395090[0];

}

function HEX3Aanonymous_1459618711(side_1459618712, viewSide_1459618713, b_1459618714, __1459618715) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 614;
      F.filename = "powers.nim";
      var i_1459618716 = 0;
      F.line = 614;
      var j_1459618717 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621665 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621666 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621666 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621665 = i_1459621666;
              Label5: {
                F.line = 114;
                var j_1459621669 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621670 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621670 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621669 = i_1459621670;
                      F.line = 614;
                      F.filename = "powers.nim";
                      i_1459618716 = i_1459621665;
                      F.line = 614;
                      j_1459618717 = j_1459621669;
                      if (((b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)][chckIndx(j_1459618717, 0, (b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)][chckIndx(j_1459618717, 0, (b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)]).length - 1)], side_1459618712))) {
                      if ((b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)][chckIndx(j_1459618717, 0, (b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)]).length - 1)].color == 0)) {
                      F.line = 617;
                      b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)][chckIndx(j_1459618717, 0, (b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395093);;
                      }
                      else {
                      if ((b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)][chckIndx(j_1459618717, 0, (b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)]).length - 1)].color == 1)) {
                      F.line = 619;
                      b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)][chckIndx(j_1459618717, 0, (b_1459618714[chckIndx(i_1459618716, 0, (b_1459618714).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395087);;
                      }
                      }
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621670 = addInt(i_1459621670, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621666 = addInt(i_1459621666, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618739(side_1459618740, viewSide_1459618741, b_1459618742, __1459618743) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 630;
      F.filename = "powers.nim";
      var i_1459618744 = 0;
      F.line = 630;
      var j_1459618745 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621674 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621675 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621675 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621674 = i_1459621675;
              Label5: {
                F.line = 114;
                var j_1459621678 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621679 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621679 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621678 = i_1459621679;
                      F.line = 630;
                      F.filename = "powers.nim";
                      i_1459618744 = i_1459621674;
                      F.line = 630;
                      j_1459618745 = j_1459621678;
                      if ((b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)][chckIndx(j_1459618745, 0, (b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)]).length - 1)].item == 1)) {
                      F.line = 632;
                      b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)][chckIndx(j_1459618745, 0, (b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)]).length - 1)] = nimCopy(b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)][chckIndx(j_1459618745, 0, (b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)][chckIndx(j_1459618745, 0, (b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)]).length - 1)].index, 6, 1, 0, 0, b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)][chckIndx(j_1459618745, 0, (b_1459618742[chckIndx(i_1459618744, 0, (b_1459618742).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621679 = addInt(i_1459621679, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621675 = addInt(i_1459621675, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function lineMoves_1291845813(board_1291845814, p_1291845815, shoot_1291845816) {
  var result_1291845817 = [[]];

  var F = {procname: "moves.lineMoves", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "moves.nim";
    var next_1291845818 = nimCopy(null, p_1291845815.tile, NTI1224736771);
    Label1: {
      F.line = 37;
        Label2: while (true) {
        if (!addIfFree_1291845640(result_1291845817, 0, board_1291845814, next_1291845818, shoot_1291845816)) break Label2;
          F.line = 38;
          next_1291845818 = nimCopy(next_1291845818, shoot_1291845816(next_1291845818), NTI1224736771);
        }
    };
  framePtr = F.prev;

  return result_1291845817[0];

}

function HEX3Aanonymous_1291846030(board_1291846031, p_1291846032) {
  var result_1291846033 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 150;
    F.filename = "moves.nim";
    add_1224737462(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968(1, 1)));
    F.line = 151;
    add_1224737462(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968((-1), 1)));
    F.line = 152;
    add_1224737462(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968(1, (-1))));
    F.line = 153;
    add_1224737462(result_1291846033, 0, lineMoves_1291845813(board_1291846031, p_1291846032, shooterFactory_1308622968((-1), (-1))));
  framePtr = F.prev;

  return result_1291846033[0];

}

function HEX3Aanonymous_1291845988(board_1291845989, p_1291845990) {
  var result_1291845991 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 138;
    F.filename = "moves.nim";
    add_1224737462(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileAbove_1308622990));
    F.line = 139;
    add_1224737462(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileBelow_1308622993));
    F.line = 140;
    add_1224737462(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileLeft_1308622996));
    F.line = 141;
    add_1224737462(result_1291845991, 0, lineMoves_1291845813(board_1291845989, p_1291845990, tileRight_1308622999));
  framePtr = F.prev;

  return result_1291845991[0];

}

function HEX3Aanonymous_1291845865(board_1291845866, p_1291845867) {
  var result_1291845868 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 90;
      F.filename = "moves.nim";
      var i_1291845873 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621695 = (-1);
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459621695 <= 1)) break Label3;
            F.line = 90;
            F.filename = "moves.nim";
            i_1291845873 = res_1459621695;
            Label4: {
              F.line = 91;
              var j_1291845878 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_1459621693 = (-1);
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_1459621693 <= 1)) break Label6;
                    F.line = 91;
                    F.filename = "moves.nim";
                    j_1291845878 = res_1459621693;
                    F.line = 92;
                    var _ = addIfFree_1291845640(result_1291845868, 0, board_1291845866, p_1291845867.tile, shooterFactory_1308622968(i_1291845873, j_1291845878));
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_1459621693 = addInt(res_1459621693, 1);
                  }
              };
            };
            F.line = 102;
            res_1459621695 = addInt(res_1459621695, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1291845868[0];

}

function HEX3Aanonymous_1291846051(board_1291846052, p_1291846053) {
  var result_1291846054 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 156;
    F.filename = "moves.nim";
    add_1224737462(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968(1, 1), false, false));
    F.line = 157;
    add_1224737462(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968((-1), 1), false, false));
    F.line = 158;
    add_1224737462(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968(1, (-1)), false, false));
    F.line = 159;
    add_1224737462(result_1291846054, 0, lineTakes_1291845819(board_1291846052, p_1291846053, shooterFactory_1308622968((-1), (-1)), false, false));
  framePtr = F.prev;

  return result_1291846054[0];

}

function HEX3Aanonymous_1291846009(board_1291846010, p_1291846011) {
  var result_1291846012 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 144;
    F.filename = "moves.nim";
    add_1224737462(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileAbove_1308622990, false, false));
    F.line = 145;
    add_1224737462(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileBelow_1308622993, false, false));
    F.line = 146;
    add_1224737462(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileLeft_1308622996, false, false));
    F.line = 147;
    add_1224737462(result_1291846012, 0, lineTakes_1291845819(board_1291846010, p_1291846011, tileRight_1308622999, false, false));
  framePtr = F.prev;

  return result_1291846012[0];

}

function HEX3Aanonymous_1291845880(board_1291845881, p_1291845882) {
  var result_1291845883 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 95;
      F.filename = "moves.nim";
      var i_1291845888 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621701 = (-1);
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459621701 <= 1)) break Label3;
            F.line = 95;
            F.filename = "moves.nim";
            i_1291845888 = res_1459621701;
            Label4: {
              F.line = 96;
              var j_1291845893 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_1459621699 = (-1);
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_1459621699 <= 1)) break Label6;
                    F.line = 96;
                    F.filename = "moves.nim";
                    j_1291845893 = res_1459621699;
                    F.line = 97;
                    var _ = addIfTake_1291845739(result_1291845883, 0, board_1291845881, p_1291845882, p_1291845882.tile, shooterFactory_1308622968(i_1291845888, j_1291845893), false, false);
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_1459621699 = addInt(res_1459621699, 1);
                  }
              };
            };
            F.line = 102;
            res_1459621701 = addInt(res_1459621701, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1291845883[0];

}

function pieceMove_1224737744(p_1224737745, t_1224737746, board_1224737747, state_1224737748) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 216;
    F.filename = "piece.nim";
    pieceMove_1224737720(p_1224737745, t_1224737746.Field1, t_1224737746.Field0, board_1224737747, state_1224737748);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737795(piece_1224737796, to_1224737797, b_1224737798, state_1224737799) {
  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 237;
    F.filename = "piece.nim";
    piece_1224737796.timesMoved = addInt(piece_1224737796.timesMoved, 1);
    F.line = 238;
    pieceMove_1224737744(piece_1224737796, to_1224737797, b_1224737798, state_1224737799);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1224737806(piece_1224737807, taking_1224737808, board_1224737809, state_1224737810) {
  var F = {procname: "piece.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 241;
    F.filename = "piece.nim";
    piece_1224737807.timesMoved = addInt(piece_1224737807.timesMoved, 1);
    F.line = 242;
    var takeResult_1224737816 = board_1224737809[chckIndx(taking_1224737808.Field1, 0, (board_1224737809).length - 1)][chckIndx(taking_1224737808.Field0, 0, (board_1224737809[chckIndx(taking_1224737808.Field1, 0, (board_1224737809).length - 1)]).length - 1)].whenTaken(board_1224737809[chckIndx(taking_1224737808.Field1, 0, (board_1224737809).length - 1)][chckIndx(taking_1224737808.Field0, 0, (board_1224737809[chckIndx(taking_1224737808.Field1, 0, (board_1224737809).length - 1)]).length - 1)], piece_1224737807, board_1224737809, state_1224737810);
    if (takeResult_1224737816.Field1) {
    F.line = 244;
    board_1224737809[chckIndx(takeResult_1224737816.Field0.Field1, 0, (board_1224737809).length - 1)][chckIndx(takeResult_1224737816.Field0.Field0, 0, (board_1224737809[chckIndx(takeResult_1224737816.Field0.Field1, 0, (board_1224737809).length - 1)]).length - 1)].piecesTaken = addInt(board_1224737809[chckIndx(takeResult_1224737816.Field0.Field1, 0, (board_1224737809).length - 1)][chckIndx(takeResult_1224737816.Field0.Field0, 0, (board_1224737809[chckIndx(takeResult_1224737816.Field0.Field1, 0, (board_1224737809).length - 1)]).length - 1)].piecesTaken, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618799(side_1459618800, viewSide_1459618801, b_1459618802, __1459618803) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 673;
      F.filename = "powers.nim";
      var i_1459618804 = 0;
      F.line = 673;
      var j_1459618805 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621683 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621684 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621684 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621683 = i_1459621684;
              Label5: {
                F.line = 114;
                var j_1459621687 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621688 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621688 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621687 = i_1459621688;
                      F.line = 673;
                      F.filename = "powers.nim";
                      i_1459618804 = i_1459621683;
                      F.line = 673;
                      j_1459618805 = j_1459621687;
                      if (((b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)], side_1459618800))) {
                      F.line = 675;
                      b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)] = nimCopy(b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)], pieceCopy_1224737824(whiteQueen_1275068580, b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].index, 0, b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].color, 0, 0, b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].tile, whiteQueen_1275068580.moves, whiteQueen_1275068580.takes, HEX3Aanonymous_1224737795, HEX3Aanonymous_1224737806, HEX3Aanonymous_1224737768, whiteQueen_1275068580.onEndTurn, whiteQueen_1275068580.onPromote, false, [113,117,101,101,110,46,115,118,103], true, true, false), NTI1224736794);
                      }
                      else {
                      if (((b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].item == 2) && isColor_1224737917(b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)], side_1459618800))) {
                      F.line = 679;
                      b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)] = nimCopy(b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].index, 6, 1, 0, 0, b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)][chckIndx(j_1459618805, 0, (b_1459618802[chckIndx(i_1459618804, 0, (b_1459618802).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      }
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621688 = addInt(i_1459621688, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621684 = addInt(i_1459621684, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618941(side_1459618942, viewSide_1459618943, b_1459618944, s_1459618945) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 757;
    F.filename = "powers.nim";
    if ((side_1459618942 == 1)) {
    Temporary1 = (-3);
    }
    else {
    Temporary1 = 3;
    }
    
    var offset_1459618950 = Temporary1;
    Label2: {
      F.line = 758;
      var i_1459618951 = 0;
      F.line = 758;
      var j_1459618952 = 0;
      Label3: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621705 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621706 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_1459621706 < 8)) break Label5;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621705 = i_1459621706;
              Label6: {
                F.line = 114;
                var j_1459621709 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621710 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_1459621710 < 8)) break Label8;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621709 = i_1459621710;
                      F.line = 758;
                      F.filename = "powers.nim";
                      i_1459618951 = i_1459621705;
                      F.line = 758;
                      j_1459618952 = j_1459621709;
                      if ((((b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)][chckIndx(j_1459618952, 0, (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)]).length - 1)].item == 5) && isColor_1224737917(b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)][chckIndx(j_1459618952, 0, (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)]).length - 1)], side_1459618942)) && (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)][chckIndx(j_1459618952, 0, (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)]).length - 1)].timesMoved == 0))) {
                      F.line = 760;
                      b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)][chckIndx(j_1459618952, 0, (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)]).length - 1)].timesMoved = addInt(b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)][chckIndx(j_1459618952, 0, (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)]).length - 1)].timesMoved, 1);
                      F.line = 761;
                      pieceMove_1224737720(b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)][chckIndx(j_1459618952, 0, (b_1459618944[chckIndx(i_1459618951, 0, (b_1459618944).length - 1)]).length - 1)], addInt(i_1459618951, offset_1459618950), j_1459618952, b_1459618944, s_1459618945);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621710 = addInt(i_1459621710, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621706 = addInt(i_1459621706, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395235(board_1476395236, p_1476395237) {
  var result_1476395238 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 156;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968(1, 2)));
    F.line = 157;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968((-1), 2)));
    F.line = 158;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968(2, 1)));
    F.line = 159;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968(2, (-1))));
    F.line = 160;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968(1, (-2))));
    F.line = 161;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968((-1), (-2))));
    F.line = 162;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968((-2), 1)));
    F.line = 163;
    add_1224737462(result_1476395238, 0, lineMoves_1291845813(board_1476395236, p_1476395237, shooterFactory_1308622968((-2), (-1))));
  framePtr = F.prev;

  return result_1476395238[0];

}

function HEX3Aanonymous_1476395198(board_1476395199, p_1476395200) {
  var result_1476395201 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 146;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968(1, 2), false, true));
    F.line = 147;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968((-1), 2), false, true));
    F.line = 148;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968(2, 1), false, true));
    F.line = 149;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968(2, (-1)), false, true));
    F.line = 150;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968(1, (-2)), false, true));
    F.line = 151;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968((-1), (-2)), false, true));
    F.line = 152;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968((-2), 1), false, true));
    F.line = 153;
    add_1224737462(result_1476395201, 0, lineTakes_1291845819(board_1476395199, p_1476395200, shooterFactory_1308622968((-2), (-1)), false, true));
  framePtr = F.prev;

  return result_1476395201[0];

}

function HEX3Aanonymous_1459619071(side_1459619072, viewSide_1459619073, b_1459619074, __1459619075) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 854;
      F.filename = "powers.nim";
      var i_1459619076 = 0;
      F.line = 854;
      var j_1459619077 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621714 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621715 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621715 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621714 = i_1459621715;
              Label5: {
                F.line = 114;
                var j_1459621718 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621719 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621719 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621718 = i_1459621719;
                      F.line = 854;
                      F.filename = "powers.nim";
                      i_1459619076 = i_1459621714;
                      F.line = 854;
                      j_1459619077 = j_1459621718;
                      if (((b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)][chckIndx(j_1459619077, 0, (b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)]).length - 1)].item == 5) && isColor_1224737917(b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)][chckIndx(j_1459619077, 0, (b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)]).length - 1)], side_1459619072))) {
                      F.line = 856;
                      b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)][chckIndx(j_1459619077, 0, (b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395235);;
                      F.line = 857;
                      b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)][chckIndx(j_1459619077, 0, (b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395198);;
                      F.line = 858;
                      b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)][chckIndx(j_1459619077, 0, (b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)]).length - 1)].item = 7;
                      F.line = 859;
                      b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)][chckIndx(j_1459619077, 0, (b_1459619074[chckIndx(i_1459619076, 0, (b_1459619074).length - 1)]).length - 1)].filePath = nimCopy(null, [110,105,103,104,116,114,105,100,101,114,46,115,118,103], NTI33554449);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621719 = addInt(i_1459621719, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621715 = addInt(i_1459621715, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619091(side_1459619092, viewSide_1459619093, b_1459619094, __1459619095) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 870;
      F.filename = "powers.nim";
      var i_1459619096 = 0;
      F.line = 870;
      var j_1459619097 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621723 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621724 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621724 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621723 = i_1459621724;
              Label5: {
                F.line = 114;
                var j_1459621727 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621728 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621728 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621727 = i_1459621728;
                      F.line = 870;
                      F.filename = "powers.nim";
                      i_1459619096 = i_1459621723;
                      F.line = 870;
                      j_1459619097 = j_1459621727;
                      if (((b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)][chckIndx(j_1459619097, 0, (b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)]).length - 1)].item == 2) && isColor_1224737917(b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)][chckIndx(j_1459619097, 0, (b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)]).length - 1)], side_1459619092))) {
                      F.line = 872;
                      b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)][chckIndx(j_1459619097, 0, (b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395043);;
                      F.line = 873;
                      b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)][chckIndx(j_1459619097, 0, (b_1459619094[chckIndx(i_1459619096, 0, (b_1459619094).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395048);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621728 = addInt(i_1459621728, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621724 = addInt(i_1459621724, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619153(taken_1459619154, taker_1459619155, board_1459619156, state_1459619157) {
  var result_1459619160 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((((((taker_1459619155.item == 0) && (taken_1459619154.item == 4)) && sameColor_1224737908(taken_1459619154, taker_1459619155)) && (taker_1459619155.timesMoved == 1)) && (taken_1459619154.timesMoved == 0))) {
    Label1: {
      F.line = 169;
      F.filename = "piece.nim";
      var xHEX60gensym69_1459619173 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621749 = 0;
      F.line = 250;
      var L_1459621750 = (taken_1459619154.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621749 < L_1459621750)) break Label3;
            F.line = 907;
            F.filename = "powers.nim";
            xHEX60gensym69_1459619173 = taken_1459619154.onPromote[chckIndx(i_1459621749, 0, (taken_1459619154.onPromote).length - 1)];
            F.line = 170;
            F.filename = "piece.nim";
            xHEX60gensym69_1459619173(taken_1459619154, board_1459619156, state_1459619157);
            if (taken_1459619154.promoted) {
            F.line = 171;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621749 += 1;
            if (!(((taken_1459619154.onPromote).length == L_1459621750))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 908;
    F.filename = "powers.nim";
    var kingTile_1459619174 = nimCopy(null, taker_1459619155.tile, NTI1224736771);
    if ((taken_1459619154.tile.Field0 == 0)) {
    F.line = 910;
    pieceMove_1224737720(taker_1459619155, kingTile_1459619174.Field1, subInt(kingTile_1459619174.Field0, 2), board_1459619156, state_1459619157);
    F.line = 911;
    pieceMove_1224737720(taken_1459619154, kingTile_1459619174.Field1, subInt(kingTile_1459619174.Field0, 1), board_1459619156, state_1459619157);
    F.line = 912;
    var colontmp__1459621752 = {Field0: subInt(kingTile_1459619174.Field0, 1), Field1: kingTile_1459619174.Field1};
    F.line = 912;
    var colontmp__1459621753 = false;
    F.line = 912;
    result_1459619160 = nimCopy(result_1459619160, {Field0: nimCopy(null, colontmp__1459621752, NTI1224736771), Field1: colontmp__1459621753}, NTI1459618963);
    break BeforeRet;
    }
    else {
      F.line = 914;
      pieceMove_1224737720(taker_1459619155, kingTile_1459619174.Field1, addInt(kingTile_1459619174.Field0, 2), board_1459619156, state_1459619157);
      F.line = 915;
      pieceMove_1224737720(taken_1459619154, kingTile_1459619174.Field1, addInt(kingTile_1459619174.Field0, 1), board_1459619156, state_1459619157);
      F.line = 916;
      var colontmp__1459621754 = {Field0: addInt(kingTile_1459619174.Field0, 1), Field1: kingTile_1459619174.Field1};
      F.line = 916;
      var colontmp__1459621755 = false;
      F.line = 916;
      result_1459619160 = nimCopy(result_1459619160, {Field0: nimCopy(null, colontmp__1459621754, NTI1224736771), Field1: colontmp__1459621755}, NTI1459618963);
      break BeforeRet;
    }
    
    }
    else {
      F.line = 918;
      result_1459619160 = nimCopy(result_1459619160, HEX3Aanonymous_1224737768(taken_1459619154, taker_1459619155, board_1459619156, state_1459619157), NTI1459618963);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1459619160;

}

function HEX3Aanonymous_1459619178(side_1459619179, __1459619180, b_1459619181, s_1459619182) {
    var Temporary1;
    
function HEX3Aanonymous_1459619194(piece_1459619195, board_1459619196, state_1459619197) {
      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 938;
        F.filename = "powers.nim";
        piece_1459619195 = nimCopy(piece_1459619195, pieceCopy_1224737824(dna_1459619187, piece_1459619195.index, dna_1459619187.item, dna_1459619187.color, piece_1459619195.timesMoved, piece_1459619195.piecesTaken, piece_1459619195.tile, dna_1459619187.moves, dna_1459619187.takes, dna_1459619187.onMove, dna_1459619187.onTake, dna_1459619187.whenTaken, dna_1459619187.onEndTurn, dna_1459619187.onPromote, true, dna_1459619187.filePath, dna_1459619187.colorable, dna_1459619187.rotate, dna_1459619187.drunk), NTI1224736794);
      framePtr = F.prev;

      
    }

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 928;
    F.filename = "powers.nim";
    if ((side_1459619179 == 1)) {
    Temporary1 = pieceCopy_1224737824(whiteQueen_1275068580, 0, 1, 1, 0, 0, whiteQueen_1275068580.tile, whiteQueen_1275068580.moves, whiteQueen_1275068580.takes, HEX3Aanonymous_1224737795, HEX3Aanonymous_1224737806, HEX3Aanonymous_1224737768, whiteQueen_1275068580.onEndTurn, whiteQueen_1275068580.onPromote, false, [113,117,101,101,110,46,115,118,103], true, false, false);
    }
    else {
    Temporary1 = pieceCopy_1224737824(blackQueen_1275068503, 0, 1, 0, 0, 0, blackQueen_1275068503.tile, blackQueen_1275068503.moves, blackQueen_1275068503.takes, HEX3Aanonymous_1224737795, HEX3Aanonymous_1224737806, HEX3Aanonymous_1224737768, blackQueen_1275068503.onEndTurn, blackQueen_1275068503.onPromote, false, [113,117,101,101,110,46,115,118,103], true, false, false);
    }
    
    var dna_1459619187 = nimCopy(null, Temporary1, NTI1224736794);
    Label2: {
      F.line = 932;
      var i_1459619188 = 0;
      F.line = 932;
      var j_1459619189 = 0;
      Label3: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621732 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621733 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_1459621733 < 8)) break Label5;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621732 = i_1459621733;
              Label6: {
                F.line = 114;
                var j_1459621736 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621737 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_1459621737 < 8)) break Label8;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621736 = i_1459621737;
                      F.line = 932;
                      F.filename = "powers.nim";
                      i_1459619188 = i_1459621732;
                      F.line = 932;
                      j_1459619189 = j_1459621736;
                      if (((b_1459619181[chckIndx(i_1459619188, 0, (b_1459619181).length - 1)][chckIndx(j_1459619189, 0, (b_1459619181[chckIndx(i_1459619188, 0, (b_1459619181).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459619181[chckIndx(i_1459619188, 0, (b_1459619181).length - 1)][chckIndx(j_1459619189, 0, (b_1459619181[chckIndx(i_1459619188, 0, (b_1459619181).length - 1)]).length - 1)], side_1459619179))) {
                      F.line = 934;
                      dna_1459619187 = nimCopy(dna_1459619187, b_1459619181[chckIndx(i_1459619188, 0, (b_1459619181).length - 1)][chckIndx(j_1459619189, 0, (b_1459619181[chckIndx(i_1459619188, 0, (b_1459619181).length - 1)]).length - 1)], NTI1224736794);
                      F.line = 935;
                      break Label2;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621737 = addInt(i_1459621737, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621733 = addInt(i_1459621733, 1);
            }
        };
      };
    };
    F.line = 937;
    F.filename = "powers.nim";
    var concubinePromote_1459619198 = HEX3Aanonymous_1459619194;
    Label9: {
      F.line = 945;
      var i_1459619199 = 0;
      F.line = 945;
      var j_1459619200 = 0;
      Label10: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621741 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621742 = 0;
        Label11: {
          F.line = 129;
            Label12: while (true) {
            if (!(i_1459621742 < 8)) break Label12;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621741 = i_1459621742;
              Label13: {
                F.line = 114;
                var j_1459621745 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621746 = 0;
                Label14: {
                  F.line = 129;
                    Label15: while (true) {
                    if (!(i_1459621746 < 8)) break Label15;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621745 = i_1459621746;
                      F.line = 945;
                      F.filename = "powers.nim";
                      i_1459619199 = i_1459621741;
                      F.line = 945;
                      j_1459619200 = j_1459621745;
                      if (((b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)][chckIndx(j_1459619200, 0, (b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)]).length - 1)].item == 4) && isColor_1224737917(b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)][chckIndx(j_1459619200, 0, (b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)]).length - 1)], side_1459619179))) {
                      F.line = 947;
                      b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)][chckIndx(j_1459619200, 0, (b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)]).length - 1)].onPromote.push(concubinePromote_1459619198);;
                      F.line = 948;
                      b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)][chckIndx(j_1459619200, 0, (b_1459619181[chckIndx(i_1459619199, 0, (b_1459619181).length - 1)]).length - 1)].whenTaken = HEX3Aanonymous_1459619153;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621746 = addInt(i_1459621746, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621742 = addInt(i_1459621742, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1291845827(board_1291845828, p_1291845829) {
  var result_1291845830 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    if ((p_1291845829.timesMoved == 0)) {
    F.line = 57;
    F.filename = "moves.nim";
    var next_1291845831 = addIfFree_1291845640(result_1291845830, 0, board_1291845828, p_1291845829.tile, tileAbove_1308622990);
    if (next_1291845831) {
    F.line = 59;
    var _ = addIfFree_1291845640(result_1291845830, 0, board_1291845828, tileAbove_1308622990(p_1291845829.tile), tileAbove_1308622990);
    }
    
    }
    else {
      F.line = 61;
    var _ = addIfFree_1291845640(result_1291845830, 0, board_1291845828, p_1291845829.tile, tileAbove_1308622990);
    }
    
  framePtr = F.prev;

  return result_1291845830[0];

}

function HEX3Aanonymous_1291845849(board_1291845850, p_1291845851) {
  var result_1291845852 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 67;
    F.filename = "moves.nim";
    var _ = addIfTake_1291845739(result_1291845852, 0, board_1291845850, p_1291845851, p_1291845851.tile, shooterFactory_1308622968(1, (-1)), false, false);
    F.line = 68;
    var _ = addIfTake_1291845739(result_1291845852, 0, board_1291845850, p_1291845851, p_1291845851.tile, shooterFactory_1308622968((-1), (-1)), false, false);
  framePtr = F.prev;

  return result_1291845852[0];

}

function HEX3Aanonymous_1275068621(piece_1275068622, board_1275068623, state_1275068624) {
  var F = {procname: "basePieces.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    if ((isAtEnd_1224738102(piece_1275068622) && !(piece_1275068622.promoted))) {
    Label1: {
      F.line = 169;
      F.filename = "piece.nim";
      var xHEX60gensym0_1275068648 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621775 = 0;
      F.line = 250;
      var L_1459621776 = (piece_1275068622.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621775 < L_1459621776)) break Label3;
            F.line = 75;
            F.filename = "basePieces.nim";
            xHEX60gensym0_1275068648 = piece_1275068622.onPromote[chckIndx(i_1459621775, 0, (piece_1275068622.onPromote).length - 1)];
            F.line = 170;
            F.filename = "piece.nim";
            xHEX60gensym0_1275068648(piece_1275068622, board_1275068623, state_1275068624);
            if (piece_1275068622.promoted) {
            F.line = 171;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621775 += 1;
            if (!(((piece_1275068622.onPromote).length == L_1459621776))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1275068616(piece_1275068617, board_1275068618, state_1275068619) {
  var F = {procname: "basePieces.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    F.line = 64;
    F.filename = "basePieces.nim";
    piece_1275068617 = nimCopy(piece_1275068617, pieceCopy_1224737824(blackQueen_1275068503, piece_1275068617.index, 1, piece_1275068617.color, piece_1275068617.timesMoved, piece_1275068617.piecesTaken, piece_1275068617.tile, blackQueen_1275068503.moves, blackQueen_1275068503.takes, HEX3Aanonymous_1224737795, HEX3Aanonymous_1224737806, HEX3Aanonymous_1224737768, blackQueen_1275068503.onEndTurn, blackQueen_1275068503.onPromote, true, [113,117,101,101,110,46,115,118,103], true, false, false), NTI1224736794);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1291845854(board_1291845855, p_1291845856) {
  var result_1291845857 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    if ((p_1291845856.timesMoved == 0)) {
    F.line = 76;
    F.filename = "moves.nim";
    var next_1291845858 = addIfFree_1291845640(result_1291845857, 0, board_1291845855, p_1291845856.tile, tileBelow_1308622993);
    if (next_1291845858) {
    F.line = 78;
    var _ = addIfFree_1291845640(result_1291845857, 0, board_1291845855, tileBelow_1308622993(p_1291845856.tile), tileBelow_1308622993);
    }
    
    }
    else {
      F.line = 80;
    var _ = addIfFree_1291845640(result_1291845857, 0, board_1291845855, p_1291845856.tile, tileBelow_1308622993);
    }
    
  framePtr = F.prev;

  return result_1291845857[0];

}

function HEX3Aanonymous_1291845860(board_1291845861, p_1291845862) {
  var result_1291845863 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
    F.line = 86;
    F.filename = "moves.nim";
    var _ = addIfTake_1291845739(result_1291845863, 0, board_1291845861, p_1291845862, p_1291845862.tile, shooterFactory_1308622968(1, 1), false, false);
    F.line = 87;
    var _ = addIfTake_1291845739(result_1291845863, 0, board_1291845861, p_1291845862, p_1291845862.tile, shooterFactory_1308622968((-1), 1), false, false);
  framePtr = F.prev;

  return result_1291845863[0];

}

function HEX5BHEX5D_1224737288(b_1224737289, tile_1224737290) {
  var result_1224737291 = null;

  var F = {procname: "piece.[]", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 135;
    F.filename = "piece.nim";
    result_1224737291 = b_1224737289[chckIndx(tile_1224737290.Field1, 0, (b_1224737289).length - 1)][chckIndx(tile_1224737290.Field0, 0, (b_1224737289[chckIndx(tile_1224737290.Field1, 0, (b_1224737289).length - 1)]).length - 1)];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737291;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function HEX3Aanonymous_1459619210(side_1459619211, __1459619212, b_1459619213, __1459619214) {
    var Temporary1;
    
function HEX3Aanonymous_1459619226(piece_1459619227, to_1459619228, board_1459619229, state_1459619230) {
      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 969;
        F.filename = "powers.nim";
        var takeResults_1459619231 = board_1459619229[chckIndx(to_1459619228.Field1, 0, (board_1459619229).length - 1)][chckIndx(to_1459619228.Field0, 0, (board_1459619229[chckIndx(to_1459619228.Field1, 0, (board_1459619229).length - 1)]).length - 1)].whenTaken(board_1459619229[chckIndx(to_1459619228.Field1, 0, (board_1459619229).length - 1)][chckIndx(to_1459619228.Field0, 0, (board_1459619229[chckIndx(to_1459619228.Field1, 0, (board_1459619229).length - 1)]).length - 1)], piece_1459619227, board_1459619229, state_1459619230);
        F.line = 970;
        var originalRookTile_1459619232 = nimCopy(null, piece_1459619227.tile, NTI1224736771);
        F.line = 971;
        HEX5BHEX5D_1224737288(board_1459619229, takeResults_1459619231.Field0).timesMoved = addInt(HEX5BHEX5D_1224737288(board_1459619229, takeResults_1459619231.Field0).timesMoved, 1);
        if (takeResults_1459619231.Field1) {
        F.line = 974;
        HEX5BHEX5D_1224737288(board_1459619229, takeResults_1459619231.Field0).piecesTaken = addInt(HEX5BHEX5D_1224737288(board_1459619229, takeResults_1459619231.Field0).piecesTaken, 1);
        if ((modInt(HEX5BHEX5D_1224737288(board_1459619229, takeResults_1459619231.Field0).piecesTaken, 2) == 0)) {
        F.line = 976;
        board_1459619229[chckIndx(originalRookTile_1459619232.Field1, 0, (board_1459619229).length - 1)][chckIndx(originalRookTile_1459619232.Field0, 0, (board_1459619229[chckIndx(originalRookTile_1459619232.Field1, 0, (board_1459619229).length - 1)]).length - 1)] = nimCopy(board_1459619229[chckIndx(originalRookTile_1459619232.Field1, 0, (board_1459619229).length - 1)][chckIndx(originalRookTile_1459619232.Field0, 0, (board_1459619229[chckIndx(originalRookTile_1459619232.Field1, 0, (board_1459619229).length - 1)]).length - 1)], pieceCopy_1224737824(dna_1459619219, newIndex_1224737419(state_1459619230), dna_1459619219.item, dna_1459619219.color, dna_1459619219.timesMoved, dna_1459619219.piecesTaken, originalRookTile_1459619232, dna_1459619219.moves, dna_1459619219.takes, dna_1459619219.onMove, dna_1459619219.onTake, dna_1459619219.whenTaken, dna_1459619219.onEndTurn, dna_1459619219.onPromote, dna_1459619219.promoted, dna_1459619219.filePath, dna_1459619219.colorable, dna_1459619219.rotate, dna_1459619219.drunk), NTI1224736794);
        }
        
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 959;
    F.filename = "powers.nim";
    if ((side_1459619211 == 1)) {
    Temporary1 = pieceCopy_1224737824(whitePawn_1275068701, 0, 3, 1, 0, 0, whitePawn_1275068701.tile, whitePawn_1275068701.moves, whitePawn_1275068701.takes, HEX3Aanonymous_1224737795, HEX3Aanonymous_1224737806, HEX3Aanonymous_1224737768, whitePawn_1275068701.onEndTurn, whitePawn_1275068701.onPromote, false, [112,97,119,110,46,115,118,103], true, false, false);
    }
    else {
    Temporary1 = pieceCopy_1224737824(blackPawn_1275068684, 0, 3, 0, 0, 0, blackPawn_1275068684.tile, blackPawn_1275068684.moves, blackPawn_1275068684.takes, HEX3Aanonymous_1224737795, HEX3Aanonymous_1224737806, HEX3Aanonymous_1224737768, blackPawn_1275068684.onEndTurn, blackPawn_1275068684.onPromote, false, [112,97,119,110,46,115,118,103], true, false, false);
    }
    
    var dna_1459619219 = nimCopy(null, Temporary1, NTI1224736794);
    Label2: {
      F.line = 963;
      var i_1459619220 = 0;
      F.line = 963;
      var j_1459619221 = 0;
      Label3: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621758 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621759 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_1459621759 < 8)) break Label5;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621758 = i_1459621759;
              Label6: {
                F.line = 114;
                var j_1459621762 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621763 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_1459621763 < 8)) break Label8;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621762 = i_1459621763;
                      F.line = 963;
                      F.filename = "powers.nim";
                      i_1459619220 = i_1459621758;
                      F.line = 963;
                      j_1459619221 = j_1459621762;
                      if (((b_1459619213[chckIndx(i_1459619220, 0, (b_1459619213).length - 1)][chckIndx(j_1459619221, 0, (b_1459619213[chckIndx(i_1459619220, 0, (b_1459619213).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459619213[chckIndx(i_1459619220, 0, (b_1459619213).length - 1)][chckIndx(j_1459619221, 0, (b_1459619213[chckIndx(i_1459619220, 0, (b_1459619213).length - 1)]).length - 1)], side_1459619211))) {
                      F.line = 965;
                      dna_1459619219 = nimCopy(dna_1459619219, b_1459619213[chckIndx(i_1459619220, 0, (b_1459619213).length - 1)][chckIndx(j_1459619221, 0, (b_1459619213[chckIndx(i_1459619220, 0, (b_1459619213).length - 1)]).length - 1)], NTI1224736794);
                      F.line = 966;
                      break Label2;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621763 = addInt(i_1459621763, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621759 = addInt(i_1459621759, 1);
            }
        };
      };
    };
    F.line = 968;
    F.filename = "powers.nim";
    var reinforcementsOntake_1459619243 = HEX3Aanonymous_1459619226;
    Label9: {
      F.line = 978;
      var i_1459619244 = 0;
      F.line = 978;
      var j_1459619245 = 0;
      Label10: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621767 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621768 = 0;
        Label11: {
          F.line = 129;
            Label12: while (true) {
            if (!(i_1459621768 < 8)) break Label12;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621767 = i_1459621768;
              Label13: {
                F.line = 114;
                var j_1459621771 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621772 = 0;
                Label14: {
                  F.line = 129;
                    Label15: while (true) {
                    if (!(i_1459621772 < 8)) break Label15;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621771 = i_1459621772;
                      F.line = 978;
                      F.filename = "powers.nim";
                      i_1459619244 = i_1459621767;
                      F.line = 978;
                      j_1459619245 = j_1459621771;
                      if (((b_1459619213[chckIndx(i_1459619244, 0, (b_1459619213).length - 1)][chckIndx(j_1459619245, 0, (b_1459619213[chckIndx(i_1459619244, 0, (b_1459619213).length - 1)]).length - 1)].item == 4) && isColor_1224737917(b_1459619213[chckIndx(i_1459619244, 0, (b_1459619213).length - 1)][chckIndx(j_1459619245, 0, (b_1459619213[chckIndx(i_1459619244, 0, (b_1459619213).length - 1)]).length - 1)], side_1459619211))) {
                      F.line = 980;
                      b_1459619213[chckIndx(i_1459619244, 0, (b_1459619213).length - 1)][chckIndx(j_1459619245, 0, (b_1459619213[chckIndx(i_1459619244, 0, (b_1459619213).length - 1)]).length - 1)].onTake = reinforcementsOntake_1459619243;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621772 = addInt(i_1459621772, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621768 = addInt(i_1459621768, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function pieceMove_1224737749(p_1224737750, t_1224737751, board_1224737752, state_1224737753) {
  var F = {procname: "piece.pieceMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 219;
    F.filename = "piece.nim";
    pieceMove_1224737720(board_1224737752[chckIndx(p_1224737750.Field1, 0, (board_1224737752).length - 1)][chckIndx(p_1224737750.Field0, 0, (board_1224737752[chckIndx(p_1224737750.Field1, 0, (board_1224737752).length - 1)]).length - 1)], t_1224737751.Field1, t_1224737751.Field0, board_1224737752, state_1224737753);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619251(piece_1459619252, to_1459619253, board_1459619254, state_1459619255) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 985;
    F.filename = "powers.nim";
    var originalKingTile_1459619256 = nimCopy(null, piece_1459619252.tile, NTI1224736771);
    F.line = 986;
    var takeResult_1459619257 = board_1459619254[chckIndx(to_1459619253.Field1, 0, (board_1459619254).length - 1)][chckIndx(to_1459619253.Field0, 0, (board_1459619254[chckIndx(to_1459619253.Field1, 0, (board_1459619254).length - 1)]).length - 1)].whenTaken(board_1459619254[chckIndx(to_1459619253.Field1, 0, (board_1459619254).length - 1)][chckIndx(to_1459619253.Field0, 0, (board_1459619254[chckIndx(to_1459619253.Field1, 0, (board_1459619254).length - 1)]).length - 1)], piece_1459619252, board_1459619254, state_1459619255);
    F.line = 987;
    piece_1459619252.timesMoved = addInt(piece_1459619252.timesMoved, 1);
    if (takeResult_1459619257.Field1) {
    F.line = 989;
    piece_1459619252.piecesTaken = addInt(piece_1459619252.piecesTaken, 1);
    if ((addInt(originalKingTile_1459619256.Field1, 2) == takeResult_1459619257.Field0.Field1)) {
    F.line = 992;
    pieceMove_1224737749(takeResult_1459619257.Field0, originalKingTile_1459619256, board_1459619254, state_1459619255);
    }
    else {
    if ((subInt(originalKingTile_1459619256.Field1, 2) == takeResult_1459619257.Field0.Field1)) {
    F.line = 994;
    pieceMove_1224737749(takeResult_1459619257.Field0, originalKingTile_1459619256, board_1459619254, state_1459619255);
    }
    }
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395277(board_1476395278, p_1476395279) {
  var result_1476395280 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 170;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395280, 0, board_1476395278, p_1476395279, p_1476395279.tile, shooterFactory_1308622968(0, 1), false, false);
    F.line = 171;
    var _ = addIfTake_1291845739(result_1476395280, 0, board_1476395278, p_1476395279, p_1476395279.tile, shooterFactory_1308622968(0, 2), false, false);
  framePtr = F.prev;

  return result_1476395280[0];

}

function HEX3Aanonymous_1476395287(board_1476395288, p_1476395289) {
  var result_1476395290 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 178;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395290, 0, board_1476395288, p_1476395289, p_1476395289.tile, shooterFactory_1308622968(0, (-1)), false, false);
    F.line = 179;
    var _ = addIfTake_1291845739(result_1476395290, 0, board_1476395288, p_1476395289, p_1476395289.tile, shooterFactory_1308622968(0, (-2)), false, false);
  framePtr = F.prev;

  return result_1476395290[0];

}

function HEX3Aanonymous_1459619269(side_1459619270, __1459619271, b_1459619272, __1459619273) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1005;
      F.filename = "powers.nim";
      var i_1459619274 = 0;
      F.line = 1005;
      var j_1459619275 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621780 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621781 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621781 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621780 = i_1459621781;
              Label5: {
                F.line = 114;
                var j_1459621784 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621785 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621785 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621784 = i_1459621785;
                      F.line = 1005;
                      F.filename = "powers.nim";
                      i_1459619274 = i_1459621780;
                      F.line = 1005;
                      j_1459619275 = j_1459621784;
                      if (((b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)][chckIndx(j_1459619275, 0, (b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)][chckIndx(j_1459619275, 0, (b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)]).length - 1)], side_1459619270))) {
                      if (!((b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)][chckIndx(j_1459619275, 0, (b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)]).length - 1)].color == side_1459619270))) {
                      F.line = 1007;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(1007, 21) `b[i][j].color == side` "));
                      }
                      
                      F.line = 1008;
                      b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)][chckIndx(j_1459619275, 0, (b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)]).length - 1)].onTake = HEX3Aanonymous_1459619251;
                      F.line = 1009;
                      add_1459617825(b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)][chckIndx(j_1459619275, 0, (b_1459619272[chckIndx(i_1459619274, 0, (b_1459619272).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1476395277, HEX3Aanonymous_1476395287]);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621785 = addInt(i_1459621785, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621781 = addInt(i_1459621781, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619339(side_1459619340, __1459619341, b_1459619342, __1459619343) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1049;
      F.filename = "powers.nim";
      var i_1459619344 = 0;
      F.line = 1049;
      var j_1459619345 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621789 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621790 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621790 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621789 = i_1459621790;
              Label5: {
                F.line = 114;
                var j_1459621793 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621794 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621794 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621793 = i_1459621794;
                      F.line = 1049;
                      F.filename = "powers.nim";
                      i_1459619344 = i_1459621789;
                      F.line = 1049;
                      j_1459619345 = j_1459621793;
                      if (((b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(j_1459619345, 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(j_1459619345, 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)], side_1459619340))) {
                      if ((b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(j_1459619345, 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)].timesMoved == 0)) {
                      F.line = 1052;
                      b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(j_1459619345, 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)].timesMoved = addInt(b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(j_1459619345, 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)].timesMoved, 1);
                      F.line = 1053;
                      pieceSwap_1224737759(b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(j_1459619345, 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)], b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)][chckIndx(addInt(j_1459619345, 2), 0, (b_1459619342[chckIndx(i_1459619344, 0, (b_1459619342).length - 1)]).length - 1)], b_1459619342);
                      }
                      
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621794 = addInt(i_1459621794, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621790 = addInt(i_1459621790, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395316(board_1476395317, p_1476395318) {
  var result_1476395319 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 205;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395319, 0, lineMoves_1291845813(board_1476395317, p_1476395318, tileBelow_1308622993));
  framePtr = F.prev;

  return result_1476395319[0];

}

function HEX3Aanonymous_1476395334(board_1476395335, p_1476395336) {
  var result_1476395337 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 211;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395337, 0, lineTakes_1291845819(board_1476395335, p_1476395336, tileBelow_1308622993, false, false));
  framePtr = F.prev;

  return result_1476395337[0];

}

function HEX3Aanonymous_1476395307(board_1476395308, p_1476395309) {
  var result_1476395310 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 202;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395310, 0, lineMoves_1291845813(board_1476395308, p_1476395309, tileAbove_1308622990));
  framePtr = F.prev;

  return result_1476395310[0];

}

function HEX3Aanonymous_1476395325(board_1476395326, p_1476395327) {
  var result_1476395328 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 208;
    F.filename = "extramoves.nim";
    add_1224737462(result_1476395328, 0, lineTakes_1291845819(board_1476395326, p_1476395327, tileAbove_1308622990, false, false));
  framePtr = F.prev;

  return result_1476395328[0];

}

function HEX3Aanonymous_1459619434(piece_1459619435, board_1459619436, state_1459619437) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((isAtEnd_1224738102(piece_1459619435) && !(piece_1459619435.promoted))) {
    Label1: {
      F.line = 169;
      F.filename = "piece.nim";
      var xHEX60gensym81_1459619442 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621797 = 0;
      F.line = 250;
      var L_1459621798 = (piece_1459619435.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621797 < L_1459621798)) break Label3;
            F.line = 1118;
            F.filename = "powers.nim";
            xHEX60gensym81_1459619442 = piece_1459619435.onPromote[chckIndx(i_1459621797, 0, (piece_1459619435.onPromote).length - 1)];
            F.line = 170;
            F.filename = "piece.nim";
            xHEX60gensym81_1459619442(piece_1459619435, board_1459619436, state_1459619437);
            if (piece_1459619435.promoted) {
            F.line = 171;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621797 += 1;
            if (!(((piece_1459619435.onPromote).length == L_1459621798))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619421(piece_1459619422, board_1459619423, state_1459619424) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1111;
    F.filename = "powers.nim";
    piece_1459619422.moves = nimCopy(null, [HEX3Aanonymous_1476395043, HEX3Aanonymous_1476395033, HEX3Aanonymous_1476395058, HEX3Aanonymous_1476395053], NTI1459618694);
    F.line = 1112;
    piece_1459619422.takes = nimCopy(null, [HEX3Aanonymous_1476395048, HEX3Aanonymous_1476395038, HEX3Aanonymous_1476395068, HEX3Aanonymous_1476395063], NTI1459618694);
    F.line = 1113;
    piece_1459619422.promoted = true;
    F.line = 1114;
    piece_1459619422.filePath = nimCopy(null, [112,114,111,109,111,116,101,100,108,97,110,99,101,46,115,118,103], NTI33554449);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619498(side_1459619499, viewSide_1459619500, b_1459619501, __1459619502) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1164;
    F.filename = "powers.nim";
    if ((side_1459619499 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459619507 = Temporary1;
    if (!((b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].color == side_1459619499))) {
    F.line = 1165;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(1165, 13) `b[rank][7].color == side` "));
    }
    
    if ((side_1459619499 == 0)) {
    F.line = 1167;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395316], NTI1275068468);
    F.line = 1168;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395334], NTI1275068468);
    }
    else {
      F.line = 1170;
      b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395307], NTI1275068468);
      F.line = 1171;
      b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395325], NTI1275068468);
    }
    
    F.line = 1172;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1459619434], NTI1275068484);
    F.line = 1173;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1459619421], NTI1275068484);
    F.line = 1174;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].item = 7;
    F.line = 1175;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].filePath = nimCopy(null, [108,97,110,99,101,46,115,118,103], NTI33554449);
    F.line = 1176;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].colorable = false;
    if (!((side_1459619499 == viewSide_1459619500))) {
    F.line = 1177;
    b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)][chckIndx(7, 0, (b_1459619501[chckIndx(rank_1459619507, 0, (b_1459619501).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619446(side_1459619447, viewSide_1459619448, b_1459619449, __1459619450) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1134;
    F.filename = "powers.nim";
    if ((side_1459619447 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459619455 = Temporary1;
    if (!((b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].color == side_1459619447))) {
    F.line = 1135;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(1135, 13) `b[rank][0].color == side` "));
    }
    
    if ((side_1459619447 == 0)) {
    F.line = 1137;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395316], NTI1275068468);
    F.line = 1138;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395334], NTI1275068468);
    }
    else {
      F.line = 1140;
      b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].moves = nimCopy(null, [HEX3Aanonymous_1476395307], NTI1275068468);
      F.line = 1141;
      b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].takes = nimCopy(null, [HEX3Aanonymous_1476395325], NTI1275068468);
    }
    
    F.line = 1142;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].onEndTurn = nimCopy(null, [HEX3Aanonymous_1459619434], NTI1275068484);
    F.line = 1143;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].onPromote = nimCopy(null, [HEX3Aanonymous_1459619421], NTI1275068484);
    F.line = 1144;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].item = 7;
    F.line = 1145;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].filePath = nimCopy(null, [108,97,110,99,101,46,115,118,103], NTI33554449);
    F.line = 1146;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].colorable = false;
    if (!((side_1459619447 == viewSide_1459619448))) {
    F.line = 1147;
    b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)][chckIndx(0, 0, (b_1459619449[chckIndx(rank_1459619455, 0, (b_1459619449).length - 1)]).length - 1)].rotate = true;
    }
    
  framePtr = F.prev;

  
}

function rotl_1392508951(x_1392508952, k_1392508953) {
  var result_1392508954 = 0;

  var F = {procname: "random.rotl", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "random.nim";
    result_1392508954 = ((((x_1392508952 << k_1392508953) >>> 0) | (x_1392508952 >>> ((64 - k_1392508953) >>> 0))) >>> 0);
  framePtr = F.prev;

  return result_1392508954;

}

function next_1392508963(r_1392508964) {
  var result_1392508965 = 0n;

  var F = {procname: "random.next", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 152;
    F.filename = "random.nim";
    var s0_1392508966 = r_1392508964.a0;
    F.line = 153;
    var s1_1392508967 = r_1392508964.a1;
    F.line = 154;
    result_1392508965 = BigInt(((s0_1392508966 + s1_1392508967) >>> 0));
    F.line = 155;
    s1_1392508967 = ((s1_1392508967 ^ s0_1392508966) >>> 0);
    F.line = 156;
    r_1392508964.a0 = ((((rotl_1392508951(s0_1392508966, 55) ^ s1_1392508967) >>> 0) ^ ((s1_1392508967 << 14) >>> 0)) >>> 0);
    F.line = 157;
    r_1392508964.a1 = rotl_1392508951(s1_1392508967, 36);
  framePtr = F.prev;

  return result_1392508965;

}

function skipRandomNumbers_1392508972(s_1392508973) {
  var F = {procname: "random.skipRandomNumbers", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 216;
    F.filename = "random.nim";
    var s0_1392508975 = 0;
    F.line = 217;
    var s1_1392508976 = 0;
    Label1: {
      F.line = 218;
      var i_1392508985 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621817 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459621817 <= 1)) break Label3;
            F.line = 218;
            F.filename = "random.nim";
            i_1392508985 = res_1459621817;
            Label4: {
              F.line = 219;
              var b_1392508990 = 0;
              F.line = 128;
              F.filename = "iterators_1.nim";
              var i_1459621815 = 0;
              Label5: {
                F.line = 129;
                  Label6: while (true) {
                  if (!(i_1459621815 < 64)) break Label6;
                    F.line = 219;
                    F.filename = "random.nim";
                    b_1392508990 = i_1459621815;
                    if (!((((helper_1392508974[chckIndx(i_1392508985, 0, (helper_1392508974).length - 1)] & ((1 << b_1392508990) >>> 0)) >>> 0) == 0))) {
                    F.line = 221;
                    s0_1392508975 = ((s0_1392508975 ^ s_1392508973.a0) >>> 0);
                    F.line = 222;
                    s1_1392508976 = ((s1_1392508976 ^ s_1392508973.a1) >>> 0);
                    }
                    
                    F.line = 223;
                    var _ = next_1392508963(s_1392508973);
                    F.line = 131;
                    F.filename = "iterators_1.nim";
                    i_1459621815 = addInt(i_1459621815, 1);
                  }
              };
            };
            F.line = 102;
            res_1459621817 = addInt(res_1459621817, 1);
          }
      };
    };
    F.line = 224;
    F.filename = "random.nim";
    s_1392508973.a0 = s0_1392508975;
    F.line = 225;
    s_1392508973.a1 = s1_1392508976;
  framePtr = F.prev;

  
}

function initRand_1392509177(seed_1392509178) {
    var Temporary1;

  var result_1392509179 = [({a0: 0, a1: 0})];

  var F = {procname: "random.initRand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 598;
    F.filename = "random.nim";
    if (!((seed_1392509178 == 0n))) {
    Temporary1 = seed_1392509178;
    }
    else {
    Temporary1 = 2147483647n;
    }
    
    var seed_1392509185 = Temporary1;
    F.line = 599;
    result_1392509179[0].a0 = Number((seed_1392509185 >> BigInt(16)));
    F.line = 600;
    result_1392509179[0].a1 = Number((seed_1392509185 & 65535n));
    F.line = 604;
    skipRandomNumbers_1392508972(result_1392509179[0]);
    F.line = 605;
    var _ = next_1392508963(result_1392509179[0]);
  framePtr = F.prev;

  return result_1392509179[0];

}

function randomize_1392509190(seed_1392509191) {
  var F = {procname: "random.randomize", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "random.nim";
    state_1392508942[0] = nimCopy(state_1392508942[0], initRand_1392509177(seed_1392509191), NTI1392508932);
  framePtr = F.prev;

  
}

function getTakesOn_1224737435(p_1224737436, board_1224737437) {
  var result_1224737438 = [[]];

  var F = {procname: "piece.getTakesOn", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 193;
      F.filename = "piece.nim";
      var x_1224737461 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621820 = 0;
      F.line = 250;
      var L_1459621821 = (p_1224737436.takes).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621820 < L_1459621821)) break Label3;
            F.line = 193;
            F.filename = "piece.nim";
            x_1224737461 = p_1224737436.takes[chckIndx(i_1459621820, 0, (p_1224737436.takes).length - 1)];
            F.line = 194;
            add_1224737462(result_1224737438, 0, x_1224737461(board_1224737437, p_1224737436));
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621820 += 1;
            if (!(((p_1224737436.takes).length == L_1459621821))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1224737438[0];

}

function HEX3DHEX3D_1224737609(x_1224737611, y_1224737612) {
  var result_1224737613 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((x_1224737611["Field0"] == y_1224737612["Field0"]))) {
    F.line = 1714;
    F.filename = "system.nim";
    result_1224737613 = false;
    break BeforeRet;
    }
    
    if (!((x_1224737611["Field1"] == y_1224737612["Field1"]))) {
    F.line = 1714;
    result_1224737613 = false;
    break BeforeRet;
    }
    
    F.line = 1715;
    result_1224737613 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737613;

}

function find_1224737590(a_1224737593, item_1224737594) {
  var result_1224737595 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1224737595 = 0;
    Label1: {
      F.line = 1672;
      var i_1224737608 = {Field0: 0, Field1: 0};
      F.line = 18;
      F.filename = "iterators.nim";
      var i_1459621837 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_1459621837 < (a_1224737593).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1224737608 = a_1224737593[chckIndx(i_1459621837, 0, (a_1224737593).length - 1)];
            if (HEX3DHEX3D_1224737609(i_1224737608, item_1224737594)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1224737595 = addInt(result_1224737595, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621837 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1224737595 = (-1);
  };
  framePtr = F.prev;

  return result_1224737595;

}

function contains_1224737585(a_1224737587, item_1224737588) {
  var result_1224737589 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1224737589 = (0 <= find_1224737590(a_1224737587, item_1224737588));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737589;

}

function addQuoted_838862213(s_838862215, s_838862215_Idx, x_838862216) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2533;
    F.filename = "system.nim";
    addInt_301990129(s_838862215, s_838862215_Idx, x_838862216);
  framePtr = F.prev;

  
}

function HEX24_1224737640(x_1224737642) {
  var result_1224737643 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_1224737643[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym5_1224737654 = 0;
    if ((0 < countHEX60gensym5_1224737654)) {
    F.line = 23;
    result_1224737643[0].push.apply(result_1224737643[0], [44,32]);;
    }
    
    F.line = 25;
    result_1224737643[0].push.apply(result_1224737643[0], [102,105,108,101]);;
    F.line = 26;
    result_1224737643[0].push.apply(result_1224737643[0], [58,32]);;
    F.line = 27;
    countHEX60gensym5_1224737654 += 1;
    F.line = 33;
    addQuoted_838862213(result_1224737643, 0, x_1224737642["Field0"]);
    if ((0 < countHEX60gensym5_1224737654)) {
    F.line = 23;
    result_1224737643[0].push.apply(result_1224737643[0], [44,32]);;
    }
    
    F.line = 25;
    result_1224737643[0].push.apply(result_1224737643[0], [114,97,110,107]);;
    F.line = 26;
    result_1224737643[0].push.apply(result_1224737643[0], [58,32]);;
    F.line = 27;
    countHEX60gensym5_1224737654 += 1;
    F.line = 33;
    addQuoted_838862213(result_1224737643, 0, x_1224737642["Field1"]);
    F.line = 39;
    result_1224737643[0].push.apply(result_1224737643[0], [41]);;
  framePtr = F.prev;

  return result_1224737643[0];

}

function getMovesOn_1224737550(p_1224737551, board_1224737552) {
  var result_1224737553 = [[]];

  var F = {procname: "piece.getMovesOn", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 203;
      F.filename = "piece.nim";
      var x_1224737557 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621824 = 0;
      F.line = 250;
      var L_1459621825 = (p_1224737551.moves).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621824 < L_1459621825)) break Label3;
            F.line = 203;
            F.filename = "piece.nim";
            x_1224737557 = p_1224737551.moves[chckIndx(i_1459621824, 0, (p_1224737551.moves).length - 1)];
            F.line = 204;
            add_1224737462(result_1224737553, 0, x_1224737557(board_1224737552, p_1224737551));
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621824 += 1;
            if (!(((p_1224737551.moves).length == L_1459621825))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 205;
    F.filename = "piece.nim";
    var takes_1224737562 = getTakesOn_1224737435(p_1224737551, board_1224737552);
    Label4: {
      F.line = 206;
      var x_1224737584 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621828 = 0;
      F.line = 250;
      var L_1459621829 = (takes_1224737562).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_1459621828 < L_1459621829)) break Label6;
            F.line = 206;
            F.filename = "piece.nim";
            x_1224737584 = takes_1224737562[chckIndx(i_1459621828, 0, (takes_1224737562).length - 1)];
            if (contains_1224737585(result_1224737553[0], x_1224737584)) {
            F.line = 207;
            rawEcho(HEX24_1224737640(x_1224737584), [32,105,115,32,97,32,116,97,107,101,32,97,110,100,32,97,32,109,111,118,101]);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621828 += 1;
            if (!(((takes_1224737562).length == L_1459621829))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 208;
    F.filename = "piece.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym12_1224737691 = newSeq_1224737683(0);
    Label7: {
      F.line = 653;
      var it_1224737695 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621832 = 0;
      F.line = 250;
      var L_1459621833 = (result_1224737553[0]).length;
      Label8: {
        F.line = 251;
          Label9: while (true) {
          if (!(i_1459621832 < L_1459621833)) break Label9;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1224737695 = result_1224737553[0][chckIndx(i_1459621832, 0, (result_1224737553[0]).length - 1)];
            if (!(contains_1224737585(takes_1224737562, it_1224737695))) {
            F.line = 654;
            var Temporary10 = nimCopy(null, it_1224737695, NTI1224736771);
            resultHEX60gensym12_1224737691.push(Temporary10);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621832 += 1;
            if (!(((result_1224737553[0]).length == L_1459621833))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1224737553[0] = nimCopy(null, resultHEX60gensym12_1224737691, NTI1224737429);
  framePtr = F.prev;

  return result_1224737553[0];

}

function rand_1392509039(r_1392509041, max_1392509042) {
  var result_1392509043 = 0n;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((max_1392509042 == 0n)) {
    F.line = 229;
    F.filename = "random.nim";
    break BeforeRet;
    }
    else {
      F.line = 231;
      var max_1392509044 = max_1392509042;
      if ((max_1392509044 == 18446744073709551615n)) {
      F.line = 233;
      result_1392509043 = next_1392508963(r_1392509041);
      break BeforeRet;
      }
      
      F.line = 234;
      var iters_1392509057 = 0;
      Label1: {
        F.line = 235;
          Label2: while (true) {
          if (!true) break Label2;
            F.line = 236;
            var x_1392509058 = next_1392508963(r_1392509041);
            if (((x_1392509058 <= BigInt.asUintN(64, (4294967295n - (4294967295n % max_1392509044)))) || (20 < iters_1392509057))) {
            F.line = 239;
            result_1392509043 = (x_1392509058 % BigInt.asUintN(64, (max_1392509044 + 1n)));
            break BeforeRet;
            }
            else {
              F.line = 241;
            iters_1392509057 = addInt(iters_1392509057, 1);
            }
            
          }
      };
    }
    
  };
  framePtr = F.prev;

  return result_1392509043;

}

function rand_1325400138(r_1325400140, x_1325400141) {
  var result_1325400142 = 0;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    if (!((x_1325400141.a <= x_1325400141.b))) {
    F.line = 339;
    F.filename = "random.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim(339, 3) `x.a <= x.b` "));
    }
    
    F.line = 346;
    result_1325400142 = Number(BigInt.asIntN(32, BigInt.asUintN(64, (rand_1392509039(r_1325400140, BigInt.asUintN(64, (BigInt.asUintN(64, BigInt(x_1325400141.b)) - BigInt.asUintN(64, BigInt(x_1325400141.a))))) + BigInt.asUintN(64, BigInt(x_1325400141.a))))));
  framePtr = F.prev;

  return result_1325400142;

}

function rand_1325400130(x_1325400132) {
  var result_1325400133 = 0;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 368;
    F.filename = "random.nim";
    result_1325400133 = rand_1325400138(state_1392508942[0], x_1325400132);
  framePtr = F.prev;

  return result_1325400133;

}

function HEX2EHEX2E_1056964656(a_1056964659, b_1056964660) {
  var result_1056964661 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "system.nim";
    result_1056964661 = nimCopy(result_1056964661, {a: a_1056964659, b: b_1056964660}, NTI889192517);
  framePtr = F.prev;

  return result_1056964661;

}

function sample_1459619576(a_1459619578) {
  var result_1459619579 = {Field0: 0, Field1: 0};

  var F = {procname: "sample.sample", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 488;
    F.filename = "random.nim";
    result_1459619579 = a_1459619578[chckIndx(rand_1325400130(HEX2EHEX2E_1056964656(0, (a_1459619578).length - 1)), 0, (a_1459619578).length - 1)];
  framePtr = F.prev;

  return result_1459619579;

}

function HEX3Aanonymous_1459619550(piece_1459619551, board_1459619552, state_1459619553) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(piece_1459619551.drunk)) {
    F.line = 1183;
    F.filename = "powers.nim";
    piece_1459619551.drunk = true;
    F.line = 1188;
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459619551.tile.Field1), mulInt(100, piece_1459619551.tile.Field0)), state_1459619553.Field0.randSeed)));
    F.line = 1189;
    var takes_1459619554 = getTakesOn_1224737435(piece_1459619551, board_1459619552);
    F.line = 1190;
    var moves_1459619555 = getMovesOn_1224737550(piece_1459619551, board_1459619552);
    if (((moves_1459619555).length == 0)) {
    F.line = 1191;
    break BeforeRet;
    }
    
    F.line = 1194;
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym88_1459619563 = newSeq_1224737683(0);
    Label1: {
      F.line = 653;
      var it_1459619567 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621810 = 0;
      F.line = 250;
      var L_1459621811 = (moves_1459619555).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621810 < L_1459621811)) break Label3;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1459619567 = moves_1459619555[chckIndx(i_1459621810, 0, (moves_1459619555).length - 1)];
            if (!(contains_1224737585(takes_1459619554, it_1459619567))) {
            F.line = 654;
            var Temporary4 = nimCopy(null, it_1459619567, NTI1224736771);
            resultHEX60gensym88_1459619563.push(Temporary4);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621810 += 1;
            if (!(((moves_1459619555).length == L_1459621811))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var attempt_1459619598 = nimCopy(null, sample_1459619576(resultHEX60gensym88_1459619563), NTI1224736771);
    if (contains_1224737585(moves_1459619555, attempt_1459619598)) {
    F.line = 1198;
    F.filename = "powers.nim";
    piece_1459619551.onMove(piece_1459619551, attempt_1459619598, board_1459619552, state_1459619553);
    }
    
    }
    
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619670(side_1459619671, __1459619672, b_1459619673, __1459619674) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1231;
      F.filename = "powers.nim";
      var i_1459619675 = 0;
      F.line = 1231;
      var j_1459619676 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621802 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621803 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621803 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621802 = i_1459621803;
              Label5: {
                F.line = 114;
                var j_1459621806 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621807 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621807 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621806 = i_1459621807;
                      F.line = 1231;
                      F.filename = "powers.nim";
                      i_1459619675 = i_1459621802;
                      F.line = 1231;
                      j_1459619676 = j_1459621806;
                      if (((b_1459619673[chckIndx(i_1459619675, 0, (b_1459619673).length - 1)][chckIndx(j_1459619676, 0, (b_1459619673[chckIndx(i_1459619675, 0, (b_1459619673).length - 1)]).length - 1)].item == 5) && isColor_1224737917(b_1459619673[chckIndx(i_1459619675, 0, (b_1459619673).length - 1)][chckIndx(j_1459619676, 0, (b_1459619673[chckIndx(i_1459619675, 0, (b_1459619673).length - 1)]).length - 1)], side_1459619671))) {
                      F.line = 1233;
                      b_1459619673[chckIndx(i_1459619675, 0, (b_1459619673).length - 1)][chckIndx(j_1459619676, 0, (b_1459619673[chckIndx(i_1459619675, 0, (b_1459619673).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459619550);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621807 = addInt(i_1459621807, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621803 = addInt(i_1459621803, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619686(side_1459619687, __1459619688, b_1459619689, __1459619690) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1245;
      F.filename = "powers.nim";
      var i_1459619691 = 0;
      F.line = 1245;
      var j_1459619692 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621842 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621843 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621843 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621842 = i_1459621843;
              Label5: {
                F.line = 114;
                var j_1459621846 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621847 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621847 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621846 = i_1459621847;
                      F.line = 1245;
                      F.filename = "powers.nim";
                      i_1459619691 = i_1459621842;
                      F.line = 1245;
                      j_1459619692 = j_1459621846;
                      if (isColor_1224737917(b_1459619689[chckIndx(i_1459619691, 0, (b_1459619689).length - 1)][chckIndx(j_1459619692, 0, (b_1459619689[chckIndx(i_1459619691, 0, (b_1459619689).length - 1)]).length - 1)], side_1459619687)) {
                      F.line = 1247;
                      b_1459619689[chckIndx(i_1459619691, 0, (b_1459619689).length - 1)][chckIndx(j_1459619692, 0, (b_1459619689[chckIndx(i_1459619691, 0, (b_1459619689).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459619550);;
                      F.line = 1248;
                      b_1459619689[chckIndx(i_1459619691, 0, (b_1459619689).length - 1)][chckIndx(j_1459619692, 0, (b_1459619689[chckIndx(i_1459619691, 0, (b_1459619689).length - 1)]).length - 1)].rotate = true;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621847 = addInt(i_1459621847, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621843 = addInt(i_1459621843, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function rand_1392509035(r_1392509036, max_1392509037) {
  var result_1392509038 = 0;

  var F = {procname: "random.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "random.nim";
    result_1392509038 = Number(BigInt.asIntN(32, rand_1392509039(r_1392509036, BigInt.asUintN(64, BigInt(max_1392509037)))));
  framePtr = F.prev;

  return result_1392509038;

}

function rand_1392509064(max_1392509065) {
  var result_1392509066 = 0;

  var F = {procname: "random.rand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 261;
    F.filename = "random.nim";
    result_1392509066 = rand_1392509035(state_1392508942[0], chckRange(max_1392509065, 0, 2147483647));
  framePtr = F.prev;

  return result_1392509066;

}

function createLottery_1459620051() {
    
function HEX3Aanonymous_1459620054(piece_1459620055, board_1459620056, state_1459620057) {
      var F = {procname: "createLottery.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (!((piece_1459620055.timesMoved == lastTimesMoved_1459620053))) {
        F.line = 1470;
        F.filename = "powers.nim";
        randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459620055.tile.Field1), mulInt(100, piece_1459620055.tile.Field0)), state_1459620057.Field0.randSeed)));
        F.line = 1471;
        var ticket_1459620058 = rand_1392509064(100);
        if ((ticket_1459620058 == 42)) {
        Label1: {
          F.line = 169;
          F.filename = "piece.nim";
          var xHEX60gensym110_1459620063 = null;
          F.line = 249;
          F.filename = "iterators.nim";
          var i_1459621859 = 0;
          F.line = 250;
          var L_1459621860 = (piece_1459620055.onPromote).length;
          Label2: {
            F.line = 251;
              Label3: while (true) {
              if (!(i_1459621859 < L_1459621860)) break Label3;
                F.line = 1473;
                F.filename = "powers.nim";
                xHEX60gensym110_1459620063 = piece_1459620055.onPromote[chckIndx(i_1459621859, 0, (piece_1459620055.onPromote).length - 1)];
                F.line = 170;
                F.filename = "piece.nim";
                xHEX60gensym110_1459620063(piece_1459620055, board_1459620056, state_1459620057);
                if (piece_1459620055.promoted) {
                F.line = 171;
                break Label1;
                }
                
                F.line = 13;
                F.filename = "iterators.nim";
                i_1459621859 += 1;
                if (!(((piece_1459620055.onPromote).length == L_1459621860))) {
                F.line = 254;
                failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        }
        
        }
        
        F.line = 1474;
        F.filename = "powers.nim";
        lastTimesMoved_1459620053 = piece_1459620055.timesMoved;
      framePtr = F.prev;

      
    }

  var result_1459620052 = null;

  var F = {procname: "powers.createLottery", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1462;
    F.filename = "powers.nim";
    var lastTimesMoved_1459620053 = 0;
    F.line = 1468;
    result_1459620052 = HEX3Aanonymous_1459620054;
  framePtr = F.prev;

  return result_1459620052;

}

function HEX3Aanonymous_1459620066(side_1459620067, __1459620068, b_1459620069, __1459620070) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1486;
      F.filename = "powers.nim";
      var i_1459620071 = 0;
      F.line = 1486;
      var j_1459620072 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621851 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621852 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621852 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621851 = i_1459621852;
              Label5: {
                F.line = 114;
                var j_1459621855 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621856 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621856 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621855 = i_1459621856;
                      F.line = 1486;
                      F.filename = "powers.nim";
                      i_1459620071 = i_1459621851;
                      F.line = 1486;
                      j_1459620072 = j_1459621855;
                      if (((b_1459620069[chckIndx(i_1459620071, 0, (b_1459620069).length - 1)][chckIndx(j_1459620072, 0, (b_1459620069[chckIndx(i_1459620071, 0, (b_1459620069).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459620069[chckIndx(i_1459620071, 0, (b_1459620069).length - 1)][chckIndx(j_1459620072, 0, (b_1459620069[chckIndx(i_1459620071, 0, (b_1459620069).length - 1)]).length - 1)], side_1459620067))) {
                      F.line = 1488;
                      b_1459620069[chckIndx(i_1459620071, 0, (b_1459620069).length - 1)][chckIndx(j_1459620072, 0, (b_1459620069[chckIndx(i_1459620071, 0, (b_1459620069).length - 1)]).length - 1)].onEndTurn.push(createLottery_1459620051());;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621856 = addInt(i_1459621856, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621852 = addInt(i_1459621852, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function otherSide_1224737925(a_1224737926) {
    var Temporary1;

  var result_1224737927 = 0;

  var F = {procname: "piece.otherSide", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 279;
    F.filename = "piece.nim";
    if ((a_1224737926 == 1)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_1224737927 = Temporary1;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737927;

}

function HEX3Aanonymous_1459620082(piece_1459620083, board_1459620084, state_1459620085) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1493;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459620083.tile.Field1), mulInt(100, piece_1459620083.tile.Field0)), state_1459620085.Field0.randSeed)));
    F.line = 1494;
    var ticket_1459620086 = rand_1392509064(1000);
    if ((ticket_1459620086 == 42)) {
    Label1: {
      F.line = 1496;
      var i_1459620087 = 0;
      F.line = 1496;
      var j_1459620088 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621873 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621874 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621874 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621873 = i_1459621874;
              Label5: {
                F.line = 114;
                var j_1459621877 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621878 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621878 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621877 = i_1459621878;
                      F.line = 1496;
                      F.filename = "powers.nim";
                      i_1459620087 = i_1459621873;
                      F.line = 1496;
                      j_1459620088 = j_1459621877;
                      if (((board_1459620084[chckIndx(i_1459620087, 0, (board_1459620084).length - 1)][chckIndx(j_1459620088, 0, (board_1459620084[chckIndx(i_1459620087, 0, (board_1459620084).length - 1)]).length - 1)].item == 0) && isColor_1224737917(board_1459620084[chckIndx(i_1459620087, 0, (board_1459620084).length - 1)][chckIndx(j_1459620088, 0, (board_1459620084[chckIndx(i_1459620087, 0, (board_1459620084).length - 1)]).length - 1)], otherSide_1224737925(piece_1459620083.color)))) {
                      F.line = 1499;
                      board_1459620084[chckIndx(i_1459620087, 0, (board_1459620084).length - 1)][chckIndx(j_1459620088, 0, (board_1459620084[chckIndx(i_1459620087, 0, (board_1459620084).length - 1)]).length - 1)].item = 6;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621878 = addInt(i_1459621878, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621874 = addInt(i_1459621874, 1);
            }
        };
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620094(side_1459620095, __1459620096, b_1459620097, __1459620098) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1509;
      F.filename = "powers.nim";
      var i_1459620099 = 0;
      F.line = 1509;
      var j_1459620100 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621864 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621865 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621865 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621864 = i_1459621865;
              Label5: {
                F.line = 114;
                var j_1459621868 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621869 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621869 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621868 = i_1459621869;
                      F.line = 1509;
                      F.filename = "powers.nim";
                      i_1459620099 = i_1459621864;
                      F.line = 1509;
                      j_1459620100 = j_1459621868;
                      if (((b_1459620097[chckIndx(i_1459620099, 0, (b_1459620097).length - 1)][chckIndx(j_1459620100, 0, (b_1459620097[chckIndx(i_1459620099, 0, (b_1459620097).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459620097[chckIndx(i_1459620099, 0, (b_1459620097).length - 1)][chckIndx(j_1459620100, 0, (b_1459620097[chckIndx(i_1459620099, 0, (b_1459620097).length - 1)]).length - 1)], side_1459620095))) {
                      F.line = 1511;
                      b_1459620097[chckIndx(i_1459620099, 0, (b_1459620097).length - 1)][chckIndx(j_1459620100, 0, (b_1459620097[chckIndx(i_1459620099, 0, (b_1459620097).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459620082);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621869 = addInt(i_1459621869, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621865 = addInt(i_1459621865, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620110(piece_1459620111, taking_1459620112, board_1459620113, state_1459620114) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1515;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459620111.tile.Field1), mulInt(100, piece_1459620111.tile.Field0)), state_1459620114.Field0.randSeed)));
    F.line = 1516;
    var dice_1459620115 = rand_1392509064(20);
    F.line = 1518;
    piece_1459620111.timesMoved = addInt(piece_1459620111.timesMoved, 1);
    if (((dice_1459620115 <= 3) && !((HEX5BHEX5D_1224737288(board_1459620113, taking_1459620112).item == 0)))) {
    F.line = 1520;
    HEX5BHEX5D_1224737288(board_1459620113, taking_1459620112).color = piece_1459620111.color;
    F.line = 1521;
    HEX5BHEX5D_1224737288(board_1459620113, taking_1459620112).index = newIndex_1224737419(state_1459620114);
    F.line = 1522;
    pieceSwap_1224737759(piece_1459620111, HEX5BHEX5D_1224737288(board_1459620113, taking_1459620112), board_1459620113);
    }
    else {
      F.line = 1524;
      var takeResult_1459620125 = board_1459620113[chckIndx(taking_1459620112.Field1, 0, (board_1459620113).length - 1)][chckIndx(taking_1459620112.Field0, 0, (board_1459620113[chckIndx(taking_1459620112.Field1, 0, (board_1459620113).length - 1)]).length - 1)].whenTaken(board_1459620113[chckIndx(taking_1459620112.Field1, 0, (board_1459620113).length - 1)][chckIndx(taking_1459620112.Field0, 0, (board_1459620113[chckIndx(taking_1459620112.Field1, 0, (board_1459620113).length - 1)]).length - 1)], piece_1459620111, board_1459620113, state_1459620114);
      if (takeResult_1459620125.Field1) {
      F.line = 1526;
      HEX5BHEX5D_1224737288(board_1459620113, takeResult_1459620125.Field0).piecesTaken = addInt(HEX5BHEX5D_1224737288(board_1459620113, takeResult_1459620125.Field0).piecesTaken, 1);
      }
      
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620133(side_1459620134, __1459620135, b_1459620136, __1459620137) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1537;
      F.filename = "powers.nim";
      var i_1459620138 = 0;
      F.line = 1537;
      var j_1459620139 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621882 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621883 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621883 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621882 = i_1459621883;
              Label5: {
                F.line = 114;
                var j_1459621886 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621887 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621887 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621886 = i_1459621887;
                      F.line = 1537;
                      F.filename = "powers.nim";
                      i_1459620138 = i_1459621882;
                      F.line = 1537;
                      j_1459620139 = j_1459621886;
                      if (((b_1459620136[chckIndx(i_1459620138, 0, (b_1459620136).length - 1)][chckIndx(j_1459620139, 0, (b_1459620136[chckIndx(i_1459620138, 0, (b_1459620136).length - 1)]).length - 1)].item == 2) && isColor_1224737917(b_1459620136[chckIndx(i_1459620138, 0, (b_1459620136).length - 1)][chckIndx(j_1459620139, 0, (b_1459620136[chckIndx(i_1459620138, 0, (b_1459620136).length - 1)]).length - 1)], side_1459620134))) {
                      F.line = 1539;
                      b_1459620136[chckIndx(i_1459620138, 0, (b_1459620136).length - 1)][chckIndx(j_1459620139, 0, (b_1459620136[chckIndx(i_1459620138, 0, (b_1459620136).length - 1)]).length - 1)].onTake = HEX3Aanonymous_1459620110;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621887 = addInt(i_1459621887, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621883 = addInt(i_1459621883, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620194(piece_1459620195, board_1459620196, state_1459620197) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1581;
      F.filename = "powers.nim";
      var i_1459620198 = 0;
      F.line = 1581;
      var j_1459620199 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621900 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621901 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621901 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621900 = i_1459621901;
              Label5: {
                F.line = 114;
                var j_1459621904 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621905 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621905 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621904 = i_1459621905;
                      F.line = 1581;
                      F.filename = "powers.nim";
                      i_1459620198 = i_1459621900;
                      F.line = 1581;
                      j_1459620199 = j_1459621904;
                      if (board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)][chckIndx(j_1459620199, 0, (board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)]).length - 1)].promoted) {
                      F.line = 1583;
                      board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)][chckIndx(j_1459620199, 0, (board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)]).length - 1)] = nimCopy(board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)][chckIndx(j_1459620199, 0, (board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, newIndex_1224737419(state_1459620197), 6, 1, 0, 0, board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)][chckIndx(j_1459620199, 0, (board_1459620196[chckIndx(i_1459620198, 0, (board_1459620196).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621905 = addInt(i_1459621905, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621901 = addInt(i_1459621901, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620201(side_1459620202, __1459620203, b_1459620204, __1459620205) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1594;
      F.filename = "powers.nim";
      var i_1459620206 = 0;
      F.line = 1594;
      var j_1459620207 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621891 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621892 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621892 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621891 = i_1459621892;
              Label5: {
                F.line = 114;
                var j_1459621895 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621896 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621896 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621895 = i_1459621896;
                      F.line = 1594;
                      F.filename = "powers.nim";
                      i_1459620206 = i_1459621891;
                      F.line = 1594;
                      j_1459620207 = j_1459621895;
                      if (((b_1459620204[chckIndx(i_1459620206, 0, (b_1459620204).length - 1)][chckIndx(j_1459620207, 0, (b_1459620204[chckIndx(i_1459620206, 0, (b_1459620204).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459620204[chckIndx(i_1459620206, 0, (b_1459620204).length - 1)][chckIndx(j_1459620207, 0, (b_1459620204[chckIndx(i_1459620206, 0, (b_1459620204).length - 1)]).length - 1)], side_1459620202))) {
                      F.line = 1597;
                      b_1459620204[chckIndx(i_1459620206, 0, (b_1459620204).length - 1)][chckIndx(j_1459620207, 0, (b_1459620204[chckIndx(i_1459620206, 0, (b_1459620204).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459620194);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621896 = addInt(i_1459621896, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621892 = addInt(i_1459621892, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620217(side_1459620218, __1459620219, b_1459620220, state_1459620221) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1609;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(state_1459620221.Field0.randSeed));
    F.line = 1610;
    var sleeper_1459620229 = rand_1392509064(7);
    F.line = 1611;
    var failsafe_1459620237 = 9;
    F.line = 1612;
    if ((side_1459620218 == 0)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 6;
    }
    
    var rank_1459620242 = Temporary1;
    Label2: {
      F.line = 1616;
        Label3: while (true) {
        if (!(!((b_1459620220[chckIndx(rank_1459620242, 0, (b_1459620220).length - 1)][chckIndx(sleeper_1459620229, 0, (b_1459620220[chckIndx(rank_1459620242, 0, (b_1459620220).length - 1)]).length - 1)].item == 3)) && !((failsafe_1459620237 == 0)))) break Label3;
          F.line = 1617;
          sleeper_1459620229 = addInt(sleeper_1459620229, 1);
          F.line = 1618;
          failsafe_1459620237 = subInt(failsafe_1459620237, 1);
          F.line = 1619;
          sleeper_1459620229 = modInt(sleeper_1459620229, 8);
        }
    };
    if (!((failsafe_1459620237 == 0))) {
    if ((side_1459620218 == 0)) {
    F.line = 1624;
    b_1459620220[chckIndx(1, 0, (b_1459620220).length - 1)][chckIndx(sleeper_1459620229, 0, (b_1459620220[chckIndx(1, 0, (b_1459620220).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395068);;
    }
    else {
      F.line = 1626;
      b_1459620220[chckIndx(6, 0, (b_1459620220).length - 1)][chckIndx(sleeper_1459620229, 0, (b_1459620220[chckIndx(6, 0, (b_1459620220).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395063);;
    }
    
    }
    
  framePtr = F.prev;

  
}

function alwaysCost_1493172453(cost_1493172454) {
    
function HEX3Aanonymous_1493172456(piece_1493172457, b_1493172458, s_1493172459) {
      var result_1493172460 = 0;

      var F = {procname: "alwaysCost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        F.line = 45;
        F.filename = "capitalism.nim";
        result_1493172460 = cost_1493172454;
        break BeforeRet;
      };
      framePtr = F.prev;

      return result_1493172460;

    }

  var result_1493172455 = null;

  var F = {procname: "capitalism.alwaysCost", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "capitalism.nim";
    result_1493172455 = HEX3Aanonymous_1493172456;
  framePtr = F.prev;

  return result_1493172455;

}

function HEX3Aanonymous_1459620270(piece_1459620271, b_1459620272, s_1459620273) {
    
function HEX3Aanonymous_1459620291(piece_1459620292, board_1459620293, state_1459620294) {
      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if ((!((state_1459620294.Field0.turnNumber == turnOfPromote_1459620281)) && !(release_1459620282))) {
        F.line = 1645;
        F.filename = "powers.nim";
        add_1459617825(piece_1459620292, "moves", captureMove_1459620279);
        F.line = 1646;
        add_1459617825(piece_1459620292, "takes", captureTake_1459620280);
        F.line = 1647;
        release_1459620282 = true;
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 169;
      F.filename = "piece.nim";
      var xHEX60gensym123_1459620278 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459621918 = 0;
      F.line = 250;
      var L_1459621919 = (piece_1459620271.onPromote).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_1459621918 < L_1459621919)) break Label3;
            F.line = 1633;
            F.filename = "powers.nim";
            xHEX60gensym123_1459620278 = piece_1459620271.onPromote[chckIndx(i_1459621918, 0, (piece_1459620271.onPromote).length - 1)];
            F.line = 170;
            F.filename = "piece.nim";
            xHEX60gensym123_1459620278(piece_1459620271, b_1459620272, s_1459620273);
            if (piece_1459620271.promoted) {
            F.line = 171;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621918 += 1;
            if (!(((piece_1459620271.onPromote).length == L_1459621919))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 1634;
    F.filename = "powers.nim";
    var captureMove_1459620279 = nimCopy(null, piece_1459620271.moves, NTI1224736849);
    F.line = 1635;
    var captureTake_1459620280 = nimCopy(null, piece_1459620271.takes, NTI1224736850);
    F.line = 1636;
    var turnOfPromote_1459620281 = s_1459620273.Field0.turnNumber;
    F.line = 1637;
    var release_1459620282 = false;
    F.line = 1638;
    piece_1459620271.moves = nimCopy(null, [], NTI1459619685);
    F.line = 1639;
    piece_1459620271.takes = nimCopy(null, [], NTI1459619685);
    F.line = 1640;
    piece_1459620271.promoted = true;
    F.line = 1642;
    piece_1459620271.onEndTurn.push(HEX3Aanonymous_1459620291);;
  framePtr = F.prev;

  
}

function HEX3DHEX3D_1459620319(x_1459620321, y_1459620322) {
  var result_1459620323 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 326;
    F.filename = "comparisons.nim";
    var sameObject_1459620330 = false;
    F.line = 327;
    sameObject_1459620330 = x_1459620321 === y_1459620322
    if (sameObject_1459620330) {
    F.line = 328;
    result_1459620323 = true;
    break BeforeRet;
    }
    
    if (!(((x_1459620321).length == (y_1459620322).length))) {
    F.line = 331;
    result_1459620323 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 333;
      var i_1459620344 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459621922 = 0;
      F.line = 333;
      F.filename = "comparisons.nim";
      colontmp__1459621922 = subInt((x_1459620321).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621923 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459621923 <= colontmp__1459621922)) break Label3;
            F.line = 333;
            F.filename = "comparisons.nim";
            i_1459620344 = res_1459621923;
            if (!((x_1459620321[chckIndx(i_1459620344, 0, (x_1459620321).length - 1)] == y_1459620322[chckIndx(i_1459620344, 0, (y_1459620322).length - 1)]))) {
            F.line = 335;
            result_1459620323 = false;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459621923 = addInt(res_1459621923, 1);
          }
      };
    };
    F.line = 337;
    F.filename = "comparisons.nim";
    result_1459620323 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459620323;

}

function HEX3Aanonymous_1459620310(piece_1459620311, board_1459620312, s_1459620313) {
  var result_1459620314 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1650;
    F.filename = "powers.nim";
    result_1459620314 = (!(piece_1459620311.promoted) && !(HEX3DHEX3D_1459620319(piece_1459620311.onPromote, [HEX3Aanonymous_1224737374])));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459620314;

}

function some_1409288448(val_1409288450) {
  var result_1409288451 = ({val: 0, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1409288451.has = true;
    F.line = 141;
    result_1409288451.val = val_1409288450;
  framePtr = F.prev;

  return result_1409288451;

}

function initWallet_1493172326(side_1493172327, s_1493172328) {
  var F = {procname: "capitalism.initWallet", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "capitalism.nim";
    s_1493172328.Field1[chckIndx(side_1493172327, 0, (s_1493172328.Field1).length - 1)].wallet = nimCopy(s_1493172328.Field1[chckIndx(side_1493172327, 0, (s_1493172328.Field1).length - 1)].wallet, some_1409288448(0), NTI1224736861);
  framePtr = F.prev;

  
}

function isSome_1409289449(self_1409289451) {
  var result_1409289452 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1409289452 = self_1409289451.has;
  framePtr = F.prev;

  return result_1409289452;

}

function none_1224736912() {
  var result_1224736919 = ({val: 0, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1224736919;

}

function map_1493172302(self_1493172305, callback_1493172307) {
    var Temporary1;

  var result_1493172308 = ({val: 0, has: false});

  var F = {procname: "map.map", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 253;
    F.filename = "options.nim";
    if (isSome_1409289449(self_1493172305)) {
    Temporary1 = some_1409288448(callback_1493172307(self_1493172305.val));
    }
    else {
    Temporary1 = none_1224736912();
    }
    
    result_1493172308 = nimCopy(result_1493172308, Temporary1, NTI1224736861);
  framePtr = F.prev;

  return result_1493172308;

}

function addMoney_1493172266(side_1493172267, money_1493172268, s_1493172269) {
    
function HEX3Aanonymous_1493172286(x_1493172297) {
      var result_1493172301 = 0;

      var F = {procname: "addMoney.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
        F.line = 18;
        F.filename = "capitalism.nim";
        result_1493172301 = addInt(x_1493172297, money_1493172268);
      framePtr = F.prev;

      return result_1493172301;

    }

  var F = {procname: "capitalism.addMoney", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    if (!(isSome_1409289449(s_1493172269.Field1[chckIndx(side_1493172267, 0, (s_1493172269.Field1).length - 1)].wallet))) {
    F.line = 17;
    F.filename = "capitalism.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim(17, 5) `s.side[side].wallet.isSome()` "));
    }
    
    F.line = 18;
    s_1493172269.Field1[chckIndx(side_1493172267, 0, (s_1493172269.Field1).length - 1)].wallet = nimCopy(s_1493172269.Field1[chckIndx(side_1493172267, 0, (s_1493172269.Field1).length - 1)].wallet, map_1493172302(s_1493172269.Field1[chckIndx(side_1493172267, 0, (s_1493172269.Field1).length - 1)].wallet, HEX3Aanonymous_1493172286), NTI1224736861);
  framePtr = F.prev;

  
}

function moneyForTake_1459620350() {
    
function HEX3Aanonymous_1459620353(piece_1459620354, b_1459620355, state_1459620356) {
      var F = {procname: "moneyForTake.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1660;
        F.filename = "powers.nim";
        var allPiecesTaken_1459620357 = 0;
        Label1: {
          F.line = 1661;
          var i_1459620358 = 0;
          F.line = 1661;
          var j_1459620359 = 0;
          Label2: {
            F.line = 113;
            F.filename = "piece.nim";
            var i_1459621927 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_1459621928 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_1459621928 < 8)) break Label4;
                  F.line = 113;
                  F.filename = "piece.nim";
                  i_1459621927 = i_1459621928;
                  Label5: {
                    F.line = 114;
                    var j_1459621931 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_1459621932 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_1459621932 < 8)) break Label7;
                          F.line = 114;
                          F.filename = "piece.nim";
                          j_1459621931 = i_1459621932;
                          F.line = 1661;
                          F.filename = "powers.nim";
                          i_1459620358 = i_1459621927;
                          F.line = 1661;
                          j_1459620359 = j_1459621931;
                          if (sameColor_1224737908(b_1459620355[chckIndx(i_1459620358, 0, (b_1459620355).length - 1)][chckIndx(j_1459620359, 0, (b_1459620355[chckIndx(i_1459620358, 0, (b_1459620355).length - 1)]).length - 1)], piece_1459620354)) {
                          F.line = 1663;
                          allPiecesTaken_1459620357 = addInt(allPiecesTaken_1459620357, b_1459620355[chckIndx(i_1459620358, 0, (b_1459620355).length - 1)][chckIndx(j_1459620359, 0, (b_1459620355[chckIndx(i_1459620358, 0, (b_1459620355).length - 1)]).length - 1)].piecesTaken);
                          }
                          
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_1459621932 = addInt(i_1459621932, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_1459621928 = addInt(i_1459621928, 1);
                }
            };
          };
        };
        F.line = 1665;
        F.filename = "powers.nim";
        allPiecesTaken_1459620357 = addInt(allPiecesTaken_1459620357, state_1459620356.Field1[chckIndx(piece_1459620354.color, 0, (state_1459620356.Field1).length - 1)].abilityTakes);
        if ((lastPiecesTaken_1459620352 < allPiecesTaken_1459620357)) {
        F.line = 1668;
        addMoney_1493172266(piece_1459620354.color, 3, state_1459620356);
        }
        
        F.line = 1669;
        lastPiecesTaken_1459620352 = allPiecesTaken_1459620357;
      framePtr = F.prev;

      
    }

  var result_1459620351 = null;

  var F = {procname: "powers.moneyForTake", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1655;
    F.filename = "powers.nim";
    var lastPiecesTaken_1459620352 = 0;
    F.line = 1659;
    result_1459620351 = HEX3Aanonymous_1459620353;
  framePtr = F.prev;

  return result_1459620351;

}

function HEX3Aanonymous_1459620368(side_1459620369, __1459620370, b_1459620371, s_1459620372) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1684;
    F.filename = "powers.nim";
    s_1459620372.Field1[chckIndx(side_1459620369, 0, (s_1459620372.Field1).length - 1)].buys.push({Field0: [80,114,111,109,111,116,101], Field1: alwaysCost_1493172453(30), Field2: HEX3Aanonymous_1459620270, Field3: HEX3Aanonymous_1459620310});;
    F.line = 1685;
    initWallet_1493172326(side_1459620369, s_1459620372);
    Label1: {
      F.line = 1686;
      var i_1459620381 = 0;
      F.line = 1686;
      var j_1459620382 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621910 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621911 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621911 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621910 = i_1459621911;
              Label5: {
                F.line = 114;
                var j_1459621914 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621915 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621915 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621914 = i_1459621915;
                      F.line = 1686;
                      F.filename = "powers.nim";
                      i_1459620381 = i_1459621910;
                      F.line = 1686;
                      j_1459620382 = j_1459621914;
                      if (((b_1459620371[chckIndx(i_1459620381, 0, (b_1459620371).length - 1)][chckIndx(j_1459620382, 0, (b_1459620371[chckIndx(i_1459620381, 0, (b_1459620371).length - 1)]).length - 1)].item == 0) && (b_1459620371[chckIndx(i_1459620381, 0, (b_1459620371).length - 1)][chckIndx(j_1459620382, 0, (b_1459620371[chckIndx(i_1459620381, 0, (b_1459620371).length - 1)]).length - 1)].color == side_1459620369))) {
                      F.line = 1688;
                      b_1459620371[chckIndx(i_1459620381, 0, (b_1459620371).length - 1)][chckIndx(j_1459620382, 0, (b_1459620371[chckIndx(i_1459620381, 0, (b_1459620371).length - 1)]).length - 1)].onEndTurn.push(moneyForTake_1459620350());;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621915 = addInt(i_1459621915, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621911 = addInt(i_1459621911, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function some_1459620880(val_1459620882) {
  var result_1459620883 = ({val: {Field0: 0, Field1: null, Field2: null}, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_1459620883.has = true;
    F.line = 141;
    result_1459620883.val = nimCopy(result_1459620883.val, val_1459620882, NTI1224736792);
  framePtr = F.prev;

  return result_1459620883;

}

function HEX3Aanonymous_1459620769(piece_1459620770, to_1459620771, b_1459620772, s_1459620773) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((b_1459620772[chckIndx(to_1459620771.Field1, 0, (b_1459620772).length - 1)][chckIndx(to_1459620771.Field0, 0, (b_1459620772[chckIndx(to_1459620771.Field1, 0, (b_1459620772).length - 1)]).length - 1)].item == 6))) {
    F.line = 1927;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    F.line = 1928;
    piece_1459620770.onMove(piece_1459620770, to_1459620771, b_1459620772, s_1459620773);
  };
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1224737236(b_1224737237, tile_1224737238) {
  var result_1224737239 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});

  var F = {procname: "piece.[]", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 130;
    F.filename = "piece.nim";
    result_1224737239 = nimCopy(result_1224737239, b_1224737237[chckIndx(tile_1224737238.Field1, 0, (b_1224737237).length - 1)][chckIndx(tile_1224737238.Field0, 0, (b_1224737237[chckIndx(tile_1224737238.Field1, 0, (b_1224737237).length - 1)]).length - 1)], NTI1224736794);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737239;

}

function getPiecesChecking_1224738031(b_1224738032, c_1224738033) {
  var result_1224738034 = [];

  var F = {procname: "piece.getPiecesChecking", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 298;
    F.filename = "piece.nim";
    var kingTile_1224738035 = nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771);
    Label1: {
      F.line = 299;
      var row_1224738040 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_1459621949 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 299;
            F.filename = "piece.nim";
            row_1224738040 = nimCopy(row_1224738040, b_1224738032[chckIndx(i_1459621949, 0, (b_1224738032).length - 1)], NTI1224736772);
            Label4: {
              F.line = 300;
              var p_1224738045 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_1459621946 = 0;
              Label5: {
                F.line = 44;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 300;
                    F.filename = "piece.nim";
                    p_1224738045 = nimCopy(p_1224738045, row_1224738040[chckIndx(i_1459621946, 0, (row_1224738040).length - 1)], NTI1224736794);
                    if (((p_1224738045.item == 0) && isColor_1224737917(p_1224738045, c_1224738033))) {
                    F.line = 302;
                    kingTile_1224738035 = nimCopy(kingTile_1224738035, p_1224738045.tile, NTI1224736771);
                    }
                    
                    if ((7 <= i_1459621946)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_1459621946 += 1;
                  }
              };
            };
            if ((7 <= i_1459621949)) {
            F.line = 46;
            break Label2;
            }
            
            F.line = 13;
            i_1459621949 += 1;
          }
      };
    };
    Label7: {
      F.line = 304;
      F.filename = "piece.nim";
      var row_1224738054 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_1459621955 = 0;
      Label8: {
        F.line = 44;
          Label9: while (true) {
          if (!true) break Label9;
            F.line = 304;
            F.filename = "piece.nim";
            row_1224738054 = nimCopy(row_1224738054, b_1224738032[chckIndx(i_1459621955, 0, (b_1224738032).length - 1)], NTI1224736772);
            Label10: {
              F.line = 305;
              var p_1224738059 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_1459621953 = 0;
              Label11: {
                F.line = 44;
                  Label12: while (true) {
                  if (!true) break Label12;
                    F.line = 305;
                    F.filename = "piece.nim";
                    p_1224738059 = nimCopy(p_1224738059, row_1224738054[chckIndx(i_1459621953, 0, (row_1224738054).length - 1)], NTI1224736794);
                    if ((!(isColor_1224737917(p_1224738059, c_1224738033)) && contains_1224737585(getTakesOn_1224737435(p_1224738059, b_1224738032), kingTile_1224738035))) {
                    F.line = 307;
                    var Temporary13 = nimCopy(null, p_1224738059.tile, NTI1224736771);
                    result_1224738034.push(Temporary13);;
                    }
                    
                    if ((7 <= i_1459621953)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label11;
                    }
                    
                    F.line = 13;
                    i_1459621953 += 1;
                  }
              };
            };
            if ((7 <= i_1459621955)) {
            F.line = 46;
            break Label8;
            }
            
            F.line = 13;
            i_1459621955 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1224738034;

}

function wouldCheckAt_1224738068(p_1224738069, at_1224738070, b_1224738071) {
  var result_1224738072 = false;

  var F = {procname: "piece.wouldCheckAt", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 311;
    F.filename = "piece.nim";
    var testboard_1224738073 = [nimCopy(null, b_1224738071, NTI1224736773)];
    F.line = 312;
    var testpiece_1224738074 = [nimCopy(null, p_1224738069, NTI1224736794)];
    F.line = 313;
    var emptyState_1224738075 = [{Field0: ({nextIndex: 0, nextGroup: 0, randSeed: 0, turnNumber: 0}), Field1: [({abilityTakes: 0, wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]}), ({abilityTakes: 0, wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]})]}];
    F.line = 314;
    pieceMove_1224737744(testpiece_1224738074[0], at_1224738070, testboard_1224738073[0], emptyState_1224738075[0]);
    F.line = 316;
    result_1224738072 = ((getPiecesChecking_1224738031(b_1224738071, otherSide_1224737925(p_1224738069.color))).length < (getPiecesChecking_1224738031(testboard_1224738073[0], otherSide_1224737925(p_1224738069.color))).length);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224738072;

}

function HEX3Aanonymous_1459620745(side_1459620746, piece_1459620747, b_1459620748, __1459620749) {
  var result_1459620750 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((piece_1459620747.color == side_1459620746))) {
    F.line = 1917;
    F.filename = "powers.nim";
    result_1459620750 = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    else {
      Label1: {
        F.line = 1919;
        var tile_1459620759 = {Field0: 0, Field1: 0};
        Label2: {
          F.line = 113;
          F.filename = "piece.nim";
          var i_1459621936 = 0;
          F.line = 128;
          F.filename = "iterators_1.nim";
          var i_1459621937 = 0;
          Label3: {
            F.line = 129;
              Label4: while (true) {
              if (!(i_1459621937 < 8)) break Label4;
                F.line = 113;
                F.filename = "piece.nim";
                i_1459621936 = i_1459621937;
                Label5: {
                  F.line = 114;
                  var j_1459621940 = 0;
                  F.line = 128;
                  F.filename = "iterators_1.nim";
                  var i_1459621941 = 0;
                  Label6: {
                    F.line = 129;
                      Label7: while (true) {
                      if (!(i_1459621941 < 8)) break Label7;
                        F.line = 114;
                        F.filename = "piece.nim";
                        j_1459621940 = i_1459621941;
                        F.line = 1919;
                        F.filename = "powers.nim";
                        tile_1459620759 = nimCopy(tile_1459620759, {Field0: i_1459621936, Field1: j_1459621940}, NTI1224736771);
                        if (((HEX5BHEX5D_1224737236(b_1459620748, tile_1459620759).item == 6) && !(wouldCheckAt_1224738068(piece_1459620747, tile_1459620759, b_1459620748)))) {
                        F.line = 1921;
                        var Temporary8 = nimCopy(null, tile_1459620759, NTI1224736771);
                        result_1459620750.push(Temporary8);;
                        }
                        
                        F.line = 131;
                        F.filename = "iterators_1.nim";
                        i_1459621941 = addInt(i_1459621941, 1);
                      }
                  };
                };
                F.line = 131;
                i_1459621937 = addInt(i_1459621937, 1);
              }
          };
        };
      };
    }
    
  };
  framePtr = F.prev;

  return result_1459620750;

}

function HEX3Aanonymous_1459620872(side_1459620873, __1459620874, __1459620875, s_1459620876) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1981;
    F.filename = "powers.nim";
    s_1459620876.Field1[chckIndx(side_1459620873, 0, (s_1459620876.Field1).length - 1)].glass[chckIndx(0, 0, (s_1459620876.Field1[chckIndx(side_1459620873, 0, (s_1459620876.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1459620876.Field1[chckIndx(side_1459620873, 0, (s_1459620876.Field1).length - 1)].glass[chckIndx(0, 0, (s_1459620876.Field1[chckIndx(side_1459620873, 0, (s_1459620876.Field1).length - 1)].glass).length - 1)], some_1459620880({Field0: 2, Field1: HEX3Aanonymous_1459620769, Field2: HEX3Aanonymous_1459620745}), NTI1224736839);
  framePtr = F.prev;

  
}

function createZeroGlassAction_1459620802(side_1459620803) {
    
function HEX3Aanonymous_1459620805(__1459620806, to_1459620807, b_1459620808, s_1459620809) {
      var F = {procname: "createZeroGlassAction.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        if ((b_1459620808[chckIndx(to_1459620807.Field1, 0, (b_1459620808).length - 1)][chckIndx(to_1459620807.Field0, 0, (b_1459620808[chckIndx(to_1459620807.Field1, 0, (b_1459620808).length - 1)]).length - 1)].item == 6)) {
        F.line = 1943;
        F.filename = "powers.nim";
        break BeforeRet;
        }
        
        F.line = 1944;
        b_1459620808[chckIndx(to_1459620807.Field1, 0, (b_1459620808).length - 1)][chckIndx(to_1459620807.Field0, 0, (b_1459620808[chckIndx(to_1459620807.Field1, 0, (b_1459620808).length - 1)]).length - 1)] = nimCopy(b_1459620808[chckIndx(to_1459620807.Field1, 0, (b_1459620808).length - 1)][chckIndx(to_1459620807.Field0, 0, (b_1459620808[chckIndx(to_1459620807.Field1, 0, (b_1459620808).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, HEX5BHEX5D_1224737288(b_1459620808, to_1459620807).index, 6, 1, 0, 0, to_1459620807, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
        F.line = 1945;
        s_1459620809.Field1[chckIndx(side_1459620803, 0, (s_1459620809.Field1).length - 1)].abilityTakes = addInt(s_1459620809.Field1[chckIndx(side_1459620803, 0, (s_1459620809.Field1).length - 1)].abilityTakes, 1);
      };
      framePtr = F.prev;

      
    }

  var result_1459620804 = null;

  var F = {procname: "powers.createZeroGlassAction", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1942;
    F.filename = "powers.nim";
    result_1459620804 = HEX3Aanonymous_1459620805;
  framePtr = F.prev;

  return result_1459620804;

}

function HEX3Aanonymous_1459620781(side_1459620782, piece_1459620783, b_1459620784, s_1459620785) {
  var result_1459620786 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((s_1459620785.Field0.turnNumber == 0)) {
    F.line = 1932;
    F.filename = "powers.nim";
    result_1459620786 = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    
    Label1: {
      F.line = 1934;
      var i_1459620791 = 0;
      F.line = 1934;
      var j_1459620792 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621959 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621960 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621960 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621959 = i_1459621960;
              Label5: {
                F.line = 114;
                var j_1459621963 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621964 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621964 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621963 = i_1459621964;
                      F.line = 1934;
                      F.filename = "powers.nim";
                      i_1459620791 = i_1459621959;
                      F.line = 1934;
                      j_1459620792 = j_1459621963;
                      if (!((b_1459620784[chckIndx(i_1459620791, 0, (b_1459620784).length - 1)][chckIndx(j_1459620792, 0, (b_1459620784[chckIndx(i_1459620791, 0, (b_1459620784).length - 1)]).length - 1)].item == 0))) {
                      F.line = 1936;
                      var Temporary8 = nimCopy(null, b_1459620784[chckIndx(i_1459620791, 0, (b_1459620784).length - 1)][chckIndx(j_1459620792, 0, (b_1459620784[chckIndx(i_1459620791, 0, (b_1459620784).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1459620786.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621964 = addInt(i_1459621964, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621960 = addInt(i_1459621960, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  return result_1459620786;

}

function HEX3Aanonymous_1459620886(side_1459620887, __1459620888, __1459620889, s_1459620890) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2000;
    F.filename = "powers.nim";
    s_1459620890.Field1[chckIndx(side_1459620887, 0, (s_1459620890.Field1).length - 1)].glass[chckIndx(1, 0, (s_1459620890.Field1[chckIndx(side_1459620887, 0, (s_1459620890.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1459620890.Field1[chckIndx(side_1459620887, 0, (s_1459620890.Field1).length - 1)].glass[chckIndx(1, 0, (s_1459620890.Field1[chckIndx(side_1459620887, 0, (s_1459620890.Field1).length - 1)].glass).length - 1)], some_1459620880({Field0: 2, Field1: createZeroGlassAction_1459620802(side_1459620887), Field2: HEX3Aanonymous_1459620781}), NTI1224736839);
  framePtr = F.prev;

  
}

function registerSynergy_1442840658(s_1442840659, secret_1442840660, secretSecret_1442840661) {
    var Temporary4;
    var Temporary5;
      var Temporary6;

  var F = {procname: "power.registerSynergy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    if (!((secret_1442840660 || !(secretSecret_1442840661)))) {
    F.line = 85;
    F.filename = "power.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/power.nim(85, 5) `secret or not secretSecret` "));
    }
    
    F.line = 86;
    var x_1442840667 = nimCopy(null, s_1442840659, NTI1442840583);
    F.line = 88;
    x_1442840667.Field0.rarity = x_1442840667.Field1;
    F.line = 89;
    x_1442840667.Field0.index = addInt(powers_1442840650[0][chckIndx(subInt((powers_1442840650[0]).length, 1), 0, (powers_1442840650[0]).length - 1)].index, 1);
    F.line = 90;
    x_1442840667.Field4 = x_1442840667.Field0.index;
    F.line = 92;
    F.line = 975;
    F.filename = "sequtils.nim";
    var sHEX60gensym2_1442840676 = nimCopy(null, s_1442840659.Field2, NTI1442840588);
    F.line = 976;
    var nHEX60gensym2_1442840680 = (sHEX60gensym2_1442840676).length;
    if (!((0 < nHEX60gensym2_1442840680))) {
    F.line = 977;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym2 > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 978;
    var resultHEX60gensym2_1442840686 = nimCopy(null, sHEX60gensym2_1442840676[chckIndx(subInt(nHEX60gensym2_1442840680, 1), 0, (sHEX60gensym2_1442840676).length - 1)], NTI33554449);
    Label1: {
      F.line = 979;
      var iHEX60gensym2_1442840692 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__1459621967 = 0;
      F.line = 979;
      F.filename = "sequtils.nim";
      colontmp__1459621967 = subInt(nHEX60gensym2_1442840680, 2);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_1459621968 = colontmp__1459621967;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_1459621968)) break Label3;
            F.line = 979;
            F.filename = "sequtils.nim";
            iHEX60gensym2_1442840692 = res_1459621968;
            F.line = 981;
            var a_1442840693 = nimCopy(null, sHEX60gensym2_1442840676[chckIndx(iHEX60gensym2_1442840692, 0, (sHEX60gensym2_1442840676).length - 1)], NTI33554449);
            F.line = 982;
            var b_1442840694 = nimCopy(null, resultHEX60gensym2_1442840686, NTI33554449);
            F.line = 92;
            F.filename = "power.nim";
            resultHEX60gensym2_1442840686 = nimCopy(null, (a_1442840693 || []).concat([32,43,32] || [],b_1442840694 || []), NTI33554449);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_1459621968 = subInt(res_1459621968, 1);
          }
      };
    };
    var requirements_1442840695 = nimCopy(null, resultHEX60gensym2_1442840686, NTI33554449);
    if ((secret_1442840660 && !(secretSecret_1442840661))) {
    F.line = 95;
    F.filename = "power.nim";
    x_1442840667.Field0.description = nimCopy(null, ([83,101,99,114,101,116,32,115,121,110,101,114,103,121,33,32,40] || []).concat(requirements_1442840695 || [],[41,32,45,45,32] || [],x_1442840667.Field0.description || []), NTI33554449);
    F.line = 97;
    if (eqStrings(x_1442840667.Field0.technicalName, [])) {
    Temporary4 = (x_1442840667.Field0.name || []).concat([32,40,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32] || [],requirements_1442840695 || [],[41] || []);
    }
    else {
    Temporary4 = (x_1442840667.Field0.technicalName || []).concat([32,40,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32] || [],requirements_1442840695 || [],[41] || []);
    }
    
    x_1442840667.Field0.technicalName = nimCopy(null, Temporary4, NTI33554449);
    }
    else {
    if (!(secret_1442840660)) {
    F.line = 100;
    x_1442840667.Field0.description = nimCopy(null, ([83,121,110,101,114,103,121,33,32,40] || []).concat(requirements_1442840695 || [],[41,32] || [],x_1442840667.Field0.description || []), NTI33554449);
    F.line = 102;
    if (eqStrings(x_1442840667.Field0.technicalName, [])) {
    Temporary5 = (x_1442840667.Field0.name || []).concat([32,40,83,121,110,101,114,103,121,32,111,102,32] || [],requirements_1442840695 || [],[41] || []);
    }
    else {
    Temporary5 = (x_1442840667.Field0.technicalName || []).concat([32,40,83,121,110,101,114,103,121,32,111,102,32] || [],requirements_1442840695 || [],[41] || []);
    }
    
    x_1442840667.Field0.technicalName = nimCopy(null, Temporary5, NTI33554449);
    }
    else {
      F.line = 106;
      if (eqStrings(x_1442840667.Field0.technicalName, [])) {
      Temporary6 = (x_1442840667.Field0.name || []).concat([32,40,83,101,99,114,101,116,32,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32] || [],requirements_1442840695 || [],[41] || []);
      }
      else {
      Temporary6 = (x_1442840667.Field0.technicalName || []).concat([32,40,83,101,99,114,101,116,32,83,101,99,114,101,116,32,83,121,110,101,114,103,121,32,111,102,32] || [],requirements_1442840695 || [],[41] || []);
      }
      
      x_1442840667.Field0.technicalName = nimCopy(null, Temporary6, NTI33554449);
    }
    }
    F.line = 109;
    var Temporary7 = nimCopy(null, x_1442840667.Field0, NTI1442840582);
    powers_1442840650[0].push(Temporary7);;
    if (secretSecret_1442840661) {
    F.line = 110;
    var Temporary8 = nimCopy(null, x_1442840667, NTI1442840583);
    secretSecretSynergies_1442840653[0].push(Temporary8);;
    }
    else {
    if (secret_1442840660) {
    F.line = 111;
    var Temporary9 = nimCopy(null, x_1442840667, NTI1442840583);
    secretSynergies_1442840652[0].push(Temporary9);;
    }
    else {
      F.line = 112;
      var Temporary10 = nimCopy(null, x_1442840667, NTI1442840583);
    draftSynergies_1442840651[0].push(Temporary10);;
    }
    }
  framePtr = F.prev;

  
}

function isNone_1409289526(self_1409289528) {
  var result_1409289529 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_1409289529 = !(self_1409289528.has);
  framePtr = F.prev;

  return result_1409289529;

}

function get_1409289543(self_1409289545) {
  var result_1409289546 = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isNone_1409289526(self_1409289545)) {
    F.line = 202;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 203;
    result_1409289546 = self_1409289545["val"];
  framePtr = F.prev;

  return result_1409289546;

}

function HEX3Aanonymous_1459621202(side_1459621203, piece_1459621204, b_1459621205, s_1459621206) {
  var result_1459621207 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(isSome_1409289449(s_1459621206.Field1[chckIndx(side_1459621203, 0, (s_1459621206.Field1).length - 1)].wallet))) {
    F.line = 2072;
    F.filename = "powers.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/powers.nim(2072, 9) `s.side[side].wallet.isSome()` "));
    }
    
    if (((s_1459621206.Field0.turnNumber == 0) || !((get_1409289543(s_1459621206.Field1[chckIndx(side_1459621203, 0, (s_1459621206.Field1).length - 1)].wallet) == 0)))) {
    F.line = 2076;
    result_1459621207 = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    
    Label1: {
      F.line = 2078;
      var i_1459621239 = 0;
      F.line = 2078;
      var j_1459621240 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621972 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621973 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621973 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621972 = i_1459621973;
              Label5: {
                F.line = 114;
                var j_1459621976 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621977 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621977 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621976 = i_1459621977;
                      F.line = 2078;
                      F.filename = "powers.nim";
                      i_1459621239 = i_1459621972;
                      F.line = 2078;
                      j_1459621240 = j_1459621976;
                      if (!((b_1459621205[chckIndx(i_1459621239, 0, (b_1459621205).length - 1)][chckIndx(j_1459621240, 0, (b_1459621205[chckIndx(i_1459621239, 0, (b_1459621205).length - 1)]).length - 1)].item == 0))) {
                      F.line = 2080;
                      var Temporary8 = nimCopy(null, b_1459621205[chckIndx(i_1459621239, 0, (b_1459621205).length - 1)][chckIndx(j_1459621240, 0, (b_1459621205[chckIndx(i_1459621239, 0, (b_1459621205).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1459621207.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621977 = addInt(i_1459621977, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621973 = addInt(i_1459621973, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  return result_1459621207;

}

function HEX3Aanonymous_1459621250(side_1459621251, __1459621252, __1459621253, s_1459621254) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2094;
    F.filename = "powers.nim";
    s_1459621254.Field1[chckIndx(side_1459621251, 0, (s_1459621254.Field1).length - 1)].glass[chckIndx(1, 0, (s_1459621254.Field1[chckIndx(side_1459621251, 0, (s_1459621254.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1459621254.Field1[chckIndx(side_1459621251, 0, (s_1459621254.Field1).length - 1)].glass[chckIndx(1, 0, (s_1459621254.Field1[chckIndx(side_1459621251, 0, (s_1459621254.Field1).length - 1)].glass).length - 1)], some_1459620880({Field0: 3, Field1: createZeroGlassAction_1459620802(side_1459621251), Field2: HEX3Aanonymous_1459621202}), NTI1224736839);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620858(piece_1459620859, to_1459620860, b_1459620861, s_1459620862) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((b_1459620861[chckIndx(to_1459620860.Field1, 0, (b_1459620861).length - 1)][chckIndx(to_1459620860.Field0, 0, (b_1459620861[chckIndx(to_1459620860.Field1, 0, (b_1459620861).length - 1)]).length - 1)].item == 6)) {
    F.line = 1959;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    F.line = 1960;
    piece_1459620859.onTake(piece_1459620859, to_1459620860, b_1459620861, s_1459620862);
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620819(side_1459620820, piece_1459620821, b_1459620822, __1459620823) {
  var result_1459620824 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(isAtEnd_1224738102(piece_1459620821))) {
    if ((piece_1459620821.color == 1)) {
    F.line = 1951;
    F.filename = "powers.nim";
    result_1459620824 = nimCopy(null, [nimCopy(null, tileAbove_1308622990(piece_1459620821.tile), NTI1224736771)], NTI1459620389);
    break BeforeRet;
    }
    else {
      F.line = 1953;
      result_1459620824 = nimCopy(null, [nimCopy(null, tileBelow_1308622993(piece_1459620821.tile), NTI1224736771)], NTI1459620389);
      break BeforeRet;
    }
    
    }
    else {
      F.line = 1954;
      result_1459620824 = nimCopy(null, [], NTI1291845837);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1459620824;

}

function forward_1308623002(p_1308623003) {
  var result_1308623004 = {Field0: 0, Field1: 0};

  var F = {procname: "board.forward", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/board.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((p_1308623003.color == 1)) {
    F.line = 47;
    F.filename = "board.nim";
    result_1308623004 = nimCopy(result_1308623004, tileAbove_1308622990(p_1308623003.tile), NTI1224736771);
    break BeforeRet;
    }
    else {
      F.line = 48;
      result_1308623004 = nimCopy(result_1308623004, tileBelow_1308622993(p_1308623003.tile), NTI1224736771);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1308623004;

}

function HEX3Aanonymous_1459620898(piece_1459620899, __1459620900, state_1459620901) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2009;
      F.filename = "powers.nim";
      var i_1459620965 = 0;
      F.line = 2009;
      var c_1459620966 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
      F.line = 182;
      F.filename = "iterators.nim";
      var i_1459621990 = 0;
      F.line = 183;
      var L_1459621991 = (piece_1459620899.casts).length;
      Label2: {
        F.line = 184;
          Label3: while (true) {
          if (!(i_1459621990 < L_1459621991)) break Label3;
            F.line = 2009;
            F.filename = "powers.nim";
            i_1459620965 = i_1459621990;
            F.line = 2009;
            c_1459620966 = nimCopy(c_1459620966, piece_1459620899.casts[chckIndx(i_1459621990, 0, (piece_1459620899.casts).length - 1)], NTI1224736785);
            if ((c_1459620966.Field2 == 2)) {
            F.line = 2011;
            piece_1459620899.casts[chckIndx(i_1459620965, 0, (piece_1459620899.casts).length - 1)].Field0 = nimCopy(piece_1459620899.casts[chckIndx(i_1459620965, 0, (piece_1459620899.casts).length - 1)].Field0, forward_1308623002(piece_1459620899), NTI1224736771);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459621990 += 1;
            if (!(((piece_1459620899.casts).length == L_1459621991))) {
            F.line = 187;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620973(side_1459620974, __1459620975, b_1459620976, s_1459620977) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2025;
    F.filename = "powers.nim";
    s_1459620977.Field1[chckIndx(side_1459620974, 0, (s_1459620977.Field1).length - 1)].glass[chckIndx(2, 0, (s_1459620977.Field1[chckIndx(side_1459620974, 0, (s_1459620977.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1459620977.Field1[chckIndx(side_1459620974, 0, (s_1459620977.Field1).length - 1)].glass[chckIndx(2, 0, (s_1459620977.Field1[chckIndx(side_1459620974, 0, (s_1459620977.Field1).length - 1)].glass).length - 1)], some_1459620880({Field0: 5, Field1: HEX3Aanonymous_1459620858, Field2: HEX3Aanonymous_1459620819}), NTI1224736839);
    Label1: {
      F.line = 2031;
      var i_1459620984 = 0;
      F.line = 2031;
      var j_1459620985 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459621981 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459621982 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459621982 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459621981 = i_1459621982;
              Label5: {
                F.line = 114;
                var j_1459621985 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459621986 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459621986 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459621985 = i_1459621986;
                      F.line = 2031;
                      F.filename = "powers.nim";
                      i_1459620984 = i_1459621981;
                      F.line = 2031;
                      j_1459620985 = j_1459621985;
                      if (isColor_1224737917(b_1459620976[chckIndx(i_1459620984, 0, (b_1459620976).length - 1)][chckIndx(j_1459620985, 0, (b_1459620976[chckIndx(i_1459620984, 0, (b_1459620976).length - 1)]).length - 1)], side_1459620974)) {
                      F.line = 2033;
                      b_1459620976[chckIndx(i_1459620984, 0, (b_1459620976).length - 1)][chckIndx(j_1459620985, 0, (b_1459620976[chckIndx(i_1459620984, 0, (b_1459620976).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459620898);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459621986 = addInt(i_1459621986, 1);
                    }
                };
              };
              F.line = 131;
              i_1459621982 = addInt(i_1459621982, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX26_1459621306(x_1459621308, y_1459621309) {
  var result_1459621310 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1459621310 = new Array(chckRange(addInt((x_1459621308).length, (y_1459621309).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1459621308).length, (y_1459621309).length), 0, 2147483647) ; ++i) { result_1459621310[i] = null; }    Label1: {
      F.line = 1538;
      var i_1459621328 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459621994 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__1459621994 = subInt((x_1459621308).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621995 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459621995 <= colontmp__1459621994)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1459621328 = res_1459621995;
            F.line = 1539;
            result_1459621310[chckIndx(i_1459621328, 0, (result_1459621310).length - 1)] = x_1459621308[chckIndx(i_1459621328, 0, (x_1459621308).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459621995 = addInt(res_1459621995, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1459621336 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459621998 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__1459621998 = subInt((y_1459621309).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459621999 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_1459621999 <= colontmp__1459621998)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1459621336 = res_1459621999;
            F.line = 1541;
            result_1459621310[chckIndx(addInt(i_1459621336, (x_1459621308).length), 0, (result_1459621310).length - 1)] = y_1459621309[chckIndx(i_1459621336, 0, (y_1459621309).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459621999 = addInt(res_1459621999, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1459621310;

}

function shuffle_1459621349(r_1459621351, x_1459621352) {
  var F = {procname: "shuffle.shuffle", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 640;
      F.filename = "random.nim";
      var i_1459621361 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__1459622002 = 0;
      F.line = 640;
      F.filename = "random.nim";
      colontmp__1459622002 = (x_1459621352).length - 1;
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_1459622003 = colontmp__1459622002;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(1 <= res_1459622003)) break Label3;
            F.line = 640;
            F.filename = "random.nim";
            i_1459621361 = res_1459622003;
            F.line = 641;
            var j_1459621362 = rand_1392509035(r_1459621351, chckRange(i_1459621361, 0, 2147483647));
            F.line = 642;
            var Temporary4 = x_1459621352[chckIndx(i_1459621361, 0, (x_1459621352).length - 1)]; x_1459621352[chckIndx(i_1459621361, 0, (x_1459621352).length - 1)] = x_1459621352[chckIndx(j_1459621362, 0, (x_1459621352).length - 1)]; x_1459621352[chckIndx(j_1459621362, 0, (x_1459621352).length - 1)] = Temporary4;            F.line = 39;
            F.filename = "iterators_1.nim";
            res_1459622003 = subInt(res_1459622003, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function shuffle_1459621346(x_1459621348) {
  var F = {procname: "shuffle.shuffle", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 661;
    F.filename = "random.nim";
    shuffle_1459621349(state_1392508942[0], x_1459621348);
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1459621393(s_1459621397, x_1459621398) {
  var result_1459621399 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_1459621401 = x_1459621398.a;
    F.line = 140;
    var L_1459621403 = addInt(subInt(x_1459621398.b, a_1459621401), 1);
    F.line = 141;
    result_1459621399 = new Array(chckRange(L_1459621403, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1459621403, 0, 2147483647) ; ++i) { result_1459621399[i] = null; }    Label1: {
      F.line = 142;
      var i_1459621412 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1459622006 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_1459622006 < L_1459621403)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_1459621412 = i_1459622006;
            F.line = 142;
            result_1459621399[chckIndx(i_1459621412, 0, (result_1459621399).length - 1)] = s_1459621397[chckIndx(addInt(i_1459621412, a_1459621401), 0, (s_1459621397).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1459622006 = addInt(i_1459622006, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1459621399;

}

function HEX5BHEX5D_1459621422(s_1459621426, x_1459621427) {
  var result_1459621428 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_1459621430 = x_1459621427.a;
    F.line = 140;
    var L_1459621435 = addInt(subInt(subInt((s_1459621426).length, x_1459621427.b), a_1459621430), 1);
    F.line = 141;
    result_1459621428 = new Array(chckRange(L_1459621435, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1459621435, 0, 2147483647) ; ++i) { result_1459621428[i] = null; }    Label1: {
      F.line = 142;
      var i_1459621444 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1459622009 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_1459622009 < L_1459621435)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_1459621444 = i_1459622009;
            F.line = 142;
            result_1459621428[chckIndx(i_1459621444, 0, (result_1459621428).length - 1)] = s_1459621426[chckIndx(addInt(i_1459621444, a_1459621430), 0, (s_1459621426).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1459622009 = addInt(i_1459622009, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1459621428;

}

function HEX2EHEX2E_1006633065(a_1006633068, b_1006633069) {
  var result_1006633072 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "system.nim";
    result_1006633072 = nimCopy(result_1006633072, {a: a_1006633068, b: b_1006633069}, NTI1006633045);
  framePtr = F.prev;

  return result_1006633072;

}

function HEX3Aanonymous_1459621293(piece_1459621294, to_1459621295, b_1459621296, s_1459621297) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((isAir_1224737900(HEX5BHEX5D_1224737288(b_1459621296, to_1459621295)) || (HEX5BHEX5D_1224737288(b_1459621296, to_1459621295).item == 0)) || (piece_1459621294.item == 0))) {
    F.line = 2116;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    
    F.line = 2118;
    randomize_1392509190(BigInt(addInt(addInt(s_1459621297.Field0.randSeed, mulInt(piece_1459621294.tile.Field1, 10)), mulInt(piece_1459621294.tile.Field0, 100))));
    F.line = 2120;
    var allMoves_1459621340 = HEX26_1459621306(piece_1459621294.moves, HEX5BHEX5D_1224737288(b_1459621296, to_1459621295).moves);
    F.line = 2121;
    var allTakes_1459621345 = HEX26_1459621306(piece_1459621294.takes, HEX5BHEX5D_1224737288(b_1459621296, to_1459621295).takes);
    F.line = 2123;
    shuffle_1459621346(allMoves_1459621340);
    F.line = 2124;
    shuffle_1459621346(allTakes_1459621345);
    F.line = 2126;
    var casterMoves_1459621373 = (piece_1459621294.moves).length;
    F.line = 2127;
    var casterTakes_1459621377 = (piece_1459621294.takes).length;
    F.line = 2131;
    piece_1459621294.moves = nimCopy(null, HEX5BHEX5D_1459621393(allMoves_1459621340, HEX2EHEX2E_1056964656(0, subInt(casterMoves_1459621373, 1))), NTI1459620800);
    F.line = 2132;
    HEX5BHEX5D_1224737288(b_1459621296, to_1459621295).moves = nimCopy(null, HEX5BHEX5D_1459621422(allMoves_1459621340, HEX2EHEX2E_1006633065(casterMoves_1459621373, 1)), NTI1459620827);
    F.line = 2133;
    piece_1459621294.takes = nimCopy(null, HEX5BHEX5D_1459621393(allTakes_1459621345, HEX2EHEX2E_1056964656(0, subInt(casterTakes_1459621377, 1))), NTI1459620800);
    F.line = 2134;
    HEX5BHEX5D_1224737288(b_1459621296, to_1459621295).takes = nimCopy(null, HEX5BHEX5D_1459621422(allTakes_1459621345, HEX2EHEX2E_1006633065(casterTakes_1459621377, 1)), NTI1459620827);
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459621276(side_1459621277, piece_1459621278, b_1459621279, s_1459621280) {
  var result_1459621281 = [];

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2111;
      F.filename = "powers.nim";
      var i_1459621282 = 0;
      F.line = 2111;
      var j_1459621283 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622013 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622014 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622014 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622013 = i_1459622014;
              Label5: {
                F.line = 114;
                var j_1459622017 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622018 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622018 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622017 = i_1459622018;
                      F.line = 2111;
                      F.filename = "powers.nim";
                      i_1459621282 = i_1459622013;
                      F.line = 2111;
                      j_1459621283 = j_1459622017;
                      if ((!((b_1459621279[chckIndx(i_1459621282, 0, (b_1459621279).length - 1)][chckIndx(j_1459621283, 0, (b_1459621279[chckIndx(i_1459621282, 0, (b_1459621279).length - 1)]).length - 1)].item == 0)) && !(isAir_1224737900(b_1459621279[chckIndx(i_1459621282, 0, (b_1459621279).length - 1)][chckIndx(j_1459621283, 0, (b_1459621279[chckIndx(i_1459621282, 0, (b_1459621279).length - 1)]).length - 1)])))) {
                      F.line = 2113;
                      var Temporary8 = nimCopy(null, b_1459621279[chckIndx(i_1459621282, 0, (b_1459621279).length - 1)][chckIndx(j_1459621283, 0, (b_1459621279[chckIndx(i_1459621282, 0, (b_1459621279).length - 1)]).length - 1)].tile, NTI1224736771);
                      result_1459621281.push(Temporary8);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622018 = addInt(i_1459622018, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622014 = addInt(i_1459622014, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  return result_1459621281;

}

function HEX3Aanonymous_1459621482(side_1459621483, __1459621484, __1459621485, s_1459621486) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2150;
    F.filename = "powers.nim";
    s_1459621486.Field1[chckIndx(side_1459621483, 0, (s_1459621486.Field1).length - 1)].glass[chckIndx(3, 0, (s_1459621486.Field1[chckIndx(side_1459621483, 0, (s_1459621486.Field1).length - 1)].glass).length - 1)] = nimCopy(s_1459621486.Field1[chckIndx(side_1459621483, 0, (s_1459621486.Field1).length - 1)].glass[chckIndx(3, 0, (s_1459621486.Field1[chckIndx(side_1459621483, 0, (s_1459621486.Field1).length - 1)].glass).length - 1)], some_1459620880({Field0: 3, Field1: HEX3Aanonymous_1459621293, Field2: HEX3Aanonymous_1459621276}), NTI1224736839);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618449(side_1459618450, viewerSide_1459618451, b_1459618452, s_1459618453) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 431;
    F.filename = "powers.nim";
    HEX3Aanonymous_1459618000(side_1459618450, viewerSide_1459618451, b_1459618452, s_1459618453);
    F.line = 432;
    HEX3Aanonymous_1459618084(side_1459618450, viewerSide_1459618451, b_1459618452, s_1459618453);
    F.line = 433;
    HEX3Aanonymous_1459618238(side_1459618450, viewerSide_1459618451, b_1459618452, s_1459618453);
    F.line = 434;
    HEX3Aanonymous_1459618286(side_1459618450, viewerSide_1459618451, b_1459618452, s_1459618453);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619001(side_1459619002, viewSide_1459619003, b_1459619004, state_1459619005) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 806;
    F.filename = "powers.nim";
    HEX3Aanonymous_1459618188(side_1459619002, viewSide_1459619003, b_1459619004, state_1459619005);
    F.line = 807;
    HEX3Aanonymous_1459618199(side_1459619002, viewSide_1459619003, b_1459619004, state_1459619005);
    F.line = 808;
    HEX3Aanonymous_1459618166(side_1459619002, viewSide_1459619003, b_1459619004, state_1459619005);
    F.line = 809;
    HEX3Aanonymous_1459618177(side_1459619002, viewSide_1459619003, b_1459619004, state_1459619005);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619029(side_1459619030, viewSide_1459619031, b_1459619032, __1459619033) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 829;
      F.filename = "powers.nim";
      var i_1459619034 = 0;
      F.line = 829;
      var j_1459619035 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622022 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622023 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622023 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622022 = i_1459622023;
              Label5: {
                F.line = 114;
                var j_1459622026 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622027 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622027 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622026 = i_1459622027;
                      F.line = 829;
                      F.filename = "powers.nim";
                      i_1459619034 = i_1459622022;
                      F.line = 829;
                      j_1459619035 = j_1459622026;
                      if (((b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)][chckIndx(j_1459619035, 0, (b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)][chckIndx(j_1459619035, 0, (b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)]).length - 1)], side_1459619030))) {
                      if ((b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)][chckIndx(j_1459619035, 0, (b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)]).length - 1)].color == 0)) {
                      F.line = 832;
                      b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)][chckIndx(j_1459619035, 0, (b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395068);;
                      }
                      else {
                      if ((b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)][chckIndx(j_1459619035, 0, (b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)]).length - 1)].color == 1)) {
                      F.line = 834;
                      b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)][chckIndx(j_1459619035, 0, (b_1459619032[chckIndx(i_1459619034, 0, (b_1459619032).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395063);;
                      }
                      }
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622027 = addInt(i_1459622027, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622023 = addInt(i_1459622023, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395272(board_1476395273, p_1476395274) {
  var result_1476395275 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 166;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395275, 0, board_1476395273, p_1476395274.tile, shooterFactory_1308622968(0, 1));
    F.line = 167;
    var _ = addIfFree_1291845640(result_1476395275, 0, board_1476395273, p_1476395274.tile, shooterFactory_1308622968(0, 2));
  framePtr = F.prev;

  return result_1476395275[0];

}

function HEX3Aanonymous_1476395282(board_1476395283, p_1476395284) {
  var result_1476395285 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 174;
    F.filename = "extramoves.nim";
    var _ = addIfFree_1291845640(result_1476395285, 0, board_1476395283, p_1476395284.tile, shooterFactory_1308622968(0, (-1)));
    F.line = 175;
    var _ = addIfFree_1291845640(result_1476395285, 0, board_1476395283, p_1476395284.tile, shooterFactory_1308622968(0, (-2)));
  framePtr = F.prev;

  return result_1476395285[0];

}

function HEX3Aanonymous_1459619111(side_1459619112, __1459619113, b_1459619114, __1459619115) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 885;
      F.filename = "powers.nim";
      var i_1459619116 = 0;
      F.line = 885;
      var j_1459619117 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622031 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622032 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622032 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622031 = i_1459622032;
              Label5: {
                F.line = 114;
                var j_1459622035 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622036 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622036 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622035 = i_1459622036;
                      F.line = 885;
                      F.filename = "powers.nim";
                      i_1459619116 = i_1459622031;
                      F.line = 885;
                      j_1459619117 = j_1459622035;
                      if (((b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)][chckIndx(j_1459619117, 0, (b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)]).length - 1)].item == 2) && isColor_1224737917(b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)][chckIndx(j_1459619117, 0, (b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)]).length - 1)], side_1459619112))) {
                      F.line = 887;
                      add_1459617825(b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)][chckIndx(j_1459619117, 0, (b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1476395272, HEX3Aanonymous_1476395282]);
                      F.line = 888;
                      add_1459617825(b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)][chckIndx(j_1459619117, 0, (b_1459619114[chckIndx(i_1459619116, 0, (b_1459619114).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1476395277, HEX3Aanonymous_1476395287]);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622036 = addInt(i_1459622036, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622032 = addInt(i_1459622032, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619298(piece_1459619299, board_1459619300, state_1459619301) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((piece_1459619299.piecesTaken == 3)) {
    Label1: {
      F.line = 1014;
      F.filename = "powers.nim";
      var i_1459619302 = 0;
      F.line = 1014;
      var j_1459619303 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622049 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622050 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622050 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622049 = i_1459622050;
              Label5: {
                F.line = 114;
                var j_1459622053 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622054 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622054 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622053 = i_1459622054;
                      F.line = 1014;
                      F.filename = "powers.nim";
                      i_1459619302 = i_1459622049;
                      F.line = 1014;
                      j_1459619303 = j_1459622053;
                      if (((board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)][chckIndx(j_1459619303, 0, (board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)]).length - 1)].item == 0) && !(sameColor_1224737908(board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)][chckIndx(j_1459619303, 0, (board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)]).length - 1)], piece_1459619299)))) {
                      F.line = 1017;
                      board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)][chckIndx(j_1459619303, 0, (board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)]).length - 1)] = nimCopy(board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)][chckIndx(j_1459619303, 0, (board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)][chckIndx(j_1459619303, 0, (board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)]).length - 1)].index, 6, 1, 0, 0, board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)][chckIndx(j_1459619303, 0, (board_1459619300[chckIndx(i_1459619302, 0, (board_1459619300).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622054 = addInt(i_1459622054, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622050 = addInt(i_1459622050, 1);
            }
        };
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619309(side_1459619310, __1459619311, b_1459619312, __1459619313) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1028;
      F.filename = "powers.nim";
      var i_1459619314 = 0;
      F.line = 1028;
      var j_1459619315 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622040 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622041 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622041 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622040 = i_1459622041;
              Label5: {
                F.line = 114;
                var j_1459622044 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622045 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622045 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622044 = i_1459622045;
                      F.line = 1028;
                      F.filename = "powers.nim";
                      i_1459619314 = i_1459622040;
                      F.line = 1028;
                      j_1459619315 = j_1459622044;
                      if (((b_1459619312[chckIndx(i_1459619314, 0, (b_1459619312).length - 1)][chckIndx(j_1459619315, 0, (b_1459619312[chckIndx(i_1459619314, 0, (b_1459619312).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459619312[chckIndx(i_1459619314, 0, (b_1459619312).length - 1)][chckIndx(j_1459619315, 0, (b_1459619312[chckIndx(i_1459619314, 0, (b_1459619312).length - 1)]).length - 1)], side_1459619310))) {
                      F.line = 1030;
                      b_1459619312[chckIndx(i_1459619314, 0, (b_1459619312).length - 1)][chckIndx(j_1459619315, 0, (b_1459619312[chckIndx(i_1459619314, 0, (b_1459619312).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459619298);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622045 = addInt(i_1459622045, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622041 = addInt(i_1459622041, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620145(piece_1459620146, taking_1459620147, board_1459620148, state_1459620149) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1543;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459620146.tile.Field1), mulInt(100, piece_1459620146.tile.Field0)), state_1459620149.Field0.randSeed)));
    F.line = 1544;
    var dice_1459620150 = rand_1392509064(20);
    F.line = 1546;
    piece_1459620146.timesMoved = addInt(piece_1459620146.timesMoved, 1);
    if (((dice_1459620150 <= 6) && !((HEX5BHEX5D_1224737288(board_1459620148, taking_1459620147).item == 0)))) {
    F.line = 1548;
    HEX5BHEX5D_1224737288(board_1459620148, taking_1459620147).color = piece_1459620146.color;
    F.line = 1549;
    HEX5BHEX5D_1224737288(board_1459620148, taking_1459620147).index = newIndex_1224737419(state_1459620149);
    F.line = 1550;
    pieceSwap_1224737759(piece_1459620146, HEX5BHEX5D_1224737288(board_1459620148, taking_1459620147), board_1459620148);
    }
    else {
      F.line = 1552;
      var takeResult_1459620160 = board_1459620148[chckIndx(taking_1459620147.Field1, 0, (board_1459620148).length - 1)][chckIndx(taking_1459620147.Field0, 0, (board_1459620148[chckIndx(taking_1459620147.Field1, 0, (board_1459620148).length - 1)]).length - 1)].whenTaken(board_1459620148[chckIndx(taking_1459620147.Field1, 0, (board_1459620148).length - 1)][chckIndx(taking_1459620147.Field0, 0, (board_1459620148[chckIndx(taking_1459620147.Field1, 0, (board_1459620148).length - 1)]).length - 1)], piece_1459620146, board_1459620148, state_1459620149);
      if (takeResult_1459620160.Field1) {
      F.line = 1554;
      HEX5BHEX5D_1224737288(board_1459620148, takeResult_1459620160.Field0).piecesTaken = addInt(HEX5BHEX5D_1224737288(board_1459620148, takeResult_1459620160.Field0).piecesTaken, 1);
      }
      
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620168(side_1459620169, __1459620170, b_1459620171, __1459620172) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1565;
      F.filename = "powers.nim";
      var i_1459620173 = 0;
      F.line = 1565;
      var j_1459620174 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622058 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622059 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622059 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622058 = i_1459622059;
              Label5: {
                F.line = 114;
                var j_1459622062 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622063 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622063 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622062 = i_1459622063;
                      F.line = 1565;
                      F.filename = "powers.nim";
                      i_1459620173 = i_1459622058;
                      F.line = 1565;
                      j_1459620174 = j_1459622062;
                      if (((b_1459620171[chckIndx(i_1459620173, 0, (b_1459620171).length - 1)][chckIndx(j_1459620174, 0, (b_1459620171[chckIndx(i_1459620173, 0, (b_1459620171).length - 1)]).length - 1)].item == 2) && isColor_1224737917(b_1459620171[chckIndx(i_1459620173, 0, (b_1459620171).length - 1)][chckIndx(j_1459620174, 0, (b_1459620171[chckIndx(i_1459620173, 0, (b_1459620171).length - 1)]).length - 1)], side_1459620169))) {
                      F.line = 1567;
                      b_1459620171[chckIndx(i_1459620173, 0, (b_1459620171).length - 1)][chckIndx(j_1459620174, 0, (b_1459620171[chckIndx(i_1459620173, 0, (b_1459620171).length - 1)]).length - 1)].onTake = HEX3Aanonymous_1459620145;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622063 = addInt(i_1459622063, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622059 = addInt(i_1459622059, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function nsuFindChar(s_838862499, sub_838862500, start_838862501, last_838862502) {
    var Temporary1;

  var result_838862503 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1945;
    F.filename = "strutils.nim";
    result_838862503 = (-1);
    F.line = 1946;
    if ((last_838862502 < 0)) {
    Temporary1 = (s_838862499).length - 1;
    }
    else {
    Temporary1 = last_838862502;
    }
    
    var last_838862504 = Temporary1;
    Label2: {
      F.line = 1949;
      var iHEX60gensym176_838862518 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459622079 = 0;
      F.line = 1949;
      F.filename = "strutils.nim";
      colontmp__1459622079 = start_838862501;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459622080 = colontmp__1459622079;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_1459622080 <= last_838862504)) break Label4;
            F.line = 1963;
            F.filename = "strutils.nim";
            iHEX60gensym176_838862518 = res_1459622080;
            if ((s_838862499[chckIndx(iHEX60gensym176_838862518, 0, (s_838862499).length - 1)] == sub_838862500)) {
            F.line = 1951;
            result_838862503 = iHEX60gensym176_838862518;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459622080 = addInt(res_1459622080, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_838862503;

}

function nsuFindStrA(a_838862477, s_838862478, sub_838862479, start_838862480, last_838862481) {
    var Temporary1;

  var result_838862482 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1905;
    F.filename = "strutils.nim";
    if ((last_838862481 < 0)) {
    Temporary1 = (s_838862478).length - 1;
    }
    else {
    Temporary1 = last_838862481;
    }
    
    var last_838862483 = Temporary1;
    F.line = 1906;
    var subLast_838862484 = subInt((sub_838862479).length, 1);
    if ((subLast_838862484 == (-1))) {
    F.line = 1911;
    result_838862482 = start_838862480;
    break BeforeRet;
    }
    
    F.line = 1915;
    result_838862482 = (-1);
    F.line = 1916;
    var skip_838862485 = start_838862480;
    Label2: {
      F.line = 1918;
        Label3: while (true) {
        if (!(subLast_838862484 <= subInt(last_838862483, skip_838862485))) break Label3;
          F.line = 1919;
          var i_838862486 = subLast_838862484;
          Label4: {
            F.line = 1920;
              Label5: while (true) {
              if (!(s_838862478[chckIndx(addInt(skip_838862485, i_838862486), 0, (s_838862478).length - 1)] == sub_838862479[chckIndx(i_838862486, 0, (sub_838862479).length - 1)])) break Label5;
                if ((i_838862486 == 0)) {
                F.line = 1922;
                result_838862482 = skip_838862485;
                break BeforeRet;
                }
                
                F.line = 1923;
                i_838862486 = subInt(i_838862486, 1);
              }
          };
          F.line = 1924;
          skip_838862485 = addInt(skip_838862485, a_838862477[chckIndx(s_838862478[chckIndx(addInt(skip_838862485, subLast_838862484), 0, (s_838862478).length - 1)], 0, (a_838862477).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_838862482;

}

function fill_838862422(a_838862424, value_838862425) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "algorithm.nim";
    var xHEX60gensym172_838862431 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym172_838862431 <= (a_838862424).length - 1)) break Label2;
          F.line = 98;
          a_838862424[chckIndx(xHEX60gensym172_838862431, 0, (a_838862424).length - 1)] = value_838862425;
          F.line = 75;
          xHEX60gensym172_838862431 = addInt(xHEX60gensym172_838862431, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_838862419, sub_838862420) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1878;
    F.filename = "strutils.nim";
    var m_838862421 = (sub_838862420).length;
    F.line = 1879;
    fill_838862422(a_838862419, m_838862421);
    Label1: {
      F.line = 1881;
      var i_838862441 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__1459622085 = 0;
      F.line = 1881;
      F.filename = "strutils.nim";
      colontmp__1459622085 = subInt(m_838862421, 1);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1459622086 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_1459622086 < colontmp__1459622085)) break Label3;
            F.line = 1881;
            F.filename = "strutils.nim";
            i_838862441 = i_1459622086;
            F.line = 1882;
            a_838862419[chckIndx(sub_838862420[chckIndx(i_838862441, 0, (sub_838862420).length - 1)], 0, (a_838862419).length - 1)] = subInt(subInt(m_838862421, 1), i_838862441);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1459622086 = addInt(i_1459622086, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_838862474) {
  var result_838862475 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1891;
    F.filename = "strutils.nim";
    nsuInitSkipTable(result_838862475[0], sub_838862474);
  framePtr = F.prev;

  return result_838862475[0];

}

function nsuFindStr(s_838862536, sub_838862537, start_838862538, last_838862539) {
  var result_838862540 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((subInt((s_838862536).length, start_838862538) < (sub_838862537).length)) {
    F.line = 2003;
    F.filename = "strutils.nim";
    result_838862540 = (-1);
    break BeforeRet;
    }
    
    if (((sub_838862537).length == 1)) {
    F.line = 2004;
    result_838862540 = nsuFindChar(s_838862536, sub_838862537[chckIndx(0, 0, (sub_838862537).length - 1)], start_838862538, last_838862539);
    break BeforeRet;
    }
    
    F.line = 2007;
    result_838862540 = nsuFindStrA(nsuInitNewSkipTable(sub_838862537), s_838862536, sub_838862537, start_838862538, last_838862539);
  };
  framePtr = F.prev;

  return result_838862540;

}

function contains_838862678(s_838862679, sub_838862680) {
  var result_838862681 = false;

  var F = {procname: "strutils.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 2161;
    F.filename = "strutils.nim";
    result_838862681 = (0 <= nsuFindStr(s_838862679, sub_838862680, 0, (-1)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_838862681;

}

function find_1459621094(a_1459621097, item_1459621098) {
  var result_1459621099 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1459621099 = 0;
    Label1: {
      F.line = 1672;
      var i_1459621113 = 0;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_1459622106 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_1459622106 < (a_1459621097).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1459621113 = a_1459621097[chckIndx(i_1459622106, 0, (a_1459621097).length - 1)];
            if ((i_1459621113 == item_1459621098)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1459621099 = addInt(result_1459621099, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459622106 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1459621099 = (-1);
  };
  framePtr = F.prev;

  return result_1459621099;

}

function contains_1459621089(a_1459621091, item_1459621092) {
  var result_1459621093 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1459621093 = (0 <= find_1459621094(a_1459621091, item_1459621092));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459621093;

}

function newSeq_1459621040(len_1459621042) {
  var result_1459621043 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1459621043 = new Array(len_1459621042); for (var i = 0 ; i < len_1459621042 ; ++i) { result_1459621043[i] = 0; }  framePtr = F.prev;

  return result_1459621043;

}

function HEX3Aanonymous_1459620991(piece_1459620992, b_1459620993, state_1459620994) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 2037;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(state_1459620994.Field0.randSeed));
    Label1: {
      F.line = 2040;
      var i_1459620995 = 0;
      F.line = 2040;
      var j_1459620996 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622097 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622098 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622098 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622097 = i_1459622098;
              Label5: {
                F.line = 114;
                var j_1459622101 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622102 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622102 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622101 = i_1459622102;
                      F.line = 2040;
                      F.filename = "powers.nim";
                      i_1459620995 = i_1459622097;
                      F.line = 2040;
                      j_1459620996 = j_1459622101;
                        Label8: {
                          F.line = 2041;
                          var HEX3Atmp_1459621033 = nimCopy(null, b_1459620993[chckIndx(i_1459620995, 0, (b_1459620993).length - 1)][chckIndx(j_1459620996, 0, (b_1459620993[chckIndx(i_1459620995, 0, (b_1459620993).length - 1)]).length - 1)].casts, NTI1224736853);
                          F.line = 1024;
                          F.filename = "sequtils.nim";
                          var iHEX60gensym160_1459621036 = 0;
                          F.line = 1025;
                          var resultHEX60gensym160_1459621080 = newSeq_1459621040(chckRange((HEX3Atmp_1459621033).length, 0, 2147483647));
                          Label9: {
                            F.line = 1026;
                            var it_1459621084 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                            F.line = 249;
                            F.filename = "iterators.nim";
                            var i_1459622093 = 0;
                            F.line = 250;
                            var L_1459622094 = (HEX3Atmp_1459621033).length;
                            Label10: {
                              F.line = 251;
                                Label11: while (true) {
                                if (!(i_1459622093 < L_1459622094)) break Label11;
                                  F.line = 1026;
                                  F.filename = "sequtils.nim";
                                  it_1459621084 = HEX3Atmp_1459621033[chckIndx(i_1459622093, 0, (HEX3Atmp_1459621033).length - 1)];
                                  F.line = 2041;
                                  F.filename = "powers.nim";
                                  resultHEX60gensym160_1459621080[chckIndx(iHEX60gensym160_1459621036, 0, (resultHEX60gensym160_1459621080).length - 1)] = it_1459621084.Field2;
                                  F.line = 1028;
                                  F.filename = "sequtils.nim";
                                  iHEX60gensym160_1459621036 = addInt(iHEX60gensym160_1459621036, 1);
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_1459622093 += 1;
                                  if (!(((HEX3Atmp_1459621033).length == L_1459622094))) {
                                  F.line = 254;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                        };
                      if (contains_1459621089(resultHEX60gensym160_1459621080, 0)) {
                      F.line = 2042;
                      F.filename = "powers.nim";
                      piece_1459620992.onTake(piece_1459620992, sample_1459619576(getTakesOn_1224737435(piece_1459620992, b_1459620993)), b_1459620993, state_1459620994);
                      F.line = 2043;
                      break Label1;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622102 = addInt(i_1459622102, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622098 = addInt(i_1459622098, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459621176(side_1459621177, __1459621178, b_1459621179, s_1459621180) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 2055;
      F.filename = "powers.nim";
      var i_1459621181 = 0;
      F.line = 2055;
      var j_1459621182 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622067 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622068 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622068 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622067 = i_1459622068;
              Label5: {
                F.line = 114;
                var j_1459622071 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622072 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622072 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622071 = i_1459622072;
                      F.line = 2055;
                      F.filename = "powers.nim";
                      i_1459621181 = i_1459622067;
                      F.line = 2055;
                      j_1459621182 = j_1459622071;
                      if ((isColor_1224737917(b_1459621179[chckIndx(i_1459621181, 0, (b_1459621179).length - 1)][chckIndx(j_1459621182, 0, (b_1459621179[chckIndx(i_1459621181, 0, (b_1459621179).length - 1)]).length - 1)], side_1459621177) && contains_838862678(b_1459621179[chckIndx(i_1459621181, 0, (b_1459621179).length - 1)][chckIndx(j_1459621182, 0, (b_1459621179[chckIndx(i_1459621181, 0, (b_1459621179).length - 1)]).length - 1)].filePath, [108,97,110,99,101]))) {
                      F.line = 2057;
                      b_1459621179[chckIndx(i_1459621181, 0, (b_1459621179).length - 1)][chckIndx(j_1459621182, 0, (b_1459621179[chckIndx(i_1459621181, 0, (b_1459621179).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459620991);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622072 = addInt(i_1459622072, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622068 = addInt(i_1459622068, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618571(taken_1459618572, taker_1459618573, board_1459618574, state_1459618575) {
  var result_1459618578 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (HEX3DHEX3D_1308622964(taken_1459618572.tile, taker_1459618573.tile)) {
    Label1: {
      F.line = 517;
      F.filename = "powers.nim";
      var i_1459618579 = 0;
      F.line = 517;
      var j_1459618580 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622124 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622125 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622125 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622124 = i_1459622125;
              Label5: {
                F.line = 114;
                var j_1459622128 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622129 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622129 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622128 = i_1459622129;
                      F.line = 517;
                      F.filename = "powers.nim";
                      i_1459618579 = i_1459622124;
                      F.line = 517;
                      j_1459618580 = j_1459622128;
                      if (sameColor_1224737908(board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)][chckIndx(j_1459618580, 0, (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)]).length - 1)], taken_1459618572)) {
                      Label8: {
                        F.line = 169;
                        F.filename = "piece.nim";
                        var xHEX60gensym41_1459618585 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1459622119 = [];
                        F.line = 169;
                        F.filename = "piece.nim";
                        colontmp__1459622119 = board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)][chckIndx(j_1459618580, 0, (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)]).length - 1)].onPromote;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1459622120 = 0;
                        F.line = 250;
                        var L_1459622121 = (colontmp__1459622119).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1459622120 < L_1459622121)) break Label10;
                              F.line = 519;
                              F.filename = "powers.nim";
                              xHEX60gensym41_1459618585 = colontmp__1459622119[chckIndx(i_1459622120, 0, (colontmp__1459622119).length - 1)];
                              F.line = 170;
                              F.filename = "piece.nim";
                              xHEX60gensym41_1459618585(board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)][chckIndx(j_1459618580, 0, (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)]).length - 1)], board_1459618574, state_1459618575);
                              if (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)][chckIndx(j_1459618580, 0, (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)]).length - 1)].promoted) {
                              F.line = 171;
                              break Label8;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1459622120 += 1;
                              if (!(((colontmp__1459622119).length == L_1459622121))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 520;
                      F.filename = "powers.nim";
                      board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)][chckIndx(j_1459618580, 0, (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1291846082);;
                      F.line = 521;
                      board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)][chckIndx(j_1459618580, 0, (board_1459618574[chckIndx(i_1459618579, 0, (board_1459618574).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1291846087);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622129 = addInt(i_1459622129, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622125 = addInt(i_1459622125, 1);
            }
        };
      };
    };
    F.line = 523;
    F.filename = "powers.nim";
    taken_1459618572 = nimCopy(taken_1459618572, pieceCopy_1224737824(air_1275068615, taken_1459618572.index, 6, 1, 0, 0, taken_1459618572.tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
    F.line = 524;
    var colontmp__1459622131 = nimCopy(null, taken_1459618572.tile, NTI1224736771);
    F.line = 524;
    var colontmp__1459622132 = true;
    F.line = 524;
    result_1459618578 = nimCopy(result_1459618578, {Field0: nimCopy(null, colontmp__1459622131, NTI1224736771), Field1: colontmp__1459622132}, NTI1459618491);
    break BeforeRet;
    }
    else {
      F.line = 526;
      result_1459618578 = nimCopy(result_1459618578, HEX3Aanonymous_1224737768(taken_1459618572, taker_1459618573, board_1459618574, state_1459618575), NTI1459618491);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1459618578;

}

function HEX3Aanonymous_1459618597(side_1459618598, viewSide_1459618599, b_1459618600, __1459618601) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 538;
      F.filename = "powers.nim";
      var i_1459618602 = 0;
      F.line = 538;
      var j_1459618603 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622110 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622111 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622111 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622110 = i_1459622111;
              Label5: {
                F.line = 114;
                var j_1459622114 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622115 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622115 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622114 = i_1459622115;
                      F.line = 538;
                      F.filename = "powers.nim";
                      i_1459618602 = i_1459622110;
                      F.line = 538;
                      j_1459618603 = j_1459622114;
                      if (((b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)][chckIndx(j_1459618603, 0, (b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)][chckIndx(j_1459618603, 0, (b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)]).length - 1)], side_1459618598))) {
                      F.line = 540;
                      b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)][chckIndx(j_1459618603, 0, (b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)]).length - 1)].whenTaken = HEX3Aanonymous_1459618571;
                      F.line = 541;
                      b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)][chckIndx(j_1459618603, 0, (b_1459618600[chckIndx(i_1459618602, 0, (b_1459618600).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395189);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622115 = addInt(i_1459622115, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622111 = addInt(i_1459622111, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618627(taken_1459618628, taker_1459618629, board_1459618630, state_1459618631) {
  var result_1459618634 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (HEX3DHEX3D_1308622964(taken_1459618628.tile, taker_1459618629.tile)) {
    Label1: {
      F.line = 555;
      F.filename = "powers.nim";
      var i_1459618635 = 0;
      F.line = 555;
      var j_1459618636 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622149 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622150 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622150 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622149 = i_1459622150;
              Label5: {
                F.line = 114;
                var j_1459622153 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622154 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622154 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622153 = i_1459622154;
                      F.line = 555;
                      F.filename = "powers.nim";
                      i_1459618635 = i_1459622149;
                      F.line = 555;
                      j_1459618636 = j_1459622153;
                      if (sameColor_1224737908(board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)][chckIndx(j_1459618636, 0, (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)]).length - 1)], taken_1459618628)) {
                      Label8: {
                        F.line = 169;
                        F.filename = "piece.nim";
                        var xHEX60gensym45_1459618641 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1459622144 = [];
                        F.line = 169;
                        F.filename = "piece.nim";
                        colontmp__1459622144 = board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)][chckIndx(j_1459618636, 0, (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)]).length - 1)].onPromote;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1459622145 = 0;
                        F.line = 250;
                        var L_1459622146 = (colontmp__1459622144).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1459622145 < L_1459622146)) break Label10;
                              F.line = 557;
                              F.filename = "powers.nim";
                              xHEX60gensym45_1459618641 = colontmp__1459622144[chckIndx(i_1459622145, 0, (colontmp__1459622144).length - 1)];
                              F.line = 170;
                              F.filename = "piece.nim";
                              xHEX60gensym45_1459618641(board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)][chckIndx(j_1459618636, 0, (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)]).length - 1)], board_1459618630, state_1459618631);
                              if (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)][chckIndx(j_1459618636, 0, (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)]).length - 1)].promoted) {
                              F.line = 171;
                              break Label8;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1459622145 += 1;
                              if (!(((colontmp__1459622144).length == L_1459622146))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 558;
                      F.filename = "powers.nim";
                      board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)][chckIndx(j_1459618636, 0, (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)]).length - 1)].moves.push(HEX3Aanonymous_1476395184);;
                      F.line = 559;
                      board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)][chckIndx(j_1459618636, 0, (board_1459618630[chckIndx(i_1459618635, 0, (board_1459618630).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395179);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622154 = addInt(i_1459622154, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622150 = addInt(i_1459622150, 1);
            }
        };
      };
    };
    F.line = 561;
    F.filename = "powers.nim";
    taken_1459618628 = nimCopy(taken_1459618628, pieceCopy_1224737824(air_1275068615, taken_1459618628.index, 6, 1, 0, 0, taken_1459618628.tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
    F.line = 562;
    var colontmp__1459622156 = nimCopy(null, taken_1459618628.tile, NTI1224736771);
    F.line = 562;
    var colontmp__1459622157 = true;
    F.line = 562;
    result_1459618634 = nimCopy(result_1459618634, {Field0: nimCopy(null, colontmp__1459622156, NTI1224736771), Field1: colontmp__1459622157}, NTI1459618537);
    break BeforeRet;
    }
    else {
      F.line = 564;
      result_1459618634 = nimCopy(result_1459618634, HEX3Aanonymous_1224737768(taken_1459618628, taker_1459618629, board_1459618630, state_1459618631), NTI1459618537);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1459618634;

}

function HEX3Aanonymous_1459618653(side_1459618654, viewSide_1459618655, b_1459618656, __1459618657) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 576;
      F.filename = "powers.nim";
      var i_1459618658 = 0;
      F.line = 576;
      var j_1459618659 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622135 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622136 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622136 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622135 = i_1459622136;
              Label5: {
                F.line = 114;
                var j_1459622139 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622140 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622140 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622139 = i_1459622140;
                      F.line = 576;
                      F.filename = "powers.nim";
                      i_1459618658 = i_1459622135;
                      F.line = 576;
                      j_1459618659 = j_1459622139;
                      if (((b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)][chckIndx(j_1459618659, 0, (b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)][chckIndx(j_1459618659, 0, (b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)]).length - 1)], side_1459618654))) {
                      F.line = 578;
                      b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)][chckIndx(j_1459618659, 0, (b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)]).length - 1)].whenTaken = HEX3Aanonymous_1459618627;
                      F.line = 579;
                      b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)][chckIndx(j_1459618659, 0, (b_1459618656[chckIndx(i_1459618658, 0, (b_1459618656).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395189);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622140 = addInt(i_1459622140, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622136 = addInt(i_1459622136, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618751(side_1459618752, viewSide_1459618753, b_1459618754, state_1459618755) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 644;
    F.filename = "powers.nim";
    HEX3Aanonymous_1459618711(side_1459618752, viewSide_1459618753, b_1459618754, state_1459618755);
    F.line = 645;
    HEX3Aanonymous_1459618683(side_1459618752, viewSide_1459618753, b_1459618754, state_1459618755);
    F.line = 646;
    HEX3Aanonymous_1459618222(side_1459618752, viewSide_1459618753, b_1459618754, state_1459618755);
    Label1: {
      F.line = 647;
      var i_1459618756 = 0;
      F.line = 647;
      var j_1459618757 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622160 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622161 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622161 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622160 = i_1459622161;
              Label5: {
                F.line = 114;
                var j_1459622164 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622165 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622165 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622164 = i_1459622165;
                      F.line = 647;
                      F.filename = "powers.nim";
                      i_1459618756 = i_1459622160;
                      F.line = 647;
                      j_1459618757 = j_1459622164;
                      if (((b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)][chckIndx(j_1459618757, 0, (b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)][chckIndx(j_1459618757, 0, (b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)]).length - 1)], side_1459618752))) {
                      if ((b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)][chckIndx(j_1459618757, 0, (b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)]).length - 1)].color == 0)) {
                      F.line = 650;
                      b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)][chckIndx(j_1459618757, 0, (b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395081);;
                      }
                      else {
                      if ((b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)][chckIndx(j_1459618757, 0, (b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)]).length - 1)].color == 1)) {
                      F.line = 652;
                      b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)][chckIndx(j_1459618757, 0, (b_1459618754[chckIndx(i_1459618756, 0, (b_1459618754).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395075);;
                      }
                      }
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622165 = addInt(i_1459622165, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622161 = addInt(i_1459622161, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618815(side_1459618816, viewSide_1459618817, b_1459618818, __1459618819) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 691;
      F.filename = "powers.nim";
      var i_1459618820 = 0;
      F.line = 691;
      var j_1459618821 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622169 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622170 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622170 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622169 = i_1459622170;
              Label5: {
                F.line = 114;
                var j_1459622173 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622174 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622174 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622173 = i_1459622174;
                      F.line = 691;
                      F.filename = "powers.nim";
                      i_1459618820 = i_1459622169;
                      F.line = 691;
                      j_1459618821 = j_1459622173;
                      if ((!((b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)].item == 1)) && isColor_1224737917(b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)], side_1459618816))) {
                      F.line = 693;
                      b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)] = nimCopy(b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)].index, 6, 1, 0, 0, b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      else {
                      if (((b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)], side_1459618816))) {
                      F.line = 695;
                      add_1459617825(b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1476395184]);
                      F.line = 696;
                      add_1459617825(b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1476395179]);
                      F.line = 697;
                      b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)][chckIndx(j_1459618821, 0, (b_1459618818[chckIndx(i_1459618820, 0, (b_1459618818).length - 1)]).length - 1)].item = 0;
                      }
                      }
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622174 = addInt(i_1459622174, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622170 = addInt(i_1459622170, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618977(side_1459618978, viewSide_1459618979, b_1459618980, s_1459618981) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1459618978 == 0)) {
    F.line = 782;
    F.filename = "powers.nim";
    pieceMove_1224737720(b_1459618980[chckIndx(1, 0, (b_1459618980).length - 1)][chckIndx(3, 0, (b_1459618980[chckIndx(1, 0, (b_1459618980).length - 1)]).length - 1)], 3, 3, b_1459618980, s_1459618981);
    F.line = 783;
    pieceMove_1224737720(b_1459618980[chckIndx(1, 0, (b_1459618980).length - 1)][chckIndx(4, 0, (b_1459618980[chckIndx(1, 0, (b_1459618980).length - 1)]).length - 1)], 3, 4, b_1459618980, s_1459618981);
    }
    else {
      F.line = 785;
      pieceMove_1224737720(b_1459618980[chckIndx(6, 0, (b_1459618980).length - 1)][chckIndx(3, 0, (b_1459618980[chckIndx(6, 0, (b_1459618980).length - 1)]).length - 1)], 4, 3, b_1459618980, s_1459618981);
      F.line = 786;
      pieceMove_1224737720(b_1459618980[chckIndx(6, 0, (b_1459618980).length - 1)][chckIndx(4, 0, (b_1459618980[chckIndx(6, 0, (b_1459618980).length - 1)]).length - 1)], 4, 4, b_1459618980, s_1459618981);
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459618847(side_1459618848, viewSide_1459618849, b_1459618850, __1459618851) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 713;
      F.filename = "powers.nim";
      var i_1459618852 = 0;
      F.line = 713;
      var j_1459618853 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622178 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622179 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622179 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622178 = i_1459622179;
              Label5: {
                F.line = 114;
                var j_1459622182 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622183 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622183 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622182 = i_1459622183;
                      F.line = 713;
                      F.filename = "powers.nim";
                      i_1459618852 = i_1459622178;
                      F.line = 713;
                      j_1459618853 = j_1459622182;
                      if ((!((b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].item == 1)) && isColor_1224737917(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], side_1459618848))) {
                      F.line = 715;
                      b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)] = nimCopy(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].index, 6, 1, 0, 0, b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      else {
                      if (((b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], side_1459618848))) {
                      F.line = 717;
                      add_1459617825(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], "moves", [HEX3Aanonymous_1291846082, HEX3Aanonymous_1476395184, HEX3Aanonymous_1476395282, HEX3Aanonymous_1476395272]);
                      F.line = 718;
                      add_1459617825(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], "takes", [HEX3Aanonymous_1291846087, HEX3Aanonymous_1476395179, HEX3Aanonymous_1476395287, HEX3Aanonymous_1476395277]);
                      F.line = 719;
                      b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].item = 0;
                      }
                      else {
                      if (((b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].item == 2) && !(isColor_1224737917(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], side_1459618848)))) {
                      F.line = 721;
                      b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)] = nimCopy(b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].index, 6, 1, 0, 0, b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)][chckIndx(j_1459618853, 0, (b_1459618850[chckIndx(i_1459618852, 0, (b_1459618850).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      }}
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622183 = addInt(i_1459622183, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622179 = addInt(i_1459622179, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619974(side_1459619975, __1459619976, b_1459619977, s_1459619978) {
                      var Temporary8;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1414;
      F.filename = "powers.nim";
      var i_1459619979 = 0;
      F.line = 1414;
      var j_1459619980 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622187 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622188 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622188 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622187 = i_1459622188;
              Label5: {
                F.line = 114;
                var j_1459622191 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622192 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622192 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622191 = i_1459622192;
                      F.line = 1414;
                      F.filename = "powers.nim";
                      i_1459619979 = i_1459622187;
                      F.line = 1414;
                      j_1459619980 = j_1459622191;
                      if ((((b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)].item == 5) && isColor_1224737917(b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)], side_1459619975)) && (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)].timesMoved == 1))) {
                      F.line = 1418;
                      if ((side_1459619975 == 0)) {
                      Temporary8 = (-1);
                      }
                      else {
                      Temporary8 = 1;
                      }
                      
                      var back_1459619989 = Temporary8;
                      F.line = 1419;
                      b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)].timesMoved = addInt(b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)].timesMoved, 1);
                      F.line = 1420;
                      pieceMove_1224737720(b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)], addInt(b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)].tile.Field1, back_1459619989), b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)][chckIndx(j_1459619980, 0, (b_1459619977[chckIndx(i_1459619979, 0, (b_1459619977).length - 1)]).length - 1)].tile.Field0, b_1459619977, s_1459619978);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622192 = addInt(i_1459622192, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622188 = addInt(i_1459622188, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620010(piece_1459620011, board_1459620012, state_1459620013) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((piece_1459620011.piecesTaken == 7)) {
    Label1: {
      F.line = 1434;
      F.filename = "powers.nim";
      var i_1459620014 = 0;
      F.line = 1434;
      var j_1459620015 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622205 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622206 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622206 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622205 = i_1459622206;
              Label5: {
                F.line = 114;
                var j_1459622209 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622210 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622210 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622209 = i_1459622210;
                      F.line = 1434;
                      F.filename = "powers.nim";
                      i_1459620014 = i_1459622205;
                      F.line = 1434;
                      j_1459620015 = j_1459622209;
                      if (((board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)][chckIndx(j_1459620015, 0, (board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)]).length - 1)].item == 0) && !(sameColor_1224737908(board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)][chckIndx(j_1459620015, 0, (board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)]).length - 1)], piece_1459620011)))) {
                      F.line = 1437;
                      board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)][chckIndx(j_1459620015, 0, (board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)]).length - 1)] = nimCopy(board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)][chckIndx(j_1459620015, 0, (board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)][chckIndx(j_1459620015, 0, (board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)]).length - 1)].index, 6, 1, 0, 0, board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)][chckIndx(j_1459620015, 0, (board_1459620012[chckIndx(i_1459620014, 0, (board_1459620012).length - 1)]).length - 1)].tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622210 = addInt(i_1459622210, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622206 = addInt(i_1459622206, 1);
            }
        };
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620021(side_1459620022, __1459620023, b_1459620024, __1459620025) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1448;
      F.filename = "powers.nim";
      var i_1459620026 = 0;
      F.line = 1448;
      var j_1459620027 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622196 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622197 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622197 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622196 = i_1459622197;
              Label5: {
                F.line = 114;
                var j_1459622200 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622201 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622201 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622200 = i_1459622201;
                      F.line = 1448;
                      F.filename = "powers.nim";
                      i_1459620026 = i_1459622196;
                      F.line = 1448;
                      j_1459620027 = j_1459622200;
                      if (((b_1459620024[chckIndx(i_1459620026, 0, (b_1459620024).length - 1)][chckIndx(j_1459620027, 0, (b_1459620024[chckIndx(i_1459620026, 0, (b_1459620024).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459620024[chckIndx(i_1459620026, 0, (b_1459620024).length - 1)][chckIndx(j_1459620027, 0, (b_1459620024[chckIndx(i_1459620026, 0, (b_1459620024).length - 1)]).length - 1)], side_1459620022))) {
                      F.line = 1450;
                      b_1459620024[chckIndx(i_1459620026, 0, (b_1459620024).length - 1)][chckIndx(j_1459620027, 0, (b_1459620024[chckIndx(i_1459620026, 0, (b_1459620024).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459620010);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622201 = addInt(i_1459622201, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622197 = addInt(i_1459622197, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function newSeq_1459619706(len_1459619708) {
  var result_1459619709 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1459619709 = new Array(len_1459619708); for (var i = 0 ; i < len_1459619708 ; ++i) { result_1459619709[i] = null; }  framePtr = F.prev;

  return result_1459619709;

}

function HEX26_1459619612(x_1459619614, y_1459619615) {
  var result_1459619616 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1459619616 = new Array(chckRange(addInt((x_1459619614).length, (y_1459619615).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1459619614).length, (y_1459619615).length), 0, 2147483647) ; ++i) { result_1459619616[i] = {Field0: 0, Field1: 0}; }    Label1: {
      F.line = 1538;
      var i_1459619634 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459622227 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__1459622227 = subInt((x_1459619614).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459622228 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_1459622228 <= colontmp__1459622227)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1459619634 = res_1459622228;
            F.line = 1539;
            result_1459619616[chckIndx(i_1459619634, 0, (result_1459619616).length - 1)] = nimCopy(result_1459619616[chckIndx(i_1459619634, 0, (result_1459619616).length - 1)], x_1459619614[chckIndx(i_1459619634, 0, (x_1459619614).length - 1)], NTI1224736771);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459622228 = addInt(res_1459622228, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1459619642 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__1459622231 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__1459622231 = subInt((y_1459619615).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_1459622232 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_1459622232 <= colontmp__1459622231)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1459619642 = res_1459622232;
            F.line = 1541;
            result_1459619616[chckIndx(addInt(i_1459619642, (x_1459619614).length), 0, (result_1459619616).length - 1)] = nimCopy(result_1459619616[chckIndx(addInt(i_1459619642, (x_1459619614).length), 0, (result_1459619616).length - 1)], y_1459619615[chckIndx(i_1459619642, 0, (y_1459619615).length - 1)], NTI1224736771);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_1459622232 = addInt(res_1459622232, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1459619616;

}

function HEX3Aanonymous_1459619606(piece_1459619607, board_1459619608, state_1459619609) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(piece_1459619607.drunk)) {
    F.line = 1202;
    F.filename = "powers.nim";
    piece_1459619607.drunk = true;
    F.line = 1207;
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459619607.tile.Field1), mulInt(100, piece_1459619607.tile.Field0)), state_1459619609.Field0.randSeed)));
    F.line = 1208;
    var takes_1459619610 = getTakesOn_1224737435(piece_1459619607, board_1459619608);
    F.line = 1209;
    var moves_1459619611 = getMovesOn_1224737550(piece_1459619607, board_1459619608);
    if (((HEX26_1459619612(moves_1459619611, takes_1459619610)).length == 0)) {
    F.line = 1210;
    break BeforeRet;
    }
    
    F.line = 1213;
    var randomAction_1459619656 = nimCopy(null, sample_1459619576(HEX26_1459619612(moves_1459619611, takes_1459619610)), NTI1224736771);
    if (contains_1224737585(takes_1459619610, randomAction_1459619656)) {
    F.line = 1217;
    piece_1459619607.onTake(piece_1459619607, randomAction_1459619656, board_1459619608, state_1459619609);
    }
    else {
    if (contains_1224737585(moves_1459619611, randomAction_1459619656)) {
    F.line = 1219;
    piece_1459619607.onMove(piece_1459619607, randomAction_1459619656, board_1459619608, state_1459619609);
    }
    }
    }
    
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619698(side_1459619699, __1459619700, b_1459619701, __1459619702) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1260;
      F.filename = "powers.nim";
      var i_1459619703 = 0;
      F.line = 1260;
      var j_1459619704 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622219 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622220 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622220 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622219 = i_1459622220;
              Label5: {
                F.line = 114;
                var j_1459622223 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622224 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622224 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622223 = i_1459622224;
                      F.line = 1260;
                      F.filename = "powers.nim";
                      i_1459619703 = i_1459622219;
                      F.line = 1260;
                      j_1459619704 = j_1459622223;
                      if ((contains_838862678(b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)][chckIndx(j_1459619704, 0, (b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)]).length - 1)].filePath, [110,105,103,104,116,114,105,100,101,114]) && isColor_1224737917(b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)][chckIndx(j_1459619704, 0, (b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)]).length - 1)], side_1459619699))) {
                      F.line = 1264;
                      F.line = 652;
                      F.filename = "sequtils.nim";
                      var resultHEX60gensym98_1459619714 = newSeq_1459619706(0);
                      Label8: {
                        F.line = 653;
                        var it_1459619718 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__1459622214 = [];
                        F.line = 1264;
                        F.filename = "powers.nim";
                        colontmp__1459622214 = b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)][chckIndx(j_1459619704, 0, (b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)]).length - 1)].onEndTurn;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_1459622215 = 0;
                        F.line = 250;
                        var L_1459622216 = (colontmp__1459622214).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_1459622215 < L_1459622216)) break Label10;
                              F.line = 653;
                              F.filename = "sequtils.nim";
                              it_1459619718 = colontmp__1459622214[chckIndx(i_1459622215, 0, (colontmp__1459622214).length - 1)];
                              if (!((it_1459619718 == HEX3Aanonymous_1459619550))) {
                              F.line = 654;
                              resultHEX60gensym98_1459619714.push(it_1459619718);;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_1459622215 += 1;
                              if (!(((colontmp__1459622214).length == L_1459622216))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)][chckIndx(j_1459619704, 0, (b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)]).length - 1)].onEndTurn = nimCopy(null, resultHEX60gensym98_1459619714, NTI1459619444);
                      F.line = 1265;
                      F.filename = "powers.nim";
                      b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)][chckIndx(j_1459619704, 0, (b_1459619701[chckIndx(i_1459619703, 0, (b_1459619701).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459619606);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622224 = addInt(i_1459622224, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622220 = addInt(i_1459622220, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620489(piece_1459620490, board_1459620491, state_1459620492) {
      var Temporary2;
            var Temporary5;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1711;
    F.filename = "powers.nim";
    piece_1459620490.onMove(piece_1459620490, tileBelow_1308622993(piece_1459620490.tile), board_1459620491, state_1459620492);
    Label1: {
      F.line = 174;
      F.filename = "piece.nim";
      var xHEX60gensym136_1459620497 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__1459622235 = [];
      F.line = 174;
      F.filename = "piece.nim";
      colontmp__1459622235 = (Temporary2 = board_1459620491[chckIndx(tileBelow_1308622993(piece_1459620490.tile).Field1, 0, (board_1459620491).length - 1)], Temporary2)[chckIndx(piece_1459620490.tile.Field0, 0, (Temporary2).length - 1)].onEndTurn;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459622236 = 0;
      F.line = 250;
      var L_1459622237 = (colontmp__1459622235).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_1459622236 < L_1459622237)) break Label4;
            F.line = 1712;
            F.filename = "powers.nim";
            xHEX60gensym136_1459620497 = colontmp__1459622235[chckIndx(i_1459622236, 0, (colontmp__1459622235).length - 1)];
            F.line = 175;
            F.filename = "piece.nim";
            xHEX60gensym136_1459620497((Temporary5 = board_1459620491[chckIndx(tileBelow_1308622993(piece_1459620490.tile).Field1, 0, (board_1459620491).length - 1)], Temporary5)[chckIndx(piece_1459620490.tile.Field0, 0, (Temporary5).length - 1)], board_1459620491, state_1459620492);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459622236 += 1;
            if (!(((colontmp__1459622235).length == L_1459622237))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620503(piece_1459620504, board_1459620505, s_1459620506) {
    var Temporary1;

  var result_1459620507 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1715;
    F.filename = "powers.nim";
    result_1459620507 = (!((piece_1459620504.tile.Field1 == 7)) && isAir_1224737900((Temporary1 = board_1459620505[chckIndx(tileBelow_1308622993(piece_1459620504.tile).Field1, 0, (board_1459620505).length - 1)], Temporary1)[chckIndx(piece_1459620504.tile.Field0, 0, (Temporary1).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459620507;

}

function HEX3Aanonymous_1459620469(piece_1459620470, board_1459620471, state_1459620472) {
      var Temporary2;
            var Temporary5;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1704;
    F.filename = "powers.nim";
    piece_1459620470.onMove(piece_1459620470, tileAbove_1308622990(piece_1459620470.tile), board_1459620471, state_1459620472);
    Label1: {
      F.line = 174;
      F.filename = "piece.nim";
      var xHEX60gensym133_1459620477 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__1459622240 = [];
      F.line = 174;
      F.filename = "piece.nim";
      colontmp__1459622240 = (Temporary2 = board_1459620471[chckIndx(tileAbove_1308622990(piece_1459620470.tile).Field1, 0, (board_1459620471).length - 1)], Temporary2)[chckIndx(piece_1459620470.tile.Field0, 0, (Temporary2).length - 1)].onEndTurn;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_1459622241 = 0;
      F.line = 250;
      var L_1459622242 = (colontmp__1459622240).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_1459622241 < L_1459622242)) break Label4;
            F.line = 1705;
            F.filename = "powers.nim";
            xHEX60gensym133_1459620477 = colontmp__1459622240[chckIndx(i_1459622241, 0, (colontmp__1459622240).length - 1)];
            F.line = 175;
            F.filename = "piece.nim";
            xHEX60gensym133_1459620477((Temporary5 = board_1459620471[chckIndx(tileAbove_1308622990(piece_1459620470.tile).Field1, 0, (board_1459620471).length - 1)], Temporary5)[chckIndx(piece_1459620470.tile.Field0, 0, (Temporary5).length - 1)], board_1459620471, state_1459620472);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459622241 += 1;
            if (!(((colontmp__1459622240).length == L_1459622242))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620483(piece_1459620484, board_1459620485, s_1459620486) {
    var Temporary1;

  var result_1459620487 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1708;
    F.filename = "powers.nim";
    result_1459620487 = (!((piece_1459620484.tile.Field1 == 0)) && isAir_1224737900((Temporary1 = board_1459620485[chckIndx(tileAbove_1308622990(piece_1459620484.tile).Field1, 0, (board_1459620485).length - 1)], Temporary1)[chckIndx(piece_1459620484.tile.Field0, 0, (Temporary1).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459620487;

}

function HEX3Aanonymous_1459620509(side_1459620510, __1459620511, b_1459620512, s_1459620513) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1459620510 == 0)) {
    F.line = 1729;
    F.filename = "powers.nim";
    s_1459620513.Field1[chckIndx(side_1459620510, 0, (s_1459620513.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,85,112], Field1: alwaysCost_1493172453(7), Field2: HEX3Aanonymous_1459620489, Field3: HEX3Aanonymous_1459620503});;
    }
    else {
      F.line = 1731;
      s_1459620513.Field1[chckIndx(side_1459620510, 0, (s_1459620513.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,85,112], Field1: alwaysCost_1493172453(7), Field2: HEX3Aanonymous_1459620469, Field3: HEX3Aanonymous_1459620483});;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620553(side_1459620554, __1459620555, b_1459620556, s_1459620557) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    if ((side_1459620554 == 0)) {
    F.line = 1755;
    F.filename = "powers.nim";
    s_1459620557.Field1[chckIndx(side_1459620554, 0, (s_1459620557.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,66,97,99,107], Field1: alwaysCost_1493172453(7), Field2: HEX3Aanonymous_1459620469, Field3: HEX3Aanonymous_1459620483});;
    }
    else {
      F.line = 1757;
      s_1459620557.Field1[chckIndx(side_1459620554, 0, (s_1459620557.Field1).length - 1)].buys.push({Field0: [77,111,118,101,32,66,97,99,107], Field1: alwaysCost_1493172453(7), Field2: HEX3Aanonymous_1459620489, Field3: HEX3Aanonymous_1459620503});;
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620580(side_1459620581, __1459620582, b_1459620583, s_1459620584) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1773;
    F.filename = "powers.nim";
    addMoney_1493172266(side_1459620581, 10, s_1459620584);
  framePtr = F.prev;

  
}

function buyMoveUpgrade_1493172349(move_1493172350) {
    
function HEX3Aanonymous_1493172352(piece_1493172353, board_1493172354, __1493172355) {
      var F = {procname: "buyMoveUpgrade.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
        F.line = 34;
        F.filename = "capitalism.nim";
        piece_1493172353.moves.push(move_1493172350);;
      framePtr = F.prev;

      
    }

  var result_1493172351 = null;

  var F = {procname: "capitalism.buyMoveUpgrade", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "capitalism.nim";
    result_1493172351 = HEX3Aanonymous_1493172352;
  framePtr = F.prev;

  return result_1493172351;

}

function find_1493172388(a_1493172391, item_1493172392) {
  var result_1493172393 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1493172393 = 0;
    Label1: {
      F.line = 1672;
      var i_1493172407 = null;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_1459622246 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_1459622246 < (a_1493172391).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1493172407 = a_1493172391[chckIndx(i_1459622246, 0, (a_1493172391).length - 1)];
            if ((i_1493172407 == item_1493172392)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1493172393 = addInt(result_1493172393, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_1459622246 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1493172393 = (-1);
  };
  framePtr = F.prev;

  return result_1493172393;

}

function contains_1493172383(a_1493172385, item_1493172386) {
  var result_1493172387 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1493172387 = (0 <= find_1493172388(a_1493172385, item_1493172386));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493172387;

}

function buyMoveUpgradeCondition_1493172375(move_1493172376) {
    
function HEX3Aanonymous_1493172378(piece_1493172379, board_1493172380, s_1493172381) {
      var result_1493172382 = false;

      var F = {procname: "buyMoveUpgradeCondition.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        F.line = 38;
        F.filename = "capitalism.nim";
        result_1493172382 = !(contains_1493172383(piece_1493172379.moves, move_1493172376));
        break BeforeRet;
      };
      framePtr = F.prev;

      return result_1493172382;

    }

  var result_1493172377 = null;

  var F = {procname: "capitalism.buyMoveUpgradeCondition", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 37;
    F.filename = "capitalism.nim";
    result_1493172377 = HEX3Aanonymous_1493172378;
  framePtr = F.prev;

  return result_1493172377;

}

function exceptCost_1493172476(normalCost_1493172477, exceptPiece_1493172478, exceptCost_1493172479) {
    
function HEX3Aanonymous_1493172481(piece_1493172482, b_1493172483, s_1493172484) {
        var Temporary1;

      var result_1493172485 = 0;

      var F = {procname: "exceptCost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        F.line = 49;
        F.filename = "capitalism.nim";
        if (!((piece_1493172482.item == exceptPiece_1493172478))) {
        Temporary1 = normalCost_1493172477;
        }
        else {
        Temporary1 = exceptCost_1493172479;
        }
        
        result_1493172485 = Temporary1;
        break BeforeRet;
      };
      framePtr = F.prev;

      return result_1493172485;

    }

  var result_1493172480 = null;

  var F = {procname: "capitalism.exceptCost", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "capitalism.nim";
    result_1493172480 = HEX3Aanonymous_1493172481;
  framePtr = F.prev;

  return result_1493172480;

}

function HEX3Aanonymous_1459620587(side_1459620588, __1459620589, b_1459620590, s_1459620591) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1790;
    F.filename = "powers.nim";
    var action_1459620592 = buyMoveUpgrade_1493172349(HEX3Aanonymous_1291846082);
    F.line = 1791;
    var condition_1459620593 = buyMoveUpgradeCondition_1493172375(HEX3Aanonymous_1291846082);
    F.line = 1792;
    s_1459620591.Field1[chckIndx(side_1459620588, 0, (s_1459620591.Field1).length - 1)].buys.push({Field0: [85,112,103,114,97,100,101], Field1: exceptCost_1493172476(8, 0, 38), Field2: action_1459620592, Field3: condition_1459620593});;
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620604(side_1459620605, __1459620606, b_1459620607, s_1459620608) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1809;
    F.filename = "powers.nim";
    var action_1459620609 = buyMoveUpgrade_1493172349(HEX3Aanonymous_1476395184);
    F.line = 1810;
    var condition_1459620610 = buyMoveUpgradeCondition_1493172375(HEX3Aanonymous_1476395184);
    F.line = 1811;
    s_1459620608.Field1[chckIndx(side_1459620605, 0, (s_1459620608.Field1).length - 1)].buys.push({Field0: [85,112,103,114,97,100,101], Field1: exceptCost_1493172476(8, 0, 38), Field2: action_1459620609, Field3: condition_1459620610});;
  framePtr = F.prev;

  
}

function createPieceMarket_1459620641(cost_1459620642, rate_1459620643) {
    
function HEX3Aanonymous_1459620647(piece_1459620648, b_1459620649, s_1459620650) {
      var result_1459620651 = 0;

      var F = {procname: "createPieceMarket.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        F.line = 1829;
        F.filename = "powers.nim";
        var piecesSold_1459620652 = s_1459620650.Field1[chckIndx(piece_1459620648.color, 0, (s_1459620650.Field1).length - 1)].piecesSold;
        if (!((s_1459620650.Field0.turnNumber == lastTurnSold_1459620645))) {
        F.line = 1831;
        lastTurnSold_1459620645 = s_1459620650.Field0.turnNumber;
        F.line = 1832;
        lastPiecesSold_1459620646 = piecesSold_1459620652;
        }
        
        F.line = 1834;
        result_1459620651 = addInt(cost_1459620642, mulInt(rate_1459620643, subInt(lastPiecesSold_1459620646, piecesSold_1459620652)));
      framePtr = F.prev;

      return result_1459620651;

    }

  var result_1459620644 = null;

  var F = {procname: "powers.createPieceMarket", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1825;
    F.filename = "powers.nim";
    var lastTurnSold_1459620645 = (-1);
    F.line = 1826;
    var lastPiecesSold_1459620646 = 0;
    F.line = 1828;
    result_1459620644 = HEX3Aanonymous_1459620647;
  framePtr = F.prev;

  return result_1459620644;

}

function HEX3Aanonymous_1459620621(piece_1459620622, b_1459620623, state_1459620624) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1818;
    F.filename = "powers.nim";
    b_1459620623[chckIndx(piece_1459620622.tile.Field1, 0, (b_1459620623).length - 1)][chckIndx(piece_1459620622.tile.Field0, 0, (b_1459620623[chckIndx(piece_1459620622.tile.Field1, 0, (b_1459620623).length - 1)]).length - 1)] = nimCopy(b_1459620623[chckIndx(piece_1459620622.tile.Field1, 0, (b_1459620623).length - 1)][chckIndx(piece_1459620622.tile.Field0, 0, (b_1459620623[chckIndx(piece_1459620622.tile.Field1, 0, (b_1459620623).length - 1)]).length - 1)], pieceCopy_1224737824(air_1275068615, b_1459620623[chckIndx(piece_1459620622.tile.Field1, 0, (b_1459620623).length - 1)][chckIndx(piece_1459620622.tile.Field0, 0, (b_1459620623[chckIndx(piece_1459620622.tile.Field1, 0, (b_1459620623).length - 1)]).length - 1)].index, 6, 1, 0, 0, piece_1459620622.tile, [], [], air_1275068615.onMove, air_1275068615.onTake, air_1275068615.whenTaken, [], [], false, [], true, false, false), NTI1224736794);
    F.line = 1819;
    state_1459620624.Field1[chckIndx(piece_1459620622.color, 0, (state_1459620624.Field1).length - 1)].piecesSold = addInt(state_1459620624.Field1[chckIndx(piece_1459620622.color, 0, (state_1459620624.Field1).length - 1)].piecesSold, 1);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620631(piece_1459620632, board_1459620633, s_1459620634) {
  var result_1459620635 = false;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1822;
    F.filename = "powers.nim";
    result_1459620635 = !((piece_1459620632.item == 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459620635;

}

function HEX3Aanonymous_1459620653(side_1459620654, __1459620655, b_1459620656, s_1459620657) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1848;
    F.filename = "powers.nim";
    s_1459620657.Field1[chckIndx(side_1459620654, 0, (s_1459620657.Field1).length - 1)].buys.push({Field0: [83,101,108,108], Field1: createPieceMarket_1459620641((-4), (-1)), Field2: HEX3Aanonymous_1459620621, Field3: HEX3Aanonymous_1459620631});;
  framePtr = F.prev;

  
}

function getMoney_1493172239(side_1493172240, s_1493172241) {
  var result_1493172242 = 0;

  var F = {procname: "capitalism.getMoney", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 10;
    F.filename = "capitalism.nim";
    var wallet_1493172243 = nimCopy(null, s_1493172241.Field1[chckIndx(side_1493172240, 0, (s_1493172241.Field1).length - 1)].wallet, NTI1224736861);
    if (isSome_1409289449(wallet_1493172243)) {
    F.line = 12;
    result_1493172242 = get_1409289543(wallet_1493172243);
    break BeforeRet;
    }
    else {
      F.line = 14;
      result_1493172242 = (-1);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1493172242;

}

function HEX3Aanonymous_1459620708(piece_1459620709, __1459620710, state_1459620711) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1888;
    F.filename = "powers.nim";
    var currentMoney_1459620712 = getMoney_1493172239(piece_1459620709.color, state_1459620711);
    F.line = 1889;
    var next_1459620713 = subInt(mulInt(currentMoney_1459620712, 2), currentMoney_1459620712);
    F.line = 1890;
    addMoney_1493172266(piece_1459620709.color, next_1459620713, state_1459620711);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459620715(side_1459620716, __1459620717, b_1459620718, __1459620719) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1902;
      F.filename = "powers.nim";
      var i_1459620720 = 0;
      F.line = 1902;
      var j_1459620721 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622250 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622251 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622251 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622250 = i_1459622251;
              Label5: {
                F.line = 114;
                var j_1459622254 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622255 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622255 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622254 = i_1459622255;
                      F.line = 1902;
                      F.filename = "powers.nim";
                      i_1459620720 = i_1459622250;
                      F.line = 1902;
                      j_1459620721 = j_1459622254;
                      if (((b_1459620718[chckIndx(i_1459620720, 0, (b_1459620718).length - 1)][chckIndx(j_1459620721, 0, (b_1459620718[chckIndx(i_1459620720, 0, (b_1459620718).length - 1)]).length - 1)].item == 0) && isColor_1224737917(b_1459620718[chckIndx(i_1459620720, 0, (b_1459620718).length - 1)][chckIndx(j_1459620721, 0, (b_1459620718[chckIndx(i_1459620720, 0, (b_1459620718).length - 1)]).length - 1)], side_1459620716))) {
                      F.line = 1904;
                      b_1459620718[chckIndx(i_1459620720, 0, (b_1459620718).length - 1)][chckIndx(j_1459620721, 0, (b_1459620718[chckIndx(i_1459620720, 0, (b_1459620718).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459620708);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622255 = addInt(i_1459622255, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622251 = addInt(i_1459622251, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function createSuperLottery_1459620668() {
    
function HEX3Aanonymous_1459620671(piece_1459620672, board_1459620673, state_1459620674) {
      var F = {procname: "createSuperLottery.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
      framePtr = F;
        if (!((piece_1459620672.timesMoved == lastTimesMoved_1459620670))) {
        F.line = 1863;
        F.filename = "powers.nim";
        randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459620672.tile.Field1), mulInt(100, piece_1459620672.tile.Field0)), state_1459620674.Field0.randSeed)));
        F.line = 1864;
        var ticket_1459620675 = rand_1392509064(100);
        if ((ticket_1459620675 == 42)) {
        F.line = 1866;
        addMoney_1493172266(piece_1459620672.color, 10, state_1459620674);
        Label1: {
          F.line = 169;
          F.filename = "piece.nim";
          var xHEX60gensym148_1459620680 = null;
          F.line = 249;
          F.filename = "iterators.nim";
          var i_1459622267 = 0;
          F.line = 250;
          var L_1459622268 = (piece_1459620672.onPromote).length;
          Label2: {
            F.line = 251;
              Label3: while (true) {
              if (!(i_1459622267 < L_1459622268)) break Label3;
                F.line = 1867;
                F.filename = "powers.nim";
                xHEX60gensym148_1459620680 = piece_1459620672.onPromote[chckIndx(i_1459622267, 0, (piece_1459620672.onPromote).length - 1)];
                F.line = 170;
                F.filename = "piece.nim";
                xHEX60gensym148_1459620680(piece_1459620672, board_1459620673, state_1459620674);
                if (piece_1459620672.promoted) {
                F.line = 171;
                break Label1;
                }
                
                F.line = 13;
                F.filename = "iterators.nim";
                i_1459622267 += 1;
                if (!(((piece_1459620672.onPromote).length == L_1459622268))) {
                F.line = 254;
                failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        }
        
        }
        
        F.line = 1868;
        F.filename = "powers.nim";
        lastTimesMoved_1459620670 = piece_1459620672.timesMoved;
      framePtr = F.prev;

      
    }

  var result_1459620669 = null;

  var F = {procname: "powers.createSuperLottery", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1855;
    F.filename = "powers.nim";
    var lastTimesMoved_1459620670 = 0;
    F.line = 1861;
    result_1459620669 = HEX3Aanonymous_1459620671;
  framePtr = F.prev;

  return result_1459620669;

}

function HEX3Aanonymous_1459620683(side_1459620684, __1459620685, b_1459620686, __1459620687) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1880;
      F.filename = "powers.nim";
      var i_1459620688 = 0;
      F.line = 1880;
      var j_1459620689 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622259 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622260 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622260 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622259 = i_1459622260;
              Label5: {
                F.line = 114;
                var j_1459622263 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622264 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622264 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622263 = i_1459622264;
                      F.line = 1880;
                      F.filename = "powers.nim";
                      i_1459620688 = i_1459622259;
                      F.line = 1880;
                      j_1459620689 = j_1459622263;
                      if (((b_1459620686[chckIndx(i_1459620688, 0, (b_1459620686).length - 1)][chckIndx(j_1459620689, 0, (b_1459620686[chckIndx(i_1459620688, 0, (b_1459620686).length - 1)]).length - 1)].item == 3) && isColor_1224737917(b_1459620686[chckIndx(i_1459620688, 0, (b_1459620686).length - 1)][chckIndx(j_1459620689, 0, (b_1459620686[chckIndx(i_1459620688, 0, (b_1459620686).length - 1)]).length - 1)], side_1459620684))) {
                      F.line = 1882;
                      b_1459620686[chckIndx(i_1459620688, 0, (b_1459620686).length - 1)][chckIndx(j_1459620689, 0, (b_1459620686[chckIndx(i_1459620688, 0, (b_1459620686).length - 1)]).length - 1)].onEndTurn.push(createSuperLottery_1459620668());;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622264 = addInt(i_1459622264, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622260 = addInt(i_1459622260, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619760(side_1459619761, __1459619762, b_1459619763, __1459619764) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 1293;
      F.filename = "powers.nim";
      var i_1459619765 = 0;
      F.line = 1293;
      var j_1459619766 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622272 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622273 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622273 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622272 = i_1459622273;
              Label5: {
                F.line = 114;
                var j_1459622276 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622277 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622277 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622276 = i_1459622277;
                      F.line = 1293;
                      F.filename = "powers.nim";
                      i_1459619765 = i_1459622272;
                      F.line = 1293;
                      j_1459619766 = j_1459622276;
                      if (isColor_1224737917(b_1459619763[chckIndx(i_1459619765, 0, (b_1459619763).length - 1)][chckIndx(j_1459619766, 0, (b_1459619763[chckIndx(i_1459619765, 0, (b_1459619763).length - 1)]).length - 1)], side_1459619761)) {
                      F.line = 1295;
                      b_1459619763[chckIndx(i_1459619765, 0, (b_1459619763).length - 1)][chckIndx(j_1459619766, 0, (b_1459619763[chckIndx(i_1459619765, 0, (b_1459619763).length - 1)]).length - 1)].onEndTurn.push(HEX3Aanonymous_1459619606);;
                      F.line = 1296;
                      b_1459619763[chckIndx(i_1459619765, 0, (b_1459619763).length - 1)][chckIndx(j_1459619766, 0, (b_1459619763[chckIndx(i_1459619765, 0, (b_1459619763).length - 1)]).length - 1)].rotate = true;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622277 = addInt(i_1459622277, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622273 = addInt(i_1459622273, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395169(board_1476395170, p_1476395171) {
  var result_1476395172 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 102;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968(1, 2), false, true);
    F.line = 103;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968((-1), 2), false, true);
    F.line = 104;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968(2, 1), false, true);
    F.line = 105;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968(2, (-1)), false, true);
    F.line = 106;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968(1, (-2)), false, true);
    F.line = 107;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968((-1), (-2)), false, true);
    F.line = 108;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968((-2), 1), false, true);
    F.line = 109;
    var _ = addIfTake_1291845739(result_1476395172, 0, board_1476395170, p_1476395171, p_1476395171.tile, shooterFactory_1308622968((-2), (-1)), false, true);
  framePtr = F.prev;

  return result_1476395172[0];

}

function HEX3Aanonymous_1459618477(side_1459618478, viewSide_1459618479, b_1459618480, __1459618481) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 452;
      F.filename = "powers.nim";
      var i_1459618482 = 0;
      F.line = 452;
      var j_1459618483 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622281 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622282 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622282 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622281 = i_1459622282;
              Label5: {
                F.line = 114;
                var j_1459622285 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622286 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622286 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622285 = i_1459622286;
                      F.line = 452;
                      F.filename = "powers.nim";
                      i_1459618482 = i_1459622281;
                      F.line = 452;
                      j_1459618483 = j_1459622285;
                      if (((b_1459618480[chckIndx(i_1459618482, 0, (b_1459618480).length - 1)][chckIndx(j_1459618483, 0, (b_1459618480[chckIndx(i_1459618482, 0, (b_1459618480).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618480[chckIndx(i_1459618482, 0, (b_1459618480).length - 1)][chckIndx(j_1459618483, 0, (b_1459618480[chckIndx(i_1459618482, 0, (b_1459618480).length - 1)]).length - 1)], side_1459618478))) {
                      F.line = 454;
                      b_1459618480[chckIndx(i_1459618482, 0, (b_1459618480).length - 1)][chckIndx(j_1459618483, 0, (b_1459618480[chckIndx(i_1459618482, 0, (b_1459618480).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395169);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622286 = addInt(i_1459622286, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622282 = addInt(i_1459622282, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1476395174(board_1476395175, p_1476395176) {
  var result_1476395177 = [[]];

  var F = {procname: "extramoves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extramoves.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "extramoves.nim";
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968(1, 3), false, true);
    F.line = 113;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968((-1), 3), false, true);
    F.line = 114;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968(3, 1), false, true);
    F.line = 115;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968(3, (-1)), false, true);
    F.line = 116;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968(1, (-3)), false, true);
    F.line = 117;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968((-1), (-3)), false, true);
    F.line = 118;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968((-3), 1), false, true);
    F.line = 119;
    var _ = addIfTake_1291845739(result_1476395177, 0, board_1476395175, p_1476395176, p_1476395176.tile, shooterFactory_1308622968((-3), (-1)), false, true);
  framePtr = F.prev;

  return result_1476395177[0];

}

function HEX3Aanonymous_1459618507(side_1459618508, viewSide_1459618509, b_1459618510, __1459618511) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 473;
      F.filename = "powers.nim";
      var i_1459618512 = 0;
      F.line = 473;
      var j_1459618513 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_1459622290 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_1459622291 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_1459622291 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_1459622290 = i_1459622291;
              Label5: {
                F.line = 114;
                var j_1459622294 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_1459622295 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_1459622295 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_1459622294 = i_1459622295;
                      F.line = 473;
                      F.filename = "powers.nim";
                      i_1459618512 = i_1459622290;
                      F.line = 473;
                      j_1459618513 = j_1459622294;
                      if (((b_1459618510[chckIndx(i_1459618512, 0, (b_1459618510).length - 1)][chckIndx(j_1459618513, 0, (b_1459618510[chckIndx(i_1459618512, 0, (b_1459618510).length - 1)]).length - 1)].item == 1) && isColor_1224737917(b_1459618510[chckIndx(i_1459618512, 0, (b_1459618510).length - 1)][chckIndx(j_1459618513, 0, (b_1459618510[chckIndx(i_1459618512, 0, (b_1459618510).length - 1)]).length - 1)], side_1459618508))) {
                      F.line = 475;
                      b_1459618510[chckIndx(i_1459618512, 0, (b_1459618510).length - 1)][chckIndx(j_1459618513, 0, (b_1459618510[chckIndx(i_1459618512, 0, (b_1459618510).length - 1)]).length - 1)].takes.push(HEX3Aanonymous_1476395174);;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_1459622295 = addInt(i_1459622295, 1);
                    }
                };
              };
              F.line = 131;
              i_1459622291 = addInt(i_1459622291, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}
var F = {procname: "module powers", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
framePtr = F;
F.line = 2157;
F.filename = "powers.nim";
registerPower_1442841202(empress_1459617872);
F.line = 2158;
registerPower_1442841202(altEmpress_1459617900);
F.line = 2159;
registerPower_1442841202(mysteriousSwordsmanLeft_1459618083);
F.line = 2160;
registerPower_1442841202(mysteriousSwordsmanRight_1459618135);
F.line = 2161;
registerPower_1442841202(developed_1459618145);
F.line = 2162;
registerPower_1442841202(stepOnMe_1459618165);
F.line = 2163;
registerPower_1442841202(illegalFormationBL_1459618198);
F.line = 2164;
registerPower_1442841202(illegalFormationBR_1459618209);
F.line = 2165;
registerPower_1442841202(illegalFormationRL_1459618176);
F.line = 2166;
registerPower_1442841202(illegalFormationRR_1459618187);
F.line = 2167;
registerPower_1442841202(putInTheWork_1459618237);
F.line = 2168;
registerPower_1442841202(wanderingRoninLeft_1459618285);
F.line = 2169;
registerPower_1442841202(wanderingRoninRight_1459618333);
F.line = 2170;
registerPower_1442841202(archBishops_1459618395);
F.line = 2171;
registerPower_1442841202(werewolves_1459618375);
F.line = 2172;
registerPower_1442841202(giraffe_1459618424);
F.line = 2173;
registerPower_1442841202(sacrifice_1459618570);
F.line = 2174;
registerPower_1442841202(calvary_1459618448);
F.line = 2175;
registerPower_1442841202(backStep_1459618710);
F.line = 2176;
registerPower_1442841202(headStart_1459618738);
F.line = 2177;
registerPower_1442841202(queenTrade_1459618750);
F.line = 2178;
registerPower_1442841202(lesbianPride_1459618814);
F.line = 2179;
registerPower_1442841202(knightChargePower_1459618962);
F.line = 2180;
registerPower_1442841202(nightRider_1459619090);
F.line = 2181;
registerPower_1442841202(desegregation_1459619110);
F.line = 2182;
registerPower_1442841202(concubine_1459619209);
F.line = 2183;
registerPower_1442841202(reinforcements_1459619250);
F.line = 2184;
registerPower_1442841202(shotgunKing_1459619297);
F.line = 2185;
registerPower_1442841202(coward_1459619355);
F.line = 2187;
registerPower_1442841202(lanceLeft_1459619549);
F.line = 2188;
registerPower_1442841202(lanceRight_1459619497);
F.line = 2189;
registerPower_1442841202(drunkKnights_1459619685);
F.line = 2190;
registerPower_1442841202(alcoholism_1459619697);
F.line = 2192;
registerPower_1442841202(slumdogMillionaire_1459620081);
F.line = 2193;
registerPower_1442841202(stupidPower_1459620109);
F.line = 2194;
registerPower_1442841202(conversion_1459620144);
F.line = 2195;
registerPower_1442841202(americanDream_1459620216);
F.line = 2196;
registerPower_1442841202(sleeperAgent_1459620269);
F.line = 2197;
registerPower_1442841202(capitalismPower_1459620411);
F.line = 2199;
registerPower_1442841202(skyGlass_1459620885);
F.line = 2200;
registerPower_1442841202(zeroGlass_1459620897);
F.line = 2201;
registerSynergy_1442840658({Field0: {name: [71,108,97,115,115,58,32,66,97,110,107,114,117,112,116,99,121], technicalName: [], synergy: true, tier: 2, rarity: 6, description: makeNimstrLit("On your turn, if you have only 0 dollars, instead of moving you can choose 3 pieces to each cast Bankruptcy on  \x0A                    any non-king tiles. Any piece on these tiles will die if the cast completes. Bankruptcy cannot be cast turn one. Glass powers take one turn to start casting, one turn waiting to draw glass power, and one turn when the cast completes."), icon: [122,101,114,111,103,108,97,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459621250, index: (-1), priority: 0}, Field1: 8, Field2: [[71,108,97,115,115,58,32,90,101,114,111], [67,97,112,105,116,97,108,105,115,109]], Field3: [[71,108,97,115,115,58,32,90,101,114,111]], Field4: (-1)}, false, false);
F.line = 2202;
registerPower_1442841202(steelGlass_1459620990);
F.line = 2203;
registerPower_1442841202(reverieGlass_1459621493);
F.line = 2205;
registerSynergy_1442840658({Field0: {name: [65,110,105,109,101,32,66,97,116,116,108,101], technicalName: [], synergy: true, tier: 2, rarity: 0, description: makeNimstrLit("Your board is imbued with the power of anime. You feel a odd sense of regret. Or is it guilt?"), icon: [103,111,108,100,103,101,110,101,114,97,108,46,115,118,103], rotatable: true, noColor: true, onStart: HEX3Aanonymous_1459618449, index: (-1), priority: 5}, Field1: 32, Field2: [[77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110]], Field3: [[77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], [65,110,105,109,101,32,66,97,116,116,108,101]], Field4: (-1)}, false, false);
F.line = 2206;
registerSynergy_1442840658({Field0: {name: [75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], technicalName: [], synergy: true, tier: 2, rarity: 4, description: [67,72,65,82,71,69,33,32,89,111,117,114,32,107,110,105,103,104,116,115,32,115,116,97,114,116,32,51,32,116,105,108,101,115,32,97,104,101,97,100,46], icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618941, index: (-1), priority: 20}, Field1: 16, Field2: [[67,97,108,118,97,114,121]], Field3: [], Field4: (-1)}, false, false);
F.line = 2207;
registerSynergy_1442840658({Field0: {name: [67,114,105,109,105,110,97,108,32,70,111,114,109,97,116,105,111,110], technicalName: [], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("I guess the rules didn\'t get to you. Your pawns above both knights and both rooks swap places with those pieces."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619001, index: (-1), priority: 20}, Field1: 12, Field2: [[73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]], Field3: [[73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]], Field4: (-1)}, false, false);
F.line = 2208;
registerSynergy_1442840658({Field0: {name: [76,105,110,101,98,97,99,107,101,114,115], technicalName: [], synergy: true, tier: 2, rarity: 0, description: makeNimstrLit("Your pawns learn to fight like men. They can take one spaces ahead too."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619029, index: (-1), priority: 15}, Field1: 0, Field2: [[80,117,116,32,105,110,32,116,104,101,32,119,111,114,107,33], [72,101,97,100,115,116,97,114,116]], Field3: [], Field4: (-1)}, false, false);
F.line = 2209;
registerSynergy_1442840658({Field0: {name: [72,111,108,121,32,66,105,115,104,111,112,115], technicalName: [], synergy: true, tier: 2, rarity: 8, description: [71,111,100,32,104,97,115,32,98,108,101,115,115,101,100,32,121,111,117,114,32,98,105,115,104,111,112,115,46,32], icon: [99,114,111,115,115,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459619111, index: (-1), priority: 15}, Field1: 8, Field2: [[65,114,99,104,98,105,115,104,111,112,115], [72,111,108,121]], Field3: [[65,114,99,104,98,105,115,104,111,112,115]], Field4: (-1)}, false, false);
F.line = 2210;
registerSynergy_1442840658({Field0: {name: [66,111,117,110,116,121,32,72,117,110,116,101,114], technicalName: [], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("It\'s hard to make a living these days. If your king takes 3 pieces, you automatically win."), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619309, index: (-1), priority: 15}, Field1: 16, Field2: [[83,104,111,116,103,117,110,32,75,105,110,103]], Field3: [], Field4: (-1)}, false, false);
F.line = 2211;
registerSynergy_1442840658({Field0: {name: [71,111,100,39,115,32,68,105,115,99,105,112,108,101], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("Your bishop has now seen god. When it takes, it has a 30% chance to convert it to your color. \x0A                    When this happens, your bishop swaps places with it instead of taking it."), icon: [98,105,115,104,111,112,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620168, index: (-1), priority: 15}, Field1: 16, Field2: [[67,111,110,118,101,114,115,105,111,110], [72,111,108,121]], Field3: [[67,111,110,118,101,114,115,105,111,110]], Field4: (-1)}, false, false);
F.line = 2212;
registerSynergy_1442840658({Field0: {name: [68,105,118,105,110,101,32,87,105,110,100], technicalName: [], synergy: true, tier: 1, rarity: 8, description: makeNimstrLit("The divine wind briskly brushes your back. Your lances will take forward while sky is casting."), icon: [108,97,110,99,101,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459621176, index: (-1), priority: 15}, Field1: 12, Field2: [[71,108,97,115,115,58,32,83,107,121], [75,97,109,105,107,97,122,101]], Field3: [], Field4: (-1)}, false, false);
F.line = 2213;
registerSynergy_1442840658({Field0: {name: [69,120,111,100,105,97], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [89,111,117,32,104,97,100,32,121,111,117,114,32,102,117,110,44,32,98,117,116,32,116,104,101,32,103,97,109,101,32,105,115,32,111,118,101,114,46,32,84,111,111,32,98,97,100,32,114,105,103,104,116,63], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618597, index: (-1), priority: 25}, Field1: 0, Field2: [[69,109,112,114,101,115,115], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field3: [[83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field4: (-1)}, true, false);
F.line = 2214;
registerSynergy_1442840658({Field0: {name: [69,120,111,100,105,97], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [89,111,117,32,104,97,100,32,121,111,117,114,32,102,117,110,44,32,98,117,116,32,116,104,101,32,103,97,109,101,32,105,115,32,111,118,101,114,46,32,84,111,111,32,98,97,100,32,114,105,103,104,116,63], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618653, index: (-1), priority: 25}, Field1: 0, Field2: [[69,109,112,114,101,115,115], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field3: [[83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field4: (-1)}, true, false);
F.line = 2215;
registerSynergy_1442840658({Field0: {name: [83,117,112,101,114,32,80,97,119,110], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [89,111,117,32,104,97,118,101,32,105,110,115,97,110,101,32,112,97,119,110,115,46,32,80,108,101,97,115,101,32,100,111,110,39,116,32,115,97,99,114,105,102,105,99,101,32,116,104,101,109,46], icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618751, index: (-1), priority: 15}, Field1: 0, Field2: [[66,97,99,107,115,116,101,112], [72,101,97,100,115,116,97,114,116]], Field3: [[66,97,99,107,115,116,101,112], [72,101,97,100,115,116,97,114,116]], Field4: (-1)}, true, false);
F.line = 2216;
registerSynergy_1442840658({Field0: {name: [81,117,101,101,110,39,115,32,87,114,97,116,104], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [87,104,121,32,109,117,115,116,32,115,104,101,32,100,105,101,63], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618815, index: (-1), priority: 1}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [81,117,101,101,110,32,84,114,97,100,101]], Field3: [[76,101,115,98,105,97,110,32,80,114,105,100,101]], Field4: (-1)}, true, false);
F.line = 2217;
registerSynergy_1442840658({Field0: {name: [81,117,101,101,110,39,115,32,87,114,97,116,104], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [87,104,121,32,109,117,115,116,32,115,104,101,32,100,105,101,63], icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618815, index: (-1), priority: 1}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field3: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field4: (-1)}, true, false);
F.line = 2218;
registerSynergy_1442840658({Field0: {name: [66,97,116,116,108,101,32,70,111,114,109,97,116,105,111,110,33], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [82,101,97,108,32,69,115,116,97,116,101,32,105,115,32,103,111,105,110,103,32,99,114,97,122,121,32,119,105,116,104,32,104,111,119,32,100,101,118,101,108,111,112,101,100,32,116,104,101,32,98,111,97,114,100,32,105,115,46], icon: [107,110,105,103,104,116,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618977, index: (-1), priority: 20}, Field1: 0, Field2: [[75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], [68,101,118,101,108,111,112,101,100]], Field3: [[68,101,118,101,108,111,112,101,100]], Field4: (-1)}, true, false);
F.line = 2219;
registerSynergy_1442840658({Field0: {name: [70,97,108,108,101,110,32,81,117,101,101,110,39,115,32,87,114,97,116,104], technicalName: [], synergy: true, tier: 3, rarity: 0, description: makeNimstrLit("Why must she die? They will suffer. They will suffer. They will suffer. \x0A                    They will suffer. They will suffer. They will suffer. They will suffer. \x0A                    They will suffer. They will suffer. They will suffer. They will suffer.\x0A                    They will suffer. They will suffer. They will suffer. They will suffer."), icon: [113,117,101,101,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618847, index: (-1), priority: 0}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [81,117,101,101,110,32,84,114,97,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field3: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110]], Field4: (-1)}, true, false);
F.line = 2220;
registerSynergy_1442840658({Field0: {name: [66,97,110,100,97,105,100], technicalName: [], synergy: true, tier: 3, rarity: 0, description: makeNimstrLit("It turns out that calvary plus giraffe is an automatic checkmate for white, \x0A                    so I\'m making the giraffes start one tile back. Sorry."), icon: [103,105,114,97,102,102,101,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619974, index: (-1), priority: 26}, Field1: 0, Field2: [[75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], [71,105,114,97,102,102,101]], Field3: [], Field4: (-1)}, true, false);
F.line = 2221;
registerSynergy_1442840658({Field0: {name: [66,111,117,110,116,121,32,72,117,110,116,101,114,32,78,101,114,102], technicalName: [], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("Yeah, 3 pieces is way too easy for our lesbian queens, so now it\'s 7 pieces. You got this!"), icon: [107,105,110,103,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620021, index: (-1), priority: 15}, Field1: 0, Field2: [[76,101,115,98,105,97,110,32,80,114,105,100,101], [66,111,117,110,116,121,32,72,117,110,116,101,114]], Field3: [[66,111,117,110,116,121,32,72,117,110,116,101,114]], Field4: (-1)}, true, false);
F.line = 2222;
registerSynergy_1442840658({Field0: {name: [110,105,103,104,101,116,114,105,101,100,100,101,114], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [110,105,103,104,101,116,114,105,101,100,100,101,114,46,63], icon: [110,105,103,104,116,114,105,100,101,114,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619698, index: (-1), priority: 17}, Field1: 0, Field2: [[68,114,117,110,107,32,75,110,105,103,104,116,115], [78,105,103,104,116,114,105,100,101,114]], Field3: [], Field4: (-1)}, true, false);
F.line = 2223;
registerSynergy_1442840658({Field0: {name: [110,105,103,104,101,116,114,105,101,100,100,101,114], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [110,105,103,104,101,116,114,105,101,100,100,101,114,46,63], icon: [110,105,103,104,116,114,105,100,101,114,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619698, index: (-1), priority: 17}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [78,105,103,104,116,114,105,100,101,114]], Field3: [], Field4: (-1)}, true, false);
F.line = 2225;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,77,111,118,101,32,85,112], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("Money is pretty neat right? You can spend 8 dollars to move a piece one tile forward. It cannot take with this action."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620509, index: (-1), priority: 15}, Field1: 24, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: [], Field4: (-1)}, false, false);
F.line = 2226;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,77,111,118,101,32,66,97,99,107], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("Money is pretty neat right? You can spend 7 dollars to move a piece one tile backwards. It cannot take with this action."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620553, index: (-1), priority: 15}, Field1: 24, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: [], Field4: (-1)}, false, false);
F.line = 2227;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,73,110,99,111,109,101], synergy: true, tier: 0, rarity: 0, description: [72,101,114,101,44,32,104,97,118,101,32,49,48,32,100,111,108,108,97,114,115], icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620580, index: (-1), priority: 35}, Field1: 24, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: [], Field4: (-1)}, false, false);
F.line = 2228;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,85,112,103,114,97,100,101,32,75,110,105,103,104,116], synergy: true, tier: 1, rarity: 0, description: makeNimstrLit("Money can be used in exchange for goods and services. You can spend 8 dollars to give a piece the movement of a knight.\x0A                    This upgrade is 30 dollars more expensive for the king. The upgraded piece still cannot take like a knight."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620587, index: (-1), priority: 15}, Field1: 24, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: [], Field4: (-1)}, false, false);
F.line = 2229;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,73,73], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,85,112,103,114,97,100,101,32,71,105,114,97,102,102,101], synergy: true, tier: 1, rarity: 0, description: makeNimstrLit("Money can be used in exchange for goods and services. You can spend 8 dollars to give a piece the movement of a giraffe. \x0A                    This upgrade is 30 dollars more expensive for the king. The upgraded piece still cannot take like a giraffe."), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620604, index: (-1), priority: 15}, Field1: 24, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: [], Field4: (-1)}, false, false);
F.line = 2230;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,73,86], technicalName: [67,97,112,105,116,97,108,105,115,109,58,32,83,101,108,108], synergy: true, tier: 1, rarity: 0, description: makeNimstrLit("Who needs these pieces? AFUERA! You can sell a piece for 4 dollars. Each subsequent piece sold gives one less. "), icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620653, index: (-1), priority: 15}, Field1: 24, Field2: [[67,97,112,105,116,97,108,105,115,109]], Field3: [], Field4: (-1)}, false, false);
F.line = 2231;
registerSynergy_1442840658({Field0: {name: [67,97,112,105,116,97,108,105,115,109,32,77,77], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,79,32,84,72,69,32,77,79,79,78,33,33,33,33], icon: [117,115,102,108,97,103,46,115,118,103], rotatable: false, noColor: true, onStart: HEX3Aanonymous_1459620715, index: (-1), priority: 15}, Field1: 16, Field2: [[67,97,112,105,116,97,108,105,115,109], [67,97,112,105,116,97,108,105,115,109,32,73,73], [67,97,112,105,116,97,108,105,115,109,32,73,73,73], [67,97,112,105,116,97,108,105,115,109,32,73,86]], Field3: [], Field4: (-1)}, true, false);
F.line = 2232;
registerSynergy_1442840658({Field0: {name: [83,108,117,109,100,111,103,32,66,105,108,108,105,111,110,97,105,114,101], technicalName: [], synergy: true, tier: 0, rarity: 0, description: makeNimstrLit("Have you seen the movie Slumdog Millionaire? It\'s kind of like that but more. \x0A                    Your pawns have a 2% chance of promoting whenever they move. When this happens, you get 10 dollars."), icon: [112,97,119,110,46,115,118,103], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459620683, index: (-1), priority: 15}, Field1: 8, Field2: [[67,97,112,105,116,97,108,105,115,109], [83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101]], Field3: [[83,108,117,109,100,111,103,32,77,105,108,108,105,111,110,97,105,114,101]], Field4: (-1)}, true, false);
F.line = 2234;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [75,97,109,105,107,97,122,101], [72,101,97,100,115,116,97,114,116], [77,121,115,116,101,114,105,111,117,115,32,83,119,111,114,100,115,109,97,110]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2235;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [66,97,99,107,115,116,101,112], [75,110,105,103,104,116,39,115,32,67,104,97,114,103,101], [69,109,112,114,101,115,115]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2236;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [87,97,110,100,101,114,105,110,103,32,82,111,110,105,110], [83,117,112,101,114,32,80,97,119,110], [69,109,112,114,101,115,115]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2237;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [83,116,101,112,32,111,110,32,109,101], [67,111,119,97,114,100], [83,104,111,116,103,117,110,32,75,105,110,103]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2238;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [82,101,105,110,102,111,114,99,101,109,101,110,116,115], [69,109,112,114,101,115,115], [71,105,114,97,102,102,101], [87,101,114,101,119,111,108,118,101,115]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2239;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [65,110,105,109,101,32,66,97,116,116,108,101], [68,101,118,101,108,111,112,101,100], [83,97,99,114,105,102,105,99,105,97,108,32,77,97,105,100,101,110], [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2240;
registerSynergy_1442840658({Field0: {name: [118,105,114,117,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46,32,84,104,101,121,39,114,101,32,100,121,105,110,103,46], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459619760, index: (-1), priority: 15}, Field1: 0, Field2: [[65,108,99,111,104,111,108,105,115,109], [76,105,110,101,98,97,99,107,101,114,115], [78,105,103,104,116,114,105,100,101,114], [68,101,115,101,103,114,101,103,97,116,105,111,110,32,97,110,100,32,73,110,116,101,103,114,97,116,105,111,110], [72,111,108,121]], Field3: [[65,108,99,111,104,111,108,105,115,109]], Field4: (-1)}, true, false);
F.line = 2242;
registerSynergy_1442840658({Field0: {name: [77,97,115,111,99,104,105,115,116,32,69,109,112,114,101,115,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [78,79,78,69], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618477, index: (-1), priority: 15}, Field1: 0, Field2: [[69,109,112,114,101,115,115], [83,116,101,112,32,111,110,32,109,101]], Field3: [], Field4: (-1)}, true, true);
F.line = 2243;
registerSynergy_1442840658({Field0: {name: [77,97,115,111,99,104,105,115,116,32,69,109,112,114,101,115,115], technicalName: [], synergy: true, tier: 3, rarity: 0, description: [78,79,78,69], icon: [], rotatable: false, noColor: false, onStart: HEX3Aanonymous_1459618507, index: (-1), priority: 15}, Field1: 0, Field2: [[69,109,112,114,101,115,115], [83,116,101,112,32,111,110,32,109,101]], Field3: [], Field4: (-1)}, true, true);
framePtr = F.prev;
var F = {procname: "module powers", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module store", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
framePtr = F;
F.line = 9;
F.filename = "store.nim";
    function increment(item) {
        window.localStorage.setItem(item, parseInt(localStorage.getItem(item)) + 1);
    }

framePtr = F.prev;
var F = {procname: "module store", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module glass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module glass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function none_520093858() {
  var result_520093865 = ({val: 0, has: false});

  var F = {procname: "none.none", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_520093865;

}

function initStorage_1509949449() {
  var F = {procname: "store.initStorage", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 20;
      F.filename = "store.nim";
      var power_1509949453 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520097958 = 0;
      F.line = 250;
      var L_520097959 = (powers_1442840650[0]).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520097958 < L_520097959)) break Label3;
            F.line = 20;
            F.filename = "store.nim";
            power_1509949453 = powers_1442840650[0][chckIndx(i_520097958, 0, (powers_1442840650[0]).length - 1)];
            if (!(window.localStorage.getItem(toJSStr(power_1509949453.technicalName)) !== null)) {
            F.line = 22;
            window.localStorage.setItem(toJSStr(power_1509949453.technicalName), 0);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520097958 += 1;
            if (!(((powers_1442840650[0]).length == L_520097959))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX5BHEX5D_687867297(s_687867301, x_687867302) {
  var result_687867303 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_687867305 = x_687867302.a;
    F.line = 140;
    var L_687867311 = addInt(subInt(subInt((s_687867301).length, x_687867302.b), a_687867305), 1);
    F.line = 141;
    result_687867303 = new Array(chckRange(L_687867311, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_687867311, 0, 2147483647) ; ++i) { result_687867303[i] = null; }    Label1: {
      F.line = 142;
      var i_687867320 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520097962 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520097962 < L_687867311)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_687867320 = i_520097962;
            F.line = 142;
            result_687867303[chckIndx(i_687867320, 0, (result_687867303).length - 1)] = s_687867301[chckIndx(addInt(i_687867320, a_687867305), 0, (s_687867301).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520097962 = addInt(i_520097962, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_687867303;

}

function valueHEX3D_721420741(n_721420742, v_721420743) {
  var F = {procname: "vdom.value=", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 188;
    F.filename = "vdom.nim";
    n_721420742.text = v_721420743;
  framePtr = F.prev;

  
}

function value_721420738(n_721420739) {
  var result_721420740 = null;

  var F = {procname: "vdom.value", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 187;
    F.filename = "vdom.nim";
    result_721420740 = n_721420739.text;
  framePtr = F.prev;

  return result_721420740;

}

function addEventShell_687865949(d_687865950, name_687865951, h_687865952) {
  var F = {procname: "karax.addEventShell", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "karax.nim";
    d_687865950.addEventListener(name_687865951, h_687865952, false);
    if ((d_687865950.karaxEvents == null)) {
    F.line = 96;
    d_687865950.karaxEvents = new Array(0);
    }
    
    F.line = 97;
    d_687865950.karaxEvents.push({Field0: name_687865951, Field1: h_687865952});
  framePtr = F.prev;

  
}

function wrapEvent_687866022(d_687866023, n_687866024, k_687866025, action_687866026) {
      
function laterWrapper_687866106() {
          
function HEX3Aanonymous_687866111(ev_687866112) {
              
function wrapper_687866113() {
                var F = {procname: ":anonymous.wrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
                framePtr = F;
                  F.line = 77;
                  F.filename = "karax.nim";
                  var vHEX60gensym15_687866115 = ev_687866112.target.value;
                  F.line = 78;
                  valueHEX3D_721420741(n_687866109, vHEX60gensym15_687866115);
                  if (!(!((action_687866108 == null)))) {
                  F.line = 79;
                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(79, 3) `action != nil` "));
                  }
                  
                  F.line = 80;
                  action_687866108(ev_687866112, n_687866109);
                  if (!((value_721420738(n_687866109) == vHEX60gensym15_687866115))) {
                  F.line = 82;
                  ev_687866112.target.value = value_721420738(n_687866109);
                  }
                  
                framePtr = F.prev;

                
              }

            var F = {procname: "laterWrapper.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
            framePtr = F;
              if (!((timer_687866110 == null))) {
              F.line = 126;
              F.filename = "karax.nim";
              clearTimeout(timer_687866110);
              }
              
              F.line = 127;
              timer_687866110 = setTimeout(wrapper_687866113, 400);
            framePtr = F.prev;

            
          }

        var result_687866107 = null;

        var F = {procname: "wrapEvent.laterWrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
        framePtr = F;
          F.line = 121;
          F.filename = "karax.nim";
          var action_687866108 = action_687866026;
          F.line = 122;
          var n_687866109 = n_687866024;
          F.line = 123;
          var timer_687866110 = null;
          F.line = 124;
          result_687866107 = HEX3Aanonymous_687866111;
        framePtr = F.prev;

        return result_687866107;

      }
      
function enterWrapper_687866073() {
          
function HEX3Aanonymous_687866077(ev_687866078) {
            var F = {procname: "enterWrapper.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
            framePtr = F;
              if ((ev_687866078.keyCode == 13)) {
              F.line = 77;
              F.filename = "karax.nim";
              var vHEX60gensym8_687866080 = ev_687866078.target.value;
              F.line = 78;
              valueHEX3D_721420741(n_687866076, vHEX60gensym8_687866080);
              if (!(!((action_687866075 == null)))) {
              F.line = 79;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(79, 3) `action != nil` "));
              }
              
              F.line = 80;
              action_687866075(ev_687866078, n_687866076);
              if (!((value_721420738(n_687866076) == vHEX60gensym8_687866080))) {
              F.line = 82;
              ev_687866078.target.value = value_721420738(n_687866076);
              }
              
              }
              
            framePtr = F.prev;

            
          }

        var result_687866074 = null;

        var F = {procname: "wrapEvent.enterWrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
        framePtr = F;
          F.line = 115;
          F.filename = "karax.nim";
          var action_687866075 = action_687866026;
          F.line = 116;
          var n_687866076 = n_687866024;
          F.line = 117;
          result_687866074 = HEX3Aanonymous_687866077;
        framePtr = F.prev;

        return result_687866074;

      }
      
function stdWrapper_687866028() {
          
function HEX3Aanonymous_687866032(ev_687866033) {
            var F = {procname: "stdWrapper.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
            framePtr = F;
              if ((((n_687866031.kind == 200) || (n_687866031.kind == 194)) || (n_687866031.kind == 196))) {
              F.line = 77;
              F.filename = "karax.nim";
              var vHEX60gensym1_687866047 = ev_687866033.target.value;
              F.line = 78;
              valueHEX3D_721420741(n_687866031, vHEX60gensym1_687866047);
              if (!(!((action_687866030 == null)))) {
              F.line = 79;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(79, 3) `action != nil` "));
              }
              
              F.line = 80;
              action_687866030(ev_687866033, n_687866031);
              if (!((value_721420738(n_687866031) == vHEX60gensym1_687866047))) {
              F.line = 82;
              ev_687866033.target.value = value_721420738(n_687866031);
              }
              
              }
              else {
                F.line = 112;
              action_687866030(ev_687866033, n_687866031);
              }
              
            framePtr = F.prev;

            
          }

        var result_687866029 = null;

        var F = {procname: "wrapEvent.stdWrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
        framePtr = F;
          F.line = 107;
          F.filename = "karax.nim";
          var action_687866030 = action_687866026;
          F.line = 108;
          var n_687866031 = n_687866024;
          F.line = 109;
          result_687866029 = HEX3Aanonymous_687866032;
        framePtr = F.prev;

        return result_687866029;

      }

  var result_687866027 = null;

  var F = {procname: "karax.wrapEvent", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 129;
    F.filename = "karax.nim";
    switch (k_687866025) {
    case 30:
      F.line = 131;
      result_687866027 = laterWrapper_687866106();
      F.line = 132;
      addEventShell_687865949(d_687866023, "keyup", result_687866027);
      break;
    case 29:
      F.line = 134;
      result_687866027 = enterWrapper_687866073();
      F.line = 135;
      addEventShell_687865949(d_687866023, "keyup", result_687866027);
      break;
    default: 
      F.line = 137;
      result_687866027 = stdWrapper_687866028();
      F.line = 138;
      addEventShell_687865949(d_687866023, toEventName_721420689[chckIndx(k_687866025, 0, (toEventName_721420689).length - 1)], result_687866027);
      break;
    }
  framePtr = F.prev;

  return result_687866027;

}

function applyEvents_687866149(n_687866150) {
  var F = {procname: "karax.applyEvents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 150;
    F.filename = "karax.nim";
    var dest_687866151 = n_687866150.dom;
    Label1: {
      F.line = 151;
      var i_687866159 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520097985 = 0;
      F.line = 151;
      F.filename = "karax.nim";
      colontmp__520097985 = (n_687866150.events).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520097986 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520097986 < colontmp__520097985)) break Label3;
            F.line = 151;
            F.filename = "karax.nim";
            i_687866159 = i_520097986;
            F.line = 152;
            n_687866150.events[chckIndx(i_687866159, 0, (n_687866150.events).length - 1)]["Field2"] = wrapEvent_687866022(dest_687866151, n_687866150, n_687866150.events[chckIndx(i_687866159, 0, (n_687866150.events).length - 1)]["Field0"], n_687866150.events[chckIndx(i_687866159, 0, (n_687866150.events).length - 1)]["Field1"]);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520097986 = addInt(i_520097986, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function applyStyle_788529666(n_788529667, s_788529668) {
  var F = {procname: "vstyles.applyStyle", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
  framePtr = F;
    F.line = 338;
    F.filename = "vstyles.nim";
    n_788529667.style = {};
    Label1: {
      F.line = 339;
      var i_788529681 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520097989 = 0;
      F.line = 339;
      F.filename = "vstyles.nim";
      colontmp__520097989 = subInt(s_788529668.length, 1);
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520097990 = 0;
      Label2: {
        F.line = 69;
          Label3: while (true) {
          if (!(res_520097990 <= colontmp__520097989)) break Label3;
            F.line = 339;
            F.filename = "vstyles.nim";
            i_788529681 = res_520097990;
            F.line = 340;
            n_788529667.style[s_788529668[i_788529681]] = s_788529668[addInt(i_788529681, 1)];
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520097990 = addInt(res_520097990, 2);
          }
      };
    };
  framePtr = F.prev;

  
}

function toDom_687866178(n_687866179, useAttachedNode_687866180, kxi_687866181) {
      var Temporary1;

  var result_687866182 = null;

  var F = {procname: "karax.toDom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (useAttachedNode_687866180) {
    if (!((n_687866179.dom == null))) {
    if (!((n_687866179.id == null))) {
    F.line = 167;
    F.filename = "karax.nim";
    kxi_687866181.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 168;
    result_687866182 = n_687866179.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_687866179.kind == 0)) {
    F.line = 170;
    result_687866182 = document.createTextNode(n_687866179.text);
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    }
    else {
    if ((n_687866179.kind == 6)) {
    F.line = 173;
    result_687866182 = document.createElement("div");
    F.line = 174;
    result_687866182.innerHTML = n_687866179.text;
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 176;
    break BeforeRet;
    }
    else {
    if ((n_687866179.kind == 3)) {
    F.line = 178;
    var x_687866222 = vcomponents_754974733[0][n_687866179.text](n_687866179.kids);
    F.line = 179;
    result_687866182 = toDom_687866178(x_687866222, useAttachedNode_687866180, kxi_687866181);
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 182;
    break BeforeRet;
    }
    else {
    if ((n_687866179.kind == 4)) {
    F.line = 184;
    result_687866182 = n_687866179.dom;
    if (!(!((result_687866182 == null)))) {
    F.line = 185;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(185, 5) `result != nil` "));
    }
    
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 188;
    break BeforeRet;
    }
    else {
    if ((n_687866179.kind == 5)) {
    F.line = 190;
    var x_687866252 = n_687866179;
    if (!((x_687866252.onAttachImpl == null))) {
    F.line = 191;
    x_687866252.onAttachImpl(x_687866252);
    }
    
    if (!(!((x_687866252.renderImpl == null)))) {
    F.line = 192;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(192, 5) `x.renderImpl != nil` "));
    }
    
    if ((x_687866252.expanded == null)) {
    F.line = 194;
    x_687866252.expanded = x_687866252.renderImpl(x_687866252);
    }
    
    if (!(!((x_687866252.expanded == null)))) {
    F.line = 196;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(196, 5) `x.expanded != nil` "));
    }
    
    F.line = 197;
    result_687866182 = toDom_687866178(x_687866252.expanded, useAttachedNode_687866180, kxi_687866181);
    F.line = 146;
    n_687866179.dom = result_687866182;
    if (!((n_687866179.id == null))) {
    F.line = 147;
    kxi__.byId[n_687866179.id] = n_687866179;
    }
    
    F.line = 199;
    break BeforeRet;
    }
    else {
      F.line = 202;
      if ((ConstSet2[n_687866179.kind] != undefined)) {
      Temporary1 = document.createElementNS(toJSStr(svgNamespace_721420514[0]), toTag_721420612[chckIndx(n_687866179.kind, 0, (toTag_721420612).length - 1)]);
      }
      else {
      if ((ConstSet3[n_687866179.kind] != undefined)) {
      Temporary1 = document.createElementNS(toJSStr(mathNamespace_721420515[0]), toTag_721420612[chckIndx(n_687866179.kind, 0, (toTag_721420612).length - 1)]);
      }
      else {
      Temporary1 = document.createElement(toTag_721420612[chckIndx(n_687866179.kind, 0, (toTag_721420612).length - 1)]);
      }
      }
      result_687866182 = Temporary1;
      F.line = 146;
      n_687866179.dom = result_687866182;
      if (!((n_687866179.id == null))) {
      F.line = 147;
      kxi__.byId[n_687866179.id] = n_687866179;
      }
      
      Label2: {
        F.line = 209;
        var k_687866299 = null;
        Label3: {
          F.line = 334;
          F.filename = "vdom.nim";
          var i_520097970 = 0;
          F.line = 126;
          F.filename = "iterators_1.nim";
          var colontmp__520097971 = 0;
          F.line = 334;
          F.filename = "vdom.nim";
          colontmp__520097971 = (n_687866179.kids).length;
          F.line = 128;
          F.filename = "iterators_1.nim";
          var i_520097972 = 0;
          Label4: {
            F.line = 129;
              Label5: while (true) {
              if (!(i_520097972 < colontmp__520097971)) break Label5;
                F.line = 334;
                F.filename = "vdom.nim";
                i_520097970 = i_520097972;
                F.line = 209;
                F.filename = "karax.nim";
                k_687866299 = n_687866179.kids[chckIndx(i_520097970, 0, (n_687866179.kids).length - 1)];
                F.line = 210;
                result_687866182.appendChild(toDom_687866178(k_687866299, useAttachedNode_687866180, kxi_687866181));
                F.line = 131;
                F.filename = "iterators_1.nim";
                i_520097972 = addInt(i_520097972, 1);
              }
          };
        };
      };
      if (!((n_687866179.text == null))) {
      F.line = 213;
      F.filename = "karax.nim";
      result_687866182.value = n_687866179.text;
      }
      
    }
    }}}}
    if (!((n_687866179.id == null))) {
    F.line = 215;
    result_687866182.id = n_687866179.id;
    }
    
    if (!((n_687866179.class == null))) {
    if ((ConstSet4[n_687866179.kind] != undefined)) {
    F.line = 218;
    result_687866182.className.baseVal = n_687866179.class;
    }
    else {
      F.line = 220;
    result_687866182.className = n_687866179.class;
    }
    
    }
    
    Label6: {
      F.line = 223;
      var k_687866304 = null;
      F.line = 223;
      var v_687866305 = null;
      Label7: {
        F.line = 337;
        F.filename = "vdom.nim";
        var i_520097980 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520097981 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520097981 = subInt((n_687866179.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520097982 = 0;
        Label8: {
          F.line = 69;
            Label9: while (true) {
            if (!(res_520097982 <= colontmp__520097981)) break Label9;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520097980 = res_520097982;
              F.line = 223;
              F.filename = "karax.nim";
              k_687866304 = n_687866179.attrs[chckIndx(i_520097980, 0, (n_687866179.attrs).length - 1)];
              F.line = 223;
              v_687866305 = n_687866179.attrs[chckIndx(addInt(i_520097980, 1), 0, (n_687866179.attrs).length - 1)];
              if (!((v_687866305 == null))) {
              F.line = 225;
              result_687866182.setAttribute(k_687866304, v_687866305);
              }
              
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520097982 = addInt(res_520097982, 2);
            }
        };
      };
    };
    F.line = 226;
    F.filename = "karax.nim";
    applyEvents_687866149(n_687866179);
    if (((!((kxi_687866181 == null)) && (n_687866179 == kxi_687866181.toFocusV)) && (kxi_687866181.toFocus == null))) {
    F.line = 228;
    kxi_687866181.toFocus = result_687866182;
    }
    
    if (!((n_687866179.style == null))) {
    F.line = 230;
    applyStyle_788529666(result_687866182, n_687866179.style);
    F.line = 231;
    n_687866179.styleVersion = (n_687866179.style.__version || 0);
    }
    
  };
  framePtr = F.prev;

  return result_687866182;

}

function replaceById_687866398(id_687866399, newTree_687866400) {
  var F = {procname: "karax.replaceById", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 257;
    F.filename = "karax.nim";
    var x_687866401 = document.getElementById(id_687866399);
    F.line = 258;
    x_687866401.parentNode.replaceChild(newTree_687866400, x_687866401);
    F.line = 259;
    newTree_687866400.id = id_687866399;
  framePtr = F.prev;

  
}

function len_721421105(x_721421106) {
  var result_721421107 = 0;

  var F = {procname: "vdom.len", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 298;
    F.filename = "vdom.nim";
    result_721421107 = (x_721421106.kids).length;
  framePtr = F.prev;

  return result_721421107;

}

function HEX5BHEX5D_721421112(x_721421113, idx_721421114) {
  var result_721421115 = null;

  var F = {procname: "vdom.[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 299;
    F.filename = "vdom.nim";
    result_721421115 = x_721421113.kids[chckIndx(idx_721421114, 0, (x_721421113.kids).length - 1)];
  framePtr = F.prev;

  return result_721421115;

}

function eq_788529410(a_788529411, b_788529412) {
  var result_788529413 = false;

  var F = {procname: "vstyles.eq", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((a_788529411 == null)) {
    if ((b_788529412 == null)) {
    F.line = 236;
    F.filename = "vstyles.nim";
    result_788529413 = true;
    break BeforeRet;
    }
    else {
      F.line = 237;
      result_788529413 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_788529412 == null)) {
    F.line = 238;
    result_788529413 = false;
    break BeforeRet;
    }
    }
    if (!((a_788529411.length == b_788529412.length))) {
    F.line = 239;
    result_788529413 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 240;
      var i_788529448 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098016 = 0;
      F.line = 240;
      F.filename = "vstyles.nim";
      colontmp__520098016 = a_788529411.length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098017 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098017 < colontmp__520098016)) break Label3;
            F.line = 240;
            F.filename = "vstyles.nim";
            i_788529448 = i_520098017;
            if (!((a_788529411[i_788529448] == b_788529412[i_788529448]))) {
            F.line = 241;
            result_788529413 = false;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098017 = addInt(i_520098017, 1);
          }
      };
    };
    F.line = 242;
    F.filename = "vstyles.nim";
    result_788529413 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_788529413;

}

function versionMatch_788529457(s_788529458, version_788529459) {
  var result_788529460 = false;

  var F = {procname: "vstyles.versionMatch", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vstyles.nim", line: 0};
  framePtr = F;
    F.line = 246;
    F.filename = "vstyles.nim";
    result_788529460 = ((s_788529458 == null) || ((s_788529458.__version || 0) == version_788529459));
  framePtr = F.prev;

  return result_788529460;

}

function sameAttrs_721421285(a_721421286, b_721421287) {
  var result_721421288 = false;

  var F = {procname: "vdom.sameAttrs", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((a_721421286.attrs).length == (b_721421287.attrs).length)) {
    F.line = 342;
    F.filename = "vdom.nim";
    result_721421288 = true;
    Label1: {
      F.line = 343;
      var i_721421302 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098020 = 0;
      F.line = 343;
      F.filename = "vdom.nim";
      colontmp__520098020 = (a_721421286.attrs).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098021 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098021 < colontmp__520098020)) break Label3;
            F.line = 343;
            F.filename = "vdom.nim";
            i_721421302 = i_520098021;
            if (!((a_721421286.attrs[chckIndx(i_721421302, 0, (a_721421286.attrs).length - 1)] == b_721421287.attrs[chckIndx(i_721421302, 0, (b_721421287.attrs).length - 1)]))) {
            F.line = 344;
            result_721421288 = false;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098021 = addInt(i_520098021, 1);
          }
      };
    };
    }
    
  };
  framePtr = F.prev;

  return result_721421288;

}

function eq_687866411(a_687866412, b_687866413, recursive_687866414) {
  var result_687866415 = 0;

  var F = {procname: "karax.eq", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((a_687866412.kind == b_687866413.kind))) {
    F.line = 281;
    F.filename = "karax.nim";
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if (!((a_687866412.id == b_687866413.id))) {
    F.line = 284;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    F.line = 285;
    result_687866415 = 3;
    if (!((a_687866412.index == b_687866413.index))) {
    F.line = 288;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if ((a_687866412.kind == 0)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 292;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_687866412.kind == 3)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 294;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if (!((len_721421105(a_687866412) == len_721421105(b_687866413)))) {
    F.line = 295;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 296;
      var i_687866432 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098008 = 0;
      F.line = 296;
      F.filename = "karax.nim";
      colontmp__520098008 = len_721421105(a_687866412);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098009 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098009 < colontmp__520098008)) break Label3;
            F.line = 296;
            F.filename = "karax.nim";
            i_687866432 = i_520098009;
            if ((eq_687866411(HEX5BHEX5D_721421112(a_687866412, i_687866432), HEX5BHEX5D_721421112(b_687866413, i_687866432), recursive_687866414) == 1)) {
            F.line = 297;
            result_687866415 = 1;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098009 = addInt(i_520098009, 1);
          }
      };
    };
    }
    else {
    if ((a_687866412.kind == 4)) {
    if ((a_687866412.dom == b_687866413.dom)) {
    F.line = 300;
    F.filename = "karax.nim";
    result_687866415 = 3;
    break BeforeRet;
    }
    else {
      F.line = 302;
      result_687866415 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_687866412.kind == 6)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 305;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_687866413.kind == 5)) {
    if (!((a_687866412.text == b_687866413.text))) {
    F.line = 310;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    if (!((a_687866412.key == b_687866413.key))) {
    F.line = 316;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    F.line = 317;
    result_687866415 = 0;
    break BeforeRet;
    }
    }}}}
    if (((!((a_687866412.class == b_687866413.class)) || !((eq_788529410(a_687866412.style, b_687866413.style) && versionMatch_788529457(a_687866412.style, b_687866413.styleVersion)))) || !(sameAttrs_721421285(a_687866412, b_687866413)))) {
    F.line = 324;
    result_687866415 = 2;
    break BeforeRet;
    }
    
    if (recursive_687866414) {
    if (!((len_721421105(a_687866412) == len_721421105(b_687866413)))) {
    F.line = 328;
    result_687866415 = 1;
    break BeforeRet;
    }
    
    Label4: {
      F.line = 329;
      var i_687866458 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098012 = 0;
      F.line = 329;
      F.filename = "karax.nim";
      colontmp__520098012 = len_721421105(a_687866412);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098013 = 0;
      Label5: {
        F.line = 129;
          Label6: while (true) {
          if (!(i_520098013 < colontmp__520098012)) break Label6;
            F.line = 329;
            F.filename = "karax.nim";
            i_687866458 = i_520098013;
            if (!((eq_687866411(HEX5BHEX5D_721421112(a_687866412, i_687866458), HEX5BHEX5D_721421112(b_687866413, i_687866458), true) == 3))) {
            F.line = 331;
            result_687866415 = 1;
            break BeforeRet;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098013 = addInt(i_520098013, 1);
          }
      };
    };
    }
    
    F.line = 334;
    F.filename = "karax.nim";
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_687866415;

}

function updateStyles_687866479(newNode_687866480, oldNode_687866481) {
  var F = {procname: "karax.updateStyles", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((oldNode_687866481.dom == null))) {
    if (!((newNode_687866480.style == null))) {
    F.line = 340;
    F.filename = "karax.nim";
    applyStyle_788529666(oldNode_687866481.dom, newNode_687866480.style);
    F.line = 341;
    newNode_687866480.styleVersion = (newNode_687866480.style.__version || 0);
    }
    else {
      F.line = 342;
      oldNode_687866481.dom.style = {m_type: NTI805306510, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    if ((ConstSet5[oldNode_687866481.kind] != undefined)) {
    F.line = 344;
    oldNode_687866481.dom.className.baseVal = newNode_687866480.class;
    }
    else {
      F.line = 346;
    oldNode_687866481.dom.className = newNode_687866480.class;
    }
    
    }
    
    F.line = 347;
    oldNode_687866481.style = newNode_687866480.style;
    F.line = 348;
    oldNode_687866481.class = newNode_687866480.class;
  framePtr = F.prev;

  
}

function takeOverAttr_721421097(newNode_721421098, oldNode_721421099) {
  var F = {procname: "vdom.takeOverAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 278;
    F.filename = "vdom.nim";
    oldNode_721421099.attrs = newNode_721421098.attrs;
  framePtr = F.prev;

  
}

function updateAttributes_687866893(newNode_687866894, oldNode_687866895) {
  var F = {procname: "karax.updateAttributes", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((oldNode_687866895.dom == null))) {
    Label1: {
      F.line = 353;
      F.filename = "karax.nim";
      var k_687866900 = null;
      F.line = 353;
      var __687866901 = null;
      Label2: {
        F.line = 337;
        F.filename = "vdom.nim";
        var i_520098025 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520098026 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520098026 = subInt((oldNode_687866895.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520098027 = 0;
        Label3: {
          F.line = 69;
            Label4: while (true) {
            if (!(res_520098027 <= colontmp__520098026)) break Label4;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520098025 = res_520098027;
              F.line = 353;
              F.filename = "karax.nim";
              k_687866900 = oldNode_687866895.attrs[chckIndx(i_520098025, 0, (oldNode_687866895.attrs).length - 1)];
              F.line = 353;
              __687866901 = oldNode_687866895.attrs[chckIndx(addInt(i_520098025, 1), 0, (oldNode_687866895.attrs).length - 1)];
              F.line = 354;
              oldNode_687866895.dom.removeAttribute(k_687866900);
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520098027 = addInt(res_520098027, 2);
            }
        };
      };
    };
    Label5: {
      F.line = 355;
      F.filename = "karax.nim";
      var k_687866902 = null;
      F.line = 355;
      var v_687866903 = null;
      Label6: {
        F.line = 337;
        F.filename = "vdom.nim";
        var i_520098031 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520098032 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520098032 = subInt((newNode_687866894.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520098033 = 0;
        Label7: {
          F.line = 69;
            Label8: while (true) {
            if (!(res_520098033 <= colontmp__520098032)) break Label8;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520098031 = res_520098033;
              F.line = 355;
              F.filename = "karax.nim";
              k_687866902 = newNode_687866894.attrs[chckIndx(i_520098031, 0, (newNode_687866894.attrs).length - 1)];
              F.line = 355;
              v_687866903 = newNode_687866894.attrs[chckIndx(addInt(i_520098031, 1), 0, (newNode_687866894.attrs).length - 1)];
              if (!((v_687866903 == null))) {
              F.line = 357;
              oldNode_687866895.dom.setAttribute(k_687866902, v_687866903);
              }
              
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520098033 = addInt(res_520098033, 2);
            }
        };
      };
    };
    }
    
    F.line = 358;
    F.filename = "karax.nim";
    takeOverAttr_721421097(newNode_687866894, oldNode_687866895);
  framePtr = F.prev;

  
}

function getAttr_721421084(n_721421085, key_721421086) {
  var result_721421087 = null;

  var F = {procname: "vdom.getAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 271;
      F.filename = "vdom.nim";
      var i_721421096 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520098036 = 0;
      F.line = 271;
      F.filename = "vdom.nim";
      colontmp__520098036 = subInt((n_721421085.attrs).length, 2);
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520098037 = 0;
      Label2: {
        F.line = 69;
          Label3: while (true) {
          if (!(res_520098037 <= colontmp__520098036)) break Label3;
            F.line = 271;
            F.filename = "vdom.nim";
            i_721421096 = res_520098037;
            if ((n_721421085.attrs[chckIndx(i_721421096, 0, (n_721421085.attrs).length - 1)] == key_721421086)) {
            F.line = 272;
            result_721421087 = n_721421085.attrs[chckIndx(addInt(i_721421096, 1), 0, (n_721421085.attrs).length - 1)];
            break BeforeRet;
            }
            
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520098037 = addInt(res_520098037, 2);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_721421087;

}

function removeAllEventHandlers_687865980(d_687865981) {
  var F = {procname: "karax.removeAllEventHandlers", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((d_687865981.karaxEvents == null))) {
    Label1: {
      F.line = 101;
      F.filename = "karax.nim";
      var i_687865997 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098040 = 0;
      F.line = 101;
      F.filename = "karax.nim";
      colontmp__520098040 = d_687865981.karaxEvents.length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098041 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098041 < colontmp__520098040)) break Label3;
            F.line = 101;
            F.filename = "karax.nim";
            i_687865997 = i_520098041;
            F.line = 102;
            d_687865981.removeEventListener(d_687865981.karaxEvents[i_687865997]["Field0"], d_687865981.karaxEvents[i_687865997]["Field1"]);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098041 = addInt(i_520098041, 1);
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function mergeEvents_687866904(newNode_687866905, oldNode_687866906, kxi_687866907) {
  var F = {procname: "karax.mergeEvents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 361;
    F.filename = "karax.nim";
    var d_687866908 = oldNode_687866906.dom;
    if (!((d_687866908 == null))) {
    F.line = 363;
    removeAllEventHandlers_687865980(d_687866908);
    }
    
    F.line = 371;
    oldNode_687866906.events = newNode_687866905.events;
    F.line = 372;
    applyEvents_687866149(oldNode_687866906);
  framePtr = F.prev;

  
}

function addPatch_687866913(kxi_687866914, ka_687866915, parenta_687866916, currenta_687866917, na_687866918, oldNode_687866919) {
  var F = {procname: "karax.addPatch", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 389;
    F.filename = "karax.nim";
    var L_687866920 = kxi_687866914.patchLen;
    if (((kxi_687866914.patches).length <= L_687866920)) {
    F.line = 392;
    kxi_687866914.patches.push({k: ka_687866915, parent: parenta_687866916, current: currenta_687866917, newNode: na_687866918, oldNode: oldNode_687866919});;
    }
    else {
      F.line = 395;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].k = ka_687866915;
      F.line = 396;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].parent = parenta_687866916;
      F.line = 397;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].current = currenta_687866917;
      F.line = 398;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].newNode = na_687866918;
      F.line = 399;
      kxi_687866914.patches[chckIndx(L_687866920, 0, (kxi_687866914.patches).length - 1)].oldNode = oldNode_687866919;
    }
    
    F.line = 400;
    kxi_687866914.patchLen = addInt(kxi_687866914.patchLen, 1);
  framePtr = F.prev;

  
}

function diff_687867077(newNode_687867078, oldNode_687867079, parent_687867080, current_687867081, kxi_687867082) {
      var Temporary1;

  var F = {procname: "karax.diff", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 492;
    F.filename = "karax.nim";
    var result_687867083 = eq_687866411(newNode_687867078, oldNode_687867079, false);
    F.line = 493;
    switch (result_687867083) {
    case 0:
      F.line = 495;
      kxi_687867082.components.push({oldNode: oldNode_687867079, newNode: newNode_687867078, parent: parent_687867080, current: current_687867081});;
      break;
    case 3:
    case 2:
      F.line = 500;
      newNode_687867078.dom = oldNode_687867079.dom;
      if ((result_687867083 == 2)) {
      F.line = 502;
      updateStyles_687866479(newNode_687867078, oldNode_687867079);
      F.line = 503;
      updateAttributes_687866893(newNode_687867078, oldNode_687867079);
      if ((oldNode_687867079.kind == 0)) {
      F.line = 506;
      oldNode_687867079.text = newNode_687867078.text;
      F.line = 507;
      oldNode_687867079.dom.nodeValue = newNode_687867078.text;
      }
      
      if ((oldNode_687867079.kind == 194)) {
      F.line = 511;
      oldNode_687867079.dom.value = newNode_687867078.text;
      F.line = 513;
      var checked_687867100 = getAttr_721421084(newNode_687867078, "checked");
      F.line = 514;
      if ((checked_687867100 == null)) {
      Temporary1 = false;
      }
      else {
      Temporary1 = true;
      }
      
      oldNode_687867079.dom.checked = Temporary1;
      }
      
      }
      
      if ((!(((newNode_687867078.events).length == 0)) || !(((oldNode_687867079.events).length == 0)))) {
      F.line = 517;
      mergeEvents_687866904(newNode_687867078, oldNode_687867079, kxi_687867082);
      }
      
      F.line = 519;
      var newLength_687867107 = len_721421105(newNode_687867078);
      F.line = 520;
      var oldLength_687867108 = len_721421105(oldNode_687867079);
      if (((newLength_687867107 == 0) && (oldLength_687867108 == 0))) {
      F.line = 521;
      break BeforeRet;
      }
      
      F.line = 522;
      var minLength_687867109 = nimMin(newLength_687867107, oldLength_687867108);
      if (!((oldNode_687867079.kind == newNode_687867078.kind))) {
      F.line = 524;
      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(524, 5) `oldNode.kind == newNode.kind` "));
      }
      
      F.line = 525;
      var commonPrefix_687867119 = 0;
      Label2: {
        F.line = 528;
          Label3: while (true) {
          if (!(commonPrefix_687867119 < minLength_687867109)) break Label3;
            if ((eq_687866411(HEX5BHEX5D_721421112(newNode_687867078, commonPrefix_687867119), HEX5BHEX5D_721421112(oldNode_687867079, commonPrefix_687867119), true) == 3)) {
            F.line = 530;
            addPatch_687866913(kxi_687867082, 5, null, null, HEX5BHEX5D_721421112(newNode_687867078, commonPrefix_687867119), HEX5BHEX5D_721421112(oldNode_687867079, commonPrefix_687867119));
            F.line = 531;
            commonPrefix_687867119 = addInt(commonPrefix_687867119, 1);
            }
            else {
              F.line = 533;
              break Label2;
            }
            
          }
      };
      F.line = 536;
      var oldPos_687867129 = subInt(oldLength_687867108, 1);
      F.line = 537;
      var newPos_687867130 = subInt(newLength_687867107, 1);
      Label4: {
        F.line = 538;
          Label5: while (true) {
          if (!((commonPrefix_687867119 <= oldPos_687867129) && (commonPrefix_687867119 <= newPos_687867130))) break Label5;
            if ((eq_687866411(HEX5BHEX5D_721421112(newNode_687867078, newPos_687867130), HEX5BHEX5D_721421112(oldNode_687867079, oldPos_687867129), true) == 3)) {
            F.line = 540;
            addPatch_687866913(kxi_687867082, 5, null, null, HEX5BHEX5D_721421112(newNode_687867078, newPos_687867130), HEX5BHEX5D_721421112(oldNode_687867079, oldPos_687867129));
            F.line = 541;
            oldPos_687867129 = subInt(oldPos_687867129, 1);
            F.line = 542;
            newPos_687867130 = subInt(newPos_687867130, 1);
            }
            else {
              F.line = 544;
              break Label4;
            }
            
          }
      };
      F.line = 546;
      var pos_687867145 = addInt(nimMin(oldPos_687867129, newPos_687867130), 1);
      Label6: {
        F.line = 548;
        var i_687867150 = 0;
        F.line = 81;
        F.filename = "iterators_1.nim";
        var colontmp__520097995 = 0;
        F.line = 548;
        F.filename = "karax.nim";
        colontmp__520097995 = subInt(pos_687867145, 1);
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520097996 = commonPrefix_687867119;
        Label7: {
          F.line = 97;
            Label8: while (true) {
            if (!(res_520097996 <= colontmp__520097995)) break Label8;
              F.line = 548;
              F.filename = "karax.nim";
              i_687867150 = res_520097996;
              F.line = 549;
              diff_687867077(HEX5BHEX5D_721421112(newNode_687867078, i_687867150), HEX5BHEX5D_721421112(oldNode_687867079, i_687867150), current_687867081, HEX5BHEX5D_721421112(oldNode_687867079, i_687867150).dom, kxi_687867082);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520097996 = addInt(res_520097996, 1);
            }
        };
      };
      if ((addInt(oldPos_687867129, 1) == oldLength_687867108)) {
      Label9: {
        F.line = 552;
        F.filename = "karax.nim";
        var i_687867155 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520097999 = pos_687867145;
        Label10: {
          F.line = 97;
            Label11: while (true) {
            if (!(res_520097999 <= newPos_687867130)) break Label11;
              F.line = 552;
              F.filename = "karax.nim";
              i_687867155 = res_520097999;
              F.line = 553;
              addPatch_687866913(kxi_687867082, 2, current_687867081, null, HEX5BHEX5D_721421112(newNode_687867078, i_687867155), null);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520097999 = addInt(res_520097999, 1);
            }
        };
      };
      }
      else {
        F.line = 555;
        F.filename = "karax.nim";
        var before_687867156 = current_687867081.childNodes[chckIndx(addInt(oldPos_687867129, 1), 0, (current_687867081.childNodes).length - 1)];
        Label12: {
          F.line = 556;
          var i_687867161 = 0;
          F.line = 96;
          F.filename = "iterators_1.nim";
          var res_520098002 = pos_687867145;
          Label13: {
            F.line = 97;
              Label14: while (true) {
              if (!(res_520098002 <= newPos_687867130)) break Label14;
                F.line = 556;
                F.filename = "karax.nim";
                i_687867161 = res_520098002;
                F.line = 557;
                addPatch_687866913(kxi_687867082, 3, current_687867081, before_687867156, HEX5BHEX5D_721421112(newNode_687867078, i_687867161), null);
                F.line = 102;
                F.filename = "iterators_1.nim";
                res_520098002 = addInt(res_520098002, 1);
              }
          };
        };
      }
      
      Label15: {
        F.line = 559;
        F.filename = "karax.nim";
        var i_687867166 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520098005 = pos_687867145;
        Label16: {
          F.line = 97;
            Label17: while (true) {
            if (!(res_520098005 <= oldPos_687867129)) break Label17;
              F.line = 559;
              F.filename = "karax.nim";
              i_687867166 = res_520098005;
              F.line = 560;
              addPatch_687866913(kxi__, 4, null, null, null, HEX5BHEX5D_721421112(oldNode_687867079, i_687867166));
              F.line = 562;
              addPatch_687866913(kxi_687867082, 1, current_687867081, current_687867081.childNodes[chckIndx(i_687867166, 0, (current_687867081.childNodes).length - 1)], null, null);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520098005 = addInt(res_520098005, 1);
            }
        };
      };
      break;
    case 1:
      F.line = 564;
      F.filename = "karax.nim";
      addPatch_687866913(kxi__, 4, null, null, null, oldNode_687867079);
      F.line = 565;
      addPatch_687866913(kxi_687867082, 0, parent_687867080, current_687867081, newNode_687867078, null);
      break;
    case 4:
      if (true) {
      F.line = 566;
      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(566, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  };
  framePtr = F.prev;

  
}

function applyComponents_687867191(kxi_687867192) {
  var F = {procname: "karax.applyComponents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 574;
    F.filename = "karax.nim";
    var i_687867193 = 0;
    Label1: {
      F.line = 577;
        Label2: while (true) {
        if (!(i_687867193 < (kxi_687867192.components).length)) break Label2;
          F.line = 578;
          var x_687867198 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].oldNode;
          F.line = 579;
          var newNode_687867199 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].newNode;
          if ((!((x_687867198.changedImpl == null)) && x_687867198.changedImpl(x_687867198, newNode_687867199))) {
          F.line = 585;
          var current_687867204 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].current;
          F.line = 586;
          var parent_687867205 = kxi_687867192.components[chckIndx(i_687867193, 0, (kxi_687867192.components).length - 1)].parent;
          F.line = 587;
          x_687867198.updatedImpl(x_687867198, newNode_687867199);
          F.line = 588;
          var oldExpanded_687867206 = x_687867198.expanded;
          F.line = 589;
          x_687867198.expanded = x_687867198.renderImpl(x_687867198);
          F.line = 592;
          x_687867198.renderedVersion = x_687867198.version;
          if ((oldExpanded_687867206 == null)) {
          F.line = 594;
          addPatch_687866913(kxi__, 4, null, null, null, x_687867198);
          F.line = 595;
          addPatch_687866913(kxi_687867192, 0, parent_687867205, current_687867204, x_687867198.expanded, null);
          }
          else {
            F.line = 599;
            diff_687867077(x_687867198.expanded, oldExpanded_687867206, parent_687867205, current_687867204, kxi_687867192);
          }
          
          }
          
          F.line = 614;
          i_687867193 = addInt(i_687867193, 1);
        }
    };
    F.line = 615;
    if (kxi_687867192.components.length < 0) { for (var i = kxi_687867192.components.length ; i < 0 ; ++i) kxi_687867192.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_687867192.components.length = 0; };
  framePtr = F.prev;

  
}

function reapplyEvents_687866160(n_687866161) {
  var F = {procname: "karax.reapplyEvents", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 155;
    F.filename = "karax.nim";
    removeAllEventHandlers_687865980(n_687866161.dom);
    F.line = 156;
    applyEvents_687866149(n_687866161);
  framePtr = F.prev;

  
}

function moveDom_687867007(dest_687867008, src_687867009) {
  var F = {procname: "karax.moveDom", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 414;
    F.filename = "karax.nim";
    dest_687867008.dom = src_687867009.dom;
    F.line = 415;
    src_687867009.dom = null;
    F.line = 416;
    reapplyEvents_687866160(dest_687867008);
    if (!((dest_687867008.id == null))) {
    F.line = 418;
    kxi__.byId[dest_687867008.id] = dest_687867008;
    }
    
    if (!((len_721421105(dest_687867008) == len_721421105(src_687867009)))) {
    F.line = 419;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(419, 3) `dest.len == src.len` "));
    }
    
    Label1: {
      F.line = 420;
      var i_687867025 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098051 = 0;
      F.line = 420;
      F.filename = "karax.nim";
      colontmp__520098051 = len_721421105(dest_687867008);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098052 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098052 < colontmp__520098051)) break Label3;
            F.line = 420;
            F.filename = "karax.nim";
            i_687867025 = i_520098052;
            F.line = 421;
            moveDom_687867007(HEX5BHEX5D_721421112(dest_687867008, i_687867025), HEX5BHEX5D_721421112(src_687867009, i_687867025));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098052 = addInt(i_520098052, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_721421116(x_721421117, idx_721421118, y_721421119) {
  var F = {procname: "vdom.[]=", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 300;
    F.filename = "vdom.nim";
    x_721421117.kids[chckIndx(idx_721421118, 0, (x_721421117.kids).length - 1)] = y_721421119;
  framePtr = F.prev;

  
}

function applyPatch_687867026(kxi_687867027) {
  var F = {procname: "karax.applyPatch", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 424;
      F.filename = "karax.nim";
      var i_687867032 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098045 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098045 < kxi_687867027.patchLen)) break Label3;
            F.line = 424;
            F.filename = "karax.nim";
            i_687867032 = i_520098045;
            F.line = 425;
            var p_687867033 = nimCopy(null, kxi_687867027.patches[chckIndx(i_687867032, 0, (kxi_687867027.patches).length - 1)], NTI687865864);
            F.line = 426;
            switch (p_687867033.k) {
            case 0:
              F.line = 428;
              var nn_687867034 = toDom_687866178(p_687867033.newNode, true, kxi_687867027);
              if ((p_687867033.parent == null)) {
              F.line = 430;
              replaceById_687866398(kxi_687867027.rootId, nn_687867034);
              }
              else {
                if ((p_687867033.current.parentNode == p_687867033.parent)) {
                F.line = 433;
                p_687867033.parent.replaceChild(nn_687867034, p_687867033.current);
                }
                else {
                  F.line = 435;
                p_687867033.parent.appendChild(nn_687867034);
                }
                
              }
              
              break;
            case 5:
              F.line = 437;
              moveDom_687867007(p_687867033.newNode, p_687867033.oldNode);
              break;
            case 1:
              F.line = 439;
              p_687867033.parent.removeChild(p_687867033.current);
              break;
            case 2:
              F.line = 441;
              var nn_687867043 = toDom_687866178(p_687867033.newNode, true, kxi_687867027);
              F.line = 442;
              p_687867033.parent.appendChild(nn_687867043);
              break;
            case 3:
              F.line = 444;
              var nn_687867044 = toDom_687866178(p_687867033.newNode, true, kxi_687867027);
              F.line = 445;
              p_687867033.parent.insertBefore(nn_687867044, p_687867033.current);
              break;
            case 4:
              F.line = 447;
              var n_687867045 = p_687867033.oldNode;
              if (!((n_687867045.id == null))) {
              F.line = 448;
              delete kxi_687867027.byId[n_687867045.id];
              }
              
              if ((n_687867045.kind == 5)) {
              F.line = 450;
              var x_687867055 = n_687867045;
              if (!((x_687867055.onDetachImpl == null))) {
              F.line = 451;
              x_687867055.onDetachImpl(x_687867055);
              }
              
              }
              
              if (!(kxi_687867027.surpressRedraws)) {
              F.line = 453;
              n_687867045.dom = null;
              }
              
              break;
            }
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098045 = addInt(i_520098045, 1);
          }
      };
    };
    F.line = 454;
    F.filename = "karax.nim";
    kxi_687867027.patchLen = 0;
    Label4: {
      F.line = 455;
      var i_687867064 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098048 = 0;
      Label5: {
        F.line = 129;
          Label6: while (true) {
          if (!(i_520098048 < kxi_687867027.patchLenV)) break Label6;
            F.line = 455;
            F.filename = "karax.nim";
            i_687867064 = i_520098048;
            F.line = 456;
            var p_687867065 = nimCopy(null, kxi_687867027.patchesV[chckIndx(i_687867064, 0, (kxi_687867027.patchesV).length - 1)], NTI687865865);
            F.line = 457;
            HEX5BHEX5DHEX3D_721421116(p_687867065.parent, p_687867065.pos, p_687867065.newChild);
            if (!(!((p_687867065.newChild.dom == null)))) {
            F.line = 458;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim(458, 5) `p.newChild.dom != nil` "));
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098048 = addInt(i_520098048, 1);
          }
      };
    };
    F.line = 459;
    F.filename = "karax.nim";
    kxi_687867027.patchLenV = 0;
  framePtr = F.prev;

  
}

function dodraw_687867280(kxi_687867281) {
    
function HEX3Aanonymous_687867285() {
      var F = {procname: "dodraw.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 681;
        F.filename = "karax.nim";
        dodraw_687867280(kxi_687867281);
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.dodraw", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((kxi_687867281.renderer == null)) {
    F.line = 676;
    F.filename = "karax.nim";
    break BeforeRet;
    }
    
    F.line = 677;
    kxi_687867281.renderId = 0;
    if (kxi_687867281.rendering) {
    F.line = 681;
    kxi_687867281.renderId = window.requestAnimationFrame(HEX3Aanonymous_687867285);
    F.line = 682;
    break BeforeRet;
    }
    
    F.line = 684;
    kxi_687867281.rendering = true;
    F.line = 686;
    var rdata_687867286 = {hashPart: null, queryString: null};
    if ((window.location.hash.indexOf("?")>=0)) {
    F.line = 688;
    var hashSplit_687867287 = window.location.hash.split("?");
    F.line = 689;
    rdata_687867286.hashPart = hashSplit_687867287[chckIndx(0, 0, (hashSplit_687867287).length - 1)];
    F.line = 690;
    rdata_687867286.queryString = (HEX5BHEX5D_687867297(hashSplit_687867287, HEX2EHEX2E_1006633065(1, 1)).join("?"));
    }
    else {
      F.line = 692;
      rdata_687867286.hashPart = window.location.hash;
      F.line = 693;
      rdata_687867286.queryString = window.location.search;
    }
    
    F.line = 695;
    var newtree_687867321 = kxi_687867281.renderer(rdata_687867286);
    F.line = 696;
    kxi_687867281.runCount = addInt(kxi_687867281.runCount, 1);
    F.line = 697;
    newtree_687867321.id = kxi_687867281.rootId;
    F.line = 698;
    kxi_687867281.toFocus = null;
    if ((kxi_687867281.currentTree == null)) {
    F.line = 700;
    var asdom_687867331 = toDom_687866178(newtree_687867321, true, kxi_687867281);
    F.line = 701;
    replaceById_687866398(kxi_687867281.rootId, asdom_687867331);
    }
    else {
      F.line = 705;
      var olddom_687867332 = document.getElementById(kxi_687867281.rootId);
      F.line = 706;
      diff_687867077(newtree_687867321, kxi_687867281.currentTree, null, olddom_687867332, kxi_687867281);
    }
    
    F.line = 710;
    applyComponents_687867191(kxi_687867281);
    F.line = 715;
    applyPatch_687867026(kxi_687867281);
    F.line = 716;
    kxi_687867281.currentTree = newtree_687867321;
    if (!((kxi_687867281.postRenderCallback == null))) {
    F.line = 721;
    kxi_687867281.postRenderCallback(rdata_687867286);
    }
    
    if (!((kxi_687867281.toFocus == null))) {
    F.line = 725;
    kxi_687867281.toFocus.focus();
    }
    
    F.line = 726;
    kxi_687867281.rendering = false;
  };
  framePtr = F.prev;

  
}

function redraw_687867377(kxi_687867378) {
    
function HEX3Aanonymous_687867379() {
      var F = {procname: "redraw.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 740;
        F.filename = "karax.nim";
        dodraw_687867280(kxi_687867378);
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.redraw", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if ((kxi_687867378.renderId == 0)) {
    F.line = 740;
    F.filename = "karax.nim";
    kxi_687867378.renderId = window.requestAnimationFrame(HEX3Aanonymous_687867379);
    }
    
  framePtr = F.prev;

  
}

function resize_520093908() {
  var F = {procname: "main.resize", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 141;
    F.filename = "main.nim";
    screenWidth_520093852[0] = window.innerWidth;
    F.line = 142;
    redraw_687867377(kxi__);
  framePtr = F.prev;

  
}

function startingState_1224737033() {
  var result_1224737034 = {Field0: ({nextIndex: 0, nextGroup: 0, randSeed: 0, turnNumber: 0}), Field1: [({abilityTakes: 0, wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]}), ({abilityTakes: 0, wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]})]};

  var F = {procname: "piece.startingState", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
    F.line = 103;
    F.filename = "piece.nim";
    result_1224737034.Field0 = nimCopy(result_1224737034.Field0, {nextIndex: 1, nextGroup: 1, randSeed: 0, turnNumber: 0}, NTI1224736796);
    F.line = 104;
    result_1224737034.Field1 = nimCopy(result_1224737034.Field1, [{abilityTakes: 0, wallet: {val: 0, has: false}, buys: [], piecesSold: 0, glass: [{val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}]}, {abilityTakes: 0, wallet: {val: 0, has: false}, buys: [], piecesSold: 0, glass: [{val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}, {val: {Field0: 0, Field1: {Field0: null, Field1: null}, Field2: {Field0: null, Field1: null}}, has: false}]}], NTI1224736855);
  framePtr = F.prev;

  return result_1224737034;

}

function HEX3Aanonymous_1275068419(taken_1275068420, taker_1275068421, board_1275068422, state_1275068423) {
  var result_1275068426 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "basePieces.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 8;
    F.filename = "basePieces.nim";
    rawEcho([99,97,115,116,108,101]);
    F.line = 9;
    rawEcho([107], nimBoolToStr((taker_1275068421.item == 0)), [114], nimBoolToStr((taken_1275068420.item == 4)), [115], nimBoolToStr(sameColor_1224737908(taken_1275068420, taker_1275068421)), [109], HEX24_369098760(taker_1275068421.timesMoved), [109,50], HEX24_369098760(taken_1275068420.timesMoved));
    if ((((((taker_1275068421.item == 0) && (taken_1275068420.item == 4)) && sameColor_1224737908(taken_1275068420, taker_1275068421)) && (taker_1275068421.timesMoved == 1)) && (taken_1275068420.timesMoved == 0))) {
    F.line = 15;
    var kingTile_1275068443 = nimCopy(null, taker_1275068421.tile, NTI1224736771);
    if ((taken_1275068420.tile.Field0 == 0)) {
    F.line = 17;
    pieceMove_1224737720(taker_1275068421, kingTile_1275068443.Field1, subInt(kingTile_1275068443.Field0, 2), board_1275068422, state_1275068423);
    F.line = 18;
    pieceMove_1224737720(taken_1275068420, kingTile_1275068443.Field1, subInt(kingTile_1275068443.Field0, 1), board_1275068422, state_1275068423);
    F.line = 19;
    var colontmp__520098062 = {Field0: subInt(kingTile_1275068443.Field0, 1), Field1: kingTile_1275068443.Field1};
    F.line = 19;
    var colontmp__520098063 = false;
    F.line = 19;
    result_1275068426 = nimCopy(result_1275068426, {Field0: nimCopy(null, colontmp__520098062, NTI1224736771), Field1: colontmp__520098063}, NTI1275068424);
    break BeforeRet;
    }
    else {
      F.line = 21;
      pieceMove_1224737720(taker_1275068421, kingTile_1275068443.Field1, addInt(kingTile_1275068443.Field0, 2), board_1275068422, state_1275068423);
      F.line = 22;
      pieceMove_1224737720(taken_1275068420, kingTile_1275068443.Field1, addInt(kingTile_1275068443.Field0, 1), board_1275068422, state_1275068423);
      F.line = 23;
      var colontmp__520098064 = {Field0: addInt(kingTile_1275068443.Field0, 1), Field1: kingTile_1275068443.Field1};
      F.line = 23;
      var colontmp__520098065 = false;
      F.line = 23;
      result_1275068426 = nimCopy(result_1275068426, {Field0: nimCopy(null, colontmp__520098064, NTI1224736771), Field1: colontmp__520098065}, NTI1275068424);
      break BeforeRet;
    }
    
    }
    else {
      F.line = 26;
      result_1275068426 = nimCopy(result_1275068426, HEX3Aanonymous_1224737768(taken_1275068420, taker_1275068421, board_1275068422, state_1275068423), NTI1275068424);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1275068426;

}

function inCheck_1291845637(p_1291845638, b_1291845639) {
  var result_1291845931 = false;

  var F = {procname: "moves.inCheck", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 124;
      F.filename = "moves.nim";
      var i_1291845936 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098074 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098074 <= 7)) break Label3;
            F.line = 124;
            F.filename = "moves.nim";
            i_1291845936 = res_520098074;
            Label4: {
              F.line = 125;
              var j_1291845941 = 0;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_520098072 = 0;
              Label5: {
                F.line = 97;
                  Label6: while (true) {
                  if (!(res_520098072 <= 7)) break Label6;
                    F.line = 125;
                    F.filename = "moves.nim";
                    j_1291845941 = res_520098072;
                    F.line = 130;
                    var piece_1291845942 = nimCopy(null, b_1291845639[chckIndx(i_1291845936, 0, (b_1291845639).length - 1)][chckIndx(j_1291845941, 0, (b_1291845639[chckIndx(i_1291845936, 0, (b_1291845639).length - 1)]).length - 1)], NTI1224736794);
                    if ((piece_1291845942.item == 0)) {
                    F.line = 131;
                    F.line = 652;
                    F.filename = "sequtils.nim";
                    var resultHEX60gensym3_1291845971 = newSeq_1291845948(0);
                    Label7: {
                      F.line = 653;
                      var it_1291845975 = null;
                      F.line = 249;
                      F.filename = "iterators.nim";
                      var i_520098069 = 0;
                      F.line = 250;
                      var L_520098070 = (piece_1291845942.takes).length;
                      Label8: {
                        F.line = 251;
                          Label9: while (true) {
                          if (!(i_520098069 < L_520098070)) break Label9;
                            F.line = 653;
                            F.filename = "sequtils.nim";
                            it_1291845975 = piece_1291845942.takes[chckIndx(i_520098069, 0, (piece_1291845942.takes).length - 1)];
                            if (!((it_1291845975 == HEX3Aanonymous_1291845895))) {
                            F.line = 654;
                            resultHEX60gensym3_1291845971.push(it_1291845975);;
                            }
                            
                            F.line = 13;
                            F.filename = "iterators.nim";
                            i_520098069 += 1;
                            if (!(((piece_1291845942.takes).length == L_520098070))) {
                            F.line = 254;
                            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    piece_1291845942.takes = nimCopy(null, resultHEX60gensym3_1291845971, NTI1291845874);
                    }
                    
                    if (((!(isAir_1224737900(piece_1291845942)) && !(sameColor_1224737908(p_1291845638, piece_1291845942))) && contains_1224737585(getTakesOn_1224737435(piece_1291845942, b_1291845639), p_1291845638.tile))) {
                    F.line = 133;
                    F.filename = "moves.nim";
                    result_1291845931 = true;
                    break BeforeRet;
                    }
                    
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_520098072 = addInt(res_520098072, 1);
                  }
              };
            };
            F.line = 102;
            res_520098074 = addInt(res_520098074, 1);
          }
      };
    };
    F.line = 135;
    F.filename = "moves.nim";
    result_1291845931 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845931;

}

function HEX3Aanonymous_1291845895(board_1291845896, p_1291845897) {
  var result_1291845898 = [[]];

  var F = {procname: "moves.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/moves.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((!((p_1291845897.timesMoved == 0)) || !((p_1291845897.tile.Field0 == 4)))) {
    F.line = 101;
    F.filename = "moves.nim";
    result_1291845898[0] = nimCopy(null, [], NTI1291845837);
    break BeforeRet;
    }
    
    if ((((((isAir_1224737900(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 1), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)]) && isAir_1224737900(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 2), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)])) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].item == 4)) && sameColor_1224737908(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)], p_1291845897)) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].timesMoved == 0)) && !(inCheck_1291845637(p_1291845897, board_1291845896)))) {
    F.line = 110;
    var _ = addIfTake_1291845739(result_1291845898, 0, board_1291845896, p_1291845897, p_1291845897.tile, shooterFactory_1308622968(3, 0), false, true);
    }
    
    if (((((((isAir_1224737900(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 1), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)]) && isAir_1224737900(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 2), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)])) && isAir_1224737900(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)])) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 4), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].item == 4)) && sameColor_1224737908(board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(addInt(p_1291845897.tile.Field0, 3), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)], p_1291845897)) && (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)][chckIndx(subInt(p_1291845897.tile.Field0, 4), 0, (board_1291845896[chckIndx(p_1291845897.tile.Field1, 0, (board_1291845896).length - 1)]).length - 1)].timesMoved == 0)) && !(inCheck_1291845637(p_1291845897, board_1291845896)))) {
    F.line = 120;
    var _ = addIfTake_1291845739(result_1291845898, 0, board_1291845896, p_1291845897, p_1291845897.tile, shooterFactory_1308622968((-4), 0), false, true);
    }
    
  };
  framePtr = F.prev;

  return result_1291845898[0];

}

function startingBoard_1275068702(state_1275068703) {
  var result_1275068704 = [[({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})]];

  var F = {procname: "basePieces.startingBoard", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/basePieces.nim", line: 0};
  framePtr = F;
    F.line = 88;
    F.filename = "basePieces.nim";
    result_1275068704 = nimCopy(result_1275068704, [[{item: 4, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 1, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291845880, HEX3Aanonymous_1291845895], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [107,105,110,103,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845854], takes: [HEX3Aanonymous_1291845860], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}, {item: 6, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [], takes: [], onMove: {Field0: null, Field1: null}, onTake: {Field0: null, Field1: null}, whenTaken: {Field0: null, Field1: null}, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 3, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845827], takes: [HEX3Aanonymous_1291845849], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1275068621], onPromote: [HEX3Aanonymous_1275068616], promoted: false, filePath: [112,97,119,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}], [{item: 4, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 1, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030, HEX3Aanonymous_1291845988, HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291846051, HEX3Aanonymous_1291846009, HEX3Aanonymous_1291845880], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [113,117,101,101,110,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 0, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845865], takes: [HEX3Aanonymous_1291845880, HEX3Aanonymous_1291845895], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [107,105,110,103,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 2, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846030], takes: [HEX3Aanonymous_1291846051], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [98,105,115,104,111,112,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 5, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291846082], takes: [HEX3Aanonymous_1291846087], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1224737768, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [107,110,105,103,104,116,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}, {item: 4, color: 1, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: (-1), Field1: (-1)}, moves: [HEX3Aanonymous_1291845988], takes: [HEX3Aanonymous_1291846009], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1275068419, onEndTurn: [HEX3Aanonymous_1224737374], onPromote: [HEX3Aanonymous_1224737374], promoted: false, filePath: [114,111,111,107,46,115,118,103], colorable: true, rotate: false, drunk: false, casts: []}]], NTI1224736773);
    Label1: {
      F.line = 97;
      var i_1275068711 = 0;
      F.line = 97;
      var r_1275068712 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 164;
      F.filename = "iterators.nim";
      var i_520098060 = 0;
      Label2: {
        F.line = 165;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 97;
            F.filename = "basePieces.nim";
            i_1275068711 = i_520098060;
            F.line = 97;
            r_1275068712 = nimCopy(r_1275068712, result_1275068704[chckIndx(i_520098060, 0, (result_1275068704).length - 1)], NTI1224736772);
            Label4: {
              F.line = 98;
              var j_1275068719 = 0;
              F.line = 98;
              var x_1275068720 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 164;
              F.filename = "iterators.nim";
              var i_520098057 = 0;
              Label5: {
                F.line = 165;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 98;
                    F.filename = "basePieces.nim";
                    j_1275068719 = i_520098057;
                    F.line = 98;
                    x_1275068720 = nimCopy(x_1275068720, r_1275068712[chckIndx(i_520098057, 0, (r_1275068712).length - 1)], NTI1224736794);
                    F.line = 99;
                    result_1275068704[chckIndx(i_1275068711, 0, (result_1275068704).length - 1)][chckIndx(j_1275068719, 0, (result_1275068704[chckIndx(i_1275068711, 0, (result_1275068704).length - 1)]).length - 1)] = nimCopy(result_1275068704[chckIndx(i_1275068711, 0, (result_1275068704).length - 1)][chckIndx(j_1275068719, 0, (result_1275068704[chckIndx(i_1275068711, 0, (result_1275068704).length - 1)]).length - 1)], pieceCopy_1224737824(x_1275068720, newIndex_1224737419(state_1275068703), x_1275068720.item, x_1275068720.color, x_1275068720.timesMoved, x_1275068720.piecesTaken, {Field0: nimCopy(null, j_1275068719, NTI1224736798), Field1: nimCopy(null, i_1275068711, NTI1224736804)}, x_1275068720.moves, x_1275068720.takes, x_1275068720.onMove, x_1275068720.onTake, x_1275068720.whenTaken, x_1275068720.onEndTurn, x_1275068720.onPromote, x_1275068720.promoted, x_1275068720.filePath, x_1275068720.colorable, x_1275068720.rotate, x_1275068720.drunk), NTI1224736794);
                    if ((7 <= i_520098057)) {
                    F.line = 167;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520098057 += 1;
                  }
              };
            };
            if ((7 <= i_520098060)) {
            F.line = 167;
            break Label2;
            }
            
            F.line = 13;
            i_520098060 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1275068704;

}

function initGame_520093922() {
  var F = {procname: "main.initGame", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 154;
    F.filename = "main.nim";
    theState_520093821[0] = nimCopy(theState_520093821[0], startingState_1224737033(), NTI1224736795);
    F.line = 155;
    theBoard_520093820[0] = nimCopy(theBoard_520093820[0], startingBoard_1275068702(theState_520093821[0]), NTI1224736773);
    if (false) {
    F.line = 156;
    theState_520093821[0].Field0.randSeed = parseInt(roomId_520093795[0].Field1, 10);
    }
    
    F.line = 157;
    myDrafts_520093808[0] = nimCopy(null, [], NTI1442841020);
    F.line = 158;
    opponentDrafts_520093813[0] = nimCopy(null, [], NTI1442841020);
    F.line = 159;
    lastMove_520093839[0] = nimCopy(null, [], NTI1291845837);
    F.line = 160;
    piecesChecking_520093844[0] = nimCopy(null, [], NTI1291845837);
  framePtr = F.prev;

  
}

function HEX3DHEX3D_1442841481(x_1442841483, y_1442841484) {
  var result_1442841485 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(x_1442841483.name, y_1442841484.name))) {
    F.line = 1714;
    F.filename = "system.nim";
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_1442841483.technicalName, y_1442841484.technicalName))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.synergy == y_1442841484.synergy))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.tier == y_1442841484.tier))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.rarity == y_1442841484.rarity))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_1442841483.description, y_1442841484.description))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_1442841483.icon, y_1442841484.icon))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.rotatable == y_1442841484.rotatable))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.noColor == y_1442841484.noColor))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.onStart == y_1442841484.onStart))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.index == y_1442841484.index))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    if (!((x_1442841483.priority == y_1442841484.priority))) {
    F.line = 1714;
    result_1442841485 = false;
    break BeforeRet;
    }
    
    F.line = 1715;
    result_1442841485 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1442841485;

}

function find_1442841461(a_1442841464, item_1442841465) {
  var result_1442841466 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1442841466 = 0;
    Label1: {
      F.line = 1672;
      var i_1442841480 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520098087 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520098087 < (a_1442841464).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1442841480 = a_1442841464[chckIndx(i_520098087, 0, (a_1442841464).length - 1)];
            if (HEX3DHEX3D_1442841481(i_1442841480, item_1442841465)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1442841466 = addInt(result_1442841466, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098087 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1442841466 = (-1);
  };
  framePtr = F.prev;

  return result_1442841466;

}

function contains_1442841456(a_1442841458, item_1442841459) {
  var result_1442841460 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1442841460 = (0 <= find_1442841461(a_1442841458, item_1442841459));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1442841460;

}

function newSeq_1442840992(len_1442840994) {
  var result_1442840995 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1442840995 = new Array(len_1442840994); for (var i = 0 ; i < len_1442840994 ; ++i) { result_1442840995[i] = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: [], Field4: 0}; }  framePtr = F.prev;

  return result_1442840995;

}

function HEX2A_989855752(x_989855753, order_989855754) {
  var result_989855755 = 0;

  var F = {procname: "algorithm.*", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 68;
    F.filename = "algorithm.nim";
    var y_989855760 = subInt(order_989855754, 1);
    F.line = 69;
    result_989855755 = subInt((x_989855753 ^ y_989855760), y_989855760);
  framePtr = F.prev;

  return result_989855755;

}

function mergeAlt_1442841025(a_1442841027, b_1442841028, lo_1442841029, m_1442841030, hi_1442841031, cmp_1442841034, order_1442841035) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((HEX2A_989855752(cmp_1442841034(a_1442841027[chckIndx(m_1442841030, 0, (a_1442841027).length - 1)], a_1442841027[chckIndx(addInt(m_1442841030, 1), 0, (a_1442841027).length - 1)]), order_1442841035) <= 0)) {
    F.line = 335;
    F.filename = "algorithm.nim";
    break BeforeRet;
    }
    
    F.line = 336;
    var j_1442841036 = lo_1442841029;
    if (!((j_1442841036 <= m_1442841030))) {
    F.line = 338;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim(338, 3) `j <= m` "));
    }
    
    F.line = 340;
    var bb_1442841042 = 0;
    Label1: {
      F.line = 341;
        Label2: while (true) {
        if (!(j_1442841036 <= m_1442841030)) break Label2;
          F.line = 342;
          b_1442841028[chckIndx(bb_1442841042, 0, (b_1442841028).length - 1)] = nimCopy(b_1442841028[chckIndx(bb_1442841042, 0, (b_1442841028).length - 1)], a_1442841027[chckIndx(j_1442841036, 0, (a_1442841027).length - 1)], NTI1442840583);
          F.line = 343;
          bb_1442841042 = addInt(bb_1442841042, 1);
          F.line = 344;
          j_1442841036 = addInt(j_1442841036, 1);
        }
    };
    F.line = 348;
    var i_1442841053 = 0;
    F.line = 349;
    var k_1442841054 = lo_1442841029;
    Label3: {
      F.line = 351;
        Label4: while (true) {
        if (!((k_1442841054 < j_1442841036) && (j_1442841036 <= hi_1442841031))) break Label4;
          if ((HEX2A_989855752(cmp_1442841034(b_1442841028[chckIndx(i_1442841053, 0, (b_1442841028).length - 1)], a_1442841027[chckIndx(j_1442841036, 0, (a_1442841027).length - 1)]), order_1442841035) <= 0)) {
          F.line = 353;
          a_1442841027[chckIndx(k_1442841054, 0, (a_1442841027).length - 1)] = nimCopy(a_1442841027[chckIndx(k_1442841054, 0, (a_1442841027).length - 1)], b_1442841028[chckIndx(i_1442841053, 0, (b_1442841028).length - 1)], NTI1442840583);
          F.line = 354;
          i_1442841053 = addInt(i_1442841053, 1);
          }
          else {
            F.line = 356;
            a_1442841027[chckIndx(k_1442841054, 0, (a_1442841027).length - 1)] = nimCopy(a_1442841027[chckIndx(k_1442841054, 0, (a_1442841027).length - 1)], a_1442841027[chckIndx(j_1442841036, 0, (a_1442841027).length - 1)], NTI1442840583);
            F.line = 357;
            j_1442841036 = addInt(j_1442841036, 1);
          }
          
          F.line = 358;
          k_1442841054 = addInt(k_1442841054, 1);
        }
    };
    Label5: {
      F.line = 361;
        Label6: while (true) {
        if (!(k_1442841054 < j_1442841036)) break Label6;
          F.line = 362;
          a_1442841027[chckIndx(k_1442841054, 0, (a_1442841027).length - 1)] = nimCopy(a_1442841027[chckIndx(k_1442841054, 0, (a_1442841027).length - 1)], b_1442841028[chckIndx(i_1442841053, 0, (b_1442841028).length - 1)], NTI1442840583);
          F.line = 363;
          k_1442841054 = addInt(k_1442841054, 1);
          F.line = 364;
          i_1442841053 = addInt(i_1442841053, 1);
        }
    };
  };
  framePtr = F.prev;

  
}

function sort_1442841008(a_1442841010, cmp_1442841013, order_1442841014) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 411;
    F.filename = "algorithm.nim";
    var n_1442841018 = (a_1442841010).length;
    F.line = 412;
    var b_1442841022 = newSeq_1442840992(chckRange(divInt(n_1442841018, 2), 0, 2147483647));
    F.line = 413;
    var s_1442841023 = 1;
    Label1: {
      F.line = 414;
        Label2: while (true) {
        if (!(s_1442841023 < n_1442841018)) break Label2;
          F.line = 415;
          var m_1442841024 = subInt(subInt(n_1442841018, 1), s_1442841023);
          Label3: {
            F.line = 416;
              Label4: while (true) {
              if (!(0 <= m_1442841024)) break Label4;
                F.line = 417;
                mergeAlt_1442841025(a_1442841010, b_1442841022, nimMax(addInt(subInt(m_1442841024, s_1442841023), 1), 0), m_1442841024, addInt(m_1442841024, s_1442841023), cmp_1442841013, order_1442841014);
                F.line = 418;
                m_1442841024 = subInt(m_1442841024, mulInt(s_1442841023, 2));
              }
          };
          F.line = 419;
          s_1442841023 = mulInt(s_1442841023, 2);
        }
    };
  framePtr = F.prev;

  
}

function sorted_1442840980(a_1442840982, cmp_1442840985, order_1442840986) {
  var result_1442840987 = [];

  var F = {procname: "sorted.sorted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "algorithm.nim";
    result_1442840987 = nimCopy(null, newSeq_1442840992(chckRange((a_1442840982).length, 0, 2147483647)), NTI1442840842);
    Label1: {
      F.line = 449;
      var i_1442841007 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098104 = 0;
      F.line = 449;
      F.filename = "algorithm.nim";
      colontmp__520098104 = (a_1442840982).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098105 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098105 <= colontmp__520098104)) break Label3;
            F.line = 449;
            F.filename = "algorithm.nim";
            i_1442841007 = res_520098105;
            F.line = 450;
            result_1442840987[chckIndx(i_1442841007, 0, (result_1442840987).length - 1)] = nimCopy(result_1442840987[chckIndx(i_1442841007, 0, (result_1442840987).length - 1)], a_1442840982[chckIndx(i_1442841007, 0, (a_1442840982).length - 1)], NTI1442840583);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098105 = addInt(res_520098105, 1);
          }
      };
    };
    F.line = 451;
    F.filename = "algorithm.nim";
    sort_1442841008(result_1442840987, cmp_1442840985, order_1442840986);
  framePtr = F.prev;

  return result_1442840987;

}

function cmp_33557985(x_33557987, y_33557988) {
  var result_33557989 = 0;

  var F = {procname: "cmp.cmp", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((x_33557987 == y_33557988)) {
    F.line = 892;
    F.filename = "system.nim";
    result_33557989 = 0;
    break BeforeRet;
    }
    
    if ((x_33557987 < y_33557988)) {
    F.line = 893;
    result_33557989 = (-1);
    break BeforeRet;
    }
    
    F.line = 894;
    result_33557989 = 1;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_33557989;

}

function newSeq_1442840797(len_1442840799) {
  var result_1442840800 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1442840800 = new Array(len_1442840799); for (var i = 0 ; i < len_1442840799 ; ++i) { result_1442840800[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }  framePtr = F.prev;

  return result_1442840800;

}

function find_1006633015(a_1006633018, item_1006633019) {
  var result_1006633020 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_1006633020 = 0;
    Label1: {
      F.line = 1672;
      var i_1006633024 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520095832 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520095832 < (a_1006633018).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_1006633024 = a_1006633018[chckIndx(i_520095832, 0, (a_1006633018).length - 1)];
            if (eqStrings(i_1006633024, item_1006633019)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_1006633020 = addInt(result_1006633020, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520095832 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_1006633020 = (-1);
  };
  framePtr = F.prev;

  return result_1006633020;

}

function contains_1006633010(a_1006633012, item_1006633013) {
  var result_1006633014 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_1006633014 = (0 <= find_1006633015(a_1006633012, item_1006633013));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1006633014;

}

function HEX26_1442840882(x_1442840884, y_1442840885) {
  var result_1442840886 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1553;
    F.filename = "system.nim";
    result_1442840886 = new Array(chckRange(addInt((x_1442840884).length, 1), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1442840884).length, 1), 0, 2147483647) ; ++i) { result_1442840886[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }    Label1: {
      F.line = 1554;
      var i_1442840901 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098113 = 0;
      F.line = 1554;
      F.filename = "system.nim";
      colontmp__520098113 = subInt((x_1442840884).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098114 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098114 <= colontmp__520098113)) break Label3;
            F.line = 1554;
            F.filename = "system.nim";
            i_1442840901 = res_520098114;
            F.line = 1555;
            result_1442840886[chckIndx(i_1442840901, 0, (result_1442840886).length - 1)] = nimCopy(result_1442840886[chckIndx(i_1442840901, 0, (result_1442840886).length - 1)], x_1442840884[chckIndx(i_1442840901, 0, (x_1442840884).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098114 = addInt(res_520098114, 1);
          }
      };
    };
    F.line = 1556;
    F.filename = "system.nim";
    result_1442840886[chckIndx((x_1442840884).length, 0, (result_1442840886).length - 1)] = nimCopy(result_1442840886[chckIndx((x_1442840884).length, 0, (result_1442840886).length - 1)], y_1442840885, NTI1442840582);
  framePtr = F.prev;

  return result_1442840886;

}

function secretSynergize_1442840953(currentPowers_1442840954, synergies_1442840955) {
      
function HEX3Aanonymous_1442840962(xHEX60gensym15_1442840966, yHEX60gensym15_1442840967) {
        var result_1442840968 = 0;

        var F = {procname: "secretSynergize.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
        framePtr = F;
          F.line = 500;
          F.filename = "algorithm.nim";
          var it_1442840969 = nimCopy(null, xHEX60gensym15_1442840966, NTI1442840583);
          F.line = 501;
          var aHEX60gensym15_1442840970 = it_1442840969.Field0.priority;
          F.line = 502;
          it_1442840969 = nimCopy(it_1442840969, yHEX60gensym15_1442840967, NTI1442840583);
          F.line = 503;
          var bHEX60gensym15_1442840971 = it_1442840969.Field0.priority;
          F.line = 504;
          result_1442840968 = cmp_33557985(aHEX60gensym15_1442840970, bHEX60gensym15_1442840971);
        framePtr = F.prev;

        return result_1442840968;

      }

  var result_1442840956 = [];

  var F = {procname: "power.secretSynergize", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 124;
    F.filename = "power.nim";
    result_1442840956 = nimCopy(null, currentPowers_1442840954, NTI1442840820);
    Label1: {
      F.line = 126;
      var s_1442841104 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: [], Field4: 0};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520098098 = [];
      F.line = 126;
      F.filename = "power.nim";
      F.line = 499;
      F.filename = "algorithm.nim";
      var resultHEX60gensym15_1442841100 = sorted_1442840980(synergies_1442840955, HEX3Aanonymous_1442840962, 1);
      colontmp__520098098 = resultHEX60gensym15_1442841100;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098100 = 0;
      F.line = 250;
      var L_520098101 = (colontmp__520098098).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098100 < L_520098101)) break Label3;
            F.line = 126;
            F.filename = "power.nim";
            s_1442841104 = colontmp__520098098[chckIndx(i_520098100, 0, (colontmp__520098098).length - 1)];
              F.line = 652;
              F.filename = "sequtils.nim";
              var resultHEX60gensym18_1442841109 = newSeq_1442840797(0);
              Label4: {
                F.line = 653;
                var it_1442841113 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520098091 = 0;
                F.line = 250;
                var L_520098092 = (result_1442840956).length;
                Label5: {
                  F.line = 251;
                    Label6: while (true) {
                    if (!(i_520098091 < L_520098092)) break Label6;
                      F.line = 653;
                      F.filename = "sequtils.nim";
                      it_1442841113 = result_1442840956[chckIndx(i_520098091, 0, (result_1442840956).length - 1)];
                      if (contains_1006633010(s_1442841104.Field2, it_1442841113.name)) {
                      F.line = 654;
                      var Temporary7 = nimCopy(null, it_1442841113, NTI1442840582);
                      resultHEX60gensym18_1442841109.push(Temporary7);;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520098091 += 1;
                      if (!(((result_1442840956).length == L_520098092))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            if (((resultHEX60gensym18_1442841109).length == (s_1442841104.Field2).length)) {
            if (((s_1442841104.Field3).length == 0)) {
            F.line = 129;
            F.filename = "power.nim";
            var Temporary8 = nimCopy(null, powers_1442840650[0][chckIndx(s_1442841104.Field4, 0, (powers_1442840650[0]).length - 1)], NTI1442840582);
            result_1442840956.push(Temporary8);;
            }
            else {
              F.line = 131;
              F.line = 652;
              F.filename = "sequtils.nim";
              var resultHEX60gensym21_1442841139 = newSeq_1442840797(0);
              Label9: {
                F.line = 653;
                var it_1442841143 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520098095 = 0;
                F.line = 250;
                var L_520098096 = (result_1442840956).length;
                Label10: {
                  F.line = 251;
                    Label11: while (true) {
                    if (!(i_520098095 < L_520098096)) break Label11;
                      F.line = 653;
                      F.filename = "sequtils.nim";
                      it_1442841143 = result_1442840956[chckIndx(i_520098095, 0, (result_1442840956).length - 1)];
                      if (!(eqStrings(it_1442841143.name, [73,108,108,101,103,97,108,32,70,111,114,109,97,116,105,111,110]))) {
                      F.line = 654;
                      var Temporary12 = nimCopy(null, it_1442841143, NTI1442840582);
                      resultHEX60gensym21_1442841139.push(Temporary12);;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520098095 += 1;
                      if (!(((result_1442840956).length == L_520098096))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              result_1442840956 = nimCopy(null, HEX26_1442840882(resultHEX60gensym21_1442841139, powers_1442840650[0][chckIndx(s_1442841104.Field4, 0, (powers_1442840650[0]).length - 1)]), NTI1442840778);
            }
            
            }
            
            F.line = 13;
            i_520098100 += 1;
            if (!(((colontmp__520098098).length == L_520098101))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1442840956;

}

function HEX26_1442841572(x_1442841574, y_1442841575) {
  var result_1442841576 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1442841576 = new Array(chckRange(addInt((x_1442841574).length, (y_1442841575).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1442841574).length, (y_1442841575).length), 0, 2147483647) ; ++i) { result_1442841576[i] = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: [], Field4: 0}; }    Label1: {
      F.line = 1538;
      var i_1442841594 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098117 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__520098117 = subInt((x_1442841574).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098118 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098118 <= colontmp__520098117)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1442841594 = res_520098118;
            F.line = 1539;
            result_1442841576[chckIndx(i_1442841594, 0, (result_1442841576).length - 1)] = nimCopy(result_1442841576[chckIndx(i_1442841594, 0, (result_1442841576).length - 1)], x_1442841574[chckIndx(i_1442841594, 0, (x_1442841574).length - 1)], NTI1442840583);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098118 = addInt(res_520098118, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1442841602 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098121 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__520098121 = subInt((y_1442841575).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098122 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_520098122 <= colontmp__520098121)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1442841602 = res_520098122;
            F.line = 1541;
            result_1442841576[chckIndx(addInt(i_1442841602, (x_1442841574).length), 0, (result_1442841576).length - 1)] = nimCopy(result_1442841576[chckIndx(addInt(i_1442841602, (x_1442841574).length), 0, (result_1442841576).length - 1)], y_1442841575[chckIndx(i_1442841602, 0, (y_1442841575).length - 1)], NTI1442840583);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098122 = addInt(res_520098122, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841576;

}

function mergeAlt_1442841735(a_1442841737, b_1442841738, lo_1442841739, m_1442841740, hi_1442841741, cmp_1442841744, order_1442841745) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((HEX2A_989855752(cmp_1442841744(a_1442841737[chckIndx(m_1442841740, 0, (a_1442841737).length - 1)], a_1442841737[chckIndx(addInt(m_1442841740, 1), 0, (a_1442841737).length - 1)]), order_1442841745) <= 0)) {
    F.line = 335;
    F.filename = "algorithm.nim";
    break BeforeRet;
    }
    
    F.line = 336;
    var j_1442841746 = lo_1442841739;
    if (!((j_1442841746 <= m_1442841740))) {
    F.line = 338;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim(338, 3) `j <= m` "));
    }
    
    F.line = 340;
    var bb_1442841752 = 0;
    Label1: {
      F.line = 341;
        Label2: while (true) {
        if (!(j_1442841746 <= m_1442841740)) break Label2;
          F.line = 342;
          b_1442841738[chckIndx(bb_1442841752, 0, (b_1442841738).length - 1)] = nimCopy(b_1442841738[chckIndx(bb_1442841752, 0, (b_1442841738).length - 1)], a_1442841737[chckIndx(j_1442841746, 0, (a_1442841737).length - 1)], NTI1442840582);
          F.line = 343;
          bb_1442841752 = addInt(bb_1442841752, 1);
          F.line = 344;
          j_1442841746 = addInt(j_1442841746, 1);
        }
    };
    F.line = 348;
    var i_1442841763 = 0;
    F.line = 349;
    var k_1442841764 = lo_1442841739;
    Label3: {
      F.line = 351;
        Label4: while (true) {
        if (!((k_1442841764 < j_1442841746) && (j_1442841746 <= hi_1442841741))) break Label4;
          if ((HEX2A_989855752(cmp_1442841744(b_1442841738[chckIndx(i_1442841763, 0, (b_1442841738).length - 1)], a_1442841737[chckIndx(j_1442841746, 0, (a_1442841737).length - 1)]), order_1442841745) <= 0)) {
          F.line = 353;
          a_1442841737[chckIndx(k_1442841764, 0, (a_1442841737).length - 1)] = nimCopy(a_1442841737[chckIndx(k_1442841764, 0, (a_1442841737).length - 1)], b_1442841738[chckIndx(i_1442841763, 0, (b_1442841738).length - 1)], NTI1442840582);
          F.line = 354;
          i_1442841763 = addInt(i_1442841763, 1);
          }
          else {
            F.line = 356;
            a_1442841737[chckIndx(k_1442841764, 0, (a_1442841737).length - 1)] = nimCopy(a_1442841737[chckIndx(k_1442841764, 0, (a_1442841737).length - 1)], a_1442841737[chckIndx(j_1442841746, 0, (a_1442841737).length - 1)], NTI1442840582);
            F.line = 357;
            j_1442841746 = addInt(j_1442841746, 1);
          }
          
          F.line = 358;
          k_1442841764 = addInt(k_1442841764, 1);
        }
    };
    Label5: {
      F.line = 361;
        Label6: while (true) {
        if (!(k_1442841764 < j_1442841746)) break Label6;
          F.line = 362;
          a_1442841737[chckIndx(k_1442841764, 0, (a_1442841737).length - 1)] = nimCopy(a_1442841737[chckIndx(k_1442841764, 0, (a_1442841737).length - 1)], b_1442841738[chckIndx(i_1442841763, 0, (b_1442841738).length - 1)], NTI1442840582);
          F.line = 363;
          k_1442841764 = addInt(k_1442841764, 1);
          F.line = 364;
          i_1442841763 = addInt(i_1442841763, 1);
        }
    };
  };
  framePtr = F.prev;

  
}

function sort_1442841718(a_1442841720, cmp_1442841723, order_1442841724) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 411;
    F.filename = "algorithm.nim";
    var n_1442841728 = (a_1442841720).length;
    F.line = 412;
    var b_1442841732 = newSeq_1442840797(chckRange(divInt(n_1442841728, 2), 0, 2147483647));
    F.line = 413;
    var s_1442841733 = 1;
    Label1: {
      F.line = 414;
        Label2: while (true) {
        if (!(s_1442841733 < n_1442841728)) break Label2;
          F.line = 415;
          var m_1442841734 = subInt(subInt(n_1442841728, 1), s_1442841733);
          Label3: {
            F.line = 416;
              Label4: while (true) {
              if (!(0 <= m_1442841734)) break Label4;
                F.line = 417;
                mergeAlt_1442841735(a_1442841720, b_1442841732, nimMax(addInt(subInt(m_1442841734, s_1442841733), 1), 0), m_1442841734, addInt(m_1442841734, s_1442841733), cmp_1442841723, order_1442841724);
                F.line = 418;
                m_1442841734 = subInt(m_1442841734, mulInt(s_1442841733, 2));
              }
          };
          F.line = 419;
          s_1442841733 = mulInt(s_1442841733, 2);
        }
    };
  framePtr = F.prev;

  
}

function sorted_1442841696(a_1442841698, cmp_1442841701, order_1442841702) {
  var result_1442841703 = [];

  var F = {procname: "sorted.sorted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "algorithm.nim";
    result_1442841703 = nimCopy(null, newSeq_1442840797(chckRange((a_1442841698).length, 0, 2147483647)), NTI1442840713);
    Label1: {
      F.line = 449;
      var i_1442841717 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098125 = 0;
      F.line = 449;
      F.filename = "algorithm.nim";
      colontmp__520098125 = (a_1442841698).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098126 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098126 <= colontmp__520098125)) break Label3;
            F.line = 449;
            F.filename = "algorithm.nim";
            i_1442841717 = res_520098126;
            F.line = 450;
            result_1442841703[chckIndx(i_1442841717, 0, (result_1442841703).length - 1)] = nimCopy(result_1442841703[chckIndx(i_1442841717, 0, (result_1442841703).length - 1)], a_1442841698[chckIndx(i_1442841717, 0, (a_1442841698).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098126 = addInt(res_520098126, 1);
          }
      };
    };
    F.line = 451;
    F.filename = "algorithm.nim";
    sort_1442841718(result_1442841703, cmp_1442841701, order_1442841702);
  framePtr = F.prev;

  return result_1442841703;

}

function concat_1442841612(seqs_1442841614) {
  var result_1442841615 = [];

  var F = {procname: "concat.concat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "sequtils.nim";
    var L_1442841616 = 0;
    Label1: {
      F.line = 135;
      var seqitm_1442841630 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520098135 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520098135 < (seqs_1442841614).length)) break Label3;
            F.line = 135;
            F.filename = "sequtils.nim";
            seqitm_1442841630 = seqs_1442841614[chckIndx(i_520098135, 0, (seqs_1442841614).length - 1)];
            F.line = 135;
            L_1442841616 = addInt(L_1442841616, (seqitm_1442841630).length);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098135 += 1;
          }
      };
    };
    F.line = 136;
    F.filename = "sequtils.nim";
    result_1442841615 = new Array(chckRange(L_1442841616, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1442841616, 0, 2147483647) ; ++i) { result_1442841615[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }    F.line = 137;
    var i_1442841643 = 0;
    Label4: {
      F.line = 138;
      var s_1442841647 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520098142 = 0;
      Label5: {
        F.line = 19;
          Label6: while (true) {
          if (!(i_520098142 < (seqs_1442841614).length)) break Label6;
            F.line = 138;
            F.filename = "sequtils.nim";
            s_1442841647 = seqs_1442841614[chckIndx(i_520098142, 0, (seqs_1442841614).length - 1)];
            Label7: {
              F.line = 139;
              var itm_1442841651 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520098139 = 0;
              F.line = 250;
              var L_520098140 = (s_1442841647).length;
              Label8: {
                F.line = 251;
                  Label9: while (true) {
                  if (!(i_520098139 < L_520098140)) break Label9;
                    F.line = 139;
                    F.filename = "sequtils.nim";
                    itm_1442841651 = s_1442841647[chckIndx(i_520098139, 0, (s_1442841647).length - 1)];
                    F.line = 140;
                    result_1442841615[chckIndx(i_1442841643, 0, (result_1442841615).length - 1)] = nimCopy(result_1442841615[chckIndx(i_1442841643, 0, (result_1442841615).length - 1)], itm_1442841651, NTI1442840582);
                    F.line = 141;
                    i_1442841643 = addInt(i_1442841643, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520098139 += 1;
                    if (!(((s_1442841647).length == L_520098140))) {
                    F.line = 254;
                    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            F.line = 13;
            i_520098142 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1442841615;

}

function execute_1442841553(myDrafts_1442841554, opponentDrafts_1442841555, mySide_1442841556, board_1442841557, state_1442841558) {
      
function HEX3Aanonymous_1442841678(xHEX60gensym42_1442841682, yHEX60gensym42_1442841683) {
        var result_1442841684 = 0;

        var F = {procname: "execute.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
        framePtr = F;
          F.line = 500;
          F.filename = "algorithm.nim";
          var it_1442841685 = nimCopy(null, xHEX60gensym42_1442841682, NTI1442840582);
          F.line = 501;
          var aHEX60gensym42_1442841686 = it_1442841685.priority;
          F.line = 502;
          it_1442841685 = nimCopy(it_1442841685, yHEX60gensym42_1442841683, NTI1442840582);
          F.line = 503;
          var bHEX60gensym42_1442841687 = it_1442841685.priority;
          F.line = 504;
          result_1442841684 = cmp_33557985(aHEX60gensym42_1442841686, bHEX60gensym42_1442841687);
        framePtr = F.prev;

        return result_1442841684;

      }

  var F = {procname: "power.execute", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 183;
      F.filename = "power.nim";
      var x_1442841562 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098077 = 0;
      F.line = 250;
      var L_520098078 = (myDrafts_1442841554).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098077 < L_520098078)) break Label3;
            F.line = 183;
            F.filename = "power.nim";
            x_1442841562 = myDrafts_1442841554[chckIndx(i_520098077, 0, (myDrafts_1442841554).length - 1)];
            if (!((!(contains_1442841456(opponentDrafts_1442841555, x_1442841562)) && !(eqStrings(x_1442841562.name, [78,111,116,104,105,110,103,46,32,78,111,116,104,105,110,103,46,46,46]))))) {
            F.line = 184;
            failedAssertImpl_268435541((makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/power.nim(184, 9) `x notin opponentDrafts and x.name != emptyPower.name` ") || []).concat(x_1442841562.name || [],[32,105,115,32,115,111,109,101,104,111,119,32,105,110,32,98,111,116,104,32,112,111,111,108,115] || []));
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098077 += 1;
            if (!(((myDrafts_1442841554).length == L_520098078))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 186;
    F.filename = "power.nim";
    var mySynergizedDrafts_1442841606 = secretSynergize_1442840953(myDrafts_1442841554, HEX26_1442841572(secretSynergies_1442840652[0], secretSecretSynergies_1442840653[0]));
    F.line = 187;
    var opponentSynergizedDrafts_1442841611 = secretSynergize_1442840953(opponentDrafts_1442841555, HEX26_1442841572(secretSynergies_1442840652[0], secretSecretSynergies_1442840653[0]));
    Label4: {
      F.line = 189;
      var d_1442841799 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520098081 = [];
      F.line = 189;
      F.filename = "power.nim";
      F.line = 499;
      F.filename = "algorithm.nim";
      var resultHEX60gensym42_1442841795 = sorted_1442841696(concat_1442841612([nimCopy(null, mySynergizedDrafts_1442841606, NTI1442841293), nimCopy(null, opponentSynergizedDrafts_1442841611, NTI1442841298)]), HEX3Aanonymous_1442841678, 1);
      colontmp__520098081 = resultHEX60gensym42_1442841795;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098082 = 0;
      F.line = 250;
      var L_520098083 = (colontmp__520098081).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_520098082 < L_520098083)) break Label6;
            F.line = 189;
            F.filename = "power.nim";
            d_1442841799 = colontmp__520098081[chckIndx(i_520098082, 0, (colontmp__520098081).length - 1)];
            if (contains_1442841456(mySynergizedDrafts_1442841606, d_1442841799)) {
            F.line = 191;
            d_1442841799.onStart(mySide_1442841556, mySide_1442841556, board_1442841557, state_1442841558);
            }
            else {
              F.line = 193;
            d_1442841799.onStart(otherSide_1224737925(mySide_1442841556), mySide_1442841556, board_1442841557, state_1442841558);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098082 += 1;
            if (!(((colontmp__520098081).length == L_520098083))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function add_520095564(x_520095566, x_520095566_Idx, y_520095567) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1210;
    F.filename = "system.nim";
    var xl_520095571 = (x_520095566[x_520095566_Idx]).length;
    F.line = 1211;
    if (x_520095566[x_520095566_Idx].length < (Temporary1 = chckRange(addInt(xl_520095571, (y_520095567).length), 0, 2147483647), Temporary1)) { for (var i = x_520095566[x_520095566_Idx].length ; i < Temporary1 ; ++i) x_520095566[x_520095566_Idx].push(({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0})); }
               else { x_520095566[x_520095566_Idx].length = Temporary1; };
    Label2: {
      F.line = 1212;
      var i_520095586 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098145 = 0;
      F.line = 1212;
      F.filename = "system.nim";
      colontmp__520098145 = (y_520095567).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098146 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_520098146 <= colontmp__520098145)) break Label4;
            F.line = 1212;
            F.filename = "system.nim";
            i_520095586 = res_520098146;
            F.line = 1212;
            x_520095566[x_520095566_Idx][chckIndx(addInt(xl_520095571, i_520095586), 0, (x_520095566[x_520095566_Idx]).length - 1)] = nimCopy(x_520095566[x_520095566_Idx][chckIndx(addInt(xl_520095571, i_520095586), 0, (x_520095566[x_520095566_Idx]).length - 1)], y_520095567[chckIndx(i_520095586, 0, (y_520095567).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098146 = addInt(res_520098146, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619907(taken_1459619908, taker_1459619909, board_1459619910, state_1459619911) {
  var result_1459619914 = {Field0: {Field0: 0, Field1: 0}, Field1: false};

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1373;
    F.filename = "powers.nim";
    var colontmp__520098149 = nimCopy(null, taker_1459619909.tile, NTI1224736771);
    F.line = 1373;
    var colontmp__520098150 = false;
    F.line = 1373;
    result_1459619914 = nimCopy(result_1459619914, {Field0: nimCopy(null, colontmp__520098149, NTI1224736771), Field1: colontmp__520098150}, NTI1459619664);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1459619914;

}

function HEX3Aanonymous_1459619870(piece_1459619871, board_1459619872, state_1459619873) {
  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(piece_1459619871.drunk)) {
    F.line = 1360;
    F.filename = "powers.nim";
    piece_1459619871.drunk = true;
    F.line = 1361;
    randomize_1392509190(BigInt(addInt(addInt(mulInt(10, piece_1459619871.tile.Field1), mulInt(100, piece_1459619871.tile.Field0)), state_1459619873.Field0.randSeed)));
    F.line = 1363;
    piece_1459619871.moves.push(HEX3Aanonymous_1291845865);;
    F.line = 1364;
    var moves_1459619878 = HEX3Aanonymous_1291845865(board_1459619872, piece_1459619871);
    F.line = 1365;
    var takes_1459619879 = HEX3Aanonymous_1291845880(board_1459619872, piece_1459619871);
    F.line = 1366;
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym103_1459619884 = newSeq_1224737683(0);
    Label1: {
      F.line = 653;
      var it_1459619888 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098152 = 0;
      F.line = 250;
      var L_520098153 = (moves_1459619878).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098152 < L_520098153)) break Label3;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1459619888 = moves_1459619878[chckIndx(i_520098152, 0, (moves_1459619878).length - 1)];
            if (!(contains_1224737585(takes_1459619879, it_1459619888))) {
            F.line = 654;
            var Temporary4 = nimCopy(null, it_1459619888, NTI1224736771);
            resultHEX60gensym103_1459619884.push(Temporary4);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098152 += 1;
            if (!(((moves_1459619878).length == L_520098153))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var attempt_1459619897 = nimCopy(null, resultHEX60gensym103_1459619884, NTI1224737429);
    if (((attempt_1459619897).length == 0)) {
    F.line = 1368;
    F.filename = "powers.nim";
    break BeforeRet;
    }
    else {
      F.line = 1369;
    piece_1459619871.onMove(piece_1459619871, sample_1459619576(attempt_1459619897), board_1459619872, state_1459619873);
    }
    
    }
    
  };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_1459619916(side_1459619917, __1459619918, b_1459619919, state_1459619920) {
    var Temporary1;

  var F = {procname: "powers.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/powers.nim", line: 0};
  framePtr = F;
    F.line = 1384;
    F.filename = "powers.nim";
    randomize_1392509190(BigInt(state_1459619920.Field0.randSeed));
    F.line = 1385;
    if ((side_1459619917 == 0)) {
    Temporary1 = 5;
    }
    else {
    Temporary1 = 2;
    }
    
    var rank_1459619925 = Temporary1;
    F.line = 1386;
    var commoner_1459619942 = {item: 7, color: side_1459619917, moves: [HEX3Aanonymous_1291845865], takes: [], onMove: HEX3Aanonymous_1224737795, onTake: HEX3Aanonymous_1224737806, whenTaken: HEX3Aanonymous_1459619907, onEndTurn: [HEX3Aanonymous_1459619870], onPromote: [HEX3Aanonymous_1224737374], filePath: [99,105,118,105,108,105,97,110,46,115,118,103], timesMoved: 0, piecesTaken: 0, tile: nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771), promoted: false, colorable: true, rotate: false, drunk: false, index: 0, casts: []};
    F.line = 1390;
    var spawns_1459619943 = 0;
    F.line = 1391;
    var failsafe_1459619944 = 20;
    F.line = 1392;
    var attempt_1459619945 = rand_1392509064(7);
    Label2: {
      F.line = 1393;
        Label3: while (true) {
        if (!(!((spawns_1459619943 == 3)) && !((failsafe_1459619944 == 0)))) break Label3;
          if (isAir_1224737900(b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)][chckIndx(attempt_1459619945, 0, (b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)]).length - 1)])) {
          F.line = 1395;
          var tile_1459619946 = nimCopy(null, b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)][chckIndx(attempt_1459619945, 0, (b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)]).length - 1)].tile, NTI1224736771);
          F.line = 1396;
          b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)][chckIndx(attempt_1459619945, 0, (b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)]).length - 1)] = nimCopy(b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)][chckIndx(attempt_1459619945, 0, (b_1459619919[chckIndx(rank_1459619925, 0, (b_1459619919).length - 1)]).length - 1)], pieceCopy_1224737824(commoner_1459619942, newIndex_1224737419(state_1459619920), commoner_1459619942.item, commoner_1459619942.color, commoner_1459619942.timesMoved, commoner_1459619942.piecesTaken, tile_1459619946, commoner_1459619942.moves, commoner_1459619942.takes, commoner_1459619942.onMove, commoner_1459619942.onTake, commoner_1459619942.whenTaken, commoner_1459619942.onEndTurn, commoner_1459619942.onPromote, commoner_1459619942.promoted, commoner_1459619942.filePath, commoner_1459619942.colorable, commoner_1459619942.rotate, commoner_1459619942.drunk), NTI1224736794);
          F.line = 1397;
          spawns_1459619943 = addInt(spawns_1459619943, 1);
          }
          else {
            F.line = 1399;
          failsafe_1459619944 = subInt(failsafe_1459619944, 1);
          }
          
          F.line = 1401;
          attempt_1459619945 = rand_1392509064(7);
        }
    };
  framePtr = F.prev;

  
}

function synergize_1442840768(pool_1442840769, currentPowers_1442840770, t_1442840771) {
  var result_1442840772 = [];

  var F = {procname: "power.synergize", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "power.nim";
    result_1442840772 = nimCopy(null, pool_1442840769, NTI1442840689);
    Label1: {
      F.line = 116;
      var s_1442840795 = {Field0: ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}), Field1: 0, Field2: [], Field3: [], Field4: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098191 = 0;
      F.line = 250;
      var L_520098192 = (draftSynergies_1442840651[0]).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098191 < L_520098192)) break Label3;
            F.line = 116;
            F.filename = "power.nim";
            s_1442840795 = draftSynergies_1442840651[0][chckIndx(i_520098191, 0, (draftSynergies_1442840651[0]).length - 1)];
              F.line = 652;
              F.filename = "sequtils.nim";
              var resultHEX60gensym8_1442840821 = newSeq_1442840797(0);
              Label4: {
                F.line = 653;
                var it_1442840843 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520098184 = 0;
                F.line = 250;
                var L_520098185 = (currentPowers_1442840770).length;
                Label5: {
                  F.line = 251;
                    Label6: while (true) {
                    if (!(i_520098184 < L_520098185)) break Label6;
                      F.line = 653;
                      F.filename = "sequtils.nim";
                      it_1442840843 = currentPowers_1442840770[chckIndx(i_520098184, 0, (currentPowers_1442840770).length - 1)];
                      if (contains_1006633010(s_1442840795.Field2, it_1442840843.name)) {
                      F.line = 654;
                      var Temporary7 = nimCopy(null, it_1442840843, NTI1442840582);
                      resultHEX60gensym8_1442840821.push(Temporary7);;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520098184 += 1;
                      if (!(((currentPowers_1442840770).length == L_520098185))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            if (((resultHEX60gensym8_1442840821).length == (s_1442840795.Field2).length)) {
            if (((s_1442840795.Field3).length == 0)) {
            F.line = 119;
            F.filename = "power.nim";
            var Temporary8 = nimCopy(null, powers_1442840650[0][chckIndx(s_1442840795.Field4, 0, (powers_1442840650[0]).length - 1)], NTI1442840582);
            result_1442840772.push(Temporary8);;
            }
            else {
              F.line = 121;
              F.line = 652;
              F.filename = "sequtils.nim";
              var resultHEX60gensym13_1442840869 = newSeq_1442840797(0);
              Label9: {
                F.line = 653;
                var it_1442840873 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                F.line = 249;
                F.filename = "iterators.nim";
                var i_520098188 = 0;
                F.line = 250;
                var L_520098189 = (result_1442840772).length;
                Label10: {
                  F.line = 251;
                    Label11: while (true) {
                    if (!(i_520098188 < L_520098189)) break Label11;
                      F.line = 653;
                      F.filename = "sequtils.nim";
                      it_1442840873 = result_1442840772[chckIndx(i_520098188, 0, (result_1442840772).length - 1)];
                      if (!(contains_1006633010(s_1442840795.Field3, it_1442840873.name))) {
                      F.line = 654;
                      var Temporary12 = nimCopy(null, it_1442840873, NTI1442840582);
                      resultHEX60gensym13_1442840869.push(Temporary12);;
                      }
                      
                      F.line = 13;
                      F.filename = "iterators.nim";
                      i_520098188 += 1;
                      if (!(((result_1442840772).length == L_520098189))) {
                      F.line = 254;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              result_1442840772 = nimCopy(null, HEX26_1442840882(resultHEX60gensym13_1442840869, powers_1442840650[0][chckIndx(s_1442840795.Field4, 0, (powers_1442840650[0]).length - 1)]), NTI1442840778);
            }
            
            }
            
            F.line = 13;
            i_520098191 += 1;
            if (!(((draftSynergies_1442840651[0]).length == L_520098192))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1442840772;

}

function newSeq_503317026(len_503317028) {
  var result_503317029 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_503317029 = new Array(len_503317028); for (var i = 0 ; i < len_503317028 ; ++i) { result_503317029[i] = []; }  framePtr = F.prev;

  return result_503317029;

}

function newSeq_1442841310(len_1442841312) {
  var result_1442841313 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_1442841313 = new Array(len_1442841312); for (var i = 0 ; i < len_1442841312 ; ++i) { result_1442841313[i] = 0; }  framePtr = F.prev;

  return result_1442841313;

}

function randomPower_1442841216(t_1442841217, currentPowers_1442841218, alreadySelected_1442841223) {
      var Temporary2;

  var result_1442841224 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});

  var F = {procname: "power.randomPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 149;
    F.filename = "power.nim";
    F.line = 652;
    F.filename = "sequtils.nim";
    var resultHEX60gensym23_1442841229 = newSeq_1442840797(0);
    Label1: {
      F.line = 653;
      var it_1442841233 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520098165 = [];
      F.line = 149;
      F.filename = "power.nim";
      colontmp__520098165 = synergize_1442840768((Temporary2 = seqOf_1442841183(t_1442841217), Temporary2)[0][Temporary2[1]], currentPowers_1442841218, t_1442841217);
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098166 = 0;
      F.line = 250;
      var L_520098167 = (colontmp__520098165).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_520098166 < L_520098167)) break Label4;
            F.line = 653;
            F.filename = "sequtils.nim";
            it_1442841233 = colontmp__520098165[chckIndx(i_520098166, 0, (colontmp__520098165).length - 1)];
              Label5: {
                F.line = 1024;
                var iHEX60gensym25_1442841254 = 0;
                F.line = 1025;
                var resultHEX60gensym25_1442841261 = newSeq_503317026(chckRange((alreadySelected_1442841223).length, 0, 2147483647));
                Label6: {
                  F.line = 1026;
                  var it_1442841265 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
                  F.line = 249;
                  F.filename = "iterators.nim";
                  var i_520098162 = 0;
                  F.line = 250;
                  var L_520098163 = (alreadySelected_1442841223).length;
                  Label7: {
                    F.line = 251;
                      Label8: while (true) {
                      if (!(i_520098162 < L_520098163)) break Label8;
                        F.line = 1026;
                        F.filename = "sequtils.nim";
                        it_1442841265 = alreadySelected_1442841223[chckIndx(i_520098162, 0, (alreadySelected_1442841223).length - 1)];
                        F.line = 149;
                        F.filename = "power.nim";
                        resultHEX60gensym25_1442841261[chckIndx(iHEX60gensym25_1442841254, 0, (resultHEX60gensym25_1442841261).length - 1)] = nimCopy(null, it_1442841265.name, NTI33554449);
                        F.line = 1028;
                        F.filename = "sequtils.nim";
                        iHEX60gensym25_1442841254 = addInt(iHEX60gensym25_1442841254, 1);
                        F.line = 13;
                        F.filename = "iterators.nim";
                        i_520098162 += 1;
                        if (!(((alreadySelected_1442841223).length == L_520098163))) {
                        F.line = 254;
                        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
              };
            if (!(contains_1006633010(resultHEX60gensym25_1442841261, it_1442841233.name))) {
            F.line = 654;
            F.filename = "sequtils.nim";
            var Temporary9 = nimCopy(null, it_1442841233, NTI1442840582);
            resultHEX60gensym23_1442841229.push(Temporary9);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098166 += 1;
            if (!(((colontmp__520098165).length == L_520098167))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var search_1442841278 = nimCopy(null, resultHEX60gensym23_1442841229, NTI1442840713);
    if (((search_1442841278).length == 0)) {
    F.line = 150;
    F.filename = "power.nim";
    result_1442841224 = nimCopy(result_1442841224, emptyPower_1442840639, NTI1442840582);
    break BeforeRet;
    }
    
    F.line = 152;
    F.line = 975;
    F.filename = "sequtils.nim";
    Label10: {
      F.line = 1024;
      var iHEX60gensym29_1442841306 = 0;
      F.line = 1025;
      var resultHEX60gensym29_1442841334 = newSeq_1442841310(chckRange((search_1442841278).length, 0, 2147483647));
      Label11: {
        F.line = 1026;
        var it_1442841338 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520098171 = 0;
        F.line = 250;
        var L_520098172 = (search_1442841278).length;
        Label12: {
          F.line = 251;
            Label13: while (true) {
            if (!(i_520098171 < L_520098172)) break Label13;
              F.line = 1026;
              F.filename = "sequtils.nim";
              it_1442841338 = search_1442841278[chckIndx(i_520098171, 0, (search_1442841278).length - 1)];
              F.line = 152;
              F.filename = "power.nim";
              resultHEX60gensym29_1442841334[chckIndx(iHEX60gensym29_1442841306, 0, (resultHEX60gensym29_1442841334).length - 1)] = it_1442841338.rarity;
              F.line = 1028;
              F.filename = "sequtils.nim";
              iHEX60gensym29_1442841306 = addInt(iHEX60gensym29_1442841306, 1);
              F.line = 13;
              F.filename = "iterators.nim";
              i_520098171 += 1;
              if (!(((search_1442841278).length == L_520098172))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var sHEX60gensym28_1442841343 = nimCopy(null, resultHEX60gensym29_1442841334, NTI1442841098);
    F.line = 976;
    F.filename = "sequtils.nim";
    var nHEX60gensym28_1442841348 = (sHEX60gensym28_1442841343).length;
    if (!((0 < nHEX60gensym28_1442841348))) {
    F.line = 977;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym28 > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 978;
    var resultHEX60gensym28_1442841354 = sHEX60gensym28_1442841343[chckIndx(subInt(nHEX60gensym28_1442841348, 1), 0, (sHEX60gensym28_1442841343).length - 1)];
    Label14: {
      F.line = 979;
      var iHEX60gensym28_1442841360 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__520098175 = 0;
      F.line = 979;
      F.filename = "sequtils.nim";
      colontmp__520098175 = subInt(nHEX60gensym28_1442841348, 2);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520098176 = colontmp__520098175;
      Label15: {
        F.line = 34;
          Label16: while (true) {
          if (!(0 <= res_520098176)) break Label16;
            F.line = 979;
            F.filename = "sequtils.nim";
            iHEX60gensym28_1442841360 = res_520098176;
            F.line = 981;
            var a_1442841361 = sHEX60gensym28_1442841343[chckIndx(iHEX60gensym28_1442841360, 0, (sHEX60gensym28_1442841343).length - 1)];
            F.line = 982;
            var b_1442841362 = resultHEX60gensym28_1442841354;
            F.line = 152;
            F.filename = "power.nim";
            resultHEX60gensym28_1442841354 = addInt(a_1442841361, b_1442841362);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_520098176 = subInt(res_520098176, 1);
          }
      };
    };
    var sum_1442841363 = resultHEX60gensym28_1442841354;
    F.line = 153;
    F.filename = "power.nim";
    var x_1442841364 = rand_1392509064(sum_1442841363);
    Label17: {
      F.line = 155;
      var p_1442841368 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098179 = 0;
      F.line = 250;
      var L_520098180 = (search_1442841278).length;
      Label18: {
        F.line = 251;
          Label19: while (true) {
          if (!(i_520098179 < L_520098180)) break Label19;
            F.line = 155;
            F.filename = "power.nim";
            p_1442841368 = search_1442841278[chckIndx(i_520098179, 0, (search_1442841278).length - 1)];
            F.line = 156;
            x_1442841364 = subInt(x_1442841364, p_1442841368.rarity);
            if ((x_1442841364 <= 0)) {
            F.line = 157;
            result_1442841224 = nimCopy(result_1442841224, p_1442841368, NTI1442840582);
            break BeforeRet;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098179 += 1;
            if (!(((search_1442841278).length == L_520098180))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };
  framePtr = F.prev;

  return result_1442841224;

}

function randomTier_1442841373(w_1442841374) {
  var result_1442841375 = 0;

  var F = {procname: "power.randomTier", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((addInt(addInt(addInt(w_1442841374.Field0, w_1442841374.Field1), w_1442841374.Field2), w_1442841374.Field3) == 100))) {
    F.line = 160;
    F.filename = "power.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/power.nim(160, 5) `w.common + w.uncommon + w.rare + w.ultraRare == 100` "));
    }
    
    F.line = 161;
    var x_1442841381 = rand_1392509064(100);
    if ((x_1442841381 <= w_1442841374.Field0)) {
    F.line = 164;
    result_1442841375 = 0;
    break BeforeRet;
    }
    else {
    if ((x_1442841381 <= addInt(w_1442841374.Field0, w_1442841374.Field1))) {
    F.line = 166;
    result_1442841375 = 1;
    break BeforeRet;
    }
    else {
    if ((x_1442841381 <= addInt(addInt(w_1442841374.Field0, w_1442841374.Field1), w_1442841374.Field2))) {
    F.line = 168;
    result_1442841375 = 2;
    break BeforeRet;
    }
    else {
      F.line = 170;
      result_1442841375 = 3;
      break BeforeRet;
    }
    }}
  };
  framePtr = F.prev;

  return result_1442841375;

}

function HEX26_1442841411(x_1442841413, y_1442841414) {
  var result_1442841415 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1537;
    F.filename = "system.nim";
    result_1442841415 = new Array(chckRange(addInt((x_1442841413).length, (y_1442841414).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1442841413).length, (y_1442841414).length), 0, 2147483647) ; ++i) { result_1442841415[i] = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0}); }    Label1: {
      F.line = 1538;
      var i_1442841433 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098195 = 0;
      F.line = 1538;
      F.filename = "system.nim";
      colontmp__520098195 = subInt((x_1442841413).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098196 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098196 <= colontmp__520098195)) break Label3;
            F.line = 1538;
            F.filename = "system.nim";
            i_1442841433 = res_520098196;
            F.line = 1539;
            result_1442841415[chckIndx(i_1442841433, 0, (result_1442841415).length - 1)] = nimCopy(result_1442841415[chckIndx(i_1442841433, 0, (result_1442841415).length - 1)], x_1442841413[chckIndx(i_1442841433, 0, (x_1442841413).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098196 = addInt(res_520098196, 1);
          }
      };
    };
    Label4: {
      F.line = 1540;
      F.filename = "system.nim";
      var i_1442841441 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098199 = 0;
      F.line = 1540;
      F.filename = "system.nim";
      colontmp__520098199 = subInt((y_1442841414).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098200 = 0;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_520098200 <= colontmp__520098199)) break Label6;
            F.line = 1540;
            F.filename = "system.nim";
            i_1442841441 = res_520098200;
            F.line = 1541;
            result_1442841415[chckIndx(addInt(i_1442841441, (x_1442841413).length), 0, (result_1442841415).length - 1)] = nimCopy(result_1442841415[chckIndx(addInt(i_1442841441, (x_1442841413).length), 0, (result_1442841415).length - 1)], y_1442841414[chckIndx(i_1442841441, 0, (y_1442841414).length - 1)], NTI1442840582);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098200 = addInt(res_520098200, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841415;

}

function draftRandomPower_1442841449(allSelected_1442841450, drafterSelected_1442841451, options_1442841452, normalWeights_1442841453, buffedWeights_1442841454) {
    var Temporary1;

  var result_1442841455 = [];

  var F = {procname: "power.draftRandomPower", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    F.line = 177;
    F.filename = "power.nim";
    if (contains_1442841456(drafterSelected_1442841451, holy_1442840645)) {
    Temporary1 = buffedWeights_1442841454;
    }
    else {
    Temporary1 = normalWeights_1442841453;
    }
    
    var weights_1442841505 = nimCopy(null, Temporary1, NTI1442840584);
    Label2: {
      F.line = 178;
      var x_1442841510 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098156 = 0;
      F.line = 178;
      F.filename = "power.nim";
      colontmp__520098156 = subInt(options_1442841452, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098157 = 0;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_520098157 <= colontmp__520098156)) break Label4;
            F.line = 178;
            F.filename = "power.nim";
            x_1442841510 = res_520098157;
            F.line = 179;
            result_1442841455.push(randomPower_1442841216(randomTier_1442841373(weights_1442841505), drafterSelected_1442841451, HEX26_1442841411(allSelected_1442841450, result_1442841455)));;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098157 = addInt(res_520098157, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841455;

}

function draftRandomPowerTier_1442841398(t_1442841399, allSelected_1442841400, drafterSelected_1442841401, options_1442841402, normalWeights_1442841403, buffedWeights_1442841404) {
  var result_1442841405 = [];

  var F = {procname: "power.draftRandomPowerTier", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 173;
      F.filename = "power.nim";
      var x_1442841410 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098203 = 0;
      F.line = 173;
      F.filename = "power.nim";
      colontmp__520098203 = subInt(options_1442841402, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098204 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098204 <= colontmp__520098203)) break Label3;
            F.line = 173;
            F.filename = "power.nim";
            x_1442841410 = res_520098204;
            F.line = 174;
            result_1442841405.push(randomPower_1442841216(t_1442841399, drafterSelected_1442841401, HEX26_1442841411(allSelected_1442841400, result_1442841405)));;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098204 = addInt(res_520098204, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1442841405;

}

function draft_520095548(allDrafts_520095553, drafter_520095558) {
  var F = {procname: "main.draft", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 331;
    F.filename = "main.nim";
    var disabled_520095563 = [[]];
    if (disableRNGPowers_520093846[0]) {
    F.line = 334;
    add_520095564(disabled_520095563, 0, rngPowers_1459621498);
    }
    
    if (!(enableExperimental_520093848[0])) {
    F.line = 336;
    add_520095564(disabled_520095563, 0, experimentalPowers_1459621503);
    }
    
    if ((gameMode_520093851[0] == 2)) {
    F.line = 339;
    draftOptions_520093815[0] = nimCopy(null, draftRandomPower_1442841449(HEX26_1442841411(allDrafts_520095553, disabled_520095563[0]), drafter_520095558, draftChoices_520093816[0], {Field0: 60, Field1: 30, Field2: 9, Field3: 1}, {Field0: 50, Field1: 36, Field2: 12, Field3: 2}), NTI1442841190);
    }
    else {
    if ((gameMode_520093851[0] == 1)) {
    F.line = 342;
    draftOptions_520093815[0] = nimCopy(null, draftRandomPowerTier_1442841398(draftTier_520093818[0], HEX26_1442841411(HEX26_1442840882(allDrafts_520095553, holy_1442840645), disabled_520095563[0]), drafter_520095558, draftChoices_520093816[0], {Field0: 60, Field1: 30, Field2: 9, Field3: 1}, {Field0: 50, Field1: 36, Field2: 12, Field3: 2}), NTI1442841153);
    }
    else {
    if ((gameMode_520093851[0] == 3)) {
    F.line = 344;
    draftOptions_520093815[0] = nimCopy(null, draftRandomPower_1442841449(HEX26_1442841411(allDrafts_520095553, disabled_520095563[0]), drafter_520095558, draftChoices_520093816[0], {Field0: 25, Field1: 35, Field2: 30, Field3: 10}, {Field0: 15, Field1: 38, Field2: 35, Field3: 12}), NTI1442841190);
    }
    }}
  framePtr = F.prev;

  
}

function newSeq_687867434(len_687867436) {
  var result_687867437 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_687867437 = new Array(len_687867436); for (var i = 0 ; i < len_687867436 ; ++i) { result_687867437[i] = ({k: 0, parent: null, current: null, newNode: null, oldNode: null}); }  framePtr = F.prev;

  return result_687867437;

}

function newSeq_687867462(len_687867464) {
  var result_687867465 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_687867465 = new Array(len_687867464); for (var i = 0 ; i < len_687867464 ; ++i) { result_687867465[i] = ({parent: null, newChild: null, pos: 0}); }  framePtr = F.prev;

  return result_687867465;

}

function init_687867382(ev_687867383) {
    
function HEX3Aanonymous_687867384() {
      var F = {procname: "init.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 747;
        F.filename = "karax.nim";
        dodraw_687867280(kxi__);
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.init", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 747;
    F.filename = "karax.nim";
    kxi__.renderId = window.requestAnimationFrame(HEX3Aanonymous_687867384);
  framePtr = F.prev;

  
}

function setRenderer_687867416(renderer_687867419, root_687867420, clientPostRenderCallback_687867423) {
    
function HEX3Aanonymous_687867496() {
      var F = {procname: "setRenderer.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 770;
        F.filename = "karax.nim";
        redraw_687867377(kxi__);
      framePtr = F.prev;

      
    }

  var result_687867424 = null;

  var F = {procname: "karax.setRenderer", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if ((document.getElementById(root_687867420) == null)) {
    F.line = 756;
    F.filename = "karax.nim";
    var msg_687867428 = (("Could not find a <div> with id=" + root_687867420) + ". Karax needs it as its rendering target.");
    F.line = 758;
    raiseException({message: cstrToNimstr(msg_687867428), parent: null, m_type: NTI33555177, name: null, trace: [], up: null}, "Exception");
    }
    
    F.line = 760;
    result_687867424 = {rootId: root_687867420, renderer: renderer_687867419, postRenderCallback: clientPostRenderCallback_687867423, patches: newSeq_687867434(60), patchesV: newSeq_687867462(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, rendering: false, patchLen: 0, patchLenV: 0, runCount: 0};
    F.line = 768;
    kxi__ = result_687867424;
    F.line = 769;
    window.addEventListener("load", init_687867382, false);
    F.line = 770;
    window.onhashchange = HEX3Aanonymous_687867496;
  framePtr = F.prev;

  return result_687867424;

}

function setRenderer_687867621(renderer_687867623, root_687867624, clientPostRenderCallback_687867626) {
    
function wrapRenderer_687867628(data_687867629) {
      var result_687867630 = null;

      var F = {procname: "setRenderer.wrapRenderer", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 775;
        F.filename = "karax.nim";
        result_687867630 = renderer_687867623();
      framePtr = F.prev;

      return result_687867630;

    }
    
function wrapPostRender_687867631(data_687867632) {
      var F = {procname: "setRenderer.wrapPostRender", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        if (!((clientPostRenderCallback_687867626 == null))) {
        F.line = 777;
        F.filename = "karax.nim";
        clientPostRenderCallback_687867626();
        }
        
      framePtr = F.prev;

      
    }

  var result_687867627 = null;

  var F = {procname: "karax.setRenderer", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 774;
    F.filename = "karax.nim";
    result_687867627 = setRenderer_687867416(wrapRenderer_687867628, root_687867624, wrapPostRender_687867631);
  framePtr = F.prev;

  return result_687867627;

}

function newVNode_721421181(kind_721421182) {
  var result_721421183 = null;

  var F = {procname: "vdom.newVNode", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 311;
    F.filename = "vdom.nim";
    result_721421183 = {kind: kind_721421182, index: (-1), m_type: NTI721420388, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};
  framePtr = F.prev;

  return result_721421183;

}

function add_721421120(parent_721421121, kid_721421122) {
  var F = {procname: "vdom.add", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 305;
    F.filename = "vdom.nim";
    parent_721421121.kids.push(kid_721421122);;
  framePtr = F.prev;

  
}

function tree_721421184(kind_721421185, kids_721421186) {
  var result_721421187 = null;

  var F = {procname: "vdom.tree", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 314;
    F.filename = "vdom.nim";
    result_721421187 = newVNode_721421181(kind_721421185);
    Label1: {
      F.line = 315;
      var k_721421200 = null;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520098208 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520098208 < (kids_721421186).length)) break Label3;
            F.line = 315;
            F.filename = "vdom.nim";
            k_721421200 = kids_721421186[chckIndx(i_520098208, 0, (kids_721421186).length - 1)];
            F.line = 315;
            add_721421120(result_721421187, k_721421200);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098208 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_721421187;

}

function text_721421252(s_721421253) {
  var result_721421254 = null;

  var F = {procname: "vdom.text", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 323;
    F.filename = "vdom.nim";
    result_721421254 = {kind: 0, text: toJSStr(s_721421253), index: (-1), m_type: NTI721420388, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};
  framePtr = F.prev;

  return result_721421254;

}

function addEventListener_721421303(n_721421304, event_721421305, handler_721421306) {
  var F = {procname: "vdom.addEventListener", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 347;
    F.filename = "vdom.nim";
    n_721421304.events.push({Field0: event_721421305, Field1: handler_721421306, Field2: null});;
  framePtr = F.prev;

  
}

function addEventHandler_687867670(n_687867671, k_687867672, action_687867673, kxi_687867674) {
    
function wrapper_687867675(ev_687867676, n_687867677) {
      var F = {procname: "addEventHandler.wrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 816;
        F.filename = "karax.nim";
        action_687867673(ev_687867676, n_687867677);
        if (!(kxi_687867674.surpressRedraws)) {
        F.line = 817;
        redraw_687867377(kxi_687867674);
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.addEventHandler", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 818;
    F.filename = "karax.nim";
    addEventListener_721421303(n_687867671, k_687867672, wrapper_687867675);
  framePtr = F.prev;

  
}

function toFloat_33556008(i_33556009) {
  var result_33556010 = 0.0;

  var F = {procname: "system.toFloat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1298;
    F.filename = "system.nim";
    result_33556010 = i_33556009;
  framePtr = F.prev;

  return result_33556010;

}

function HEX2F_33556020(x_33556021, y_33556022) {
  var result_33556023 = 0.0;

  var F = {procname: "system./", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1346;
    F.filename = "system.nim";
    result_33556023 = (toFloat_33556008(x_33556021) / toFloat_33556008(y_33556022));
  framePtr = F.prev;

  return result_33556023;

}

function epochTime_1409290426() {
  var result_1409290427 = 0.0;

  var F = {procname: "times.epochTime", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2808;
    F.filename = "times.nim";
    result_1409290427 = HEX2F_33556020(new Date().getTime(), 1000);
  framePtr = F.prev;

  return result_1409290427;

}

function initRand_1392509219() {
  var result_1392509220 = ({a0: 0, a1: 0});

  var F = {procname: "random.initRand", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 691;
    F.filename = "random.nim";
    var time_1392509221 = (BigInt(Math.trunc((epochTime_1409290426() * 1000.0))) & 2147483647n);
    F.line = 692;
    result_1392509220 = nimCopy(result_1392509220, initRand_1392509177(time_1392509221), NTI1392508932);
  framePtr = F.prev;

  return result_1392509220;

}

function randomize_1392509226() {
  var F = {procname: "random.randomize", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 745;
    F.filename = "random.nim";
    state_1392508942[0] = nimCopy(state_1392508942[0], initRand_1392509219(), NTI1392508932);
  framePtr = F.prev;

  
}

function substr_33558084(s_33558085, first_33558086, last_33558087) {
  var result_33558088 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2676;
    F.filename = "system.nim";
    var first_33558089 = nimMax(first_33558086, 0);
    F.line = 2677;
    var L_33558090 = nimMax(addInt(subInt(nimMin(last_33558087, (s_33558085).length - 1), first_33558089), 1), 0);
    F.line = 2678;
    result_33558088 = nimCopy(null, mnewString(chckRange(L_33558090, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2679;
      var i_33558095 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098219 = 0;
      F.line = 2679;
      F.filename = "system.nim";
      colontmp__520098219 = subInt(L_33558090, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098220 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098220 <= colontmp__520098219)) break Label3;
            F.line = 2679;
            F.filename = "system.nim";
            i_33558095 = res_520098220;
            F.line = 2680;
            result_33558088[chckIndx(i_33558095, 0, (result_33558088).length - 1)] = s_33558085[chckIndx(addInt(i_33558095, first_33558089), 0, (s_33558085).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098220 = addInt(res_520098220, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558088;

}

function nsuSplitChar(s_838861345, sep_838861346, maxsplit_838861347) {
  var result_838861348 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_838861348 = nimCopy(null, [], NTI838861173);
    Label1: {
      F.line = 418;
      var xHEX60gensym67_838861354 = [];
      F.line = 389;
      var lastHEX60gensym34_520098213 = 0;
      F.line = 390;
      var splitsHEX60gensym34_520098214 = maxsplit_838861347;
      Label2: {
        F.line = 450;
          Label3: while (true) {
          if (!(lastHEX60gensym34_520098213 <= (s_838861345).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym34_520098216 = lastHEX60gensym34_520098213;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym34_520098213 < (s_838861345).length) && !((s_838861345[chckIndx(lastHEX60gensym34_520098213, 0, (s_838861345).length - 1)] == sep_838861346)))) break Label5;
                  F.line = 395;
                  lastHEX60gensym34_520098213 = addInt(lastHEX60gensym34_520098213, 1);
                }
            };
            if ((splitsHEX60gensym34_520098214 == 0)) {
            F.line = 396;
            lastHEX60gensym34_520098213 = (s_838861345).length;
            }
            
            F.line = 743;
            xHEX60gensym67_838861354 = substr_33558084(s_838861345, firstHEX60gensym34_520098216, subInt(lastHEX60gensym34_520098213, 1));
            F.line = 418;
            var Temporary6 = nimCopy(null, xHEX60gensym67_838861354, NTI33554449);
            result_838861348.push(Temporary6);;
            if ((splitsHEX60gensym34_520098214 == 0)) {
            F.line = 398;
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym34_520098214 = subInt(splitsHEX60gensym34_520098214, 1);
            F.line = 400;
            lastHEX60gensym34_520098213 = addInt(lastHEX60gensym34_520098213, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_838861348;

}

function cutMessage_1325400107(data_1325400108) {
    var Temporary1;

  var result_1325400109 = [];

  var F = {procname: "port.cutMessage", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 62;
    F.filename = "port.nim";
    result_1325400109 = nimCopy(null, (Temporary1 = nsuSplitChar(cstrToNimstr(data_1325400108), 58, (-1)), Temporary1)[chckIndx(1, 0, (Temporary1).length - 1)], NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400109;

}

function messageType_1325400087(data_1325400088) {
  var result_1325400089 = 0;

  var F = {procname: "port.messageType", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 45;
    F.filename = "port.nim";
    var str_1325400090 = cstrToNimstr(data_1325400088);
    if (contains_838862678(str_1325400090, [105,100,58])) {
    F.line = 47;
    result_1325400089 = 0;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [104,97,110,100,115,104,97,107,101,58])) {
    F.line = 49;
    result_1325400089 = 1;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [111,112,116,105,111,110,115,58])) {
    F.line = 51;
    result_1325400089 = 2;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [100,114,97,102,116,58])) {
    F.line = 53;
    result_1325400089 = 3;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [114,101,109,97,116,99,104,58])) {
    F.line = 55;
    result_1325400089 = 5;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [101,110,100,58])) {
    F.line = 57;
    result_1325400089 = 4;
    break BeforeRet;
    }
    else {
    if (contains_838862678(str_1325400090, [97,99,116,105,111,110,58])) {
    F.line = 59;
    result_1325400089 = 6;
    break BeforeRet;
    }
    }}}}}}
  };
  framePtr = F.prev;

  return result_1325400089;

}

function newHost_1325400110(cb_1325400114) {
    
function HEX3Aanonymous_1325400174(id_1325400175) {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 70;
        F.filename = "port.nim";
        cb_1325400114(HEX24_369098760(roomId_1325400153), 0);
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400203(c_1325400204) {
        
function HEX3Aanonymous_1325400205(data_1325400206) {
          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
          framePtr = F;
            F.line = 73;
            F.filename = "port.nim";
            cb_1325400114(cutMessage_1325400107(data_1325400206), messageType_1325400087(data_1325400206));
          framePtr = F.prev;

          
        }

      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 72;
        F.filename = "port.nim";
        conn_1325400155 = c_1325400204;
        conn_1325400155.on(("data"), (HEX3Aanonymous_1325400205));
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400244() {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 75;
        F.filename = "port.nim";
        rawEcho([68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84]);
        F.line = 76;
        peer_1325400154.id = ("9e4ada91-c493-4fd4-881d-3e05db99e100" + toJSStr(HEX24_369098760(roomId_1325400153)));
        peer_1325400154.reconnect();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400278() {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        peer_1325400154.destroy();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400283(data_1325400284) {
      var F = {procname: "newHost.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        conn_1325400155.send((data_1325400284));
      framePtr = F.prev;

      
    }

  var result_1325400120 = {Field0: null, Field1: null};

  var F = {procname: "port.newHost", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
    F.line = 65;
    F.filename = "port.nim";
    randomize_1392509226();
    F.line = 66;
    var roomId_1325400153 = rand_1325400130(HEX2EHEX2E_1056964656(10000, 99999));
    F.line = 67;
    var peer_1325400154 = new Peer(("9e4ada91-c493-4fd4-881d-3e05db99e100" + toJSStr(HEX24_369098760(roomId_1325400153))), {config: {
                        iceServers: [
                            {
                                urls: "turn:standard.relay.metered.ca:80",
                                username: "4eadefa5a1ad93a461469d19",
                                credential: "wLlcdHP/D2ZcRAg/",
                            }
                        ]
                    }
                })
;
    F.line = 68;
    var conn_1325400155 = null;
    peer_1325400154.on(("open"), (HEX3Aanonymous_1325400174));
    peer_1325400154.on(("connection"), (HEX3Aanonymous_1325400203));
    peer_1325400154.on(("disconnect"), (HEX3Aanonymous_1325400244));
    F.line = 79;
    result_1325400120.Field1 = HEX3Aanonymous_1325400278;
    F.line = 82;
    result_1325400120.Field0 = HEX3Aanonymous_1325400283;
  framePtr = F.prev;

  return result_1325400120;

}

function substrEq_838861055(s_838861056, pos_838861057, substr_838861058) {
    var Temporary1;

  var result_838861059 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strutils.nim";
    F.line = 370;
    var length_838861060 = (substr_838861058).length;
    if ((0 < length_838861060)) {
    F.line = 372;
    var i_838861061 = 0;
    Label2: {
      F.line = 373;
        Label3: while (true) {
        if (!(((i_838861061 < length_838861060) && (addInt(pos_838861057, i_838861061) < (s_838861056).length)) && (s_838861056[chckIndx(addInt(pos_838861057, i_838861061), 0, (s_838861056).length - 1)] == substr_838861058[chckIndx(i_838861061, 0, (substr_838861058).length - 1)]))) break Label3;
          F.line = 374;
          i_838861061 = addInt(i_838861061, 1);
        }
    };
    Temporary1 = (i_838861061 == length_838861060);
    }
    else {
    Temporary1 = false;
    }
    
    result_838861059 = Temporary1;
  framePtr = F.prev;

  return result_838861059;

}

function nsuSplitString(s_838861375, sep_838861376, maxsplit_838861377) {
      var Temporary2;

  var result_838861378 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_838861378 = nimCopy(null, [], NTI838861206);
    Label1: {
      F.line = 418;
      var xHEX60gensym69_838861384 = [];
      F.line = 529;
      if (((sep_838861376).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_838861376).length;
      }
      
      var sepLen_520098227 = Temporary2;
      F.line = 389;
      var lastHEX60gensym41_520098228 = 0;
      F.line = 390;
      var splitsHEX60gensym41_520098229 = maxsplit_838861377;
      Label3: {
        F.line = 531;
          Label4: while (true) {
          if (!(lastHEX60gensym41_520098228 <= (s_838861375).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym41_520098231 = lastHEX60gensym41_520098228;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym41_520098228 < (s_838861375).length) && !(substrEq_838861055(s_838861375, lastHEX60gensym41_520098228, sep_838861376)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym41_520098228 = addInt(lastHEX60gensym41_520098228, 1);
                }
            };
            if ((splitsHEX60gensym41_520098229 == 0)) {
            F.line = 396;
            lastHEX60gensym41_520098228 = (s_838861375).length;
            }
            
            F.line = 787;
            xHEX60gensym69_838861384 = substr_33558084(s_838861375, firstHEX60gensym41_520098231, subInt(lastHEX60gensym41_520098228, 1));
            F.line = 418;
            var Temporary7 = nimCopy(null, xHEX60gensym69_838861384, NTI33554449);
            result_838861378.push(Temporary7);;
            if ((splitsHEX60gensym41_520098229 == 0)) {
            F.line = 398;
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym41_520098229 = subInt(splitsHEX60gensym41_520098229, 1);
            F.line = 400;
            lastHEX60gensym41_520098228 = addInt(lastHEX60gensym41_520098228, sepLen_520098227);
          }
      };
    };
  framePtr = F.prev;

  return result_838861378;

}

function integerOutOfRangeError_855638341() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_855638343(s_855638344, b_855638345, b_855638345_Idx) {
      var Temporary1;
          var Temporary4;

  var result_855638346 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    F.filename = "parseutils.nim";
    var sign_855638347 = (-1n);
    F.line = 430;
    var i_855638348 = 0;
    if ((i_855638348 < (s_855638344).length)) {
    if ((s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] == 43)) {
    F.line = 432;
    i_855638348 += 1;
    }
    else {
    if ((s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] == 45)) {
    F.line = 434;
    i_855638348 += 1;
    F.line = 435;
    sign_855638347 = 1n;
    }
    }
    }
    
      if (!(i_855638348 < (s_855638344).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 437;
    b_855638345[b_855638345_Idx] = 0n;
    Label2: {
      F.line = 438;
        Label3: while (true) {
          if (!(i_855638348 < (s_855638344).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 439;
          var c_855638382 = (s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_855638382)) / 10n <= b_855638345[b_855638345_Idx])) {
          F.line = 441;
          b_855638345[b_855638345_Idx] = ((b_855638345[b_855638345_Idx] * 10n) - BigInt(c_855638382));
          }
          else {
            F.line = 443;
          integerOutOfRangeError_855638341();
          }
          
          F.line = 444;
          i_855638348 += 1;
          Label5: {
            F.line = 445;
              Label6: while (true) {
              if (!((i_855638348 < (s_855638344).length) && (s_855638344[chckIndx(i_855638348, 0, (s_855638344).length - 1)] == 95))) break Label6;
                F.line = 445;
                i_855638348 += 1;
              }
          };
        }
    };
    if (((sign_855638347 == (-1n)) && (b_855638345[b_855638345_Idx] == (-9223372036854775808n)))) {
    F.line = 447;
    integerOutOfRangeError_855638341();
    }
    else {
      F.line = 449;
      b_855638345[b_855638345_Idx] = (b_855638345[b_855638345_Idx] * sign_855638347);
      F.line = 450;
      result_855638346 = i_855638348;
    }
    
    }
    
  framePtr = F.prev;

  return result_855638346;

}

function npuParseBiggestInt(s_855638405, number_855638406, number_855638406_Idx) {
  var result_855638407 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 464;
    F.filename = "parseutils.nim";
    var res_855638408 = [0n];
    F.line = 467;
    result_855638407 = rawParseInt_855638343(s_855638405, res_855638408, 0);
    if (!((result_855638407 == 0))) {
    F.line = 469;
    number_855638406[number_855638406_Idx] = res_855638408[0];
    }
    
  framePtr = F.prev;

  return result_855638407;

}

function npuParseInt(s_855638410, number_855638411, number_855638411_Idx) {
  var result_855638412 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    F.filename = "parseutils.nim";
    var res_855638413 = [0n];
    F.line = 483;
    result_855638412 = npuParseBiggestInt(s_855638410, res_855638413, 0);
    if (((res_855638413[0] < (-2147483648n)) || (2147483647n < res_855638413[0]))) {
    F.line = 486;
    integerOutOfRangeError_855638341();
    }
    
    if (!((result_855638412 == 0))) {
    F.line = 488;
    number_855638411[number_855638411_Idx] = chckRange(Number(res_855638413[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_855638412;

}

function parseInt_855638923(s_855638924, number_855638925, number_855638925_Idx, start_855638926) {
  var result_855638927 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 999;
    F.filename = "parseutils.nim";
    result_855638927 = npuParseInt((s_855638924.slice(start_855638926, (s_855638924).length - 1 + 1)), number_855638925, number_855638925_Idx);
  framePtr = F.prev;

  return result_855638927;

}

function nsuParseInt(s_838861657) {
  var result_838861658 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1134;
    F.filename = "strutils.nim";
    result_838861658[0] = 0;
    F.line = 1135;
    var L_838861659 = parseInt_855638923(s_838861657, result_838861658, 0, 0);
    if ((!((L_838861659 == (s_838861657).length)) || (L_838861659 == 0))) {
    F.line = 1137;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_838861657 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_838861658[0];

}

function hasWallet_1493172228(side_1493172229, s_1493172230) {
  var result_1493172231 = false;

  var F = {procname: "capitalism.hasWallet", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 7;
    F.filename = "capitalism.nim";
    result_1493172231 = isSome_1409289449(s_1493172230.Field1[chckIndx(side_1493172229, 0, (s_1493172230.Field1).length - 1)].wallet);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1493172231;

}

function pieceOf_520093909(tile_520093910) {
  var result_520093911 = null;

  var F = {procname: "main.pieceOf", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 145;
    F.filename = "main.nim";
    result_520093911 = theBoard_520093820[0][chckIndx(tile_520093910.Field1, 0, (theBoard_520093820[0]).length - 1)][chckIndx(tile_520093910.Field0, 0, (theBoard_520093820[0][chckIndx(tile_520093910.Field1, 0, (theBoard_520093820[0]).length - 1)]).length - 1)];
  framePtr = F.prev;

  return result_520093911;

}

function buy_1493172332(piece_1493172333, option_1493172334, b_1493172335, s_1493172336) {
  var F = {procname: "capitalism.buy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim", line: 0};
  framePtr = F;
    if (!(hasWallet_1493172228(piece_1493172333.color, s_1493172336))) {
    F.line = 24;
    F.filename = "capitalism.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim(24, 5) `piece.color.hasWallet(s)` "));
    }
    
    if (!(option_1493172334.Field3(piece_1493172333, b_1493172335, s_1493172336))) {
    F.line = 25;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/capitalism.nim(25, 5) `option.condition(piece, b, s)` "));
    }
    
    if ((option_1493172334.Field1(piece_1493172333, b_1493172335, s_1493172336) <= getMoney_1493172239(piece_1493172333.color, s_1493172336))) {
    F.line = 28;
    addMoney_1493172266(piece_1493172333.color, negInt(option_1493172334.Field1(piece_1493172333, b_1493172335, s_1493172336)), s_1493172336);
    F.line = 29;
    option_1493172334.Field2(piece_1493172333, b_1493172335, s_1493172336);
    }
    
  framePtr = F.prev;

  
}

function otherBuy_520095260(d_520095261) {
  var F = {procname: "main.otherBuy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 239;
    F.filename = "main.nim";
    var data_520095262 = nsuSplitString(d_520095261, [44], (-1));
    if (!(eqStrings(data_520095262[chckIndx(0, 0, (data_520095262).length - 1)], [98,117,121]))) {
    F.line = 240;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(240, 5) `data[0] == \"buy\"` "));
    }
    
    F.line = 241;
    var piece_520095268 = {Field0: nsuParseInt(data_520095262[chckIndx(3, 0, (data_520095262).length - 1)]), Field1: nsuParseInt(data_520095262[chckIndx(2, 0, (data_520095262).length - 1)])};
    if (!(hasWallet_1493172228(pieceOf_520093909(piece_520095268).color, theState_520093821[0]))) {
    F.line = 242;
    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(242, 5) `pieceOf(piece).color.hasWallet(theState)` "));
    }
    
    Label1: {
      F.line = 244;
      var option_520095296 = {Field0: [], Field1: null, Field2: null, Field3: null};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520098237 = [];
      F.line = 244;
      F.filename = "main.nim";
      colontmp__520098237 = theState_520093821[0].Field1[chckIndx(otherSide_1224737925(side_520093802[0]), 0, (theState_520093821[0].Field1).length - 1)].buys;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098239 = 0;
      F.line = 250;
      var L_520098240 = (colontmp__520098237).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098239 < L_520098240)) break Label3;
            F.line = 244;
            F.filename = "main.nim";
            option_520095296 = colontmp__520098237[chckIndx(i_520098239, 0, (colontmp__520098237).length - 1)];
            if (eqStrings(option_520095296.Field0, data_520095262[chckIndx(1, 0, (data_520095262).length - 1)])) {
            F.line = 246;
            buy_1493172332(pieceOf_520093909(piece_520095268), option_520095296, theBoard_520093820[0], theState_520093821[0]);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098239 += 1;
            if (!(((colontmp__520098237).length == L_520098240))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function gameIsOver_1224738008(b_1224738009) {
  var result_1224738010 = false;

  var F = {procname: "piece.gameIsOver", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 290;
    F.filename = "piece.nim";
    var kings_1224738011 = 0;
    Label1: {
      F.line = 291;
      var row_1224738016 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_520098280 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 291;
            F.filename = "piece.nim";
            row_1224738016 = nimCopy(row_1224738016, b_1224738009[chckIndx(i_520098280, 0, (b_1224738009).length - 1)], NTI1224736772);
            Label4: {
              F.line = 292;
              var p_1224738021 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_520098278 = 0;
              Label5: {
                F.line = 44;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 292;
                    F.filename = "piece.nim";
                    p_1224738021 = nimCopy(p_1224738021, row_1224738016[chckIndx(i_520098278, 0, (row_1224738016).length - 1)], NTI1224736794);
                    if ((p_1224738021.item == 0)) {
                    F.line = 293;
                    kings_1224738011 = addInt(kings_1224738011, 1);
                    }
                    
                    if ((7 <= i_520098278)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520098278 += 1;
                  }
              };
            };
            if ((7 <= i_520098280)) {
            F.line = 46;
            break Label2;
            }
            
            F.line = 13;
            i_520098280 += 1;
          }
      };
    };
    F.line = 295;
    F.filename = "piece.nim";
    result_1224738010 = !((kings_1224738011 == 2));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224738010;

}

function alive_1224737932(c_1224737933, b_1224737934) {
  var result_1224737935 = false;

  var F = {procname: "piece.alive", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 282;
      F.filename = "piece.nim";
      var row_1224737961 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 43;
      F.filename = "iterators.nim";
      var i_520098286 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 282;
            F.filename = "piece.nim";
            row_1224737961 = nimCopy(row_1224737961, b_1224737934[chckIndx(i_520098286, 0, (b_1224737934).length - 1)], NTI1224736772);
            Label4: {
              F.line = 283;
              var p_1224737987 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 43;
              F.filename = "iterators.nim";
              var i_520098284 = 0;
              Label5: {
                F.line = 44;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 283;
                    F.filename = "piece.nim";
                    p_1224737987 = nimCopy(p_1224737987, row_1224737961[chckIndx(i_520098284, 0, (row_1224737961).length - 1)], NTI1224736794);
                    if (((p_1224737987.item == 0) && isColor_1224737917(p_1224737987, c_1224737933))) {
                    F.line = 285;
                    result_1224737935 = true;
                    break BeforeRet;
                    }
                    
                    if ((7 <= i_520098284)) {
                    F.line = 46;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520098284 += 1;
                  }
              };
            };
            if ((7 <= i_520098286)) {
            F.line = 46;
            break Label2;
            }
            
            F.line = 13;
            i_520098286 += 1;
          }
      };
    };
    F.line = 287;
    F.filename = "piece.nim";
    result_1224737935 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737935;

}

function addWins_1509949454(with_1509949455) {
  var F = {procname: "store.addWins", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/store.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 25;
      F.filename = "store.nim";
      var power_1509949459 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098289 = 0;
      F.line = 250;
      var L_520098290 = (with_1509949455).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098289 < L_520098290)) break Label3;
            F.line = 25;
            F.filename = "store.nim";
            power_1509949459 = with_1509949455[chckIndx(i_520098289, 0, (with_1509949455).length - 1)];
            if (!(window.localStorage.getItem(toJSStr(power_1509949459.technicalName)) !== null)) {
            F.line = 27;
            window.localStorage.setItem(toJSStr(power_1509949459.technicalName), 0);
            }
            else {
              F.line = 29;
            increment(toJSStr(power_1509949459.technicalName));
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098289 += 1;
            if (!(((with_1509949455).length == L_520098290))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function find_520094553(a_520094556, item_520094557) {
  var result_520094558 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1671;
    F.filename = "system.nim";
    result_520094558 = 0;
    Label1: {
      F.line = 1672;
      var i_520094562 = 0;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520098293 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520098293 < (a_520094556).length)) break Label3;
            F.line = 1672;
            F.filename = "system.nim";
            i_520094562 = a_520094556[chckIndx(i_520098293, 0, (a_520094556).length - 1)];
            if ((i_520094562 == item_520094557)) {
            F.line = 1673;
            break BeforeRet;
            }
            
            F.line = 1674;
            result_520094558 = addInt(result_520094558, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098293 += 1;
          }
      };
    };
    F.line = 1675;
    F.filename = "system.nim";
    result_520094558 = (-1);
  };
  framePtr = F.prev;

  return result_520094558;

}

function contains_520094548(a_520094550, item_520094551) {
  var result_520094552 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1689;
    F.filename = "system.nim";
    result_520094552 = (0 <= find_520094553(a_520094550, item_520094551));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094552;

}

function validateUtf8_1040187728(s_1040187729) {
  var result_1040187730 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_1040187731 = 0;
    F.line = 185;
    var L_1040187735 = (s_1040187729).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_1040187731 < L_1040187735)) break Label2;
          if ((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] <= 127)) {
          F.line = 188;
          i_1040187731 = addInt(i_1040187731, 1);
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 5) == 6)) {
          if ((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] < 194)) {
          F.line = 190;
          result_1040187730 = i_1040187731;
          break BeforeRet;
          }
          
          if (((addInt(i_1040187731, 1) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_1040187731 = addInt(i_1040187731, 2);
          }
          else {
            F.line = 192;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1040187731, 2) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 2), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_1040187731 = addInt(i_1040187731, 3);
          }
          else {
            F.line = 196;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1040187731, 3) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 2), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 3), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_1040187731 = addInt(i_1040187731, 4);
          }
          else {
            F.line = 202;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_1040187730 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040187730;

}

function validateUtf8_1040194753(s_1040194754) {
  var result_1040194755 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1191;
    F.filename = "unicode.nim";
    result_1040194755 = validateUtf8_1040187728((s_1040194754.slice(0, (s_1040194754).length - 1 + 1)));
  framePtr = F.prev;

  return result_1040194755;

}

function nucruneLen(s_1040187420) {
  var result_1040187421 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_1040187421 = 0;
    F.line = 53;
    var i_1040187422 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_1040187422 < (s_1040187420).length)) break Label2;
          if ((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] <= 127)) {
          F.line = 55;
          i_1040187422 = addInt(i_1040187422, 1);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_1040187422 = addInt(i_1040187422, 2);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_1040187422 = addInt(i_1040187422, 3);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_1040187422 = addInt(i_1040187422, 4);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_1040187422 = addInt(i_1040187422, 5);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_1040187422 = addInt(i_1040187422, 6);
          }
          else {
            F.line = 61;
          i_1040187422 = addInt(i_1040187422, 1);
          }
          }}}}}
          F.line = 62;
          result_1040187421 = addInt(result_1040187421, 1);
        }
    };
  framePtr = F.prev;

  return result_1040187421;

}

function runeLen_1040194581(s_1040194582) {
  var result_1040194583 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1158;
    F.filename = "unicode.nim";
    result_1040194583 = nucruneLen((s_1040194582.slice(0, (s_1040194582).length - 1 + 1)));
  framePtr = F.prev;

  return result_1040194583;

}

function nsuRepeatChar(c_838861921, count_838861922) {
  var result_838861923 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "strutils.nim";
    result_838861923 = nimCopy(null, mnewString(count_838861922), NTI33554449);
    Label1: {
      F.line = 1329;
      var i_838861928 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520098298 = 0;
      F.line = 1329;
      F.filename = "strutils.nim";
      colontmp__520098298 = subInt(count_838861922, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098299 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098299 <= colontmp__520098298)) break Label3;
            F.line = 1329;
            F.filename = "strutils.nim";
            i_838861928 = res_520098299;
            F.line = 1329;
            result_838861923[chckIndx(i_838861928, 0, (result_838861923).length - 1)] = c_838861921;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098299 = addInt(res_520098299, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_838861923;

}

function alignString_1543503892(s_1543503893, minimumWidth_1543503894, align_1543503895, fill_1543503896) {
      var Temporary1;

  var result_1543503897 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_1543503894 == 0)) {
    F.line = 335;
    F.filename = "strformat.nim";
    result_1543503897 = nimCopy(null, s_1543503893, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_1040194753(s_1543503893) == (-1))) {
      Temporary1 = runeLen_1040194581(s_1543503893);
      }
      else {
      Temporary1 = (s_1543503893).length;
      }
      
      var sRuneLen_1543503898 = Temporary1;
      F.line = 338;
      var toFill_1543503899 = subInt(minimumWidth_1543503894, sRuneLen_1543503898);
      if ((toFill_1543503899 <= 0)) {
      F.line = 340;
      result_1543503897 = nimCopy(null, s_1543503893, NTI33554449);
      }
      else {
      if (((align_1543503895 == 60) || (align_1543503895 == 0))) {
      F.line = 342;
      result_1543503897 = nimCopy(null, (s_1543503893 || []).concat(nsuRepeatChar(fill_1543503896, chckRange(toFill_1543503899, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_1543503895 == 94)) {
      F.line = 344;
      var half_1543503900 = divInt(toFill_1543503899, 2);
      F.line = 345;
      result_1543503897 = nimCopy(null, (nsuRepeatChar(fill_1543503896, chckRange(half_1543503900, 0, 2147483647)) || []).concat(s_1543503893 || [],nsuRepeatChar(fill_1543503896, chckRange(subInt(toFill_1543503899, half_1543503900), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_1543503897 = nimCopy(null, (nsuRepeatChar(fill_1543503896, chckRange(toFill_1543503899, 0, 2147483647)) || []).concat(s_1543503893 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_1543503897;

}

function formatValue_520094535(result_520094537, result_520094537_Idx, value_520094538) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 593;
    F.filename = "strformat.nim";
    var value_520094547 = nimCopy(null, value_520094538, NTI33554449);
    F.line = 604;
    result_520094537[result_520094537_Idx].push.apply(result_520094537[result_520094537_Idx], alignString_1543503892(value_520094547, 0, 0, 32));;
  framePtr = F.prev;

  
}

function addQuoted_520094034(s_520094036, s_520094036_Idx, x_520094037) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094036[s_520094036_Idx].push.apply(s_520094036[s_520094036_Idx], reprEnum(x_520094037, NTI1224736776));;
  framePtr = F.prev;

  
}

function addQuoted_520094054(s_520094056, s_520094056_Idx, x_520094057) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094056[s_520094056_Idx].push.apply(s_520094056[s_520094056_Idx], reprEnum(x_520094057, NTI1224736777));;
  framePtr = F.prev;

  
}

function addQuoted_520094110(s_520094112, s_520094112_Idx, x_520094113) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094112[s_520094112_Idx].push.apply(s_520094112[s_520094112_Idx], HEX24_1224737640(x_520094113));;
  framePtr = F.prev;

  
}

function addQuoted_520094286(s_520094288, s_520094288_Idx, x_520094289) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094288[s_520094288_Idx].push.apply(s_520094288[s_520094288_Idx], nimBoolToStr(x_520094289));;
  framePtr = F.prev;

  
}

function addEscapedChar_33558024(s_33558025, s_33558025_Idx, c_33558026) {
  var F = {procname: "system.addEscapedChar", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2472;
    F.filename = "system.nim";
    switch (c_33558026) {
    case 7:
      F.line = 2473;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,97]);;
      break;
    case 8:
      F.line = 2474;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,98]);;
      break;
    case 9:
      F.line = 2475;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,116]);;
      break;
    case 10:
      F.line = 2476;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,110]);;
      break;
    case 11:
      F.line = 2477;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,118]);;
      break;
    case 12:
      F.line = 2478;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,102]);;
      break;
    case 13:
      F.line = 2479;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,114]);;
      break;
    case 27:
      F.line = 2480;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,101]);;
      break;
    case 92:
      F.line = 2481;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,92]);;
      break;
    case 39:
      F.line = 2482;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,39]);;
      break;
    case 34:
      F.line = 2483;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      F.line = 2484;
      addChar(s_33558025[s_33558025_Idx], c_33558026);;
      break;
    default: 
      F.line = 2486;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,120]);;
      F.line = 2488;
      var n_33558036 = c_33558026;
      F.line = 2489;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33558036 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      F.line = 2490;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33558036 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }
  framePtr = F.prev;

  
}

function addQuoted_520094300(s_520094302, s_520094302_Idx, x_520094303) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2518;
    F.filename = "system.nim";
    s_520094302[s_520094302_Idx].push.apply(s_520094302[s_520094302_Idx], [34]);;
    Label1: {
      F.line = 2519;
      var c_520094304 = 0;
      F.line = 267;
      F.filename = "iterators.nim";
      var i_520098302 = 0;
      F.line = 268;
      var L_520098303 = (x_520094303).length;
      Label2: {
        F.line = 269;
          Label3: while (true) {
          if (!(i_520098302 < L_520098303)) break Label3;
            F.line = 2519;
            F.filename = "system.nim";
            c_520094304 = x_520094303[chckIndx(i_520098302, 0, (x_520094303).length - 1)];
            if ((c_520094304 <= 127)) {
            F.line = 2523;
            addEscapedChar_33558024(s_520094302, s_520094302_Idx, c_520094304);
            }
            else {
              F.line = 2525;
            addChar(s_520094302[s_520094302_Idx], c_520094304);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098302 += 1;
            if (!(((x_520094303).length == L_520098303))) {
            F.line = 272;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(272, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 2526;
    F.filename = "system.nim";
    s_520094302[s_520094302_Idx].push.apply(s_520094302[s_520094302_Idx], [34]);;
  framePtr = F.prev;

  
}

function addQuoted_520094526(s_520094528, s_520094528_Idx, x_520094529) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094528[s_520094528_Idx].push.apply(s_520094528[s_520094528_Idx], reprEnum(x_520094529, NTI1224736789));;
  framePtr = F.prev;

  
}

function HEX24_520094470(x_520094472) {
  var result_520094473 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520094473[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym58_520094484 = 0;
    if ((0 < countHEX60gensym58_520094484)) {
    F.line = 23;
    result_520094473[0].push.apply(result_520094473[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094473[0].push.apply(result_520094473[0], [111,110]);;
    F.line = 26;
    result_520094473[0].push.apply(result_520094473[0], [58,32]);;
    F.line = 27;
    countHEX60gensym58_520094484 += 1;
    F.line = 33;
    addQuoted_520094110(result_520094473, 0, x_520094472["Field0"]);
    if ((0 < countHEX60gensym58_520094484)) {
    F.line = 23;
    result_520094473[0].push.apply(result_520094473[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094473[0].push.apply(result_520094473[0], [103,114,111,117,112]);;
    F.line = 26;
    result_520094473[0].push.apply(result_520094473[0], [58,32]);;
    F.line = 27;
    countHEX60gensym58_520094484 += 1;
    F.line = 33;
    addQuoted_838862213(result_520094473, 0, x_520094472["Field1"]);
    if ((0 < countHEX60gensym58_520094484)) {
    F.line = 23;
    result_520094473[0].push.apply(result_520094473[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094473[0].push.apply(result_520094473[0], [103,108,97,115,115]);;
    F.line = 26;
    result_520094473[0].push.apply(result_520094473[0], [58,32]);;
    F.line = 27;
    countHEX60gensym58_520094484 += 1;
    F.line = 33;
    addQuoted_520094526(result_520094473, 0, x_520094472["Field2"]);
    F.line = 39;
    result_520094473[0].push.apply(result_520094473[0], [41]);;
  framePtr = F.prev;

  return result_520094473[0];

}

function addQuoted_520094464(s_520094466, s_520094466_Idx, x_520094467) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094466[s_520094466_Idx].push.apply(s_520094466[s_520094466_Idx], HEX24_520094470(x_520094467));;
  framePtr = F.prev;

  
}

function collectionToString_520094449(x_520094451, prefix_520094452, separator_520094453, suffix_520094454) {
  var result_520094455 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_520094455[0] = nimCopy(null, prefix_520094452, NTI33554449);
    F.line = 91;
    var firstElement_520094456 = true;
    Label1: {
      F.line = 92;
      var value_520094460 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098306 = 0;
      F.line = 250;
      var L_520098307 = (x_520094451).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098306 < L_520098307)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_520094460 = x_520094451[i_520098306];
            if (firstElement_520094456) {
            F.line = 94;
            firstElement_520094456 = false;
            }
            else {
              F.line = 96;
            result_520094455[0].push.apply(result_520094455[0], separator_520094453);;
            }
            
            F.line = 105;
            addQuoted_520094464(result_520094455, 0, value_520094460);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098306 += 1;
            if (!(((x_520094451).length == L_520098307))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_520094455[0].push.apply(result_520094455[0], suffix_520094454);;
  framePtr = F.prev;

  return result_520094455[0];

}

function HEX24_520094445(x_520094447) {
  var result_520094448 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_520094448 = nimCopy(null, collectionToString_520094449(x_520094447, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_520094448;

}

function addQuoted_520094439(s_520094441, s_520094441_Idx, x_520094442) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094441[s_520094441_Idx].push.apply(s_520094441[s_520094441_Idx], HEX24_520094445(x_520094442));;
  framePtr = F.prev;

  
}

function HEX24_520094005(x_520094007) {
  var result_520094008 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520094008[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym4_520094019 = 0;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [105,116,101,109]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094034(result_520094008, 0, x_520094007.item);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [99,111,108,111,114]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094054(result_520094008, 0, x_520094007.color);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [105,110,100,101,120]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_838862213(result_520094008, 0, x_520094007.index);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [116,105,109,101,115,77,111,118,101,100]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_838862213(result_520094008, 0, x_520094007.timesMoved);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [112,105,101,99,101,115,84,97,107,101,110]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_838862213(result_520094008, 0, x_520094007.piecesTaken);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [116,105,108,101]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094110(result_520094008, 0, x_520094007.tile);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [109,111,118,101,115]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [116,97,107,101,115]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [111,110,77,111,118,101]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [111,110,84,97,107,101]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [119,104,101,110,84,97,107,101,110]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [111,110,69,110,100,84,117,114,110]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [111,110,80,114,111,109,111,116,101]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 35;
    result_520094008[0].push.apply(result_520094008[0], [46,46,46]);;
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [112,114,111,109,111,116,101,100]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094286(result_520094008, 0, x_520094007.promoted);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [102,105,108,101,80,97,116,104]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094300(result_520094008, 0, x_520094007.filePath);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [99,111,108,111,114,97,98,108,101]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094286(result_520094008, 0, x_520094007.colorable);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [114,111,116,97,116,101]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094286(result_520094008, 0, x_520094007.rotate);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [100,114,117,110,107]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094286(result_520094008, 0, x_520094007.drunk);
    if ((0 < countHEX60gensym4_520094019)) {
    F.line = 23;
    result_520094008[0].push.apply(result_520094008[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094008[0].push.apply(result_520094008[0], [99,97,115,116,115]);;
    F.line = 26;
    result_520094008[0].push.apply(result_520094008[0], [58,32]);;
    F.line = 27;
    countHEX60gensym4_520094019 += 1;
    F.line = 33;
    addQuoted_520094439(result_520094008, 0, x_520094007.casts);
    F.line = 39;
    result_520094008[0].push.apply(result_520094008[0], [41]);;
  framePtr = F.prev;

  return result_520094008[0];

}

function formatValue_520093999(result_520094002, result_520094002_Idx, value_520094003) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "strformat.nim";
    formatValue_520094535(result_520094002, result_520094002_Idx, HEX24_520094005(value_520094003));
  framePtr = F.prev;

  
}

function endRound_520093964() {
  var F = {procname: "main.endRound", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 169;
    F.filename = "main.nim";
    theState_520093821[0].Field0.turnNumber = addInt(theState_520093821[0].Field0.turnNumber, 1);
    Label1: {
      F.line = 171;
      var i_520093970 = 0;
      F.line = 171;
      var j_520093971 = 0;
      Label2: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_520098249 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098250 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_520098250 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098249 = i_520098250;
              Label5: {
                F.line = 114;
                var j_520098253 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098254 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_520098254 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098253 = i_520098254;
                      F.line = 171;
                      F.filename = "main.nim";
                      i_520093970 = i_520098249;
                      F.line = 171;
                      j_520093971 = j_520098253;
                      Label8: {
                        F.line = 174;
                        F.filename = "piece.nim";
                        var xHEX60gensym2_520093976 = null;
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520098244 = [];
                        F.line = 174;
                        F.filename = "piece.nim";
                        colontmp__520098244 = theBoard_520093820[0][chckIndx(i_520093970, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520093971, 0, (theBoard_520093820[0][chckIndx(i_520093970, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].onEndTurn;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520098245 = 0;
                        F.line = 250;
                        var L_520098246 = (colontmp__520098244).length;
                        Label9: {
                          F.line = 251;
                            Label10: while (true) {
                            if (!(i_520098245 < L_520098246)) break Label10;
                              F.line = 172;
                              F.filename = "main.nim";
                              xHEX60gensym2_520093976 = colontmp__520098244[chckIndx(i_520098245, 0, (colontmp__520098244).length - 1)];
                              F.line = 175;
                              F.filename = "piece.nim";
                              xHEX60gensym2_520093976(theBoard_520093820[0][chckIndx(i_520093970, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520093971, 0, (theBoard_520093820[0][chckIndx(i_520093970, 0, (theBoard_520093820[0]).length - 1)]).length - 1)], theBoard_520093820[0], theState_520093821[0]);
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520098245 += 1;
                              if (!(((colontmp__520098244).length == L_520098246))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098254 = addInt(i_520098254, 1);
                    }
                };
              };
              F.line = 131;
              i_520098250 = addInt(i_520098250, 1);
            }
        };
      };
    };
    Label11: {
      F.line = 176;
      F.filename = "main.nim";
      var i_520093977 = 0;
      F.line = 176;
      var j_520093978 = 0;
      Label12: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_520098258 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098259 = 0;
        Label13: {
          F.line = 129;
            Label14: while (true) {
            if (!(i_520098259 < 8)) break Label14;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098258 = i_520098259;
              Label15: {
                F.line = 114;
                var j_520098262 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098263 = 0;
                Label16: {
                  F.line = 129;
                    Label17: while (true) {
                    if (!(i_520098263 < 8)) break Label17;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098262 = i_520098263;
                      F.line = 176;
                      F.filename = "main.nim";
                      i_520093977 = i_520098258;
                      F.line = 176;
                      j_520093978 = j_520098262;
                      F.line = 177;
                      theBoard_520093820[0][chckIndx(i_520093977, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520093978, 0, (theBoard_520093820[0][chckIndx(i_520093977, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].drunk = false;
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098263 = addInt(i_520098263, 1);
                    }
                };
              };
              F.line = 131;
              i_520098259 = addInt(i_520098259, 1);
            }
        };
      };
    };
    F.line = 179;
    F.filename = "main.nim";
    piecesChecking_520093844[0] = nimCopy(null, getPiecesChecking_1224738031(theBoard_520093820[0], side_520093802[0]), NTI1224737635);
    if (gameIsOver_1224738008(theBoard_520093820[0])) {
    if (alive_1224737932(side_520093802[0], theBoard_520093820[0])) {
    F.line = 181;
    addWins_1509949454(myDrafts_520093808[0]);
    }
    
    F.line = 182;
    currentScreen_520093849[0] = 6;
    }
    
    F.line = 186;
    var test_520093983 = [];
    Label18: {
      F.line = 187;
      var i_520093984 = 0;
      F.line = 187;
      var j_520093985 = 0;
      Label19: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_520098269 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098270 = 0;
        Label20: {
          F.line = 129;
            Label21: while (true) {
            if (!(i_520098270 < 8)) break Label21;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098269 = i_520098270;
              Label22: {
                F.line = 114;
                var j_520098273 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098274 = 0;
                Label23: {
                  F.line = 129;
                    Label24: while (true) {
                    if (!(i_520098274 < 8)) break Label24;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098273 = i_520098274;
                      F.line = 187;
                      F.filename = "main.nim";
                      i_520093984 = i_520098269;
                      F.line = 187;
                      j_520093985 = j_520098273;
                      if (!(!(contains_520094548(test_520093983, theBoard_520093820[0][chckIndx(i_520093984, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520093985, 0, (theBoard_520093820[0][chckIndx(i_520093984, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].index)))) {
                      F.line = 188;
                      Label25: {
                        F.line = 188;
                        var fmtRes_520093994 = [mnewString(0)];
                        F.line = 188;
                        formatValue_520093999(fmtRes_520093994, 0, theBoard_520093820[0][chckIndx(i_520093984, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520093985, 0, (theBoard_520093820[0][chckIndx(i_520093984, 0, (theBoard_520093820[0]).length - 1)]).length - 1)]);
                        F.line = 188;
                        fmtRes_520093994[0].push.apply(fmtRes_520093994[0], [32,104,97,115,32,115,111,109,101,32,105,115,115,117,101,115]);;
                      };
                      failedAssertImpl_268435541((makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/main.nim(188, 9) `theBoard[i][j].index notin test` ") || []).concat(fmtRes_520093994[0] || []));
                      }
                      
                      F.line = 189;
                      test_520093983.push(theBoard_520093820[0][chckIndx(i_520093984, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520093985, 0, (theBoard_520093820[0][chckIndx(i_520093984, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].index);;
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098274 = addInt(i_520098274, 1);
                    }
                };
              };
              F.line = 131;
              i_520098270 = addInt(i_520098270, 1);
            }
        };
      };
    };
  framePtr = F.prev;

  
}

function otherMove_520095313(d_520095314) {
  var F = {procname: "main.otherMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 249;
    F.filename = "main.nim";
    var data_520095315 = nsuSplitString(d_520095314, [44], (-1));
    F.line = 250;
    var mover_520095316 = nimCopy(null, {Field0: nsuParseInt(data_520095315[chckIndx(2, 0, (data_520095315).length - 1)]), Field1: nsuParseInt(data_520095315[chckIndx(1, 0, (data_520095315).length - 1)])}, NTI1224736771);
    F.line = 251;
    var moveTo_520095317 = nimCopy(null, {Field0: nsuParseInt(data_520095315[chckIndx(4, 0, (data_520095315).length - 1)]), Field1: nsuParseInt(data_520095315[chckIndx(3, 0, (data_520095315).length - 1)])}, NTI1224736771);
    F.line = 253;
    lastMove_520093839[0] = nimCopy(null, [nimCopy(null, mover_520095316, NTI1224736771), nimCopy(null, moveTo_520095317, NTI1224736771)], NTI520094995);
    F.line = 254;
    possibleMoves_520093829[0] = nimCopy(null, [], NTI1291845837);
    F.line = 255;
    possibleTakes_520093834[0] = nimCopy(null, [], NTI1291845837);
    F.line = 257;
    rawEcho(d_520095314, data_520095315[chckIndx(0, 0, (data_520095315).length - 1)], HEX24_1224737640(mover_520095316), HEX24_1224737640(moveTo_520095317));
    if (eqStrings(data_520095315[chckIndx(0, 0, (data_520095315).length - 1)], [109,111,118,101])) {
    F.line = 259;
    pieceOf_520093909(mover_520095316).onMove(pieceOf_520093909(mover_520095316), moveTo_520095317, theBoard_520093820[0], theState_520093821[0]);
    }
    else {
    if (eqStrings(data_520095315[chckIndx(0, 0, (data_520095315).length - 1)], [116,97,107,101])) {
    F.line = 261;
    pieceOf_520093909(mover_520095316).onTake(pieceOf_520093909(mover_520095316), moveTo_520095317, theBoard_520093820[0], theState_520093821[0]);
    }
    }
  framePtr = F.prev;

  
}

function binarySearch_1040188413(c_1040188414, tab_1040188415, len_1040188416, stride_1040188417) {
  var result_1040188418 = 0;

  var F = {procname: "unicode.binarySearch", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 468;
    F.filename = "unicode.nim";
    var n_1040188419 = len_1040188416;
    F.line = 469;
    var t_1040188420 = 0;
    Label1: {
      F.line = 470;
        Label2: while (true) {
        if (!(1 < n_1040188419)) break Label2;
          F.line = 471;
          var m_1040188421 = divInt(n_1040188419, 2);
          F.line = 472;
          var p_1040188422 = addInt(t_1040188420, mulInt(m_1040188421, stride_1040188417));
          if ((tab_1040188415[chckIndx(p_1040188422, 0, (tab_1040188415).length - 1)] <= c_1040188414)) {
          F.line = 474;
          t_1040188420 = p_1040188422;
          F.line = 475;
          n_1040188419 = subInt(n_1040188419, m_1040188421);
          }
          else {
            F.line = 477;
            n_1040188419 = m_1040188421;
          }
          
        }
    };
    if ((!((n_1040188419 == 0)) && (tab_1040188415[chckIndx(t_1040188420, 0, (tab_1040188415).length - 1)] <= c_1040188414))) {
    F.line = 479;
    result_1040188418 = t_1040188420;
    break BeforeRet;
    }
    
    F.line = 480;
    result_1040188418 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040188418;

}

function nuctoLower(c_1040188424) {
  var result_1040188425 = 0;

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 491;
    F.filename = "unicode.nim";
    var c_1040188426 = c_1040188424;
    F.line = 492;
    var p_1040188435 = binarySearch_1040188413(c_1040188426, toLowerRanges_1040188404, 45, 3);
    if ((((0 <= p_1040188435) && (toLowerRanges_1040188404[chckIndx(p_1040188435, 0, (toLowerRanges_1040188404).length - 1)] <= c_1040188426)) && (c_1040188426 <= toLowerRanges_1040188404[chckIndx(addInt(p_1040188435, 1), 0, (toLowerRanges_1040188404).length - 1)]))) {
    F.line = 494;
    result_1040188425 = subInt(addInt(c_1040188426, toLowerRanges_1040188404[chckIndx(addInt(p_1040188435, 2), 0, (toLowerRanges_1040188404).length - 1)]), 500);
    break BeforeRet;
    }
    
    F.line = 495;
    p_1040188435 = binarySearch_1040188413(c_1040188426, toLowerSinglets_1040188405, 610, 2);
    if (((0 <= p_1040188435) && (c_1040188426 == toLowerSinglets_1040188405[chckIndx(p_1040188435, 0, (toLowerSinglets_1040188405).length - 1)]))) {
    F.line = 497;
    result_1040188425 = subInt(addInt(c_1040188426, toLowerSinglets_1040188405[chckIndx(addInt(p_1040188435, 1), 0, (toLowerSinglets_1040188405).length - 1)]), 500);
    break BeforeRet;
    }
    
    F.line = 498;
    result_1040188425 = c_1040188426;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040188425;

}

function HEX3CHEX3DHEX25_33555507(x_33555508, y_33555509) {
  var result_33555510 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 185;
    F.filename = "comparisons.nim";
    result_33555510 = (Number(BigInt.asUintN(32, BigInt(x_33555508))) <= Number(BigInt.asUintN(32, BigInt(y_33555509))));
  framePtr = F.prev;

  return result_33555510;

}

function nuctoLowerStr(s_1040189725) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_1040189726 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 658;
    F.filename = "unicode.nim";
    result_1040189726 = nimCopy(null, mnewString(chckRange((s_1040189725).length, 0, 2147483647)), NTI33554449);
    F.line = 660;
    var iHEX60gensym252_1040189733 = 0;
    F.line = 661;
    var resultIndexHEX60gensym252_1040189734 = 0;
    F.line = 662;
    var runeHEX60gensym252_1040189735 = 0;
    Label1: {
      F.line = 680;
        Label2: while (true) {
        if (!(iHEX60gensym252_1040189733 < (s_1040189725).length)) break Label2;
          if ((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] <= 127)) {
          F.line = 91;
          runeHEX60gensym252_1040189735 = chckRange(s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)], (-2147483648), 2147483647);
          F.line = 92;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 2))) {
          F.line = 96;
          runeHEX60gensym252_1040189735 = chckRange(((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 98;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 2);
          }
          else {
            F.line = 100;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 101;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 3))) {
          F.line = 106;
          runeHEX60gensym252_1040189735 = chckRange(((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 109;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 3);
          }
          else {
            F.line = 111;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 112;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 4))) {
          F.line = 118;
          runeHEX60gensym252_1040189735 = chckRange(((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 122;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 4);
          }
          else {
            F.line = 124;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 125;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 5))) {
          F.line = 132;
          runeHEX60gensym252_1040189735 = chckRange(((((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 4), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 137;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 5);
          }
          else {
            F.line = 139;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 140;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 6))) {
          F.line = 148;
          runeHEX60gensym252_1040189735 = chckRange(((((((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 4), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 5), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 154;
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 6);
          }
          else {
            F.line = 156;
            runeHEX60gensym252_1040189735 = 65533;
            F.line = 157;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
            F.line = 159;
            runeHEX60gensym252_1040189735 = chckRange(s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)], (-2147483648), 2147483647);
            F.line = 160;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          }}}}}
          F.line = 665;
          runeHEX60gensym252_1040189735 = nuctoLower(runeHEX60gensym252_1040189735);
          F.line = 221;
          var iHEX60gensym274_1040189976 = runeHEX60gensym252_1040189735;
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 127)) {
          F.line = 223;
          if (result_1040189726.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, 2147483647), Temporary3)) { for (var i = result_1040189726.length; i < Temporary3; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary3; };
          F.line = 224;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(iHEX60gensym274_1040189976, 0, 255);
          F.line = 225;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2047)) {
          F.line = 227;
          if (result_1040189726.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, 2147483647), Temporary4)) { for (var i = result_1040189726.length; i < Temporary4; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary4; };
          F.line = 228;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 6) | 192), 0, 255);
          F.line = 229;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 230;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 65535)) {
          F.line = 232;
          if (result_1040189726.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, 2147483647), Temporary5)) { for (var i = result_1040189726.length; i < Temporary5; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary5; };
          F.line = 233;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 12) | 224), 0, 255);
          F.line = 234;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 235;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 236;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2097151)) {
          F.line = 238;
          if (result_1040189726.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, 2147483647), Temporary6)) { for (var i = result_1040189726.length; i < Temporary6; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary6; };
          F.line = 239;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 18) | 240), 0, 255);
          F.line = 240;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          F.line = 241;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 242;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 243;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 67108863)) {
          F.line = 245;
          if (result_1040189726.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 5), 0, 2147483647), Temporary7)) { for (var i = result_1040189726.length; i < Temporary7; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary7; };
          F.line = 246;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 24) | 248), 0, 255);
          F.line = 247;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 18) & 63) | 128), 0, 255);
          F.line = 248;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          F.line = 249;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 250;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 251;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2147483647)) {
          F.line = 253;
          if (result_1040189726.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 6), 0, 2147483647), Temporary8)) { for (var i = result_1040189726.length; i < Temporary8; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary8; };
          F.line = 254;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 30) | 252), 0, 255);
          F.line = 255;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 24) & 63) | 128), 0, 255);
          F.line = 256;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 18) & 63) | 128), 0, 255);
          F.line = 257;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          F.line = 258;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          F.line = 259;
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 5), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          F.line = 260;
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 6);
          }
          else {
          }
          }}}}}
        }
    };
  framePtr = F.prev;

  return result_1040189726;

}

function toLower_1040194968(s_1040194969) {
  var result_1040194970 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1302;
    F.filename = "unicode.nim";
    result_1040194970 = nimCopy(null, nuctoLowerStr((s_1040194969.slice(0, (s_1040194969).length - 1 + 1))), NTI33554449);
  framePtr = F.prev;

  return result_1040194970;

}

function toGlassType_1526726661(str_1526726662) {
  var result_1526726663 = 0;

  var F = {procname: "glass.toGlassType", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (eqStrings(toLower_1040194968(str_1526726662), [115,107,121])) {
    F.line = 8;
    F.filename = "glass.nim";
    result_1526726663 = 0;
    break BeforeRet;
    }
    else {
    if (eqStrings(toLower_1040194968(str_1526726662), [122,101,114,111])) {
    F.line = 10;
    result_1526726663 = 1;
    break BeforeRet;
    }
    else {
    if (eqStrings(toLower_1040194968(str_1526726662), [115,116,101,101,108])) {
    F.line = 12;
    result_1526726663 = 2;
    break BeforeRet;
    }
    }}
  };
  framePtr = F.prev;

  return result_1526726663;

}

function newSeq_520095232(len_520095234) {
  var result_520095235 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_520095235 = new Array(len_520095234); for (var i = 0 ; i < len_520095234 ; ++i) { result_520095235[i] = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0}; }  framePtr = F.prev;

  return result_520095235;

}

function isNone_520095446(self_520095448) {
  var result_520095449 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520095449 = !(self_520095448.has);
  framePtr = F.prev;

  return result_520095449;

}

function get_520095438(self_520095440) {
  var result_520095441 = null;

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (isNone_520095446(self_520095440)) {
    F.line = 230;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 231;
    result_520095441 = self_520095440.val;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095441;

}

function otherGlass_520095378(d_520095379) {
    var Temporary1;
                              var Temporary27;

  var F = {procname: "main.otherGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 264;
    F.filename = "main.nim";
    var data_520095380 = nsuSplitString(d_520095379, [44], (-1));
    if (eqStrings(data_520095380[chckIndx(0, 0, (data_520095380).length - 1)], [99,97,115,116,105,110,103,115,116,97,114,116])) {
    F.line = 266;
    (Temporary1 = theBoard_520093820[0][chckIndx(nsuParseInt(data_520095380[chckIndx(1, 0, (data_520095380).length - 1)]), 0, (theBoard_520093820[0]).length - 1)], Temporary1)[chckIndx(nsuParseInt(data_520095380[chckIndx(2, 0, (data_520095380).length - 1)]), 0, (Temporary1).length - 1)].casts.push({Field0: nimCopy(null, {Field0: nsuParseInt(data_520095380[chckIndx(4, 0, (data_520095380).length - 1)]), Field1: nsuParseInt(data_520095380[chckIndx(3, 0, (data_520095380).length - 1)])}, NTI1224736771), Field1: nsuParseInt(data_520095380[chckIndx(5, 0, (data_520095380).length - 1)]), Field2: toGlassType_1526726661(data_520095380[chckIndx(6, 0, (data_520095380).length - 1)])});;
    }
    else {
    if (eqStrings(data_520095380[chckIndx(0, 0, (data_520095380).length - 1)], [99,97,115,116,105,110,103,99,97,110,99,101,108])) {
    F.line = 272;
    turn_520093803[0] = true;
    F.line = 273;
    rawEcho([116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101,58,32,111,116,104,101,114,103,108,97,115,115,32,99,97,110,99,101,108]);
    Label2: {
      F.line = 274;
      var i_520095392 = 0;
      F.line = 274;
      var j_520095393 = 0;
      Label3: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_520098316 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098317 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_520098317 < 8)) break Label5;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098316 = i_520098317;
              Label6: {
                F.line = 114;
                var j_520098320 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098321 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_520098321 < 8)) break Label8;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098320 = i_520098321;
                      F.line = 274;
                      F.filename = "main.nim";
                      i_520095392 = i_520098316;
                      F.line = 274;
                      j_520095393 = j_520098320;
                      F.line = 275;
                      F.line = 652;
                      F.filename = "sequtils.nim";
                      var resultHEX60gensym141_520095398 = newSeq_520095232(0);
                      Label9: {
                        F.line = 653;
                        var it_520095402 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520098311 = [];
                        F.line = 275;
                        F.filename = "main.nim";
                        colontmp__520098311 = theBoard_520093820[0][chckIndx(i_520095392, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095393, 0, (theBoard_520093820[0][chckIndx(i_520095392, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520098312 = 0;
                        F.line = 250;
                        var L_520098313 = (colontmp__520098311).length;
                        Label10: {
                          F.line = 251;
                            Label11: while (true) {
                            if (!(i_520098312 < L_520098313)) break Label11;
                              F.line = 653;
                              F.filename = "sequtils.nim";
                              it_520095402 = colontmp__520098311[chckIndx(i_520098312, 0, (colontmp__520098311).length - 1)];
                              if (!((it_520095402.Field1 == nsuParseInt(data_520095380[chckIndx(1, 0, (data_520095380).length - 1)])))) {
                              F.line = 654;
                              var Temporary12 = nimCopy(null, it_520095402, NTI1224736785);
                              resultHEX60gensym141_520095398.push(Temporary12);;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520098312 += 1;
                              if (!(((colontmp__520098311).length == L_520098313))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      theBoard_520093820[0][chckIndx(i_520095392, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095393, 0, (theBoard_520093820[0][chckIndx(i_520095392, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym141_520095398, NTI520094926);
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098321 = addInt(i_520098321, 1);
                    }
                };
              };
              F.line = 131;
              i_520098317 = addInt(i_520098317, 1);
            }
        };
      };
    };
    }
    else {
    if (eqStrings(data_520095380[chckIndx(0, 0, (data_520095380).length - 1)], [99,97,115,116,105,110,103,99,111,109,112,108,101,116,101])) {
    F.line = 277;
    F.filename = "main.nim";
    turn_520093803[0] = true;
    F.line = 278;
    rawEcho([116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101,58,32,111,116,104,101,114,103,108,97,115,115,32,99,111,109,112,108,101,116,101]);
    Label13: {
      F.line = 279;
      var i_520095407 = 0;
      F.line = 279;
      var j_520095408 = 0;
      Label14: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_520098335 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098336 = 0;
        Label15: {
          F.line = 129;
            Label16: while (true) {
            if (!(i_520098336 < 8)) break Label16;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098335 = i_520098336;
              Label17: {
                F.line = 114;
                var j_520098339 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098340 = 0;
                Label18: {
                  F.line = 129;
                    Label19: while (true) {
                    if (!(i_520098340 < 8)) break Label19;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098339 = i_520098340;
                      F.line = 279;
                      F.filename = "main.nim";
                      i_520095407 = i_520098335;
                      F.line = 279;
                      j_520095408 = j_520098339;
                      Label20: {
                        F.line = 280;
                        var c_520095412 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520098330 = [];
                        F.line = 280;
                        F.filename = "main.nim";
                        colontmp__520098330 = theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095408, 0, (theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520098331 = 0;
                        F.line = 250;
                        var L_520098332 = (colontmp__520098330).length;
                        Label21: {
                          F.line = 251;
                            Label22: while (true) {
                            if (!(i_520098331 < L_520098332)) break Label22;
                              F.line = 280;
                              F.filename = "main.nim";
                              c_520095412 = colontmp__520098330[chckIndx(i_520098331, 0, (colontmp__520098330).length - 1)];
                              if ((c_520095412.Field1 == nsuParseInt(data_520095380[chckIndx(1, 0, (data_520095380).length - 1)]))) {
                              F.line = 283;
                              F.line = 652;
                              F.filename = "sequtils.nim";
                              var resultHEX60gensym143_520095417 = newSeq_520095232(0);
                              Label23: {
                                F.line = 653;
                                var it_520095421 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                                F.line = 247;
                                F.filename = "iterators.nim";
                                var colontmp__520098326 = [];
                                F.line = 283;
                                F.filename = "main.nim";
                                colontmp__520098326 = theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095408, 0, (theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts;
                                F.line = 249;
                                F.filename = "iterators.nim";
                                var i_520098327 = 0;
                                F.line = 250;
                                var L_520098328 = (colontmp__520098326).length;
                                Label24: {
                                  F.line = 251;
                                    Label25: while (true) {
                                    if (!(i_520098327 < L_520098328)) break Label25;
                                      F.line = 653;
                                      F.filename = "sequtils.nim";
                                      it_520095421 = colontmp__520098326[chckIndx(i_520098327, 0, (colontmp__520098326).length - 1)];
                                      if (!((it_520095421.Field1 == c_520095412.Field1))) {
                                      F.line = 654;
                                      var Temporary26 = nimCopy(null, it_520095421, NTI1224736785);
                                      resultHEX60gensym143_520095417.push(Temporary26);;
                                      }
                                      
                                      F.line = 13;
                                      F.filename = "iterators.nim";
                                      i_520098327 += 1;
                                      if (!(((colontmp__520098326).length == L_520098328))) {
                                      F.line = 254;
                                      failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                      }
                                      
                                    }
                                };
                              };
                              theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095408, 0, (theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym143_520095417, NTI520094926);
                              F.line = 284;
                              F.filename = "main.nim";
                              get_520095438((Temporary27 = theState_520093821[0].Field1[chckIndx(otherSide_1224737925(side_520093802[0]), 0, (theState_520093821[0].Field1).length - 1)].glass, Temporary27)[chckIndx(c_520095412.Field2, 0, (Temporary27).length - 1)]).Field1(theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095408, 0, (theBoard_520093820[0][chckIndx(i_520095407, 0, (theBoard_520093820[0]).length - 1)]).length - 1)], c_520095412.Field0, theBoard_520093820[0], theState_520093821[0]);
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520098331 += 1;
                              if (!(((colontmp__520098330).length == L_520098332))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098340 = addInt(i_520098340, 1);
                    }
                };
              };
              F.line = 131;
              i_520098336 = addInt(i_520098336, 1);
            }
        };
      };
    };
    }
    }}
  framePtr = F.prev;

  
}

function otherAction_520095470(d_520095471) {
  var F = {procname: "main.otherAction", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 290;
    F.filename = "main.nim";
    var data_520095472 = nsuSplitString(d_520095471, [44], (-1));
    if (eqStrings(data_520095472[chckIndx(0, 0, (data_520095472).length - 1)], [98,117,121])) {
    F.line = 292;
    otherBuy_520095260(d_520095471);
    F.line = 293;
    endRound_520093964();
    }
    else {
    if ((eqStrings(data_520095472[chckIndx(0, 0, (data_520095472).length - 1)], [109,111,118,101]) || eqStrings(data_520095472[chckIndx(0, 0, (data_520095472).length - 1)], [116,97,107,101]))) {
    F.line = 295;
    turn_520093803[0] = true;
    F.line = 296;
    rawEcho([111,116,104,101,114,97,99,116,105,111,110,32,111,102,32,109,111,118,101,47,116,97,107,101,58,32,116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101]);
    F.line = 297;
    otherMove_520095313(d_520095471);
    F.line = 298;
    endRound_520093964();
    }
    else {
    if ((toJSStr(data_520095472[chckIndx(0, 0, (data_520095472).length - 1)]).indexOf("casting")>=0)) {
    F.line = 300;
    otherGlass_520095378(d_520095471);
    }
    else {
    if (eqStrings(data_520095472[chckIndx(0, 0, (data_520095472).length - 1)], [112,97,115,115])) {
    F.line = 302;
    turn_520093803[0] = true;
    F.line = 303;
    rawEcho([111,116,104,101,114,97,99,116,105,111,110,32,111,102,32,112,97,115,115,58,32,116,117,114,110,32,101,113,117,97,108,115,32,116,114,117,101]);
    F.line = 304;
    endRound_520093964();
    }
    }}}
  framePtr = F.prev;

  
}

function hostLogic_520095620(d_520095621, m_520095622) {
  var F = {procname: "main.hostLogic", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 347;
    F.filename = "main.nim";
    rawEcho(reprEnum(m_520095622, NTI1325400069), [32,111,102,32], d_520095621, [10]);
    F.line = 348;
    switch (m_520095622) {
    case 0:
      F.line = 350;
      var colontmp__520098222 = true;
      F.line = 350;
      var colontmp__520098223 = toJSStr(d_520095621);
      F.line = 350;
      roomId_520093795[0] = nimCopy(roomId_520093795[0], {Field0: colontmp__520098222, Field1: colontmp__520098223}, NTI520093737);
      F.line = 351;
      side_520093802[0] = 1;
      break;
    case 1:
      F.line = 353;
      peer_520093801[0].Field0("options:deciding");
      F.line = 354;
      currentScreen_520093849[0] = 4;
      F.line = 355;
      initGame_520093922();
      F.line = 357;
      draftTier_520093818[0] = randomTier_1442841373({Field0: 50, Field1: 36, Field2: 12, Field3: 2});
      break;
    case 3:
      F.line = 359;
      var x_520095626 = nsuSplitString(d_520095621, [44], (-1));
      if (eqStrings(x_520095626[chckIndx(0, 0, (x_520095626).length - 1)], [109,121])) {
      F.line = 361;
      turn_520093803[0] = true;
      F.line = 362;
      var Temporary1 = nimCopy(null, powers_1442840650[0][chckIndx(nsuParseInt(x_520095626[chckIndx(1, 0, (x_520095626).length - 1)]), 0, (powers_1442840650[0]).length - 1)], NTI1442840582);
      opponentDrafts_520093813[0].push(Temporary1);;
      if ((1 <= draftsLeft_520093817[0])) {
      F.line = 364;
      draftsLeft_520093817[0] = subInt(draftsLeft_520093817[0], 1);
      F.line = 365;
      draftTier_520093818[0] = randomTier_1442841373({Field0: 50, Field1: 36, Field2: 12, Field3: 2});
      F.line = 366;
      draft_520095548(HEX26_1442841411(myDrafts_520093808[0], opponentDrafts_520093813[0]), myDrafts_520093808[0]);
      }
      else {
        F.line = 368;
        execute_1442841553(myDrafts_520093808[0], opponentDrafts_520093813[0], side_520093802[0], theBoard_520093820[0], theState_520093821[0]);
        F.line = 369;
        peer_520093801[0].Field0("handshake:gamestart");
        F.line = 370;
        currentScreen_520093849[0] = 3;
      }
      
      }
      
      break;
    case 6:
      F.line = 371;
      otherAction_520095470(d_520095621);
      break;
    case 4:
      if ((eqStrings(d_520095621, [100,105,115,99,111,110,110]) || eqStrings(d_520095621, [101,120,105,116]))) {
      F.line = 374;
      currentScreen_520093849[0] = 8;
      }
      else {
        F.line = 376;
      peer_520093801[0].Field0("end:exit");
      }
      
      F.line = 377;
      peer_520093801[0].Field1();
      F.line = 378;
      roomId_520093795[0].Field0 = false;
      break;
    default: 
      F.line = 379;
      rawEcho([117,110,105,109,112,108,101,109,101,110,116,101,100]);
      break;
    }
    F.line = 380;
    redraw_687867377(kxi__);
  framePtr = F.prev;

  
}

function createLobby_520095930() {
    
function HEX3Aanonymous_520095940(__520095941, __520095942) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 520;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 2;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520095943(ev_520095944, __520095945) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 524;
        F.filename = "main.nim";
        alert("Unimplemented");
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520095946(ev_520095947, __520095948) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if (!((peer_520093801[0].Field1 == null))) {
        F.line = 531;
        F.filename = "main.nim";
        peer_520093801[0].Field1();
        }
        
        F.line = 532;
        peer_520093801[0] = nimCopy(peer_520093801[0], newHost_1325400110(hostLogic_520095620), NTI520093739);
        F.line = 534;
        currentScreen_520093849[0] = 1;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520096000(ev_520096001, __520096002) {
      var F = {procname: "createLobby.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 539;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 10;
      framePtr = F.prev;

      
    }

  var result_520095931 = null;

  var F = {procname: "main.createLobby", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 514;
    F.filename = "main.nim";
    F.line = 514;
    var tmp_520095932 = tree_721421184(44, []);
    F.line = 514;
    tmp_520095932.class = "start-column height-100";
    F.line = 515;
    var tmp_520095933 = tree_721421184(44, []);
    F.line = 515;
    tmp_520095933.class = "main";
    F.line = 516;
    var tmp_520095934 = tree_721421184(44, []);
    F.line = 516;
    tmp_520095934.class = "start-column";
    F.line = 517;
    var tmp_520095935 = tree_721421184(195, []);
    F.line = 517;
    tmp_520095935.class = " menu-button ";
    F.line = 518;
    add_721421120(tmp_520095935, text_721421252([74,111,105,110,32,97,32,82,111,111,109]));
    F.line = 519;
    addEventHandler_687867670(tmp_520095935, 0, HEX3Aanonymous_520095940, kxi__);
    F.line = 514;
    add_721421120(tmp_520095934, tmp_520095935);
    F.line = 521;
    var tmp_520095936 = tree_721421184(195, []);
    F.line = 521;
    tmp_520095936.class = " menu-button ";
    F.line = 522;
    add_721421120(tmp_520095936, text_721421252([83,101,101,32,80,111,119,101,114,115]));
    F.line = 523;
    addEventHandler_687867670(tmp_520095936, 0, HEX3Aanonymous_520095943, kxi__);
    F.line = 514;
    add_721421120(tmp_520095934, tmp_520095936);
    F.line = 514;
    add_721421120(tmp_520095933, tmp_520095934);
    F.line = 526;
    var tmp_520095937 = tree_721421184(44, []);
    F.line = 526;
    tmp_520095937.class = "start-column";
    F.line = 527;
    var tmp_520095938 = tree_721421184(195, []);
    F.line = 527;
    tmp_520095938.class = " menu-button ";
    F.line = 528;
    add_721421120(tmp_520095938, text_721421252([67,114,101,97,116,101,32,97,32,82,111,111,109]));
    F.line = 529;
    addEventHandler_687867670(tmp_520095938, 0, HEX3Aanonymous_520095946, kxi__);
    F.line = 514;
    add_721421120(tmp_520095937, tmp_520095938);
    F.line = 536;
    var tmp_520095939 = tree_721421184(195, []);
    F.line = 536;
    tmp_520095939.class = " menu-button ";
    F.line = 537;
    add_721421120(tmp_520095939, text_721421252([79,116,104,101,114]));
    F.line = 538;
    addEventHandler_687867670(tmp_520095939, 0, HEX3Aanonymous_520096000, kxi__);
    F.line = 514;
    add_721421120(tmp_520095937, tmp_520095939);
    F.line = 514;
    add_721421120(tmp_520095933, tmp_520095937);
    F.line = 514;
    add_721421120(tmp_520095932, tmp_520095933);
    result_520095931 = tmp_520095932;
  framePtr = F.prev;

  return result_520095931;

}

function text_721421255(s_721421256) {
  var result_721421257 = null;

  var F = {procname: "vdom.text", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 324;
    F.filename = "vdom.nim";
    result_721421257 = {kind: 0, text: s_721421256, index: (-1), m_type: NTI721420388, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};
  framePtr = F.prev;

  return result_721421257;

}

function createRoomMenu_520096019() {
  var result_520096020 = null;

  var F = {procname: "main.createRoomMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 542;
    F.filename = "main.nim";
    F.line = 542;
    var tmp_520096021 = tree_721421184(44, []);
    F.line = 542;
    tmp_520096021.class = "main";
    if (!(roomId_520093795[0].Field0)) {
    F.line = 544;
    add_721421120(tmp_520096021, text_721421252([67,114,101,97,116,105,110,103,32,114,111,111,109,32,107,101,121]));
    }
    else {
      F.line = 546;
      var tmp_520096022 = tree_721421184(22, []);
      F.line = 547;
      add_721421120(tmp_520096022, text_721421252([82,111,111,109,32,75,101,121,58,32]));
      F.line = 547;
      add_721421120(tmp_520096021, tmp_520096022);
      F.line = 548;
      var tmp_520096023 = tree_721421184(72, []);
      F.line = 548;
      add_721421120(tmp_520096021, tmp_520096023);
      F.line = 549;
      add_721421120(tmp_520096021, text_721421255(roomId_520093795[0].Field1));
    }
    
    result_520096020 = tmp_520096021;
  framePtr = F.prev;

  return result_520096020;

}

function getInputText_687867761(n_687867762) {
  var result_687867763 = null;

  var F = {procname: "karax.getInputText", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (!((n_687867762.dom == null))) {
    F.line = 891;
    F.filename = "karax.nim";
    result_687867763 = n_687867762.dom.value;
    }
    
  framePtr = F.prev;

  return result_687867763;

}

function getVNodeById_687866162(id_687866163, kxi_687866164) {
  var result_687866165 = null;

  var F = {procname: "karax.getVNodeById", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    if (kxi_687866164.byId.hasOwnProperty(id_687866163)) {
    F.line = 162;
    F.filename = "karax.nim";
    result_687866165 = kxi_687866164.byId[id_687866163];
    }
    
  framePtr = F.prev;

  return result_687866165;

}

function len_721421311(a_721421312) {
    var Temporary1;

  var result_721421313 = 0;

  var F = {procname: "vdom.len", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 353;
    F.filename = "vdom.nim";
    if ((a_721421312 == null)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = ((a_721421312) == null ? 0 : (a_721421312).length);
    }
    
    result_721421313 = Temporary1;
  framePtr = F.prev;

  return result_721421313;

}

function toString_721421316(n_721421317, result_721421318, result_721421318_Idx, indent_721421319) {
  var F = {procname: "vdom.toString", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 360;
      F.filename = "vdom.nim";
      var i_721421324 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098345 = 1;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520098345 <= indent_721421319)) break Label3;
            F.line = 360;
            F.filename = "vdom.nim";
            i_721421324 = res_520098345;
            F.line = 360;
            addChar(result_721421318[result_721421318_Idx], 32);;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098345 = addInt(res_520098345, 1);
          }
      };
    };
    if ((0 < (result_721421318[result_721421318_Idx]).length)) {
    F.line = 361;
    F.filename = "vdom.nim";
    addChar(result_721421318[result_721421318_Idx], 10);;
    }
    
    F.line = 362;
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([60] || []).concat(reprEnum(n_721421317.kind, NTI721420291) || []));;
    if ((0 < len_721421311(n_721421317.id))) {
    F.line = 357;
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([32,105,100,32,61,32] || []).concat(cstrToNimstr(n_721421317.id) || []));;
    }
    
    if ((0 < len_721421311(n_721421317.class))) {
    F.line = 357;
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([32,99,108,97,115,115,32,61,32] || []).concat(cstrToNimstr(n_721421317.class) || []));;
    }
    
    Label4: {
      F.line = 365;
      var k_721421328 = null;
      F.line = 365;
      var v_721421329 = null;
      Label5: {
        F.line = 337;
        var i_520098349 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520098350 = 0;
        F.line = 337;
        F.filename = "vdom.nim";
        colontmp__520098350 = subInt((n_721421317.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520098351 = 0;
        Label6: {
          F.line = 69;
            Label7: while (true) {
            if (!(res_520098351 <= colontmp__520098350)) break Label7;
              F.line = 337;
              F.filename = "vdom.nim";
              i_520098349 = res_520098351;
              F.line = 365;
              k_721421328 = n_721421317.attrs[chckIndx(i_520098349, 0, (n_721421317.attrs).length - 1)];
              F.line = 365;
              v_721421329 = n_721421317.attrs[chckIndx(addInt(i_520098349, 1), 0, (n_721421317.attrs).length - 1)];
              F.line = 366;
              result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([32] || []).concat(cstrToNimstr(k_721421328) || [],[32,61,32] || [],cstrToNimstr(v_721421329) || []));;
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520098351 = addInt(res_520098351, 2);
            }
        };
      };
    };
    F.line = 367;
    F.filename = "vdom.nim";
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], [62,10]);;
    if ((n_721421317.kind == 0)) {
    F.line = 369;
    add_33556373(result_721421318, result_721421318_Idx, n_721421317.text);
    }
    else {
      if ((0 < len_721421311(n_721421317.text))) {
      F.line = 372;
      result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], [32,118,97,108,117,101,32,61,32]);;
      F.line = 373;
      add_33556373(result_721421318, result_721421318_Idx, n_721421317.text);
      }
      
      Label8: {
        F.line = 374;
        var child_721421335 = null;
        Label9: {
          F.line = 334;
          var i_520098355 = 0;
          F.line = 126;
          F.filename = "iterators_1.nim";
          var colontmp__520098356 = 0;
          F.line = 334;
          F.filename = "vdom.nim";
          colontmp__520098356 = (n_721421317.kids).length;
          F.line = 128;
          F.filename = "iterators_1.nim";
          var i_520098357 = 0;
          Label10: {
            F.line = 129;
              Label11: while (true) {
              if (!(i_520098357 < colontmp__520098356)) break Label11;
                F.line = 334;
                F.filename = "vdom.nim";
                i_520098355 = i_520098357;
                F.line = 374;
                child_721421335 = n_721421317.kids[chckIndx(i_520098355, 0, (n_721421317.kids).length - 1)];
                F.line = 375;
                toString_721421316(child_721421335, result_721421318, result_721421318_Idx, addInt(indent_721421319, 2));
                F.line = 131;
                F.filename = "iterators_1.nim";
                i_520098357 = addInt(i_520098357, 1);
              }
          };
        };
      };
    }
    
    Label12: {
      F.line = 376;
      F.filename = "vdom.nim";
      var i_721421340 = 0;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520098360 = 1;
      Label13: {
        F.line = 97;
          Label14: while (true) {
          if (!(res_520098360 <= indent_721421319)) break Label14;
            F.line = 376;
            F.filename = "vdom.nim";
            i_721421340 = res_520098360;
            F.line = 376;
            addChar(result_721421318[result_721421318_Idx], 32);;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520098360 = addInt(res_520098360, 1);
          }
      };
    };
    F.line = 377;
    F.filename = "vdom.nim";
    result_721421318[result_721421318_Idx].push.apply(result_721421318[result_721421318_Idx], ([10,60,47] || []).concat(reprEnum(n_721421317.kind, NTI721420291) || [],[62] || []));;
  framePtr = F.prev;

  
}

function HEX24_721421411(n_721421412) {
  var result_721421413 = null;

  var F = {procname: "vdom.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 506;
    F.filename = "vdom.nim";
    var res_721421414 = [[]];
    F.line = 507;
    toString_721421316(n_721421412, res_721421414, 0, 0);
    F.line = 508;
    result_721421413 = toJSStr(res_721421414[0]);
  framePtr = F.prev;

  return result_721421413;

}

function newJoin_1325400311(id_1325400312, cb_1325400316) {
    
function HEX3Aanonymous_1325400325() {
        
function HEX3Aanonymous_1325400337() {
          var result_1325400338 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
          framePtr = F;
            F.line = 91;
            F.filename = "port.nim";
            result_1325400338 = conn_1325400324.send(("handshake:hello"));
          framePtr = F.prev;

          return result_1325400338;

        }
        
function HEX3Aanonymous_1325400368(data_1325400369) {
          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
          framePtr = F;
            F.line = 92;
            F.filename = "port.nim";
            cb_1325400316(cutMessage_1325400107(data_1325400369), messageType_1325400087(data_1325400369));
          framePtr = F.prev;

          
        }

      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 90;
        F.filename = "port.nim";
        conn_1325400324 = peer_1325400323.connect((("9e4ada91-c493-4fd4-881d-3e05db99e100" + id_1325400312)));
        conn_1325400324.on(("open"), (HEX3Aanonymous_1325400337));
        conn_1325400324.on(("data"), (HEX3Aanonymous_1325400368));
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400407() {
      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        F.line = 94;
        F.filename = "port.nim";
        rawEcho([68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84,32,68,73,83,67,79,78,78,69,67,84]);
        F.line = 95;
        peer_1325400323.id = ("9e4ada91-c493-4fd4-881d-3e05db99e100" + id_1325400312);
        peer_1325400323.reconnect();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400441() {
      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        peer_1325400323.destroy();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_1325400446(data_1325400447) {
      var F = {procname: "newJoin.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
      framePtr = F;
        conn_1325400324.send((data_1325400447));
      framePtr = F.prev;

      
    }

  var result_1325400322 = {Field0: null, Field1: null};

  var F = {procname: "port.newJoin", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/port.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "port.nim";
    var peer_1325400323 = new Peer(null, {config: {
                        iceServers: [
                            {
                                urls: "turn:standard.relay.metered.ca:80",
                                username: "4eadefa5a1ad93a461469d19",
                                credential: "wLlcdHP/D2ZcRAg/",
                            }
                        ]
                    }
                })
;
    F.line = 88;
    var conn_1325400324 = null;
    peer_1325400323.on(("open"), (HEX3Aanonymous_1325400325));
    peer_1325400323.on(("disconnect"), (HEX3Aanonymous_1325400407));
    F.line = 98;
    result_1325400322.Field1 = HEX3Aanonymous_1325400441;
    F.line = 101;
    result_1325400322.Field0 = HEX3Aanonymous_1325400446;
  framePtr = F.prev;

  return result_1325400322;

}

function HEX5BHEX5D_520095689(s_520095693, x_520095694) {
  var result_520095695 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_520095697 = x_520095694.a;
    F.line = 140;
    var L_520095702 = addInt(subInt(subInt((s_520095693).length, x_520095694.b), a_520095697), 1);
    F.line = 141;
    result_520095695 = new Array(chckRange(L_520095702, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_520095702, 0, 2147483647) ; ++i) { result_520095695[i] = []; }    Label1: {
      F.line = 142;
      var i_520095711 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098369 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098369 < L_520095702)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_520095711 = i_520098369;
            F.line = 142;
            result_520095695[chckIndx(i_520095711, 0, (result_520095695).length - 1)] = nimCopy(null, s_520095693[chckIndx(addInt(i_520095711, a_520095697), 0, (s_520095693).length - 1)], NTI33554449);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098369 = addInt(i_520098369, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520095695;

}

function joinLogic_520095665(d_520095666, m_520095667) {
  var F = {procname: "main.joinLogic", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 383;
    F.filename = "main.nim";
    rawEcho(reprEnum(m_520095667, NTI1325400069), [32,111,102,32], d_520095666, [10]);
    F.line = 384;
    switch (m_520095667) {
    case 2:
      F.line = 386;
      currentScreen_520093849[0] = 4;
      F.line = 387;
      side_520093802[0] = 0;
      F.line = 388;
      turn_520093803[0] = false;
      F.line = 389;
      initGame_520093922();
      break;
    case 1:
      F.line = 391;
      execute_1442841553(myDrafts_520093808[0], opponentDrafts_520093813[0], side_520093802[0], theBoard_520093820[0], theState_520093821[0]);
      F.line = 392;
      currentScreen_520093849[0] = 3;
      break;
    case 5:
      if (rematch_520093819[0]) {
      F.line = 395;
      rematch_520093819[0] = false;
      F.line = 396;
      peer_520093801[0].Field0("handshake:newgame");
      }
      else {
        F.line = 398;
        rematch_520093819[0] = true;
      }
      
      break;
    case 3:
      F.line = 400;
      var x_520095671 = nsuSplitString(d_520095666, [44], (-1));
      if (eqStrings(d_520095666, [115,116,97,114,116])) {
      F.line = 402;
      currentScreen_520093849[0] = 5;
      }
      else {
      if (eqStrings(x_520095671[chckIndx(0, 0, (x_520095671).length - 1)], [109,121])) {
      F.line = 404;
      var Temporary1 = nimCopy(null, powers_1442840650[0][chckIndx(nsuParseInt(x_520095671[chckIndx(1, 0, (x_520095671).length - 1)]), 0, (powers_1442840650[0]).length - 1)], NTI1442840582);
      opponentDrafts_520093813[0].push(Temporary1);;
      }
      else {
      if (eqStrings(x_520095671[chckIndx(0, 0, (x_520095671).length - 1)], [103,111])) {
      F.line = 406;
      draftOptions_520093815[0] = nimCopy(null, [], NTI1442841020);
      Label2: {
        F.line = 407;
        var i_520095733 = [];
        F.line = 247;
        F.filename = "iterators.nim";
        var colontmp__520098363 = [];
        F.line = 407;
        F.filename = "main.nim";
        colontmp__520098363 = HEX5BHEX5D_520095689(x_520095671, HEX2EHEX2E_1006633065(1, 1));
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520098365 = 0;
        F.line = 250;
        var L_520098366 = (colontmp__520098363).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520098365 < L_520098366)) break Label4;
              F.line = 407;
              F.filename = "main.nim";
              i_520095733 = colontmp__520098363[chckIndx(i_520098365, 0, (colontmp__520098363).length - 1)];
              F.line = 408;
              var Temporary5 = nimCopy(null, powers_1442840650[0][chckIndx(nsuParseInt(i_520095733), 0, (powers_1442840650[0]).length - 1)], NTI1442840582);
              draftOptions_520093815[0].push(Temporary5);;
              F.line = 13;
              F.filename = "iterators.nim";
              i_520098365 += 1;
              if (!(((colontmp__520098363).length == L_520098366))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      F.line = 410;
      F.filename = "main.nim";
      turn_520093803[0] = true;
      }
      }}
      break;
    case 6:
      F.line = 411;
      otherAction_520095470(d_520095666);
      break;
    case 4:
      if ((eqStrings(d_520095666, [100,105,115,99,111,110,110]) || eqStrings(d_520095666, [101,120,105,116]))) {
      F.line = 414;
      currentScreen_520093849[0] = 8;
      }
      else {
        F.line = 416;
      peer_520093801[0].Field0("end:exit");
      }
      
      F.line = 417;
      peer_520093801[0].Field1();
      break;
    default: 
      F.line = 418;
      rawEcho([117,110,105,109,112,108,101,109,101,110,116,101,100]);
      break;
    }
    F.line = 419;
    redraw_687867377(kxi__);
  framePtr = F.prev;

  
}

function join_520096024(__520096025, __520096026) {
  var F = {procname: "main.join", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 552;
    F.filename = "main.nim";
    var id_520096027 = getInputText_687867761(getVNodeById_687866162("joincode", kxi__));
    F.line = 553;
    roomId_520093795[0].Field1 = id_520096027;
    F.line = 554;
    rawEcho(HEX24_721421411(getVNodeById_687866162("joincode", kxi__)));
    if (!((peer_520093801[0].Field1 == null))) {
    F.line = 556;
    peer_520093801[0].Field1();
    }
    
    F.line = 557;
    peer_520093801[0] = nimCopy(peer_520093801[0], newJoin_1325400311(id_520096027, joinLogic_520095665), NTI520093739);
  framePtr = F.prev;

  
}

function setAttr_721421035(n_721421036, key_721421037, val_721421038) {
  var F = {procname: "vdom.setAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((n_721421036.attrs).length == 0)) {
    F.line = 248;
    F.filename = "vdom.nim";
    n_721421036.attrs = nimCopy(null, [key_721421037, val_721421038], NTI721420574);
    }
    else {
      Label1: {
        F.line = 250;
        var i_721421055 = 0;
        F.line = 46;
        F.filename = "iterators_1.nim";
        var colontmp__520098372 = 0;
        F.line = 250;
        F.filename = "vdom.nim";
        colontmp__520098372 = subInt((n_721421036.attrs).length, 2);
        F.line = 68;
        F.filename = "iterators_1.nim";
        var res_520098373 = 0;
        Label2: {
          F.line = 69;
            Label3: while (true) {
            if (!(res_520098373 <= colontmp__520098372)) break Label3;
              F.line = 250;
              F.filename = "vdom.nim";
              i_721421055 = res_520098373;
              if ((n_721421036.attrs[chckIndx(i_721421055, 0, (n_721421036.attrs).length - 1)] == key_721421037)) {
              F.line = 252;
              n_721421036.attrs[chckIndx(addInt(i_721421055, 1), 0, (n_721421036.attrs).length - 1)] = val_721421038;
              F.line = 253;
              break BeforeRet;
              }
              
              F.line = 74;
              F.filename = "iterators_1.nim";
              res_520098373 = addInt(res_520098373, 2);
            }
        };
      };
      F.line = 254;
      F.filename = "vdom.nim";
      n_721421036.attrs.push(key_721421037);;
      F.line = 255;
      n_721421036.attrs.push(val_721421038);;
    }
    
  };
  framePtr = F.prev;

  
}

function addEventHandler_687867678(n_687867679, k_687867680, action_687867682, kxi_687867683) {
    
function wrapper_687867684(ev_687867685, n_687867686) {
      var F = {procname: "addEventHandler.wrapper", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
      framePtr = F;
        F.line = 828;
        F.filename = "karax.nim";
        action_687867682();
        if (!(kxi_687867683.surpressRedraws)) {
        F.line = 829;
        redraw_687867377(kxi_687867683);
        }
        
      framePtr = F.prev;

      
    }

  var F = {procname: "karax.addEventHandler", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/karax.nim", line: 0};
  framePtr = F;
    F.line = 830;
    F.filename = "karax.nim";
    addEventListener_721421303(n_687867679, k_687867680, wrapper_687867684);
  framePtr = F.prev;

  
}

function getError_1207959579(field_1207959580) {
  var result_1207959581 = null;

  var F = {procname: "errors.getError", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
  framePtr = F;
    if (!(gerrorMsgs_1207959558[0].hasOwnProperty(field_1207959580))) {
    F.line = 17;
    F.filename = "errors.nim";
    result_1207959581 = "";
    }
    else {
      F.line = 19;
      result_1207959581 = gerrorMsgs_1207959558[0][field_1207959580];
    }
    
  framePtr = F.prev;

  return result_1207959581;

}

function setError_1207959594(field_1207959595, msg_1207959596) {
  var F = {procname: "errors.setError", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/errors.nim", line: 0};
  framePtr = F;
    F.line = 22;
    F.filename = "errors.nim";
    var previous_1207959597 = getError_1207959579(field_1207959595);
    if ((((msg_1207959596) == null ? 0 : (msg_1207959596).length) == 0)) {
    if (!((((previous_1207959597) == null ? 0 : (previous_1207959597).length) == 0))) {
    F.line = 24;
    gerrorCounter_1207959559[0] = subInt(gerrorCounter_1207959559[0], 1);
    }
    
    }
    else {
      if ((((previous_1207959597) == null ? 0 : (previous_1207959597).length) == 0)) {
      F.line = 26;
      gerrorCounter_1207959559[0] = addInt(gerrorCounter_1207959559[0], 1);
      }
      
    }
    
    F.line = 27;
    gerrorMsgs_1207959558[0][field_1207959595] = msg_1207959596;
  framePtr = F.prev;

  
}

function validateNotEmpty_520095744(field_520095745) {
    
function HEX3Aanonymous_520095748() {
      var F = {procname: "validateNotEmpty.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 423;
        F.filename = "main.nim";
        var x_520095749 = getInputText_687867761(getVNodeById_687866162(field_520095745, kxi__));
        if (((x_520095749 == null) || (x_520095749 == ""))) {
        F.line = 425;
        setError_1207959594(field_520095745, (field_520095745 + " must not be empty"));
        }
        else {
          F.line = 427;
        setError_1207959594(field_520095745, "");
        }
        
      framePtr = F.prev;

      
    }

  var result_520095747 = null;

  var F = {procname: "main.validateNotEmpty", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 422;
    F.filename = "main.nim";
    result_520095747 = HEX3Aanonymous_520095748;
  framePtr = F.prev;

  return result_520095747;

}

function createJoinMenu_520096049() {
  var result_520096050 = null;

  var F = {procname: "main.createJoinMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 560;
    F.filename = "main.nim";
    F.line = 560;
    var tmp_520096051 = tree_721421184(44, []);
    F.line = 560;
    tmp_520096051.class = "main cut-down";
    F.line = 560;
    tmp_520096051.id = "join";
    F.line = 560;
    addEventHandler_687867670(tmp_520096051, 29, join_520096024, kxi__);
    F.line = 561;
    var tmp_520096052 = tree_721421184(193, []);
    F.line = 561;
    setAttr_721421035(tmp_520096052, "for", "joincode");
    F.line = 562;
    add_721421120(tmp_520096052, text_721421252([74,111,105,110,32,67,111,100,101,58]));
    F.line = 562;
    add_721421120(tmp_520096051, tmp_520096052);
    F.line = 563;
    var tmp_520096053 = tree_721421184(194, []);
    F.line = 563;
    tmp_520096053.id = "joincode";
    F.line = 563;
    addEventHandler_687867678(tmp_520096053, 8, validateNotEmpty_520095744("joincode"), kxi__);
    F.line = 563;
    add_721421120(tmp_520096051, tmp_520096053);
    F.line = 564;
    var tmp_520096054 = tree_721421184(195, []);
    F.line = 564;
    addEventHandler_687867670(tmp_520096054, 0, join_520096024, kxi__);
    F.line = 565;
    add_721421120(tmp_520096054, text_721421252([69,110,116,101,114]));
    F.line = 565;
    add_721421120(tmp_520096051, tmp_520096054);
    result_520096050 = tmp_520096051;
  framePtr = F.prev;

  return result_520096050;

}

function createOptionsMenu_520096055() {
      
function HEX3Aanonymous_520096085(__520096086, __520096087) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 575;
          F.filename = "main.nim";
          peer_520093801[0].Field0("handshake:gamestart");
          F.line = 576;
          turn_520093803[0] = true;
          F.line = 577;
          currentScreen_520093849[0] = 3;
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520096090(__520096091, __520096092) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 588;
          F.filename = "main.nim";
          peer_520093801[0].Field0("draft:start");
          F.line = 589;
          currentScreen_520093849[0] = 5;
          F.line = 590;
          gameMode_520093851[0] = 1;
          F.line = 591;
          turn_520093803[0] = true;
          F.line = 592;
          baseDrafts_520093814[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftTierNumber", kxi__)), 10);
          F.line = 593;
          draftsLeft_520093817[0] = subInt(baseDrafts_520093814[0], 1);
          F.line = 594;
          draftChoices_520093816[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftChoiceTierNumber", kxi__)), 10);
          F.line = 596;
          draft_520095548([], []);
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520096111(__520096112, __520096113) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 617;
          F.filename = "main.nim";
          peer_520093801[0].Field0("draft:start");
          F.line = 618;
          currentScreen_520093849[0] = 5;
          F.line = 619;
          gameMode_520093851[0] = 2;
          F.line = 620;
          turn_520093803[0] = true;
          F.line = 622;
          baseDrafts_520093814[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftRandNumber", kxi__)), 10);
          F.line = 623;
          draftsLeft_520093817[0] = subInt(baseDrafts_520093814[0], 1);
          F.line = 624;
          draftChoices_520093816[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftChoiceRandNumber", kxi__)), 10);
          F.line = 626;
          draft_520095548([], []);
        framePtr = F.prev;

        
      }
      
function HEX3Aanonymous_520096116(__520096117, __520096118) {
        var F = {procname: "createOptionsMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 649;
          F.filename = "main.nim";
          peer_520093801[0].Field0("draft:start");
          F.line = 650;
          currentScreen_520093849[0] = 5;
          F.line = 651;
          gameMode_520093851[0] = 3;
          F.line = 652;
          turn_520093803[0] = true;
          F.line = 654;
          baseDrafts_520093814[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftSuperRandNumber", kxi__)), 10);
          F.line = 655;
          draftsLeft_520093817[0] = subInt(baseDrafts_520093814[0], 1);
          F.line = 656;
          draftChoices_520093816[0] = parseInt(getInputText_687867761(getVNodeById_687866162("draftChoiceSuperRandNumber", kxi__)), 10);
          F.line = 658;
          draft_520095548([], []);
        framePtr = F.prev;

        
      }

  var result_520096056 = null;

  var F = {procname: "main.createOptionsMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 568;
    F.filename = "main.nim";
    F.line = 568;
    var tmp_520096057 = tree_721421184(44, []);
    F.line = 568;
    tmp_520096057.class = "main";
    if ((side_520093802[0] == 0)) {
    F.line = 570;
    add_721421120(tmp_520096057, text_721421252([87,97,105,116,105,110,103,32,102,111,114,32,104,111,115,116,32,116,111,32,100,101,99,105,100,101,32,114,117,108,101,115,101,116,46,46,46]));
    }
    else {
      F.line = 572;
      var tmp_520096058 = tree_721421184(44, []);
      F.line = 572;
      tmp_520096058.class = "column cut-down";
      F.line = 573;
      var tmp_520096059 = tree_721421184(195, []);
      F.line = 574;
      addEventHandler_687867670(tmp_520096059, 0, HEX3Aanonymous_520096085, kxi__);
      F.line = 579;
      add_721421120(tmp_520096059, text_721421252([78,111,114,109,97,108,32,67,104,101,115,115]));
      F.line = 579;
      add_721421120(tmp_520096058, tmp_520096059);
      F.line = 581;
      add_721421120(tmp_520096058, text_721421252([67,108,97,115,115,105,99,32,67,104,101,115,115,44,32,119,105,116,104,32,110,111,32,115,112,101,99,105,97,108,32,114,117,108,101,115,32,111,114,32,97,98,105,108,105,116,101,115,46]));
      F.line = 581;
      add_721421120(tmp_520096057, tmp_520096058);
      F.line = 584;
      var tmp_520096060 = tree_721421184(44, []);
      F.line = 584;
      tmp_520096060.class = "column cut-down";
      F.line = 585;
      var tmp_520096061 = tree_721421184(44, []);
      F.line = 585;
      tmp_520096061.class = "column";
      F.line = 586;
      var tmp_520096062 = tree_721421184(195, []);
      F.line = 587;
      addEventHandler_687867670(tmp_520096062, 0, HEX3Aanonymous_520096090, kxi__);
      F.line = 598;
      add_721421120(tmp_520096062, text_721421252([68,114,97,102,116,32,109,111,100,101]));
      F.line = 598;
      add_721421120(tmp_520096061, tmp_520096062);
      F.line = 599;
      add_721421120(tmp_520096061, text_721421252(makeNimstrLit("Take turns drafting power ups for your pieces, then play. \x0A                            Each side is guaranteed to get power ups of the same tier.")));
      F.line = 602;
      var tmp_520096063 = tree_721421184(193, []);
      F.line = 602;
      setAttr_721421035(tmp_520096063, "for", "draftTierNumber");
      F.line = 603;
      add_721421120(tmp_520096063, text_721421252([78,117,109,98,101,114,32,111,102,32,112,111,119,101,114,115,32,100,114,97,102,116,101,100]));
      F.line = 603;
      add_721421120(tmp_520096061, tmp_520096063);
      F.line = 604;
      var tmp_520096064 = tree_721421184(194, []);
      F.line = 604;
      tmp_520096064.id = "draftTierNumber";
      F.line = 604;
      setAttr_721421035(tmp_520096064, "type", "number");
      F.line = 604;
      addEventHandler_687867678(tmp_520096064, 8, validateNotEmpty_520095744("draftTierNumber"), kxi__);
      F.line = 605;
      setAttr_721421035(tmp_520096064, "step", "1");
      F.line = 605;
      setAttr_721421035(tmp_520096064, "min", "1");
      F.line = 605;
      setAttr_721421035(tmp_520096064, "max", "10");
      F.line = 605;
      valueHEX3D_721420741(tmp_520096064, "3");
      F.line = 605;
      setAttr_721421035(tmp_520096064, "value", "3");
      F.line = 605;
      add_721421120(tmp_520096061, tmp_520096064);
      F.line = 607;
      var tmp_520096065 = tree_721421184(193, []);
      F.line = 607;
      setAttr_721421035(tmp_520096065, "for", "draftChoiceTierNumber");
      F.line = 608;
      add_721421120(tmp_520096065, text_721421252([78,117,109,98,101,114,32,111,102,32,99,104,111,105,99,101,115,32,101,97,99,104,32,114,111,117,110,100]));
      F.line = 608;
      add_721421120(tmp_520096061, tmp_520096065);
      F.line = 609;
      var tmp_520096066 = tree_721421184(194, []);
      F.line = 609;
      tmp_520096066.id = "draftChoiceTierNumber";
      F.line = 609;
      setAttr_721421035(tmp_520096066, "type", "number");
      F.line = 609;
      addEventHandler_687867678(tmp_520096066, 8, validateNotEmpty_520095744("draftChoiceTierNumber"), kxi__);
      F.line = 610;
      setAttr_721421035(tmp_520096066, "step", "1");
      F.line = 610;
      setAttr_721421035(tmp_520096066, "min", "1");
      F.line = 610;
      setAttr_721421035(tmp_520096066, "max", "5");
      F.line = 610;
      valueHEX3D_721420741(tmp_520096066, "3");
      F.line = 610;
      setAttr_721421035(tmp_520096066, "value", "3");
      F.line = 610;
      add_721421120(tmp_520096061, tmp_520096066);
      F.line = 610;
      add_721421120(tmp_520096060, tmp_520096061);
      F.line = 612;
      var tmp_520096067 = tree_721421184(33, []);
      F.line = 612;
      add_721421120(tmp_520096060, tmp_520096067);
      F.line = 614;
      var tmp_520096068 = tree_721421184(44, []);
      F.line = 614;
      tmp_520096068.class = "column";
      F.line = 615;
      var tmp_520096069 = tree_721421184(195, []);
      F.line = 616;
      addEventHandler_687867670(tmp_520096069, 0, HEX3Aanonymous_520096111, kxi__);
      F.line = 629;
      add_721421120(tmp_520096069, text_721421252([82,97,110,100,111,109,32,109,111,100,101]));
      F.line = 629;
      add_721421120(tmp_520096068, tmp_520096069);
      F.line = 631;
      add_721421120(tmp_520096068, text_721421252(makeNimstrLit("Draft powerups of random strength and quality, then play. \x0A                            Completely luck based.")));
      F.line = 634;
      var tmp_520096070 = tree_721421184(193, []);
      F.line = 634;
      setAttr_721421035(tmp_520096070, "for", "draftRandNumber");
      F.line = 635;
      add_721421120(tmp_520096070, text_721421252([78,117,109,98,101,114,32,111,102,32,112,111,119,101,114,115,32,100,114,97,102,116,101,100]));
      F.line = 635;
      add_721421120(tmp_520096068, tmp_520096070);
      F.line = 636;
      var tmp_520096071 = tree_721421184(194, []);
      F.line = 636;
      tmp_520096071.id = "draftRandNumber";
      F.line = 636;
      setAttr_721421035(tmp_520096071, "type", "number");
      F.line = 636;
      addEventHandler_687867678(tmp_520096071, 8, validateNotEmpty_520095744("draftRandNumber"), kxi__);
      F.line = 637;
      setAttr_721421035(tmp_520096071, "step", "1");
      F.line = 637;
      setAttr_721421035(tmp_520096071, "min", "1");
      F.line = 637;
      setAttr_721421035(tmp_520096071, "max", "10");
      F.line = 637;
      valueHEX3D_721420741(tmp_520096071, "3");
      F.line = 637;
      setAttr_721421035(tmp_520096071, "value", "3");
      F.line = 637;
      add_721421120(tmp_520096068, tmp_520096071);
      F.line = 639;
      var tmp_520096072 = tree_721421184(193, []);
      F.line = 639;
      setAttr_721421035(tmp_520096072, "for", "draftChoiceRandNumber");
      F.line = 640;
      add_721421120(tmp_520096072, text_721421252([78,117,109,98,101,114,32,111,102,32,99,104,111,105,99,101,115,32,101,97,99,104,32,114,111,117,110,100]));
      F.line = 640;
      add_721421120(tmp_520096068, tmp_520096072);
      F.line = 641;
      var tmp_520096073 = tree_721421184(194, []);
      F.line = 641;
      tmp_520096073.id = "draftChoiceRandNumber";
      F.line = 641;
      setAttr_721421035(tmp_520096073, "type", "number");
      F.line = 641;
      addEventHandler_687867678(tmp_520096073, 8, validateNotEmpty_520095744("draftChoiceRandNumber"), kxi__);
      F.line = 642;
      setAttr_721421035(tmp_520096073, "step", "1");
      F.line = 642;
      setAttr_721421035(tmp_520096073, "min", "1");
      F.line = 642;
      setAttr_721421035(tmp_520096073, "max", "5");
      F.line = 642;
      valueHEX3D_721420741(tmp_520096073, "3");
      F.line = 642;
      setAttr_721421035(tmp_520096073, "value", "3");
      F.line = 642;
      add_721421120(tmp_520096068, tmp_520096073);
      F.line = 642;
      add_721421120(tmp_520096060, tmp_520096068);
      F.line = 644;
      var tmp_520096074 = tree_721421184(33, []);
      F.line = 644;
      add_721421120(tmp_520096060, tmp_520096074);
      F.line = 646;
      var tmp_520096075 = tree_721421184(44, []);
      F.line = 646;
      tmp_520096075.class = "column";
      F.line = 647;
      var tmp_520096076 = tree_721421184(195, []);
      F.line = 648;
      addEventHandler_687867670(tmp_520096076, 0, HEX3Aanonymous_520096116, kxi__);
      F.line = 661;
      add_721421120(tmp_520096076, text_721421252([83,117,112,101,114,32,82,97,110,100,111,109,32,109,111,100,101]));
      F.line = 661;
      add_721421120(tmp_520096075, tmp_520096076);
      F.line = 663;
      add_721421120(tmp_520096075, text_721421252(makeNimstrLit("Draft powerups of random strength and quality, then play. \x0A                            Completely luck based, with higher chances for rare pieces.")));
      F.line = 666;
      var tmp_520096077 = tree_721421184(193, []);
      F.line = 666;
      setAttr_721421035(tmp_520096077, "for", "draftSuperRandNumber");
      F.line = 667;
      add_721421120(tmp_520096077, text_721421252([78,117,109,98,101,114,32,111,102,32,112,111,119,101,114,115,32,100,114,97,102,116,101,100]));
      F.line = 667;
      add_721421120(tmp_520096075, tmp_520096077);
      F.line = 668;
      var tmp_520096078 = tree_721421184(194, []);
      F.line = 668;
      tmp_520096078.id = "draftSuperRandNumber";
      F.line = 668;
      setAttr_721421035(tmp_520096078, "type", "number");
      F.line = 668;
      addEventHandler_687867678(tmp_520096078, 8, validateNotEmpty_520095744("draftSuperRandNumber"), kxi__);
      F.line = 669;
      setAttr_721421035(tmp_520096078, "step", "1");
      F.line = 669;
      setAttr_721421035(tmp_520096078, "min", "1");
      F.line = 669;
      setAttr_721421035(tmp_520096078, "max", "10");
      F.line = 669;
      valueHEX3D_721420741(tmp_520096078, "3");
      F.line = 669;
      setAttr_721421035(tmp_520096078, "value", "3");
      F.line = 669;
      add_721421120(tmp_520096075, tmp_520096078);
      F.line = 671;
      var tmp_520096079 = tree_721421184(193, []);
      F.line = 671;
      setAttr_721421035(tmp_520096079, "for", "draftChoiceSuperRandNumber");
      F.line = 672;
      add_721421120(tmp_520096079, text_721421252([78,117,109,98,101,114,32,111,102,32,99,104,111,105,99,101,115,32,101,97,99,104,32,114,111,117,110,100]));
      F.line = 672;
      add_721421120(tmp_520096075, tmp_520096079);
      F.line = 673;
      var tmp_520096080 = tree_721421184(194, []);
      F.line = 673;
      tmp_520096080.id = "draftChoiceSuperRandNumber";
      F.line = 673;
      setAttr_721421035(tmp_520096080, "type", "number");
      F.line = 673;
      addEventHandler_687867678(tmp_520096080, 8, validateNotEmpty_520095744("draftChoiceSuperRandNumber"), kxi__);
      F.line = 674;
      setAttr_721421035(tmp_520096080, "step", "1");
      F.line = 674;
      setAttr_721421035(tmp_520096080, "min", "1");
      F.line = 674;
      setAttr_721421035(tmp_520096080, "max", "5");
      F.line = 674;
      valueHEX3D_721420741(tmp_520096080, "3");
      F.line = 674;
      setAttr_721421035(tmp_520096080, "value", "3");
      F.line = 674;
      add_721421120(tmp_520096075, tmp_520096080);
      F.line = 674;
      add_721421120(tmp_520096060, tmp_520096075);
      F.line = 674;
      add_721421120(tmp_520096057, tmp_520096060);
    }
    
    result_520096056 = tmp_520096057;
  framePtr = F.prev;

  return result_520096056;

}

function createPowerMenu_520096121(p_520096122) {
    var Temporary1;
    p_520096122 = nimCopy(null, p_520096122, NTI1442840582);
    
function HEX3Aanonymous_520096137(__520096138, __520096139) {
      var F = {procname: "createPowerMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 692;
        F.filename = "main.nim";
        peer_520093801[0].Field0(toJSStr(([100,114,97,102,116,58,109,121,44] || []).concat(HEX24_369098760(p_520096122.index) || [])));
        F.line = 693;
        var Temporary1 = nimCopy(null, p_520096122, NTI1442840582);
        myDrafts_520093808[0].push(Temporary1);;
        F.line = 694;
        turn_520093803[0] = false;
        if ((side_520093802[0] == 1)) {
        F.line = 696;
        draft_520095548(HEX26_1442841411(myDrafts_520093808[0], opponentDrafts_520093813[0]), opponentDrafts_520093813[0]);
        F.line = 697;
        F.line = 975;
        F.filename = "sequtils.nim";
        Label2: {
          F.line = 1024;
          var iHEX60gensym162_520096172 = 0;
          F.line = 1025;
          var resultHEX60gensym162_520096179 = newSeq_503317026(chckRange((draftOptions_520093815[0]).length, 0, 2147483647));
          Label3: {
            F.line = 1026;
            var it_520096183 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
            F.line = 249;
            F.filename = "iterators.nim";
            var i_520098390 = 0;
            F.line = 250;
            var L_520098391 = (draftOptions_520093815[0]).length;
            Label4: {
              F.line = 251;
                Label5: while (true) {
                if (!(i_520098390 < L_520098391)) break Label5;
                  F.line = 1026;
                  F.filename = "sequtils.nim";
                  it_520096183 = draftOptions_520093815[0][chckIndx(i_520098390, 0, (draftOptions_520093815[0]).length - 1)];
                  F.line = 697;
                  F.filename = "main.nim";
                  resultHEX60gensym162_520096179[chckIndx(iHEX60gensym162_520096172, 0, (resultHEX60gensym162_520096179).length - 1)] = nimCopy(null, ([44] || []).concat(HEX24_369098760(it_520096183.index) || []), NTI33554449);
                  F.line = 1028;
                  F.filename = "sequtils.nim";
                  iHEX60gensym162_520096172 = addInt(iHEX60gensym162_520096172, 1);
                  F.line = 13;
                  F.filename = "iterators.nim";
                  i_520098390 += 1;
                  if (!(((draftOptions_520093815[0]).length == L_520098391))) {
                  F.line = 254;
                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        };
        var sHEX60gensym165_520096195 = nimCopy(null, resultHEX60gensym162_520096179, NTI503316801);
        F.line = 976;
        F.filename = "sequtils.nim";
        var nHEX60gensym165_520096199 = (sHEX60gensym165_520096195).length;
        if (!((0 < nHEX60gensym165_520096199))) {
        F.line = 977;
        failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym165 > 0` Can\'t fold empty sequences"));
        }
        
        F.line = 978;
        var resultHEX60gensym165_520096205 = nimCopy(null, sHEX60gensym165_520096195[chckIndx(subInt(nHEX60gensym165_520096199, 1), 0, (sHEX60gensym165_520096195).length - 1)], NTI33554449);
        Label6: {
          F.line = 979;
          var iHEX60gensym165_520096211 = 0;
          F.line = 6;
          F.filename = "iterators_1.nim";
          var colontmp__520098394 = 0;
          F.line = 979;
          F.filename = "sequtils.nim";
          colontmp__520098394 = subInt(nHEX60gensym165_520096199, 2);
          F.line = 33;
          F.filename = "iterators_1.nim";
          var res_520098395 = colontmp__520098394;
          Label7: {
            F.line = 34;
              Label8: while (true) {
              if (!(0 <= res_520098395)) break Label8;
                F.line = 979;
                F.filename = "sequtils.nim";
                iHEX60gensym165_520096211 = res_520098395;
                F.line = 981;
                var a_520096212 = nimCopy(null, sHEX60gensym165_520096195[chckIndx(iHEX60gensym165_520096211, 0, (sHEX60gensym165_520096195).length - 1)], NTI33554449);
                F.line = 982;
                var b_520096213 = nimCopy(null, resultHEX60gensym165_520096205, NTI33554449);
                F.line = 697;
                F.filename = "main.nim";
                resultHEX60gensym165_520096205 = nimCopy(null, (a_520096212 || []).concat(b_520096213 || []), NTI33554449);
                F.line = 39;
                F.filename = "iterators_1.nim";
                res_520098395 = subInt(res_520098395, 1);
              }
          };
        };
        peer_520093801[0].Field0(toJSStr(([100,114,97,102,116,58,103,111] || []).concat(resultHEX60gensym165_520096205 || [])));
        }
        
      framePtr = F.prev;

      
    }

  var result_520096123 = null;

  var F = {procname: "main.createPowerMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 677;
    F.filename = "main.nim";
    F.line = 677;
    var tmp_520096124 = tree_721421184(44, []);
    F.line = 677;
    tmp_520096124.class = "power";
    F.line = 678;
    var tmp_520096125 = tree_721421184(21, []);
    F.line = 679;
    if ((showTechnicalNames_520093845[0] && !(eqStrings(p_520096122.technicalName, [])))) {
    Temporary1 = p_520096122.technicalName;
    }
    else {
    Temporary1 = p_520096122.name;
    }
    
    add_721421120(tmp_520096125, text_721421252(Temporary1));
    F.line = 679;
    add_721421120(tmp_520096124, tmp_520096125);
    if (!(eqStrings(p_520096122.icon, []))) {
    F.line = 681;
    var src_520096130 = [46,47,105,99,111,110,115,47];
    if (!(p_520096122.noColor)) {
    F.line = 682;
    src_520096130.push.apply(src_520096130, reprEnum(side_520093802[0], NTI1224736777));;
    }
    
    F.line = 683;
    var tmp_520096126 = tree_721421184(76, []);
    F.line = 683;
    setAttr_721421035(tmp_520096126, "src", toJSStr((src_520096130 || []).concat(p_520096122.icon || [])));
    F.line = 683;
    add_721421120(tmp_520096124, tmp_520096126);
    }
    else {
      F.line = 685;
      var tmp_520096127 = tree_721421184(76, []);
      F.line = 685;
      setAttr_721421035(tmp_520096127, "src", "./icons/blackbishop.svg");
      F.line = 685;
      add_721421120(tmp_520096124, tmp_520096127);
    }
    
    F.line = 686;
    var tmp_520096128 = tree_721421184(22, []);
    F.line = 687;
    add_721421120(tmp_520096128, text_721421252(reprEnum(p_520096122.tier, NTI1442840579)));
    F.line = 687;
    add_721421120(tmp_520096124, tmp_520096128);
    F.line = 688;
    var tmp_520096129 = tree_721421184(32, []);
    F.line = 689;
    add_721421120(tmp_520096129, text_721421252(p_520096122.description));
    F.line = 689;
    add_721421120(tmp_520096124, tmp_520096129);
    F.line = 691;
    addEventHandler_687867670(tmp_520096124, 0, HEX3Aanonymous_520096137, kxi__);
    result_520096123 = tmp_520096124;
  framePtr = F.prev;

  return result_520096123;

}

function createDraftMenu_520096218() {
  var result_520096219 = null;

  var F = {procname: "main.createDraftMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 700;
    F.filename = "main.nim";
    F.line = 700;
    var tmp_520096220 = tree_721421184(44, []);
    F.line = 700;
    tmp_520096220.class = "main power-menu";
    if (turn_520093803[0]) {
    Label1: {
      F.line = 702;
      var p_520096224 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098376 = 0;
      F.line = 250;
      var L_520098377 = (draftOptions_520093815[0]).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098376 < L_520098377)) break Label3;
            F.line = 702;
            F.filename = "main.nim";
            p_520096224 = draftOptions_520093815[0][chckIndx(i_520098376, 0, (draftOptions_520093815[0]).length - 1)];
            F.line = 703;
            add_721421120(tmp_520096220, createPowerMenu_520096121(p_520096224));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098376 += 1;
            if (!(((draftOptions_520093815[0]).length == L_520098377))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      F.line = 705;
      F.filename = "main.nim";
    add_721421120(tmp_520096220, text_721421252([79,112,112,111,110,101,110,116,32,105,115,32,100,114,97,102,116,105,110,103,46,46,46]));
    }
    
    result_520096219 = tmp_520096220;
  framePtr = F.prev;

  return result_520096219;

}

function replaceAnySynergies_1442841870(powers_1442841871) {
  var result_1442841872 = [];

  var F = {procname: "power.replaceAnySynergies", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/power.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 196;
    F.filename = "power.nim";
    result_1442841872 = nimCopy(null, secretSynergize_1442840953(powers_1442841871, secretSynergies_1442840652[0]), NTI1442840822);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1442841872;

}

function createPowerSummary_520096225(p_520096226, ofSide_520096227) {
    var Temporary1;

  var result_520096228 = null;

  var F = {procname: "main.createPowerSummary", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 708;
    F.filename = "main.nim";
    var class_520096229 = [105,109,97,103,101,32];
    if ((!((side_520093802[0] == ofSide_520096227)) && p_520096226.rotatable)) {
    F.line = 710;
    class_520096229.push.apply(class_520096229, [32,114,111,116,97,116,101,32]);;
    }
    
    F.line = 712;
    var src_520096234 = [46,47,105,99,111,110,115,47];
    if (!(p_520096226.noColor)) {
    F.line = 713;
    src_520096234.push.apply(src_520096234, reprEnum(ofSide_520096227, NTI1224736777));;
    }
    
    F.line = 715;
    F.line = 715;
    var tmp_520096238 = tree_721421184(44, []);
    F.line = 715;
    tmp_520096238.class = "power-grid";
    F.line = 716;
    var tmp_520096239 = tree_721421184(24, []);
    F.line = 716;
    tmp_520096239.class = "title";
    F.line = 717;
    if ((showTechnicalNames_520093845[0] && !(eqStrings(p_520096226.technicalName, [])))) {
    Temporary1 = p_520096226.technicalName;
    }
    else {
    Temporary1 = p_520096226.name;
    }
    
    add_721421120(tmp_520096239, text_721421252(Temporary1));
    F.line = 717;
    add_721421120(tmp_520096238, tmp_520096239);
    F.line = 718;
    var tmp_520096240 = tree_721421184(32, []);
    F.line = 718;
    tmp_520096240.class = "desc";
    F.line = 719;
    add_721421120(tmp_520096240, text_721421252(p_520096226.description));
    F.line = 719;
    add_721421120(tmp_520096238, tmp_520096240);
    if (!(eqStrings(p_520096226.icon, []))) {
    F.line = 721;
    var tmp_520096241 = tree_721421184(76, []);
    F.line = 721;
    tmp_520096241.class = toJSStr(class_520096229);
    F.line = 721;
    setAttr_721421035(tmp_520096241, "src", toJSStr((src_520096234 || []).concat(p_520096226.icon || [])));
    F.line = 721;
    add_721421120(tmp_520096238, tmp_520096241);
    }
    else {
      F.line = 723;
      var tmp_520096242 = tree_721421184(76, []);
      F.line = 723;
      tmp_520096242.class = toJSStr(class_520096229);
      F.line = 723;
      setAttr_721421035(tmp_520096242, "src", "./icons/blackbishop.svg");
      F.line = 723;
      add_721421120(tmp_520096238, tmp_520096242);
    }
    
    result_520096228 = tmp_520096238;
  framePtr = F.prev;

  return result_520096228;

}

function isSelected_520093912(n_520093913, m_520093914) {
  var result_520093915 = false;

  var F = {procname: "main.isSelected", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 148;
    F.filename = "main.nim";
    result_520093915 = ((selectedTile_520093824[0].Field1 == n_520093913) && (selectedTile_520093824[0].Field0 == m_520093914));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093915;

}

function formatValue_520095218(result_520095221, result_520095221_Idx, value_520095222) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 492;
    F.filename = "strformat.nim";
    result_520095221[result_520095221_Idx].push.apply(result_520095221[result_520095221_Idx], HEX24_369098760(value_520095222));;
  framePtr = F.prev;

  
}

function busy_520093916() {
  var result_520093917 = false;

  var F = {procname: "main.busy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 151;
    F.filename = "main.nim";
    result_520093917 = ((!(((actionStack_520093871[0]).length == 0)) || !((picksLeft_520093892[0] == 0))) || !(turn_520093803[0]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093917;

}

function setAttr_721421080(n_721421081, key_721421082, val_721421083) {
    var Temporary1;

  var F = {procname: "vdom.setAttr", prev: framePtr, filename: "/Users/ajayvallurupalli/.nimble/pkgs2/karax-1.3.3-6683189b4456437c2809be72e3404adde77f5c34/karax/vdom.nim", line: 0};
  framePtr = F;
    F.line = 259;
    F.filename = "vdom.nim";
    if (val_721421083) {
    Temporary1 = "";
    }
    else {
    Temporary1 = null;
    }
    
    setAttr_721421035(n_721421081, key_721421082, Temporary1);
  framePtr = F.prev;

  
}

function sendAction_520094611(data_520094612, end_520094613) {
  var F = {procname: "main.sendAction", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    if (false) {
    F.line = 193;
    F.filename = "main.nim";
    Label1: {
      F.line = 193;
      var fmtRes_520094618 = [mnewString(0)];
      F.line = 193;
      fmtRes_520094618[0].push.apply(fmtRes_520094618[0], [97,99,116,105,111,110,58]);;
      F.line = 193;
      formatValue_520094535(fmtRes_520094618, 0, data_520094612);
    };
    peer_520093801[0].Field0(toJSStr(fmtRes_520094618[0]));
    if (end_520094613) {
    F.line = 195;
    turn_520093803[0] = false;
    F.line = 196;
    rawEcho([115,101,110,100,32,97,99,116,105,111,110,32,99,104,97,110,103,105,110,103,32,116,117,114,110]);
    }
    
    }
    
    if (end_520094613) {
    F.line = 197;
    endRound_520093964();
    }
    
  framePtr = F.prev;

  
}

function sendBuy_520095185(option_520095186, tile_520095187) {
  var F = {procname: "main.sendBuy", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 226;
    F.filename = "main.nim";
    Label1: {
      F.line = 226;
      var fmtRes_520095192 = [mnewString(0)];
      F.line = 226;
      fmtRes_520095192[0].push.apply(fmtRes_520095192[0], [98,117,121,44]);;
      F.line = 226;
      formatValue_520094535(fmtRes_520095192, 0, option_520095186.Field0);
      F.line = 226;
      fmtRes_520095192[0].push.apply(fmtRes_520095192[0], [44]);;
      F.line = 226;
      formatValue_520094535(fmtRes_520095192, 0, HEX24_369098760(tile_520095187.Field1));
      F.line = 226;
      fmtRes_520095192[0].push.apply(fmtRes_520095192[0], [44]);;
      F.line = 226;
      formatValue_520094535(fmtRes_520095192, 0, HEX24_369098760(tile_520095187.Field0));
    };
    sendAction_520094611(fmtRes_520095192[0], false);
  framePtr = F.prev;

  
}

function clear_520093955() {
  var F = {procname: "main.clear", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 163;
    F.filename = "main.nim";
    var colontmp__520098422 = (-1);
    F.line = 163;
    var colontmp__520098423 = (-1);
    F.line = 163;
    selectedTile_520093824[0] = nimCopy(selectedTile_520093824[0], {Field0: colontmp__520098422, Field1: colontmp__520098423}, NTI1224736771);
    F.line = 164;
    possibleMoves_520093829[0] = nimCopy(null, [], NTI1291845837);
    F.line = 165;
    possibleTakes_520093834[0] = nimCopy(null, [], NTI1291845837);
  framePtr = F.prev;

  
}

function createBuyButton_520096243(option_520096244, p_520096245) {
    var Temporary1;
      var Temporary2;
      option_520096244 = nimCopy(null, option_520096244, NTI1224736788);
      
function HEX3Aanonymous_520096273(__520096274, __520096275) {
        var F = {procname: "createBuyButton.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 736;
          F.filename = "main.nim";
          sendBuy_520095185(option_520096244, p_520096245.tile);
          F.line = 737;
          buy_1493172332(p_520096245, option_520096244, theBoard_520093820[0], theState_520093821[0]);
          F.line = 738;
          clear_520093955();
        framePtr = F.prev;

        
      }

  var result_520096246 = null;

  var F = {procname: "main.createBuyButton", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 726;
    F.filename = "main.nim";
    if (!(option_520096244.Field3(p_520096245, theBoard_520093820[0], theState_520093821[0]))) {
    F.line = 727;
    F.line = 727;
    var tmp_520096247 = tree_721421184(44, []);
    result_520096246 = tmp_520096247;
    break BeforeRet;
    }
    else {
      F.line = 729;
      var cost_520096248 = option_520096244.Field1(p_520096245, theBoard_520093820[0], theState_520093821[0]);
      F.line = 730;
      var disabled_520096249 = (busy_520093916() || (getMoney_1493172239(side_520093802[0], theState_520093821[0]) < cost_520096248));
      F.line = 732;
      if ((0 <= cost_520096248)) {
      Temporary2 = [45];
      }
      else {
      Temporary2 = [43];
      }
      
      var sign_520096250 = nimCopy(null, Temporary2, NTI33554449);
      F.line = 733;
      var tmp_520096251 = tree_721421184(195, []);
      F.line = 733;
      setAttr_721421080(tmp_520096251, "disabled", disabled_520096249);
      F.line = 734;
      Label3: {
        F.line = 734;
        var fmtRes_520096256 = [mnewString(0)];
        F.line = 734;
        formatValue_520094535(fmtRes_520096256, 0, option_520096244.Field0);
        F.line = 734;
        fmtRes_520096256[0].push.apply(fmtRes_520096256[0], [58,32]);;
        F.line = 734;
        formatValue_520094535(fmtRes_520096256, 0, sign_520096250);
        F.line = 734;
        fmtRes_520096256[0].push.apply(fmtRes_520096256[0], [36]);;
        F.line = 734;
        formatValue_520095218(fmtRes_520096256, 0, absInt(cost_520096248));
      };
      add_721421120(tmp_520096251, text_721421252(fmtRes_520096256[0]));
      F.line = 735;
      addEventHandler_687867670(tmp_520096251, 0, HEX3Aanonymous_520096273, kxi__);
    Temporary1 = tmp_520096251;
    }
    
    result_520096246 = Temporary1;
  };
  framePtr = F.prev;

  return result_520096246;

}

function createPieceProfile_520096276(p_520096277) {
  var result_520096278 = null;

  var F = {procname: "main.createPieceProfile", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 741;
    F.filename = "main.nim";
    var imgClass_520096279 = [];
    if ((!((side_520093802[0] == p_520096277.color)) && p_520096277.rotate)) {
    F.line = 743;
    imgClass_520096279.push.apply(imgClass_520096279, [114,111,116,97,116,101,32]);;
    }
    
    F.line = 745;
    var src_520096284 = [46,47,105,99,111,110,115,47];
    if (p_520096277.colorable) {
    F.line = 746;
    src_520096284.push.apply(src_520096284, reprEnum(p_520096277.color, NTI1224736777));;
    }
    
    F.line = 748;
    var name_520096291 = reprEnum(p_520096277.item, NTI1224736776);
    F.line = 750;
    F.line = 750;
    var tmp_520096292 = tree_721421184(44, []);
    F.line = 750;
    tmp_520096292.class = " piece-row ";
    F.line = 751;
    var tmp_520096293 = tree_721421184(24, []);
    F.line = 752;
    add_721421120(tmp_520096293, text_721421252(name_520096291));
    F.line = 752;
    add_721421120(tmp_520096292, tmp_520096293);
    F.line = 753;
    var tmp_520096294 = tree_721421184(76, []);
    F.line = 753;
    tmp_520096294.class = toJSStr(imgClass_520096279);
    F.line = 753;
    setAttr_721421035(tmp_520096294, "src", toJSStr((src_520096284 || []).concat(p_520096277.filePath || [])));
    F.line = 753;
    add_721421120(tmp_520096292, tmp_520096294);
    F.line = 754;
    var tmp_520096295 = tree_721421184(32, []);
    F.line = 754;
    tmp_520096295.class = "take";
    F.line = 755;
    Label1: {
      F.line = 755;
      var fmtRes_520096301 = [mnewString(0)];
      F.line = 755;
      fmtRes_520096301[0].push.apply(fmtRes_520096301[0], [75,105,108,108,115,58,32]);;
      F.line = 755;
      formatValue_520095218(fmtRes_520096301, 0, p_520096277.piecesTaken);
      F.line = 755;
      fmtRes_520096301[0].push.apply(fmtRes_520096301[0], [32,112,105,101,99,101,115,46]);;
    };
    add_721421120(tmp_520096295, text_721421252(fmtRes_520096301[0]));
    F.line = 755;
    add_721421120(tmp_520096292, tmp_520096295);
    if (isColor_1224737917(p_520096277, side_520093802[0])) {
    F.line = 757;
    var tmp_520096296 = tree_721421184(44, []);
    F.line = 757;
    tmp_520096296.class = "row";
    Label2: {
      F.line = 758;
      var option_520096311 = {Field0: [], Field1: null, Field2: null, Field3: null};
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520098415 = [];
      F.line = 758;
      F.filename = "main.nim";
      colontmp__520098415 = theState_520093821[0].Field1[chckIndx(p_520096277.color, 0, (theState_520093821[0].Field1).length - 1)].buys;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098416 = 0;
      F.line = 250;
      var L_520098417 = (colontmp__520098415).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_520098416 < L_520098417)) break Label4;
            F.line = 758;
            F.filename = "main.nim";
            option_520096311 = colontmp__520098415[chckIndx(i_520098416, 0, (colontmp__520098415).length - 1)];
            F.line = 759;
            add_721421120(tmp_520096296, createBuyButton_520096243(option_520096311, p_520096277));
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098416 += 1;
            if (!(((colontmp__520098415).length == L_520098417))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 759;
    F.filename = "main.nim";
    add_721421120(tmp_520096292, tmp_520096296);
    }
    
    result_520096278 = tmp_520096292;
  framePtr = F.prev;

  return result_520096278;

}

function getKing_1224738113(side_1224738114, board_1224738115) {
  var result_1224738116 = {Field0: 0, Field1: 0};

  var F = {procname: "piece.getKing", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 322;
      F.filename = "piece.nim";
      var i_1224738117 = 0;
      F.line = 322;
      var j_1224738118 = 0;
      Label2: {
        F.line = 113;
        var i_520098426 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098427 = 0;
        Label3: {
          F.line = 129;
            Label4: while (true) {
            if (!(i_520098427 < 8)) break Label4;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098426 = i_520098427;
              Label5: {
                F.line = 114;
                var j_520098430 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098431 = 0;
                Label6: {
                  F.line = 129;
                    Label7: while (true) {
                    if (!(i_520098431 < 8)) break Label7;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098430 = i_520098431;
                      F.line = 322;
                      i_1224738117 = i_520098426;
                      F.line = 322;
                      j_1224738118 = j_520098430;
                      if (((board_1224738115[chckIndx(i_1224738117, 0, (board_1224738115).length - 1)][chckIndx(j_1224738118, 0, (board_1224738115[chckIndx(i_1224738117, 0, (board_1224738115).length - 1)]).length - 1)].item == 0) && (board_1224738115[chckIndx(i_1224738117, 0, (board_1224738115).length - 1)][chckIndx(j_1224738118, 0, (board_1224738115[chckIndx(i_1224738117, 0, (board_1224738115).length - 1)]).length - 1)].color == side_1224738114))) {
                      F.line = 324;
                      result_1224738116 = nimCopy(result_1224738116, board_1224738115[chckIndx(i_1224738117, 0, (board_1224738115).length - 1)][chckIndx(j_1224738118, 0, (board_1224738115[chckIndx(i_1224738117, 0, (board_1224738115).length - 1)]).length - 1)].tile, NTI1224736771);
                      break BeforeRet;
                      }
                      
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098431 = addInt(i_520098431, 1);
                    }
                };
              };
              F.line = 131;
              i_520098427 = addInt(i_520098427, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  return result_1224738116;

}

function isSome_1526726697(self_1526726699) {
  var result_1526726700 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_1526726700 = self_1526726699.has;
  framePtr = F.prev;

  return result_1526726700;

}

function hasGlass_1526726664(side_1526726665, state_1526726666) {
  var result_1526726667 = false;

  var F = {procname: "glass.hasGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 17;
      F.filename = "glass.nim";
      var g_1526726692 = 0;
      Label2: {
        F.line = 137;
        F.filename = "iterators.nim";
        var v_520098439 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520098440 = 0;
        Label3: {
          F.line = 97;
            Label4: while (true) {
            if (!(res_520098440 <= 3)) break Label4;
              F.line = 137;
              F.filename = "iterators.nim";
              v_520098439 = res_520098440;
              F.line = 17;
              F.filename = "glass.nim";
              g_1526726692 = v_520098439;
              if (isSome_1526726697(state_1526726666.Field1[chckIndx(side_1526726665, 0, (state_1526726666.Field1).length - 1)].glass[chckIndx(g_1526726692, 0, (state_1526726666.Field1[chckIndx(side_1526726665, 0, (state_1526726666.Field1).length - 1)].glass).length - 1)])) {
              F.line = 18;
              result_1526726667 = true;
              break BeforeRet;
              }
              
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520098440 = addInt(res_520098440, 1);
            }
        };
      };
    };
    F.line = 19;
    F.filename = "glass.nim";
    result_1526726667 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1526726667;

}

function isNone_520096621(self_520096623) {
  var result_520096624 = false;

  var F = {procname: "isNone.isNone", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "options.nim";
    result_520096624 = !(self_520096623.has);
  framePtr = F.prev;

  return result_520096624;

}

function get_520096638(self_520096640) {
  var result_520096641 = null;
  var result_520096641_Idx = 0;

  var F = {procname: "get.get", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (isNone_520096621(self_520096640)) {
    F.line = 230;
    F.filename = "options.nim";
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1241514007, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    F.line = 231;
    result_520096641 = self_520096640; result_520096641_Idx = "val";
    break BeforeRet;
  };
  framePtr = F.prev;

  return [result_520096641, result_520096641_Idx];

}

function some_520096670(val_520096672) {
  var result_520096673 = ({val: 0, has: false});

  var F = {procname: "some.some", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "options.nim";
    result_520096673.has = true;
    F.line = 141;
    result_520096673.val = val_520096672;
  framePtr = F.prev;

  return result_520096673;

}

function createGlassOnClick_520096608(glass_520096609) {
    
function HEX3Aanonymous_520096614(__520096615, __520096616) {
          var Temporary1;

      var F = {procname: "createGlassOnClick.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if ((isNone_520096621(selectedGlass_520093866[0]) || !(((Temporary1 = get_520096638(selectedGlass_520093866[0]), Temporary1)[0][Temporary1[1]] == glass_520096609)))) {
        F.line = 826;
        F.filename = "main.nim";
        selectedGlass_520093866[0] = nimCopy(selectedGlass_520093866[0], some_520096670(glass_520096609), NTI520093799);
        }
        else {
          F.line = 828;
          selectedGlass_520093866[0] = nimCopy(selectedGlass_520093866[0], none_520093858(), NTI520093799);
        }
        
      framePtr = F.prev;

      
    }

  var result_520096613 = null;

  var F = {procname: "main.createGlassOnClick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 824;
    F.filename = "main.nim";
    result_520096613 = HEX3Aanonymous_520096614;
  framePtr = F.prev;

  return result_520096613;

}

function isSome_520096732(self_520096734) {
  var result_520096735 = false;

  var F = {procname: "isSome.isSome", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "options.nim";
    result_520096735 = self_520096734.has;
  framePtr = F.prev;

  return result_520096735;

}

function cancelAllPicks_520095513() {
  var F = {procname: "main.cancelAllPicks", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 317;
    F.filename = "main.nim";
    promptHistory_520093886[0] = nimCopy(null, [], NTI1006632986);
    F.line = 318;
    promptStack_520093891[0] = nimCopy(null, [], NTI1006632986);
    F.line = 319;
    picks_520093900[0] = nimCopy(null, [], NTI1291845837);
    F.line = 320;
    picksLeft_520093892[0] = 0;
    F.line = 322;
    pickOptions_520093895[0] = nimCopy(null, [], NTI1291845837);
    F.line = 324;
    whenCollected_520093902[0] = null;
    F.line = 325;
    getPickOptions_520093894[0] = null;
  framePtr = F.prev;

  
}

function cancelAllPicks_520095545(__520095546, __520095547) {
  var F = {procname: "main.cancelAllPicks", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 328;
    F.filename = "main.nim";
    cancelAllPicks_520095513();
  framePtr = F.prev;

  
}

function formatValue_520096763(result_520096766, result_520096766_Idx, value_520096767) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "strformat.nim";
    formatValue_520094535(result_520096766, result_520096766_Idx, reprEnum(value_520096767, NTI1224736789));
  framePtr = F.prev;

  
}

function newGroup_1224737427(s_1224737428) {
  var result_1224737429 = 0;

  var F = {procname: "piece.newGroup", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/piece.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 188;
    F.filename = "piece.nim";
    s_1224737428.Field0.nextGroup = addInt(s_1224737428.Field0.nextGroup, 1);
    F.line = 189;
    result_1224737429 = s_1224737428.Field0.nextGroup;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1224737429;

}

function reversed_520096872(a_520096874) {
  var result_520096875 = [];

  var F = {procname: "reversed.reversed", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 146;
    F.filename = "algorithm.nim";
    var n_520096879 = (a_520096874).length;
    F.line = 147;
    if (result_520096875.length < chckRange(n_520096879, 0, 2147483647)) { for (var i = result_520096875.length ; i < chckRange(n_520096879, 0, 2147483647) ; ++i) result_520096875.push([]); }
               else { result_520096875.length = chckRange(n_520096879, 0, 2147483647); };
    Label1: {
      F.line = 148;
      var i_520096888 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098465 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098465 < n_520096879)) break Label3;
            F.line = 148;
            F.filename = "algorithm.nim";
            i_520096888 = i_520098465;
            F.line = 148;
            result_520096875[chckIndx(i_520096888, 0, (result_520096875).length - 1)] = nimCopy(null, a_520096874[chckIndx(subInt(n_520096879, addInt(i_520096888, 1)), 0, (a_520096874).length - 1)], NTI33554449);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098465 = addInt(i_520098465, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520096875;

}

function cycle_520096846(s_520096848, n_520096849) {
  var result_520096850 = [];

  var F = {procname: "cycle.cycle", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 169;
    F.filename = "sequtils.nim";
    result_520096850 = nimCopy(null, newSeq_503317026(chckRange(mulInt(n_520096849, (s_520096848).length), 0, 2147483647)), NTI503316801);
    F.line = 170;
    var o_520096857 = 0;
    Label1: {
      F.line = 171;
      var x_520096862 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520098471 = 0;
      F.line = 171;
      F.filename = "sequtils.nim";
      colontmp__520098471 = n_520096849;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520098472 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520098472 < colontmp__520098471)) break Label3;
            F.line = 171;
            F.filename = "sequtils.nim";
            x_520096862 = i_520098472;
            Label4: {
              F.line = 172;
              var e_520096866 = [];
              F.line = 18;
              F.filename = "iterators.nim";
              var i_520098469 = 0;
              Label5: {
                F.line = 19;
                  Label6: while (true) {
                  if (!(i_520098469 < (s_520096848).length)) break Label6;
                    F.line = 172;
                    F.filename = "sequtils.nim";
                    e_520096866 = s_520096848[chckIndx(i_520098469, 0, (s_520096848).length - 1)];
                    F.line = 173;
                    result_520096850[chckIndx(o_520096857, 0, (result_520096850).length - 1)] = nimCopy(null, e_520096866, NTI33554449);
                    F.line = 174;
                    o_520096857 = addInt(o_520096857, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520098469 += 1;
                  }
              };
            };
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520098472 = addInt(i_520098472, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520096850;

}

function packageGlass_1526726702(pieces_1526726703, tiles_1526726704, action_1526726705) {
    tiles_1526726704 = nimCopy(null, tiles_1526726704, NTI1526726688);
    
function HEX3Aanonymous_1526726779(board_1526726780, state_1526726781) {
      var F = {procname: "packageGlass.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
      framePtr = F;
        Label1: {
          F.line = 27;
          F.filename = "glass.nim";
          var i_1526726782 = 0;
          F.line = 27;
          var j_1526726783 = 0;
          Label2: {
            F.line = 113;
            F.filename = "piece.nim";
            var i_520098487 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520098488 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_520098488 < 8)) break Label4;
                  F.line = 113;
                  F.filename = "piece.nim";
                  i_520098487 = i_520098488;
                  Label5: {
                    F.line = 114;
                    var j_520098491 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_520098492 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_520098492 < 8)) break Label7;
                          F.line = 114;
                          F.filename = "piece.nim";
                          j_520098491 = i_520098492;
                          F.line = 27;
                          F.filename = "glass.nim";
                          i_1526726782 = i_520098487;
                          F.line = 27;
                          j_1526726783 = j_520098491;
                          Label8: {
                            F.line = 28;
                            var indexIndex_1526726807 = 0;
                            F.line = 28;
                            var index_1526726808 = 0;
                            F.line = 182;
                            F.filename = "iterators.nim";
                            var i_520098483 = 0;
                            F.line = 183;
                            var L_520098484 = (indexes_1526726778).length;
                            Label9: {
                              F.line = 184;
                                Label10: while (true) {
                                if (!(i_520098483 < L_520098484)) break Label10;
                                  F.line = 28;
                                  F.filename = "glass.nim";
                                  indexIndex_1526726807 = i_520098483;
                                  F.line = 28;
                                  index_1526726808 = indexes_1526726778[chckIndx(i_520098483, 0, (indexes_1526726778).length - 1)];
                                  if ((index_1526726808 == board_1526726780[chckIndx(i_1526726782, 0, (board_1526726780).length - 1)][chckIndx(j_1526726783, 0, (board_1526726780[chckIndx(i_1526726782, 0, (board_1526726780).length - 1)]).length - 1)].index)) {
                                  F.line = 30;
                                  action_1526726705(board_1526726780[chckIndx(i_1526726782, 0, (board_1526726780).length - 1)][chckIndx(j_1526726783, 0, (board_1526726780[chckIndx(i_1526726782, 0, (board_1526726780).length - 1)]).length - 1)], tiles_1526726704[chckIndx(indexIndex_1526726807, 0, (tiles_1526726704).length - 1)], board_1526726780, state_1526726781);
                                  }
                                  
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_520098483 += 1;
                                  if (!(((indexes_1526726778).length == L_520098484))) {
                                  F.line = 187;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_520098492 = addInt(i_520098492, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_520098488 = addInt(i_520098488, 1);
                }
            };
          };
        };
      framePtr = F.prev;

      
    }

  var result_1526726706 = null;

  var F = {procname: "glass.packageGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/extrapower/glass.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "glass.nim";
    Label1: {
      F.line = 1024;
      F.filename = "sequtils.nim";
      var iHEX60gensym0_1526726762 = 0;
      F.line = 1025;
      var resultHEX60gensym0_1526726769 = newSeq_1442841310(chckRange((pieces_1526726703).length, 0, 2147483647));
      Label2: {
        F.line = 1026;
        var it_1526726773 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520098477 = 0;
        F.line = 250;
        var L_520098478 = (pieces_1526726703).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520098477 < L_520098478)) break Label4;
              F.line = 1026;
              F.filename = "sequtils.nim";
              it_1526726773 = pieces_1526726703[chckIndx(i_520098477, 0, (pieces_1526726703).length - 1)];
              F.line = 25;
              F.filename = "glass.nim";
              resultHEX60gensym0_1526726769[chckIndx(iHEX60gensym0_1526726762, 0, (resultHEX60gensym0_1526726769).length - 1)] = it_1526726773.index;
              F.line = 1028;
              F.filename = "sequtils.nim";
              iHEX60gensym0_1526726762 = addInt(iHEX60gensym0_1526726762, 1);
              F.line = 13;
              F.filename = "iterators.nim";
              i_520098477 += 1;
              if (!(((pieces_1526726703).length == L_520098478))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var indexes_1526726778 = nimCopy(null, resultHEX60gensym0_1526726769, NTI1442841098);
    F.line = 26;
    F.filename = "glass.nim";
    result_1526726706 = HEX3Aanonymous_1526726779;
  framePtr = F.prev;

  return result_1526726706;

}

function createSendGlass_520095208(group_520095209) {
    
function HEX3Aanonymous_520095212() {
      var F = {procname: "createSendGlass.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 230;
        F.filename = "main.nim";
        Label1: {
          F.line = 230;
          var fmtRes_520095217 = [mnewString(0)];
          F.line = 230;
          fmtRes_520095217[0].push.apply(fmtRes_520095217[0], [99,97,115,116,105,110,103,99,111,109,112,108,101,116,101,44]);;
          F.line = 230;
          formatValue_520095218(fmtRes_520095217, 0, group_520095209);
        };
        sendAction_520094611(fmtRes_520095217[0], true);
      framePtr = F.prev;

      
    }

  var result_520095211 = null;

  var F = {procname: "main.createSendGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 229;
    F.filename = "main.nim";
    result_520095211 = HEX3Aanonymous_520095212;
  framePtr = F.prev;

  return result_520095211;

}

function createCancelGlass_520095224(group_520095225) {
    
function HEX3Aanonymous_520095228() {
      var F = {procname: "createCancelGlass.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        Label1: {
          F.line = 234;
          F.filename = "main.nim";
          var i_520095229 = 0;
          F.line = 234;
          var j_520095230 = 0;
          Label2: {
            F.line = 113;
            F.filename = "piece.nim";
            var i_520098502 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520098503 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_520098503 < 8)) break Label4;
                  F.line = 113;
                  F.filename = "piece.nim";
                  i_520098502 = i_520098503;
                  Label5: {
                    F.line = 114;
                    var j_520098506 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_520098507 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_520098507 < 8)) break Label7;
                          F.line = 114;
                          F.filename = "piece.nim";
                          j_520098506 = i_520098507;
                          F.line = 234;
                          F.filename = "main.nim";
                          i_520095229 = i_520098502;
                          F.line = 234;
                          j_520095230 = j_520098506;
                          F.line = 235;
                          F.line = 652;
                          F.filename = "sequtils.nim";
                          var resultHEX60gensym130_520095240 = newSeq_520095232(0);
                          Label8: {
                            F.line = 653;
                            var it_520095244 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                            F.line = 247;
                            F.filename = "iterators.nim";
                            var colontmp__520098497 = [];
                            F.line = 235;
                            F.filename = "main.nim";
                            colontmp__520098497 = theBoard_520093820[0][chckIndx(i_520095229, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095230, 0, (theBoard_520093820[0][chckIndx(i_520095229, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts;
                            F.line = 249;
                            F.filename = "iterators.nim";
                            var i_520098498 = 0;
                            F.line = 250;
                            var L_520098499 = (colontmp__520098497).length;
                            Label9: {
                              F.line = 251;
                                Label10: while (true) {
                                if (!(i_520098498 < L_520098499)) break Label10;
                                  F.line = 653;
                                  F.filename = "sequtils.nim";
                                  it_520095244 = colontmp__520098497[chckIndx(i_520098498, 0, (colontmp__520098497).length - 1)];
                                  if (!((it_520095244.Field1 == group_520095225))) {
                                  F.line = 654;
                                  var Temporary11 = nimCopy(null, it_520095244, NTI1224736785);
                                  resultHEX60gensym130_520095240.push(Temporary11);;
                                  }
                                  
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_520098498 += 1;
                                  if (!(((colontmp__520098497).length == L_520098499))) {
                                  F.line = 254;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          theBoard_520093820[0][chckIndx(i_520095229, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095230, 0, (theBoard_520093820[0][chckIndx(i_520095229, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym130_520095240, NTI520094926);
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_520098507 = addInt(i_520098507, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_520098503 = addInt(i_520098503, 1);
                }
            };
          };
        };
        F.line = 236;
        F.filename = "main.nim";
        Label12: {
          F.line = 236;
          var fmtRes_520095253 = [mnewString(0)];
          F.line = 236;
          fmtRes_520095253[0].push.apply(fmtRes_520095253[0], [99,97,115,116,105,110,103,99,97,110,99,101,108,44]);;
          F.line = 236;
          formatValue_520095218(fmtRes_520095253, 0, group_520095225);
        };
        sendAction_520094611(fmtRes_520095253[0], true);
      framePtr = F.prev;

      
    }

  var result_520095227 = null;

  var F = {procname: "main.createCancelGlass", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 233;
    F.filename = "main.nim";
    result_520095227 = HEX3Aanonymous_520095228;
  framePtr = F.prev;

  return result_520095227;

}

function HEX5BHEX5D_520097046(s_520097048, i_520097049) {
  var result_520097050 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520097050 = s_520097048[chckIndx(subInt((s_520097048).length, i_520097049), 0, (s_520097048).length - 1)];
  framePtr = F.prev;

  return result_520097050;

}

function createGlassMenu_520096699() {
    var Temporary5;
    
function HEX3Aanonymous_520096777(__520096778, __520096779) {
        
function HEX3Aanonymous_520096889() {
          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
          framePtr = F;
            Label1: {
              F.line = 867;
              F.filename = "main.nim";
              var piece_520096930 = {Field0: 0, Field1: 0};
              F.line = 867;
              var tile_520096931 = {Field0: 0, Field1: 0};
              if (!((modInt((picks_520093900[0]).length, 2) == 0))) {
              F.line = 118;
              F.filename = "piece.nim";
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/the-playground/chess/src/piece.nim(118, 5) `s.len mod 2 == 0` "));
              }
              
              F.line = 119;
              var index_520098453 = 0;
              Label2: {
                F.line = 120;
                  Label3: while (true) {
                  if (!(index_520098453 < (picks_520093900[0]).length)) break Label3;
                    F.line = 867;
                    F.filename = "main.nim";
                    piece_520096930 = nimCopy(piece_520096930, picks_520093900[0][chckIndx(index_520098453, 0, (picks_520093900[0]).length - 1)], NTI1224736771);
                    F.line = 867;
                    tile_520096931 = nimCopy(tile_520096931, picks_520093900[0][chckIndx(addInt(index_520098453, 1), 0, (picks_520093900[0]).length - 1)], NTI1224736771);
                    F.line = 868;
                    rawEcho([112,105,101,99,101,116,105,108,101], HEX24_1224737640(piece_520096930), [116,105,108,101,44,32], HEX24_1224737640(tile_520096931));
                    F.line = 869;
                    var Temporary4 = nimCopy(null, HEX5BHEX5D_1224737288(theBoard_520093820[0], piece_520096930), NTI1224736794);
                    pieces_520096802.push(Temporary4);;
                    F.line = 870;
                    var Temporary5 = nimCopy(null, tile_520096931, NTI1224736771);
                    tiles_520096807.push(Temporary5);;
                    F.line = 871;
                    newCasting_520096797.push({Field0: nimCopy(null, tile_520096931, NTI1224736771), Field1: group_520096796, Field2: glass_520096752});;
                    F.line = 877;
                    HEX5BHEX5D_1224737288(theBoard_520093820[0], piece_520096930).casts.push({Field0: nimCopy(null, tile_520096931, NTI1224736771), Field1: group_520096796, Field2: glass_520096752});;
                    F.line = 883;
                    Label6: {
                      F.line = 883;
                      var fmtRes_520096970 = [mnewString(0)];
                      F.line = 883;
                      fmtRes_520096970[0].push.apply(fmtRes_520096970[0], [99,97,115,116,105,110,103,115,116,97,114,116,44]);;
                      F.line = 883;
                      formatValue_520095218(fmtRes_520096970, 0, piece_520096930.Field1);
                      F.line = 883;
                      fmtRes_520096970[0].push.apply(fmtRes_520096970[0], [44]);;
                      F.line = 883;
                      formatValue_520095218(fmtRes_520096970, 0, piece_520096930.Field0);
                      F.line = 883;
                      fmtRes_520096970[0].push.apply(fmtRes_520096970[0], [44]);;
                      F.line = 883;
                      formatValue_520095218(fmtRes_520096970, 0, tile_520096931.Field1);
                      F.line = 883;
                      fmtRes_520096970[0].push.apply(fmtRes_520096970[0], [44]);;
                      F.line = 883;
                      formatValue_520095218(fmtRes_520096970, 0, tile_520096931.Field0);
                      F.line = 883;
                      fmtRes_520096970[0].push.apply(fmtRes_520096970[0], [44]);;
                      F.line = 883;
                      formatValue_520095218(fmtRes_520096970, 0, group_520096796);
                      F.line = 883;
                      fmtRes_520096970[0].push.apply(fmtRes_520096970[0], [44]);;
                      F.line = 883;
                      formatValue_520096763(fmtRes_520096970, 0, glass_520096752);
                    };
                    sendAction_520094611(fmtRes_520096970[0], false);
                    F.line = 122;
                    F.filename = "piece.nim";
                    index_520098453 = addInt(index_520098453, 2);
                  }
              };
            };
            F.line = 884;
            F.filename = "main.nim";
            rawEcho([97,100,100,105,110,103,32,97,99,116,105,111,110,83,116,97,99,107]);
            F.line = 885;
            actionStack_520093871[0].push({Field0: ([67,97,115,116,105,110,103,32] || []).concat(reprEnum(glass_520096752, NTI1224736789) || []), Field1: 1, Field2: group_520096796, Field3: packageGlass_1526726702(pieces_520096802, tiles_520096807, action_520096823), Field4: true, Field5: false, Field6: createSendGlass_520095208(group_520096796), Field7: createCancelGlass_520095224(group_520096796)});;
            F.line = 895;
            rawEcho([97,118,116,105,111,110,115,116,97,99,107,32,97,100,100,101,100]);
            F.line = 896;
            sendAction_520094611([112,97,115,115], true);
          framePtr = F.prev;

          
        }
        
function HEX3Aanonymous_520097022() {
          var result_520097023 = [[]];

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
          framePtr = F;
            if ((modInt(picksLeft_520093892[0], 2) == 0)) {
            Label1: {
              F.line = 899;
              F.filename = "main.nim";
              var i_520097024 = 0;
              F.line = 899;
              var j_520097025 = 0;
              Label2: {
                F.line = 113;
                F.filename = "piece.nim";
                var i_520098457 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098458 = 0;
                Label3: {
                  F.line = 129;
                    Label4: while (true) {
                    if (!(i_520098458 < 8)) break Label4;
                      F.line = 113;
                      F.filename = "piece.nim";
                      i_520098457 = i_520098458;
                      Label5: {
                        F.line = 114;
                        var j_520098461 = 0;
                        F.line = 128;
                        F.filename = "iterators_1.nim";
                        var i_520098462 = 0;
                        Label6: {
                          F.line = 129;
                            Label7: while (true) {
                            if (!(i_520098462 < 8)) break Label7;
                              F.line = 114;
                              F.filename = "piece.nim";
                              j_520098461 = i_520098462;
                              F.line = 899;
                              F.filename = "main.nim";
                              i_520097024 = i_520098457;
                              F.line = 899;
                              j_520097025 = j_520098461;
                              if (isColor_1224737917(theBoard_520093820[0][chckIndx(i_520097024, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520097025, 0, (theBoard_520093820[0][chckIndx(i_520097024, 0, (theBoard_520093820[0]).length - 1)]).length - 1)], side_520093802[0])) {
                              F.line = 901;
                              var Temporary8 = nimCopy(null, theBoard_520093820[0][chckIndx(i_520097024, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520097025, 0, (theBoard_520093820[0][chckIndx(i_520097024, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].tile, NTI1224736771);
                              result_520097023[0].push(Temporary8);;
                              }
                              
                              F.line = 131;
                              F.filename = "iterators_1.nim";
                              i_520098462 = addInt(i_520098462, 1);
                            }
                        };
                      };
                      F.line = 131;
                      i_520098458 = addInt(i_520098458, 1);
                    }
                };
              };
            };
            }
            else {
              F.line = 903;
              F.filename = "main.nim";
              var condition_520097045 = get_520095438(theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass[chckIndx(glass_520096752, 0, (theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass).length - 1)]).Field2;
              F.line = 905;
              add_1224737462(result_520097023, 0, condition_520097045(side_520093802[0], HEX5BHEX5D_1224737288(theBoard_520093820[0], HEX5BHEX5D_520097046(picks_520093900[0], 1)), theBoard_520093820[0], theState_520093821[0]));
            }
            
          framePtr = F.prev;

          return result_520097023[0];

        }

      var F = {procname: "createGlassMenu.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 854;
        F.filename = "main.nim";
        var strength_520096795 = get_520095438(theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass[chckIndx(glass_520096752, 0, (theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass).length - 1)]).Field0;
        F.line = 855;
        var group_520096796 = newGroup_1224737427(theState_520093821[0]);
        F.line = 856;
        var newCasting_520096797 = [];
        F.line = 857;
        var pieces_520096802 = [];
        F.line = 858;
        var tiles_520096807 = [];
        F.line = 859;
        var action_520096823 = get_520095438(theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass[chckIndx(glass_520096752, 0, (theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass).length - 1)]).Field1;
        F.line = 861;
        picksLeft_520093892[0] = mulInt(strength_520096795, 2);
        F.line = 865;
        Label1: {
          F.line = 863;
          var fmtRes_520096828 = [mnewString(0)];
          F.line = 863;
          fmtRes_520096828[0].push.apply(fmtRes_520096828[0], [80,105,99,107,32,97,32,112,105,101,99,101,32,116,111,32,115,116,97,114,116,32,99,97,115,116,105,110,103,32]);;
          F.line = 863;
          formatValue_520096763(fmtRes_520096828, 0, glass_520096752);
          F.line = 863;
          fmtRes_520096828[0].push.apply(fmtRes_520096828[0], [46]);;
        };
        Label2: {
          F.line = 864;
          var fmtRes_520096839 = [mnewString(0)];
          F.line = 864;
          fmtRes_520096839[0].push.apply(fmtRes_520096839[0], [80,105,99,107,32,97,32,116,105,108,101,32,116,111,32,99,97,115,116,32]);;
          F.line = 864;
          formatValue_520096763(fmtRes_520096839, 0, glass_520096752);
          F.line = 864;
          fmtRes_520096839[0].push.apply(fmtRes_520096839[0], [32,111,110,46]);;
        };
        promptStack_520093891[0] = nimCopy(null, reversed_520096872(cycle_520096846([nimCopy(null, fmtRes_520096828[0], NTI33554449), nimCopy(null, fmtRes_520096839[0], NTI33554449)], chckRange(strength_520096795, 0, 2147483647))), NTI520096722);
        F.line = 866;
        whenCollected_520093902[0] = HEX3Aanonymous_520096889;
        F.line = 897;
        getPickOptions_520093894[0] = HEX3Aanonymous_520097022;
        F.line = 906;
        pickOptions_520093895[0] = nimCopy(null, getPickOptions_520093894[0](), NTI520093867);
        F.line = 907;
        clear_520093955();
      framePtr = F.prev;

      
    }

  var result_520096700 = null;

  var F = {procname: "main.createGlassMenu", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 831;
    F.filename = "main.nim";
    F.line = 831;
    var tmp_520096701 = tree_721421184(44, []);
    F.line = 831;
    tmp_520096701.class = " glass-menu ";
    F.line = 832;
    var tmp_520096702 = tree_721421184(24, []);
    F.line = 832;
    tmp_520096702.class = "title";
    F.line = 833;
    add_721421120(tmp_520096702, text_721421252([71,108,97,115,115,101,115]));
    F.line = 833;
    add_721421120(tmp_520096701, tmp_520096702);
    F.line = 835;
    var tmp_520096703 = tree_721421184(44, []);
    F.line = 835;
    tmp_520096703.class = "glasses";
    Label1: {
      F.line = 836;
      var glass_520096714 = 0;
      Label2: {
        F.line = 137;
        F.filename = "iterators.nim";
        var v_520098444 = 0;
        F.line = 96;
        F.filename = "iterators_1.nim";
        var res_520098445 = 0;
        Label3: {
          F.line = 97;
            Label4: while (true) {
            if (!(res_520098445 <= 3)) break Label4;
              F.line = 137;
              F.filename = "iterators.nim";
              v_520098444 = res_520098445;
              F.line = 836;
              F.filename = "main.nim";
              glass_520096714 = v_520098444;
              F.line = 837;
              var tmp_520096704 = tree_721421184(44, []);
              F.line = 837;
              tmp_520096704.class = "glass";
              if (isSome_1526726697(theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass[chckIndx(glass_520096714, 0, (theState_520093821[0].Field1[chckIndx(side_520093802[0], 0, (theState_520093821[0].Field1).length - 1)].glass).length - 1)])) {
              F.line = 839;
              var tmp_520096705 = tree_721421184(71, []);
              F.line = 839;
              tmp_520096705.class = toJSStr(([99,105,114,99,108,101,32] || []).concat(toLower_1040194968(reprEnum(glass_520096714, NTI1224736789)) || []));
              F.line = 839;
              addEventHandler_687867670(tmp_520096705, 0, createGlassOnClick_520096608(glass_520096714), kxi__);
              F.line = 839;
              add_721421120(tmp_520096704, tmp_520096705);
              }
              else {
                F.line = 841;
                var tmp_520096706 = tree_721421184(71, []);
                F.line = 841;
                tmp_520096706.class = "circle empty";
                F.line = 841;
                add_721421120(tmp_520096704, tmp_520096706);
              }
              
              F.line = 842;
              var tmp_520096707 = tree_721421184(32, []);
              F.line = 843;
              add_721421120(tmp_520096707, text_721421252(reprEnum(glass_520096714, NTI1224736789)));
              F.line = 843;
              add_721421120(tmp_520096704, tmp_520096707);
              F.line = 843;
              add_721421120(tmp_520096703, tmp_520096704);
              F.line = 102;
              F.filename = "iterators_1.nim";
              res_520098445 = addInt(res_520098445, 1);
            }
        };
      };
    };
    F.line = 843;
    F.filename = "main.nim";
    add_721421120(tmp_520096701, tmp_520096703);
    if (isSome_520096732(selectedGlass_520093866[0])) {
    F.line = 845;
    var glass_520096752 = (Temporary5 = get_520096638(selectedGlass_520093866[0]), Temporary5)[0][Temporary5[1]];
    if (!((picksLeft_520093892[0] == 0))) {
    F.line = 847;
    var tmp_520096708 = tree_721421184(195, []);
    F.line = 847;
    tmp_520096708.class = "cancel";
    F.line = 847;
    addEventHandler_687867670(tmp_520096708, 0, cancelAllPicks_520095545, kxi__);
    F.line = 848;
    add_721421120(tmp_520096708, text_721421252([67,97,110,99,101,108]));
    F.line = 848;
    add_721421120(tmp_520096701, tmp_520096708);
    }
    
    F.line = 850;
    var zerocond_520096757 = ((glass_520096752 == 1) && (theState_520093821[0].Field0.turnNumber == 0));
    F.line = 851;
    var tmp_520096709 = tree_721421184(195, []);
    F.line = 851;
    tmp_520096709.class = "use";
    F.line = 851;
    setAttr_721421080(tmp_520096709, "disabled", (busy_520093916() || zerocond_520096757));
    F.line = 852;
    Label6: {
      F.line = 852;
      var fmtRes_520096762 = [mnewString(0)];
      F.line = 852;
      fmtRes_520096762[0].push.apply(fmtRes_520096762[0], [85,115,101,32]);;
      F.line = 852;
      formatValue_520096763(fmtRes_520096762, 0, glass_520096752);
    };
    add_721421120(tmp_520096709, text_721421252(fmtRes_520096762[0]));
    F.line = 853;
    addEventHandler_687867670(tmp_520096709, 0, HEX3Aanonymous_520096777, kxi__);
    F.line = 831;
    add_721421120(tmp_520096701, tmp_520096709);
    }
    
    result_520096700 = tmp_520096701;
  framePtr = F.prev;

  return result_520096700;

}

function HEX24_520097154(x_520097156) {
  var result_520097157 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520097157[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym218_520097168 = 0;
    if ((0 < countHEX60gensym218_520097168)) {
    F.line = 23;
    result_520097157[0].push.apply(result_520097157[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097157[0].push.apply(result_520097157[0], [110,101,120,116,73,110,100,101,120]);;
    F.line = 26;
    result_520097157[0].push.apply(result_520097157[0], [58,32]);;
    F.line = 27;
    countHEX60gensym218_520097168 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097157, 0, x_520097156.nextIndex);
    if ((0 < countHEX60gensym218_520097168)) {
    F.line = 23;
    result_520097157[0].push.apply(result_520097157[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097157[0].push.apply(result_520097157[0], [110,101,120,116,71,114,111,117,112]);;
    F.line = 26;
    result_520097157[0].push.apply(result_520097157[0], [58,32]);;
    F.line = 27;
    countHEX60gensym218_520097168 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097157, 0, x_520097156.nextGroup);
    if ((0 < countHEX60gensym218_520097168)) {
    F.line = 23;
    result_520097157[0].push.apply(result_520097157[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097157[0].push.apply(result_520097157[0], [114,97,110,100,83,101,101,100]);;
    F.line = 26;
    result_520097157[0].push.apply(result_520097157[0], [58,32]);;
    F.line = 27;
    countHEX60gensym218_520097168 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097157, 0, x_520097156.randSeed);
    if ((0 < countHEX60gensym218_520097168)) {
    F.line = 23;
    result_520097157[0].push.apply(result_520097157[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097157[0].push.apply(result_520097157[0], [116,117,114,110,78,117,109,98,101,114]);;
    F.line = 26;
    result_520097157[0].push.apply(result_520097157[0], [58,32]);;
    F.line = 27;
    countHEX60gensym218_520097168 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097157, 0, x_520097156.turnNumber);
    F.line = 39;
    result_520097157[0].push.apply(result_520097157[0], [41]);;
  framePtr = F.prev;

  return result_520097157[0];

}

function HEX24_520097305(self_520097307) {
  var result_520097308 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isSome_1409289449(self_520097307)) {
    F.line = 364;
    F.filename = "options.nim";
    result_520097308[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    F.line = 365;
    addQuoted_838862213(result_520097308, 0, self_520097307.val);
    F.line = 366;
    result_520097308[0].push.apply(result_520097308[0], [41]);;
    }
    else {
      F.line = 371;
      result_520097308[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_520097308[0];

}

function addQuoted_520097293(s_520097295, s_520097295_Idx, x_520097296) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520097295[s_520097295_Idx].push.apply(s_520097295[s_520097295_Idx], HEX24_520097305(x_520097296));;
  framePtr = F.prev;

  
}

function HEX24_520097433(x_520097435) {
  var result_520097436 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520097436[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym249_520097447 = 0;
    if ((0 < countHEX60gensym249_520097447)) {
    F.line = 23;
    result_520097436[0].push.apply(result_520097436[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097436[0].push.apply(result_520097436[0], [110,97,109,101]);;
    F.line = 26;
    result_520097436[0].push.apply(result_520097436[0], [58,32]);;
    F.line = 27;
    countHEX60gensym249_520097447 += 1;
    F.line = 33;
    addQuoted_520094300(result_520097436, 0, x_520097435["Field0"]);
    if ((0 < countHEX60gensym249_520097447)) {
    F.line = 23;
    result_520097436[0].push.apply(result_520097436[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097436[0].push.apply(result_520097436[0], [99,111,115,116]);;
    F.line = 26;
    result_520097436[0].push.apply(result_520097436[0], [58,32]);;
    F.line = 27;
    countHEX60gensym249_520097447 += 1;
    F.line = 35;
    result_520097436[0].push.apply(result_520097436[0], [46,46,46]);;
    if ((0 < countHEX60gensym249_520097447)) {
    F.line = 23;
    result_520097436[0].push.apply(result_520097436[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097436[0].push.apply(result_520097436[0], [97,99,116,105,111,110]);;
    F.line = 26;
    result_520097436[0].push.apply(result_520097436[0], [58,32]);;
    F.line = 27;
    countHEX60gensym249_520097447 += 1;
    F.line = 35;
    result_520097436[0].push.apply(result_520097436[0], [46,46,46]);;
    if ((0 < countHEX60gensym249_520097447)) {
    F.line = 23;
    result_520097436[0].push.apply(result_520097436[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097436[0].push.apply(result_520097436[0], [99,111,110,100,105,116,105,111,110]);;
    F.line = 26;
    result_520097436[0].push.apply(result_520097436[0], [58,32]);;
    F.line = 27;
    countHEX60gensym249_520097447 += 1;
    F.line = 35;
    result_520097436[0].push.apply(result_520097436[0], [46,46,46]);;
    F.line = 39;
    result_520097436[0].push.apply(result_520097436[0], [41]);;
  framePtr = F.prev;

  return result_520097436[0];

}

function addQuoted_520097427(s_520097429, s_520097429_Idx, x_520097430) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520097429[s_520097429_Idx].push.apply(s_520097429[s_520097429_Idx], HEX24_520097433(x_520097430));;
  framePtr = F.prev;

  
}

function collectionToString_520097412(x_520097414, prefix_520097415, separator_520097416, suffix_520097417) {
  var result_520097418 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_520097418[0] = nimCopy(null, prefix_520097415, NTI33554449);
    F.line = 91;
    var firstElement_520097419 = true;
    Label1: {
      F.line = 92;
      var value_520097423 = {Field0: [], Field1: null, Field2: null, Field3: null};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098511 = 0;
      F.line = 250;
      var L_520098512 = (x_520097414).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098511 < L_520098512)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_520097423 = x_520097414[i_520098511];
            if (firstElement_520097419) {
            F.line = 94;
            firstElement_520097419 = false;
            }
            else {
              F.line = 96;
            result_520097418[0].push.apply(result_520097418[0], separator_520097416);;
            }
            
            F.line = 105;
            addQuoted_520097427(result_520097418, 0, value_520097423);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098511 += 1;
            if (!(((x_520097414).length == L_520098512))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_520097418[0].push.apply(result_520097418[0], suffix_520097417);;
  framePtr = F.prev;

  return result_520097418[0];

}

function HEX24_520097408(x_520097410) {
  var result_520097411 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_520097411 = nimCopy(null, collectionToString_520097412(x_520097410, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_520097411;

}

function addQuoted_520097402(s_520097404, s_520097404_Idx, x_520097405) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520097404[s_520097404_Idx].push.apply(s_520097404[s_520097404_Idx], HEX24_520097408(x_520097405));;
  framePtr = F.prev;

  
}

function HEX24_520097712(x_520097714) {
  var result_520097715 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520097715[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym268_520097726 = 0;
    if ((0 < countHEX60gensym268_520097726)) {
    F.line = 23;
    result_520097715[0].push.apply(result_520097715[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097715[0].push.apply(result_520097715[0], [115,116,114,101,110,103,116,104]);;
    F.line = 26;
    result_520097715[0].push.apply(result_520097715[0], [58,32]);;
    F.line = 27;
    countHEX60gensym268_520097726 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097715, 0, x_520097714["Field0"]);
    if ((0 < countHEX60gensym268_520097726)) {
    F.line = 23;
    result_520097715[0].push.apply(result_520097715[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097715[0].push.apply(result_520097715[0], [97,99,116,105,111,110]);;
    F.line = 26;
    result_520097715[0].push.apply(result_520097715[0], [58,32]);;
    F.line = 27;
    countHEX60gensym268_520097726 += 1;
    F.line = 35;
    result_520097715[0].push.apply(result_520097715[0], [46,46,46]);;
    if ((0 < countHEX60gensym268_520097726)) {
    F.line = 23;
    result_520097715[0].push.apply(result_520097715[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097715[0].push.apply(result_520097715[0], [99,111,110,100,105,116,105,111,110]);;
    F.line = 26;
    result_520097715[0].push.apply(result_520097715[0], [58,32]);;
    F.line = 27;
    countHEX60gensym268_520097726 += 1;
    F.line = 35;
    result_520097715[0].push.apply(result_520097715[0], [46,46,46]);;
    F.line = 39;
    result_520097715[0].push.apply(result_520097715[0], [41]);;
  framePtr = F.prev;

  return result_520097715[0];

}

function addQuoted_520097706(s_520097708, s_520097708_Idx, x_520097709) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520097708[s_520097708_Idx].push.apply(s_520097708[s_520097708_Idx], HEX24_520097712(x_520097709));;
  framePtr = F.prev;

  
}

function HEX24_520097695(self_520097697) {
  var result_520097698 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/options.nim", line: 0};
  framePtr = F;
    if (isSome_1526726697(self_520097697)) {
    F.line = 364;
    F.filename = "options.nim";
    result_520097698[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    F.line = 365;
    addQuoted_520097706(result_520097698, 0, self_520097697.val);
    F.line = 366;
    result_520097698[0].push.apply(result_520097698[0], [41]);;
    }
    else {
      F.line = 371;
      result_520097698[0] = nimCopy(null, [110,111,110,101,40,71,108,97,115,115,65,98,105,108,105,116,121,41], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_520097698[0];

}

function addQuoted_520097683(s_520097685, s_520097685_Idx, x_520097686) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520097685[s_520097685_Idx].push.apply(s_520097685[s_520097685_Idx], HEX24_520097695(x_520097686));;
  framePtr = F.prev;

  
}

function collectionToString_520097641(x_520097643, prefix_520097644, separator_520097645, suffix_520097646) {
  var result_520097647 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_520097647[0] = nimCopy(null, prefix_520097644, NTI33554449);
    F.line = 91;
    var firstElement_520097648 = true;
    Label1: {
      F.line = 92;
      var value_520097679 = ({val: {Field0: 0, Field1: null, Field2: null}, has: false});
      F.line = 43;
      F.filename = "iterators.nim";
      var i_520098516 = 0;
      Label2: {
        F.line = 44;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_520097679 = nimCopy(value_520097679, x_520097643[i_520098516], NTI1224736839);
            if (firstElement_520097648) {
            F.line = 94;
            firstElement_520097648 = false;
            }
            else {
              F.line = 96;
            result_520097647[0].push.apply(result_520097647[0], separator_520097645);;
            }
            
            F.line = 105;
            addQuoted_520097683(result_520097647, 0, value_520097679);
            if ((3 <= i_520098516)) {
            F.line = 46;
            F.filename = "iterators.nim";
            break Label2;
            }
            
            F.line = 13;
            i_520098516 += 1;
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_520097647[0].push.apply(result_520097647[0], suffix_520097646);;
  framePtr = F.prev;

  return result_520097647[0];

}

function HEX24_520097636(x_520097639) {
  var result_520097640 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "dollars.nim";
    result_520097640 = nimCopy(null, collectionToString_520097641(x_520097639, [91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_520097640;

}

function addQuoted_520097624(s_520097626, s_520097626_Idx, x_520097627) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520097626[s_520097626_Idx].push.apply(s_520097626[s_520097626_Idx], HEX24_520097636(x_520097627));;
  framePtr = F.prev;

  
}

function HEX24_520097230(x_520097232) {
  var result_520097233 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520097233[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym232_520097244 = 0;
    if ((0 < countHEX60gensym232_520097244)) {
    F.line = 23;
    result_520097233[0].push.apply(result_520097233[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097233[0].push.apply(result_520097233[0], [97,98,105,108,105,116,121,84,97,107,101,115]);;
    F.line = 26;
    result_520097233[0].push.apply(result_520097233[0], [58,32]);;
    F.line = 27;
    countHEX60gensym232_520097244 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097233, 0, x_520097232.abilityTakes);
    if ((0 < countHEX60gensym232_520097244)) {
    F.line = 23;
    result_520097233[0].push.apply(result_520097233[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097233[0].push.apply(result_520097233[0], [119,97,108,108,101,116]);;
    F.line = 26;
    result_520097233[0].push.apply(result_520097233[0], [58,32]);;
    F.line = 27;
    countHEX60gensym232_520097244 += 1;
    F.line = 33;
    addQuoted_520097293(result_520097233, 0, x_520097232.wallet);
    if ((0 < countHEX60gensym232_520097244)) {
    F.line = 23;
    result_520097233[0].push.apply(result_520097233[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097233[0].push.apply(result_520097233[0], [98,117,121,115]);;
    F.line = 26;
    result_520097233[0].push.apply(result_520097233[0], [58,32]);;
    F.line = 27;
    countHEX60gensym232_520097244 += 1;
    F.line = 33;
    addQuoted_520097402(result_520097233, 0, x_520097232.buys);
    if ((0 < countHEX60gensym232_520097244)) {
    F.line = 23;
    result_520097233[0].push.apply(result_520097233[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097233[0].push.apply(result_520097233[0], [112,105,101,99,101,115,83,111,108,100]);;
    F.line = 26;
    result_520097233[0].push.apply(result_520097233[0], [58,32]);;
    F.line = 27;
    countHEX60gensym232_520097244 += 1;
    F.line = 33;
    addQuoted_838862213(result_520097233, 0, x_520097232.piecesSold);
    if ((0 < countHEX60gensym232_520097244)) {
    F.line = 23;
    result_520097233[0].push.apply(result_520097233[0], [44,32]);;
    }
    
    F.line = 25;
    result_520097233[0].push.apply(result_520097233[0], [103,108,97,115,115]);;
    F.line = 26;
    result_520097233[0].push.apply(result_520097233[0], [58,32]);;
    F.line = 27;
    countHEX60gensym232_520097244 += 1;
    F.line = 33;
    addQuoted_520097624(result_520097233, 0, x_520097232.glass);
    F.line = 39;
    result_520097233[0].push.apply(result_520097233[0], [41]);;
  framePtr = F.prev;

  return result_520097233[0];

}

function HEX24_520094838(x_520094840) {
  var result_520094841 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520094841[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym95_520094852 = 0;
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [110,97,109,101]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 33;
    addQuoted_520094300(result_520094841, 0, x_520094840["Field0"]);
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [116,117,114,110,115]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 33;
    addQuoted_838862213(result_520094841, 0, x_520094840["Field1"]);
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [103,114,111,117,112]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 33;
    addQuoted_838862213(result_520094841, 0, x_520094840["Field2"]);
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [97,99,116,105,111,110]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 35;
    result_520094841[0].push.apply(result_520094841[0], [46,46,46]);;
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [99,97,110,99,101,108,97,98,108,101]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 33;
    addQuoted_520094286(result_520094841, 0, x_520094840["Field4"]);
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [112,97,115,115,116,104,114,111,117,103,104]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 33;
    addQuoted_520094286(result_520094841, 0, x_520094840["Field5"]);
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [115,101,110,100]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 35;
    result_520094841[0].push.apply(result_520094841[0], [46,46,46]);;
    if ((0 < countHEX60gensym95_520094852)) {
    F.line = 23;
    result_520094841[0].push.apply(result_520094841[0], [44,32]);;
    }
    
    F.line = 25;
    result_520094841[0].push.apply(result_520094841[0], [99,97,110,99,101,108]);;
    F.line = 26;
    result_520094841[0].push.apply(result_520094841[0], [58,32]);;
    F.line = 27;
    countHEX60gensym95_520094852 += 1;
    F.line = 35;
    result_520094841[0].push.apply(result_520094841[0], [46,46,46]);;
    F.line = 39;
    result_520094841[0].push.apply(result_520094841[0], [41]);;
  framePtr = F.prev;

  return result_520094841[0];

}

function addQuoted_520094832(s_520094834, s_520094834_Idx, x_520094835) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2539;
    F.filename = "system.nim";
    s_520094834[s_520094834_Idx].push.apply(s_520094834[s_520094834_Idx], HEX24_520094838(x_520094835));;
  framePtr = F.prev;

  
}

function collectionToString_520094799(x_520094801, prefix_520094802, separator_520094803, suffix_520094804) {
  var result_520094805 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_520094805[0] = nimCopy(null, prefix_520094802, NTI33554449);
    F.line = 91;
    var firstElement_520094806 = true;
    Label1: {
      F.line = 92;
      var value_520094828 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098520 = 0;
      F.line = 250;
      var L_520098521 = (x_520094801).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520098520 < L_520098521)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_520094828 = x_520094801[i_520098520];
            if (firstElement_520094806) {
            F.line = 94;
            firstElement_520094806 = false;
            }
            else {
              F.line = 96;
            result_520094805[0].push.apply(result_520094805[0], separator_520094803);;
            }
            
            F.line = 105;
            addQuoted_520094832(result_520094805, 0, value_520094828);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098520 += 1;
            if (!(((x_520094801).length == L_520098521))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_520094805[0].push.apply(result_520094805[0], suffix_520094804);;
  framePtr = F.prev;

  return result_520094805[0];

}

function HEX24_520094795(x_520094797) {
  var result_520094798 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_520094798 = nimCopy(null, collectionToString_520094799(x_520094797, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_520094798;

}

function formatValue_520097792(result_520097795, result_520097795_Idx, value_520097796) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 626;
    F.filename = "strformat.nim";
    formatValue_520094535(result_520097795, result_520097795_Idx, HEX24_520094795(value_520097796));
  framePtr = F.prev;

  
}

function pop_520095494(s_520095496, s_520095496_Idx) {
  var result_520095497 = [];

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1702;
    F.filename = "system.nim";
    var L_520095501 = subInt((s_520095496[s_520095496_Idx]).length, 1);
    F.line = 1707;
    result_520095497 = nimCopy(null, s_520095496[s_520095496_Idx][chckIndx(L_520095501, 0, (s_520095496[s_520095496_Idx]).length - 1)], NTI33554449);
    F.line = 1708;
    if (s_520095496[s_520095496_Idx].length < chckRange(L_520095501, 0, 2147483647)) { for (var i = s_520095496[s_520095496_Idx].length ; i < chckRange(L_520095501, 0, 2147483647) ; ++i) s_520095496[s_520095496_Idx].push([]); }
               else { s_520095496[s_520095496_Idx].length = chckRange(L_520095501, 0, 2147483647); };
  framePtr = F.prev;

  return result_520095497;

}

function sendMove_520095156(moveType_520095157, start_520095158, to_520095159) {
  var F = {procname: "main.sendMove", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "main.nim";
    Label1: {
      F.line = 223;
      var fmtRes_520095164 = [mnewString(0)];
      F.line = 223;
      formatValue_520094535(fmtRes_520095164, 0, moveType_520095157);
      F.line = 223;
      fmtRes_520095164[0].push.apply(fmtRes_520095164[0], [44]);;
      F.line = 223;
      formatValue_520094535(fmtRes_520095164, 0, HEX24_369098760(start_520095158.Field1));
      F.line = 223;
      fmtRes_520095164[0].push.apply(fmtRes_520095164[0], [44]);;
      F.line = 707;
      F.filename = "strformat.nim";
      add_33556373(fmtRes_520095164, 0, (toJSStr(HEX24_369098760(start_520095158.Field0))));
      F.line = 223;
      F.filename = "main.nim";
      fmtRes_520095164[0].push.apply(fmtRes_520095164[0], [44]);;
      F.line = 223;
      formatValue_520094535(fmtRes_520095164, 0, HEX24_369098760(to_520095159.Field1));
      F.line = 223;
      fmtRes_520095164[0].push.apply(fmtRes_520095164[0], [44]);;
      F.line = 223;
      formatValue_520094535(fmtRes_520095164, 0, HEX24_369098760(to_520095159.Field0));
    };
    sendAction_520094611(fmtRes_520095164[0], true);
  framePtr = F.prev;

  
}

function createTile_520095750(p_520095751, m_520095752, n_520095753) {
    var Temporary1;
    p_520095751 = nimCopy(null, p_520095751, NTI1224736794);
    
function HEX3Aanonymous_520095839(__520095840, __520095841) {
      var F = {procname: "createTile.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if ((!((picksLeft_520093892[0] == 0)) && contains_1224737585(pickOptions_520093895[0], p_520095751.tile))) {
        F.line = 463;
        F.filename = "main.nim";
        picksLeft_520093892[0] = subInt(picksLeft_520093892[0], 1);
        F.line = 464;
        var Temporary1 = nimCopy(null, p_520095751.tile, NTI1224736771);
        picks_520093900[0].push(Temporary1);;
        F.line = 465;
        promptHistory_520093886[0].push(pop_520095494(promptStack_520093891, 0));;
        F.line = 466;
        pickOptions_520093895[0] = nimCopy(null, getPickOptions_520093894[0](), NTI520093867);
        F.line = 467;
        clear_520093955();
        if ((picksLeft_520093892[0] == 0)) {
        F.line = 469;
        rawEcho([119,104,101,110,32,99,111,108,108,101,99,116,101,100,32,115,116,97,114,116]);
        F.line = 470;
        whenCollected_520093902[0]();
        F.line = 471;
        rawEcho([87,104,101,110,32,67,111,108,108,101,99,116,101,100]);
        F.line = 472;
        cancelAllPicks_520095513();
        F.line = 473;
        rawEcho([67,97,110,99,101,108,32,65,108,108]);
        }
        
        }
        else {
        if (((contains_1224737585(possibleMoves_520093829[0], p_520095751.tile) && isColor_1224737917(pieceOf_520093909(selectedTile_520093824[0]), side_520093802[0])) && !(busy_520093916()))) {
        F.line = 476;
        pieceOf_520093909(selectedTile_520093824[0]).onMove(pieceOf_520093909(selectedTile_520093824[0]), p_520095751.tile, theBoard_520093820[0], theState_520093821[0]);
        F.line = 477;
        sendMove_520095156([109,111,118,101], selectedTile_520093824[0], p_520095751.tile);
        F.line = 478;
        rawEcho([115,101,110,100]);
        F.line = 479;
        clear_520093955();
        }
        else {
        if (((contains_1224737585(possibleTakes_520093834[0], p_520095751.tile) && isColor_1224737917(pieceOf_520093909(selectedTile_520093824[0]), side_520093802[0])) && !(busy_520093916()))) {
        F.line = 482;
        pieceOf_520093909(selectedTile_520093824[0]).onTake(pieceOf_520093909(selectedTile_520093824[0]), p_520095751.tile, theBoard_520093820[0], theState_520093821[0]);
        F.line = 483;
        sendMove_520095156([116,97,107,101], selectedTile_520093824[0], p_520095751.tile);
        F.line = 484;
        clear_520093955();
        }
        else {
        if (!(isSelected_520093912(m_520095752, n_520095753))) {
        F.line = 486;
        var colontmp__520098547 = n_520095753;
        F.line = 486;
        var colontmp__520098548 = m_520095752;
        F.line = 486;
        selectedTile_520093824[0] = nimCopy(selectedTile_520093824[0], {Field0: colontmp__520098547, Field1: colontmp__520098548}, NTI1224736771);
        F.line = 487;
        possibleMoves_520093829[0] = nimCopy(null, getMovesOn_1224737550(p_520095751, theBoard_520093820[0]), NTI1224736778);
        F.line = 488;
        possibleTakes_520093834[0] = nimCopy(null, getTakesOn_1224737435(p_520095751, theBoard_520093820[0]), NTI1224736778);
        }
        else {
          F.line = 490;
        clear_520093955();
        }
        }}}
      framePtr = F.prev;

      
    }
      var Temporary15;
      var Temporary16;

  var result_520095754 = null;

  var F = {procname: "main.createTile", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 430;
    F.filename = "main.nim";
    if ((modInt(addInt(mulInt(m_520095752, 7), n_520095753), 2) == 0)) {
    Temporary1 = [119,104,105,116,101,84,105,108,101];
    }
    else {
    Temporary1 = [98,108,97,99,107,84,105,108,101];
    }
    
    var class_520095755 = nimCopy(null, Temporary1, NTI33554449);
    Label2: {
      F.line = 432;
      var i_520095756 = 0;
      F.line = 432;
      var j_520095757 = 0;
      Label3: {
        F.line = 113;
        F.filename = "piece.nim";
        var i_520098536 = 0;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520098537 = 0;
        Label4: {
          F.line = 129;
            Label5: while (true) {
            if (!(i_520098537 < 8)) break Label5;
              F.line = 113;
              F.filename = "piece.nim";
              i_520098536 = i_520098537;
              Label6: {
                F.line = 114;
                var j_520098540 = 0;
                F.line = 128;
                F.filename = "iterators_1.nim";
                var i_520098541 = 0;
                Label7: {
                  F.line = 129;
                    Label8: while (true) {
                    if (!(i_520098541 < 8)) break Label8;
                      F.line = 114;
                      F.filename = "piece.nim";
                      j_520098540 = i_520098541;
                      F.line = 432;
                      F.filename = "main.nim";
                      i_520095756 = i_520098536;
                      F.line = 432;
                      j_520095757 = j_520098540;
                      Label9: {
                        F.line = 433;
                        var c_520095761 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                        F.line = 247;
                        F.filename = "iterators.nim";
                        var colontmp__520098531 = [];
                        F.line = 433;
                        F.filename = "main.nim";
                        colontmp__520098531 = theBoard_520093820[0][chckIndx(i_520095756, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095757, 0, (theBoard_520093820[0][chckIndx(i_520095756, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts;
                        F.line = 249;
                        F.filename = "iterators.nim";
                        var i_520098532 = 0;
                        F.line = 250;
                        var L_520098533 = (colontmp__520098531).length;
                        Label10: {
                          F.line = 251;
                            Label11: while (true) {
                            if (!(i_520098532 < L_520098533)) break Label11;
                              F.line = 433;
                              F.filename = "main.nim";
                              c_520095761 = colontmp__520098531[chckIndx(i_520098532, 0, (colontmp__520098531).length - 1)];
                              if (HEX3DHEX3D_1224737609(p_520095751.tile, c_520095761.Field0)) {
                              F.line = 435;
                              class_520095755.push.apply(class_520095755, castingOnAnimations_520093728[chckIndx(c_520095761.Field2, 0, (castingOnAnimations_520093728).length - 1)]);;
                              }
                              
                              F.line = 13;
                              F.filename = "iterators.nim";
                              i_520098532 += 1;
                              if (!(((colontmp__520098531).length == L_520098533))) {
                              F.line = 254;
                              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      F.line = 131;
                      F.filename = "iterators_1.nim";
                      i_520098541 = addInt(i_520098541, 1);
                    }
                };
              };
              F.line = 131;
              i_520098537 = addInt(i_520098537, 1);
            }
        };
      };
    };
    Label12: {
      F.line = 437;
      F.filename = "main.nim";
      var c_520095769 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098544 = 0;
      F.line = 250;
      var L_520098545 = (p_520095751.casts).length;
      Label13: {
        F.line = 251;
          Label14: while (true) {
          if (!(i_520098544 < L_520098545)) break Label14;
            F.line = 437;
            F.filename = "main.nim";
            c_520095769 = p_520095751.casts[chckIndx(i_520098544, 0, (p_520095751.casts).length - 1)];
            F.line = 438;
            class_520095755.push.apply(class_520095755, castingAnimations_520093727[chckIndx(c_520095769.Field2, 0, (castingAnimations_520093727).length - 1)]);;
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098544 += 1;
            if (!(((p_520095751.casts).length == L_520098545))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((isSelected_520093912(m_520095752, n_520095753) && contains_1224737585(possibleTakes_520093834[0], p_520095751.tile))) {
    F.line = 441;
    F.filename = "main.nim";
    class_520095755.push.apply(class_520095755, [32,99,97,110,45,116,97,107,101]);;
    }
    else {
    if (isSelected_520093912(m_520095752, n_520095753)) {
    F.line = 443;
    class_520095755.push.apply(class_520095755, [32,115,101,108,101,99,116,101,100]);;
    }
    else {
    if (contains_1224737585(picks_520093900[0], p_520095751.tile)) {
    F.line = 445;
    class_520095755.push.apply(class_520095755, [32,112,105,99,107,105,110,103]);;
    }
    else {
    if ((contains_1224737585(possibleMoves_520093829[0], p_520095751.tile) || contains_1224737585(pickOptions_520093895[0], p_520095751.tile))) {
    F.line = 447;
    class_520095755.push.apply(class_520095755, [32,99,97,110,45,109,111,118,101]);;
    }
    else {
    if (contains_1224737585(possibleTakes_520093834[0], p_520095751.tile)) {
    F.line = 449;
    class_520095755.push.apply(class_520095755, [32,99,97,110,45,116,97,107,101]);;
    }
    else {
      F.line = 451;
    class_520095755.push.apply(class_520095755, [32,117,110,115,101,108,101,99,116,101,100]);;
    }
    }}}}
    if (contains_1224737585(piecesChecking_520093844[0], p_520095751.tile)) {
    F.line = 454;
    class_520095755.push.apply(class_520095755, [32,99,104,101,99,107,105,110,103]);;
    }
    else {
    if (contains_1224737585(lastMove_520093839[0], p_520095751.tile)) {
    F.line = 456;
    class_520095755.push.apply(class_520095755, [32,108,97,115,116,45,109,111,118,101]);;
    }
    }
    F.line = 459;
    F.line = 460;
    var tmp_520095828 = tree_721421184(188, []);
    F.line = 460;
    tmp_520095828.class = toJSStr(class_520095755);
    F.line = 461;
    addEventHandler_687867670(tmp_520095828, 0, HEX3Aanonymous_520095839, kxi__);
    if (eqStrings(p_520095751.filePath, [])) {
    F.line = 493;
    add_721421120(tmp_520095828, text_721421252([]));
    }
    else {
      F.line = 495;
      if (p_520095751.rotate) {
      Temporary15 = [114,111,116,97,116,101];
      }
      else {
      Temporary15 = [];
      }
      
      var class_520095874 = nimCopy(null, Temporary15, NTI33554449);
      F.line = 496;
      if (p_520095751.colorable) {
      Temporary16 = reprEnum(p_520095751.color, NTI1224736777);
      }
      else {
      Temporary16 = [];
      }
      
      var color_520095878 = nimCopy(null, Temporary16, NTI33554449);
      F.line = 497;
      var tmp_520095838 = tree_721421184(76, []);
      F.line = 497;
      setAttr_721421035(tmp_520095838, "src", toJSStr(([46,47,105,99,111,110,115,47] || []).concat(color_520095878 || [],p_520095751.filePath || [])));
      F.line = 497;
      tmp_520095838.class = toJSStr(class_520095874);
      F.line = 497;
      add_721421120(tmp_520095828, tmp_520095838);
    }
    
    result_520095754 = tmp_520095828;
  framePtr = F.prev;

  return result_520095754;

}

function createBoard_520095894() {
  var result_520095895 = null;

  var F = {procname: "main.createBoard", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 500;
    F.filename = "main.nim";
    F.line = 500;
    var tmp_520095896 = tree_721421184(180, []);
    Label1: {
      F.line = 501;
      var i_520095904 = 0;
      F.line = 501;
      var r_520095905 = [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})];
      F.line = 164;
      F.filename = "iterators.nim";
      var i_520098527 = 0;
      Label2: {
        F.line = 165;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 501;
            F.filename = "main.nim";
            i_520095904 = i_520098527;
            F.line = 501;
            r_520095905 = nimCopy(r_520095905, theBoard_520093820[0][chckIndx(i_520098527, 0, (theBoard_520093820[0]).length - 1)], NTI1224736772);
            F.line = 502;
            var tmp_520095897 = tree_721421184(187, []);
            Label4: {
              F.line = 503;
              var j_520095912 = 0;
              F.line = 503;
              var p_520095913 = ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []});
              F.line = 164;
              F.filename = "iterators.nim";
              var i_520098525 = 0;
              Label5: {
                F.line = 165;
                  Label6: while (true) {
                  if (!true) break Label6;
                    F.line = 503;
                    F.filename = "main.nim";
                    j_520095912 = i_520098525;
                    F.line = 503;
                    p_520095913 = nimCopy(p_520095913, r_520095905[chckIndx(i_520098525, 0, (r_520095905).length - 1)], NTI1224736794);
                    F.line = 504;
                    add_721421120(tmp_520095897, createTile_520095750(p_520095913, i_520095904, j_520095912));
                    if ((7 <= i_520098525)) {
                    F.line = 167;
                    F.filename = "iterators.nim";
                    break Label5;
                    }
                    
                    F.line = 13;
                    i_520098525 += 1;
                  }
              };
            };
            F.line = 504;
            F.filename = "main.nim";
            add_721421120(tmp_520095896, tmp_520095897);
            if ((7 <= i_520098527)) {
            F.line = 167;
            F.filename = "iterators.nim";
            break Label2;
            }
            
            F.line = 13;
            i_520098527 += 1;
          }
      };
    };
    result_520095895 = tmp_520095896;
  framePtr = F.prev;

  return result_520095895;

}

function reverseBoard_520095914() {
  var result_520095915 = null;

  var F = {procname: "main.reverseBoard", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 507;
    F.filename = "main.nim";
    F.line = 507;
    var tmp_520095916 = tree_721421184(180, []);
    Label1: {
      F.line = 508;
      var i_520095923 = 0;
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520098554 = 7;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_520098554)) break Label3;
            F.line = 508;
            F.filename = "main.nim";
            i_520095923 = res_520098554;
            F.line = 509;
            var tmp_520095917 = tree_721421184(187, []);
            Label4: {
              F.line = 510;
              var j_520095929 = 0;
              F.line = 33;
              F.filename = "iterators_1.nim";
              var res_520098552 = 7;
              Label5: {
                F.line = 34;
                  Label6: while (true) {
                  if (!(0 <= res_520098552)) break Label6;
                    F.line = 510;
                    F.filename = "main.nim";
                    j_520095929 = res_520098552;
                    F.line = 511;
                    add_721421120(tmp_520095917, createTile_520095750(theBoard_520093820[0][chckIndx(i_520095923, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520095929, 0, (theBoard_520093820[0][chckIndx(i_520095923, 0, (theBoard_520093820[0]).length - 1)]).length - 1)], i_520095923, j_520095929));
                    F.line = 39;
                    F.filename = "iterators_1.nim";
                    res_520098552 = subInt(res_520098552, 1);
                  }
              };
            };
            F.line = 511;
            F.filename = "main.nim";
            add_721421120(tmp_520095916, tmp_520095917);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_520098554 = subInt(res_520098554, 1);
          }
      };
    };
    result_520095915 = tmp_520095916;
  framePtr = F.prev;

  return result_520095915;

}

function HEX5BHEX5D_520096329(s_520096331, i_520096332) {
  var result_520096333 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520096333 = s_520096331[chckIndx(subInt((s_520096331).length, i_520096332), 0, (s_520096331).length - 1)];
  framePtr = F.prev;

  return result_520096333;

}

function pop_520096412(s_520096414, s_520096414_Idx) {
  var result_520096415 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1702;
    F.filename = "system.nim";
    var L_520096419 = subInt((s_520096414[s_520096414_Idx]).length, 1);
    F.line = 1707;
    result_520096415 = nimCopy(result_520096415, s_520096414[s_520096414_Idx][chckIndx(L_520096419, 0, (s_520096414[s_520096414_Idx]).length - 1)], NTI520093710);
    F.line = 1708;
    if (s_520096414[s_520096414_Idx].length < chckRange(L_520096419, 0, 2147483647)) { for (var i = s_520096414[s_520096414_Idx].length ; i < chckRange(L_520096419, 0, 2147483647) ; ++i) s_520096414[s_520096414_Idx].push({Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null}); }
               else { s_520096414[s_520096414_Idx].length = chckRange(L_520096419, 0, 2147483647); };
  framePtr = F.prev;

  return result_520096415;

}

function newSeq_520095054(len_520095056) {
  var result_520095057 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_520095057 = new Array(len_520095056); for (var i = 0 ; i < len_520095056 ; ++i) { result_520095057[i] = false; }  framePtr = F.prev;

  return result_520095057;

}

function updateActionStack_520094626() {
        var Temporary7;

  var F = {procname: "main.updateActionStack", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 200;
    F.filename = "main.nim";
    rawEcho([97,115], HEX24_520094795(actionStack_520093871[0]));
    F.line = 201;
    rawEcho([110,97,115], HEX24_520094795(nextActionStack_520093876[0]));
    F.line = 202;
    rawEcho([115], HEX24_520094795(toSend_520093881[0]));
    if (((actionStack_520093871[0]).length == 0)) {
    if (!(((nextActionStack_520093876[0]).length == 0))) {
    Label1: {
      F.line = 205;
      var i_520095013 = 0;
      F.line = 205;
      var x_520095014 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
      F.line = 182;
      F.filename = "iterators.nim";
      var i_520098579 = 0;
      F.line = 183;
      var L_520098580 = (nextActionStack_520093876[0]).length;
      Label2: {
        F.line = 184;
          Label3: while (true) {
          if (!(i_520098579 < L_520098580)) break Label3;
            F.line = 205;
            F.filename = "main.nim";
            i_520095013 = i_520098579;
            F.line = 205;
            x_520095014 = nimCopy(x_520095014, nextActionStack_520093876[0][chckIndx(i_520098579, 0, (nextActionStack_520093876[0]).length - 1)], NTI520093710);
            F.line = 206;
            nextActionStack_520093876[0][chckIndx(i_520095013, 0, (nextActionStack_520093876[0]).length - 1)].Field1 = subInt(nextActionStack_520093876[0][chckIndx(i_520095013, 0, (nextActionStack_520093876[0]).length - 1)].Field1, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098579 += 1;
            if (!(((nextActionStack_520093876[0]).length == L_520098580))) {
            F.line = 187;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if (false) {
    if (!(((toSend_520093881[0]).length == 0))) {
    Label4: {
      F.line = 210;
      F.filename = "main.nim";
      var x_520095026 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520098583 = 0;
      F.line = 250;
      var L_520098584 = (toSend_520093881[0]).length;
      Label5: {
        F.line = 251;
          Label6: while (true) {
          if (!(i_520098583 < L_520098584)) break Label6;
            F.line = 210;
            F.filename = "main.nim";
            x_520095026 = toSend_520093881[0][chckIndx(i_520098583, 0, (toSend_520093881[0]).length - 1)];
            F.line = 211;
            x_520095026.Field6();
            F.line = 212;
            rawEcho([115,101,110,100,44,32,116,104,105,115,32,101,110,100,115,32,116,117,114,110,32,105,102,32,46,115,101,110,100,32,100,111,101,115]);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520098583 += 1;
            if (!(((toSend_520093881[0]).length == L_520098584))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
        if (!!(((nextActionStack_520093876[0]).length == 0))) Temporary7 = false; else {          F.line = 975;
          F.filename = "sequtils.nim";
          Label8: {
            F.line = 1024;
            var iHEX60gensym119_520095050 = 0;
            F.line = 1025;
            var resultHEX60gensym119_520095094 = newSeq_520095054(chckRange((nextActionStack_520093876[0]).length, 0, 2147483647));
            Label9: {
              F.line = 1026;
              var it_520095098 = {Field0: [], Field1: 0, Field2: 0, Field3: null, Field4: false, Field5: false, Field6: null, Field7: null};
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520098588 = 0;
              F.line = 250;
              var L_520098589 = (nextActionStack_520093876[0]).length;
              Label10: {
                F.line = 251;
                  Label11: while (true) {
                  if (!(i_520098588 < L_520098589)) break Label11;
                    F.line = 1026;
                    F.filename = "sequtils.nim";
                    it_520095098 = nextActionStack_520093876[0][chckIndx(i_520098588, 0, (nextActionStack_520093876[0]).length - 1)];
                    F.line = 215;
                    F.filename = "main.nim";
                    resultHEX60gensym119_520095094[chckIndx(iHEX60gensym119_520095050, 0, (resultHEX60gensym119_520095094).length - 1)] = it_520095098.Field5;
                    F.line = 1028;
                    F.filename = "sequtils.nim";
                    iHEX60gensym119_520095050 = addInt(iHEX60gensym119_520095050, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520098588 += 1;
                    if (!(((nextActionStack_520093876[0]).length == L_520098589))) {
                    F.line = 254;
                    failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
          };
          var sHEX60gensym122_520095110 = nimCopy(null, resultHEX60gensym119_520095094, NTI520094771);
          F.line = 976;
          F.filename = "sequtils.nim";
          var nHEX60gensym122_520095115 = (sHEX60gensym122_520095110).length;
          if (!((0 < nHEX60gensym122_520095115))) {
          F.line = 977;
          failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/sequtils.nim(977, 3) `n`gensym122 > 0` Can\'t fold empty sequences"));
          }
          
          F.line = 978;
          var resultHEX60gensym122_520095121 = sHEX60gensym122_520095110[chckIndx(subInt(nHEX60gensym122_520095115, 1), 0, (sHEX60gensym122_520095110).length - 1)];
          Label12: {
            F.line = 979;
            var iHEX60gensym122_520095127 = 0;
            F.line = 6;
            F.filename = "iterators_1.nim";
            var colontmp__520098592 = 0;
            F.line = 979;
            F.filename = "sequtils.nim";
            colontmp__520098592 = subInt(nHEX60gensym122_520095115, 2);
            F.line = 33;
            F.filename = "iterators_1.nim";
            var res_520098593 = colontmp__520098592;
            Label13: {
              F.line = 34;
                Label14: while (true) {
                if (!(0 <= res_520098593)) break Label14;
                  F.line = 979;
                  F.filename = "sequtils.nim";
                  iHEX60gensym122_520095127 = res_520098593;
                  F.line = 981;
                  var a_520095128 = sHEX60gensym122_520095110[chckIndx(iHEX60gensym122_520095127, 0, (sHEX60gensym122_520095110).length - 1)];
                  F.line = 982;
                  var b_520095129 = resultHEX60gensym122_520095121;
                  F.line = 215;
                  F.filename = "main.nim";
                  resultHEX60gensym122_520095121 = (a_520095128 && b_520095129);
                  F.line = 39;
                  F.filename = "iterators_1.nim";
                  res_520098593 = subInt(res_520098593, 1);
                }
            };
          };
          Temporary7 = !(resultHEX60gensym122_520095121);        }      if (Temporary7) {
      F.line = 216;
      F.filename = "main.nim";
      sendAction_520094611([112,97,115,115], true);
      }
      
    }
    
    }
    
    F.line = 218;
    actionStack_520093871[0] = nimCopy(null, nextActionStack_520093876[0], NTI520093830);
    F.line = 219;
    nextActionStack_520093876[0] = nimCopy(null, [], NTI520093829);
    F.line = 220;
    toSend_520093881[0] = nimCopy(null, [], NTI520093829);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5D_520096600(s_520096602, i_520096603) {
  var result_520096604 = null;
  var result_520096604_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520096604 = s_520096602; result_520096604_Idx = chckIndx(subInt((s_520096602).length, i_520096603), 0, (s_520096602).length - 1);
  framePtr = F.prev;

  return [result_520096604, result_520096604_Idx];

}

function pop_520095482(s_520095484, s_520095484_Idx) {
  var result_520095485 = {Field0: 0, Field1: 0};

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1702;
    F.filename = "system.nim";
    var L_520095489 = subInt((s_520095484[s_520095484_Idx]).length, 1);
    F.line = 1707;
    result_520095485 = nimCopy(result_520095485, s_520095484[s_520095484_Idx][chckIndx(L_520095489, 0, (s_520095484[s_520095484_Idx]).length - 1)], NTI1224736771);
    F.line = 1708;
    if (s_520095484[s_520095484_Idx].length < chckRange(L_520095489, 0, 2147483647)) { for (var i = s_520095484[s_520095484_Idx].length ; i < chckRange(L_520095489, 0, 2147483647) ; ++i) s_520095484[s_520095484_Idx].push({Field0: 0, Field1: 0}); }
               else { s_520095484[s_520095484_Idx].length = chckRange(L_520095489, 0, 2147483647); };
  framePtr = F.prev;

  return result_520095485;

}

function cancelPick_520095473() {
  var F = {procname: "main.cancelPick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    if ((0 < (promptHistory_520093886[0]).length)) {
    F.line = 308;
    F.filename = "main.nim";
    picksLeft_520093892[0] = addInt(picksLeft_520093892[0], 1);
    F.line = 309;
    var _ = pop_520095482(picks_520093900, 0);
    F.line = 310;
    promptStack_520093891[0].push(pop_520095494(promptHistory_520093886, 0));;
    F.line = 311;
    pickOptions_520093895[0] = nimCopy(null, getPickOptions_520093894[0](), NTI520093867);
    }
    
  framePtr = F.prev;

  
}

function cancelPick_520095510(__520095511, __520095512) {
  var F = {procname: "main.cancelPick", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 314;
    F.filename = "main.nim";
    cancelPick_520095473();
  framePtr = F.prev;

  
}

function createInfo_520096312() {
    
function HEX3Aanonymous_520096386(__520096387, __520096388) {
      var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 773;
        F.filename = "main.nim";
        HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field3(theBoard_520093820[0], theState_520093821[0]);
        F.line = 774;
        rawEcho([97,99,116,105,111,110,32,99,111,109,112,108,101,116,101]);
        Label1: {
          F.line = 775;
          var i_520096393 = 0;
          F.line = 775;
          var j_520096394 = 0;
          Label2: {
            F.line = 113;
            F.filename = "piece.nim";
            var i_520098570 = 0;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520098571 = 0;
            Label3: {
              F.line = 129;
                Label4: while (true) {
                if (!(i_520098571 < 8)) break Label4;
                  F.line = 113;
                  F.filename = "piece.nim";
                  i_520098570 = i_520098571;
                  Label5: {
                    F.line = 114;
                    var j_520098574 = 0;
                    F.line = 128;
                    F.filename = "iterators_1.nim";
                    var i_520098575 = 0;
                    Label6: {
                      F.line = 129;
                        Label7: while (true) {
                        if (!(i_520098575 < 8)) break Label7;
                          F.line = 114;
                          F.filename = "piece.nim";
                          j_520098574 = i_520098575;
                          F.line = 775;
                          F.filename = "main.nim";
                          i_520096393 = i_520098570;
                          F.line = 775;
                          j_520096394 = j_520098574;
                          F.line = 776;
                          F.line = 652;
                          F.filename = "sequtils.nim";
                          var resultHEX60gensym184_520096399 = newSeq_520095232(0);
                          Label8: {
                            F.line = 653;
                            var it_520096403 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};
                            F.line = 247;
                            F.filename = "iterators.nim";
                            var colontmp__520098565 = [];
                            F.line = 776;
                            F.filename = "main.nim";
                            colontmp__520098565 = theBoard_520093820[0][chckIndx(i_520096393, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520096394, 0, (theBoard_520093820[0][chckIndx(i_520096393, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts;
                            F.line = 249;
                            F.filename = "iterators.nim";
                            var i_520098566 = 0;
                            F.line = 250;
                            var L_520098567 = (colontmp__520098565).length;
                            Label9: {
                              F.line = 251;
                                Label10: while (true) {
                                if (!(i_520098566 < L_520098567)) break Label10;
                                  F.line = 653;
                                  F.filename = "sequtils.nim";
                                  it_520096403 = colontmp__520098565[chckIndx(i_520098566, 0, (colontmp__520098565).length - 1)];
                                  if (!((it_520096403.Field1 == HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field2))) {
                                  F.line = 654;
                                  var Temporary11 = nimCopy(null, it_520096403, NTI1224736785);
                                  resultHEX60gensym184_520096399.push(Temporary11);;
                                  }
                                  
                                  F.line = 13;
                                  F.filename = "iterators.nim";
                                  i_520098566 += 1;
                                  if (!(((colontmp__520098565).length == L_520098567))) {
                                  F.line = 254;
                                  failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          theBoard_520093820[0][chckIndx(i_520096393, 0, (theBoard_520093820[0]).length - 1)][chckIndx(j_520096394, 0, (theBoard_520093820[0][chckIndx(i_520096393, 0, (theBoard_520093820[0]).length - 1)]).length - 1)].casts = nimCopy(null, resultHEX60gensym184_520096399, NTI520094926);
                          F.line = 131;
                          F.filename = "iterators_1.nim";
                          i_520098575 = addInt(i_520098575, 1);
                        }
                    };
                  };
                  F.line = 131;
                  i_520098571 = addInt(i_520098571, 1);
                }
            };
          };
        };
        F.line = 777;
        F.filename = "main.nim";
        toSend_520093881[0].push(pop_520096412(actionStack_520093871, 0));;
        F.line = 778;
        rawEcho([115,101,110,116]);
        F.line = 779;
        updateActionStack_520094626();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520096501(__520096502, __520096503) {
      var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 790;
        F.filename = "main.nim";
        nextActionStack_520093876[0].push(pop_520096412(actionStack_520093871, 0));;
        F.line = 791;
        updateActionStack_520094626();
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520096511(__520096512, __520096513) {
      var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 795;
        F.filename = "main.nim";
        HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field7();
        F.line = 796;
        var _ = pop_520096412(actionStack_520093871, 0);
        F.line = 797;
        updateActionStack_520094626();
      framePtr = F.prev;

      
    }
      
function HEX3Aanonymous_520096575(__520096576, __520096577) {
        var F = {procname: "createInfo.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 808;
          F.filename = "main.nim";
          nextActionStack_520093876[0].push(pop_520096412(actionStack_520093871, 0));;
          F.line = 809;
          updateActionStack_520094626();
        framePtr = F.prev;

        
      }
    var Temporary7;
      var Temporary9;

  var result_520096313 = null;

  var F = {procname: "main.createInfo", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 762;
    F.filename = "main.nim";
    F.line = 762;
    var tmp_520096314 = tree_721421184(44, []);
    F.line = 762;
    tmp_520096314.class = "bottom-info";
    if ((turn_520093803[0] && !(((actionStack_520093871[0]).length == 0)))) {
    if ((HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field1 == 0)) {
    F.line = 765;
    var tmp_520096315 = tree_721421184(23, []);
    if (HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field5) {
    F.line = 767;
    Label1: {
      F.line = 767;
      var fmtRes_520096362 = [mnewString(0)];
      F.line = 767;
      fmtRes_520096362[0].push.apply(fmtRes_520096362[0], [69,120,101,99,117,116,101,32]);;
      F.line = 767;
      formatValue_520094535(fmtRes_520096362, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field0);
      F.line = 767;
      fmtRes_520096362[0].push.apply(fmtRes_520096362[0], makeNimstrLit(" (This will end your turn, after all other actions are resolved): "));;
    };
    add_721421120(tmp_520096315, text_721421252(fmtRes_520096362[0]));
    }
    else {
      F.line = 769;
      Label2: {
        F.line = 769;
        var fmtRes_520096376 = [mnewString(0)];
        F.line = 769;
        fmtRes_520096376[0].push.apply(fmtRes_520096376[0], [69,120,101,99,117,116,101,32]);;
        F.line = 769;
        formatValue_520094535(fmtRes_520096376, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field0);
        F.line = 769;
        fmtRes_520096376[0].push.apply(fmtRes_520096376[0], [58,32]);;
      };
    add_721421120(tmp_520096315, text_721421252(fmtRes_520096376[0]));
    }
    
    F.line = 769;
    add_721421120(tmp_520096314, tmp_520096315);
    F.line = 770;
    var tmp_520096316 = tree_721421184(195, []);
    F.line = 771;
    add_721421120(tmp_520096316, text_721421252([69,120,101,99,117,116,101,33]));
    F.line = 771;
    add_721421120(tmp_520096314, tmp_520096316);
    F.line = 772;
    addEventHandler_687867670(tmp_520096314, 0, HEX3Aanonymous_520096386, kxi__);
    }
    else {
    if (HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field4) {
    F.line = 781;
    var tmp_520096317 = tree_721421184(23, []);
    if (HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field5) {
    F.line = 783;
    Label3: {
      F.line = 783;
      var fmtRes_520096457 = [mnewString(0)];
      F.line = 783;
      formatValue_520094535(fmtRes_520096457, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field0);
      F.line = 783;
      fmtRes_520096457[0].push.apply(fmtRes_520096457[0], [32,119,105,108,108,32,99,111,109,112,108,101,116,101,32,105,110,32]);;
      F.line = 783;
      formatValue_520095218(fmtRes_520096457, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field1);
      F.line = 783;
      fmtRes_520096457[0].push.apply(fmtRes_520096457[0], [46,32,67,111,110,116,105,110,117,105,110,103,32,100,111,101,115,32,110,111,116,32,101,110,100,32,121,111,117,114,32,116,117,114,110,46,32]);;
    };
    add_721421120(tmp_520096317, text_721421252(fmtRes_520096457[0]));
    }
    else {
      F.line = 785;
      Label4: {
        F.line = 785;
        var fmtRes_520096481 = [mnewString(0)];
        F.line = 785;
        formatValue_520094535(fmtRes_520096481, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field0);
        F.line = 785;
        fmtRes_520096481[0].push.apply(fmtRes_520096481[0], [32,119,105,108,108,32,99,111,109,112,108,101,116,101,32,105,110,32]);;
        F.line = 785;
        formatValue_520095218(fmtRes_520096481, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field1);
        F.line = 785;
        fmtRes_520096481[0].push.apply(fmtRes_520096481[0], [46,32,89,111,117,114,32,116,117,114,110,32,119,105,108,108,32,101,110,100,32,105,102,32,121,111,117,32,99,111,110,116,105,110,117,101,46]);;
      };
    add_721421120(tmp_520096317, text_721421252(fmtRes_520096481[0]));
    }
    
    F.line = 785;
    add_721421120(tmp_520096314, tmp_520096317);
    F.line = 786;
    var tmp_520096318 = tree_721421184(44, []);
    F.line = 786;
    tmp_520096318.class = "column";
    F.line = 787;
    var tmp_520096319 = tree_721421184(195, []);
    F.line = 788;
    add_721421120(tmp_520096319, text_721421252([67,111,110,116,105,110,117,101]));
    F.line = 789;
    addEventHandler_687867670(tmp_520096319, 0, HEX3Aanonymous_520096501, kxi__);
    F.line = 762;
    add_721421120(tmp_520096318, tmp_520096319);
    F.line = 792;
    var tmp_520096320 = tree_721421184(195, []);
    F.line = 793;
    add_721421120(tmp_520096320, text_721421252([67,97,110,99,101,108]));
    F.line = 794;
    addEventHandler_687867670(tmp_520096320, 0, HEX3Aanonymous_520096511, kxi__);
    F.line = 762;
    add_721421120(tmp_520096318, tmp_520096320);
    F.line = 762;
    add_721421120(tmp_520096314, tmp_520096318);
    }
    else {
      F.line = 799;
      var tmp_520096321 = tree_721421184(23, []);
      if (HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field5) {
      F.line = 801;
      Label5: {
        F.line = 801;
        var fmtRes_520096531 = [mnewString(0)];
        F.line = 801;
        formatValue_520094535(fmtRes_520096531, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field0);
        F.line = 801;
        fmtRes_520096531[0].push.apply(fmtRes_520096531[0], [32,119,105,108,108,32,114,101,115,111,108,118,101,32,105,110,32]);;
        F.line = 801;
        formatValue_520095218(fmtRes_520096531, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field1);
        F.line = 801;
        fmtRes_520096531[0].push.apply(fmtRes_520096531[0], [32,116,117,114,110,115,46]);;
      };
      add_721421120(tmp_520096321, text_721421252(fmtRes_520096531[0]));
      }
      else {
        F.line = 803;
        Label6: {
          F.line = 803;
          var fmtRes_520096555 = [mnewString(0)];
          F.line = 803;
          formatValue_520094535(fmtRes_520096555, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field0);
          F.line = 803;
          fmtRes_520096555[0].push.apply(fmtRes_520096555[0], [32,119,105,108,108,32,114,101,115,111,108,118,101,32,105,110,32]);;
          F.line = 803;
          formatValue_520095218(fmtRes_520096555, 0, HEX5BHEX5D_520096329(actionStack_520093871[0], 1).Field1);
          F.line = 803;
          fmtRes_520096555[0].push.apply(fmtRes_520096555[0], makeNimstrLit(" turns.\x0A                                    This will end your turn, once all other actions are resolved."));;
        };
      add_721421120(tmp_520096321, text_721421252(fmtRes_520096555[0]));
      }
      
      F.line = 803;
      add_721421120(tmp_520096314, tmp_520096321);
      F.line = 805;
      var tmp_520096322 = tree_721421184(195, []);
      F.line = 806;
      add_721421120(tmp_520096322, text_721421252([79,107]));
      F.line = 807;
      addEventHandler_687867670(tmp_520096322, 0, HEX3Aanonymous_520096575, kxi__);
      F.line = 762;
      add_721421120(tmp_520096314, tmp_520096322);
    }
    }
    }
    else {
    if (((promptStack_520093891[0]).length == 0)) {
    F.line = 811;
    if (turn_520093803[0]) {
    Temporary7 = [73,116,32,105,115,32,121,111,117,114,32,116,117,114,110,46,32];
    }
    else {
    Temporary7 = [79,112,112,111,110,101,110,116,32,105,115,32,109,111,118,105,110,103,46,32];
    }
    
    var text_520096588 = nimCopy(null, Temporary7, NTI33554449);
    if (hasWallet_1493172228(side_520093802[0], theState_520093821[0])) {
    F.line = 813;
    Label8: {
      F.line = 813;
      var fmtRes_520096593 = [mnewString(0)];
      F.line = 813;
      fmtRes_520096593[0].push.apply(fmtRes_520096593[0], [89,111,117,32,104,97,118,101,32]);;
      F.line = 813;
      formatValue_520095218(fmtRes_520096593, 0, getMoney_1493172239(side_520093802[0], theState_520093821[0]));
      F.line = 813;
      fmtRes_520096593[0].push.apply(fmtRes_520096593[0], [32,100,111,108,108,97,114,115,46]);;
    };
    text_520096588.push.apply(text_520096588, fmtRes_520096593[0]);;
    }
    
    F.line = 814;
    var tmp_520096323 = tree_721421184(23, []);
    F.line = 815;
    add_721421120(tmp_520096323, text_721421252(text_520096588));
    F.line = 815;
    add_721421120(tmp_520096314, tmp_520096323);
    }
    else {
      F.line = 817;
      var tmp_520096324 = tree_721421184(23, []);
      F.line = 818;
      add_721421120(tmp_520096324, text_721421252((Temporary9 = HEX5BHEX5D_520096600(promptStack_520093891[0], 1), Temporary9)[0][Temporary9[1]]));
      F.line = 818;
      add_721421120(tmp_520096314, tmp_520096324);
      F.line = 819;
      var tmp_520096325 = tree_721421184(195, []);
      F.line = 819;
      addEventHandler_687867670(tmp_520096325, 0, cancelPick_520095510, kxi__);
      F.line = 820;
      add_721421120(tmp_520096325, text_721421252([85,110,100,111,32,108,97,115,116]));
      F.line = 820;
      add_721421120(tmp_520096314, tmp_520096325);
    }
    }
    result_520096313 = tmp_520096314;
  framePtr = F.prev;

  return result_520096313;

}

function createGame_520097090() {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_520097110(__520097111, __520097112) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 918;
        F.filename = "main.nim";
        currentTab_520093850[0] = 0;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097129(__520097130, __520097131) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 922;
        F.filename = "main.nim";
        currentTab_520093850[0] = 1;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097132(__520097133, __520097134) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 926;
        F.filename = "main.nim";
        currentTab_520093850[0] = 2;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097135(__520097136, __520097137) {
      var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 931;
        F.filename = "main.nim";
        currentTab_520093850[0] = 3;
      framePtr = F.prev;

      
    }
      
function HEX3Aanonymous_520097142(__520097143, __520097144) {
        var F = {procname: "createGame.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
        framePtr = F;
          F.line = 940;
          F.filename = "main.nim";
          showDebug_520093847[0] = true;
        framePtr = F.prev;

        
      }

  var result_520097091 = null;

  var F = {procname: "main.createGame", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 910;
    F.filename = "main.nim";
    F.line = 910;
    if ((1200 < screenWidth_520093852[0])) {
    Temporary1 = [109,97,105,110];
    }
    else {
    Temporary1 = [99,111,108,117,109,110,32,104,101,105,103,104,116,45,49,48,48];
    }
    
    var topClass_520097092 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 911;
    if ((1200 < screenWidth_520093852[0])) {
    Temporary2 = [116,97,98,45,99,111,108,117,109,110];
    }
    else {
    Temporary2 = [116,97,98,45,99,111,108,117,109,110,32,108,111,110,103];
    }
    
    var nextClass_520097093 = nimCopy(null, Temporary2, NTI33554449);
    F.line = 912;
    var tmp_520097094 = tree_721421184(44, []);
    F.line = 912;
    tmp_520097094.class = toJSStr(topClass_520097092);
    F.line = 913;
    var tmp_520097095 = tree_721421184(44, []);
    F.line = 913;
    tmp_520097095.class = toJSStr(nextClass_520097093);
    F.line = 914;
    var tmp_520097096 = tree_721421184(44, []);
    F.line = 914;
    tmp_520097096.class = "tab-row";
    F.line = 915;
    var tmp_520097097 = tree_721421184(195, []);
    F.line = 916;
    add_721421120(tmp_520097097, text_721421252([89,111,117,114,32,68,114,97,102,116,115]));
    F.line = 917;
    addEventHandler_687867670(tmp_520097097, 0, HEX3Aanonymous_520097110, kxi__);
    F.line = 912;
    add_721421120(tmp_520097096, tmp_520097097);
    F.line = 919;
    var tmp_520097098 = tree_721421184(195, []);
    F.line = 920;
    add_721421120(tmp_520097098, text_721421252([79,112,112,111,110,101,110,116,32,68,114,97,102,116,115]));
    F.line = 921;
    addEventHandler_687867670(tmp_520097098, 0, HEX3Aanonymous_520097129, kxi__);
    F.line = 912;
    add_721421120(tmp_520097096, tmp_520097098);
    F.line = 923;
    var tmp_520097099 = tree_721421184(195, []);
    F.line = 924;
    add_721421120(tmp_520097099, text_721421252([80,111,119,101,114,32,67,111,110,116,114,111,108]));
    F.line = 925;
    addEventHandler_687867670(tmp_520097099, 0, HEX3Aanonymous_520097132, kxi__);
    F.line = 912;
    add_721421120(tmp_520097096, tmp_520097099);
    if ((true || showDebug_520093847[0])) {
    F.line = 928;
    var tmp_520097100 = tree_721421184(195, []);
    F.line = 929;
    add_721421120(tmp_520097100, text_721421252([68,101,98,117,103]));
    F.line = 930;
    addEventHandler_687867670(tmp_520097100, 0, HEX3Aanonymous_520097135, kxi__);
    F.line = 912;
    add_721421120(tmp_520097096, tmp_520097100);
    }
    
    F.line = 912;
    add_721421120(tmp_520097095, tmp_520097096);
    F.line = 933;
    var tmp_520097101 = tree_721421184(44, []);
    F.line = 933;
    tmp_520097101.class = "column-scroll";
    F.line = 934;
    switch (currentTab_520093850[0]) {
    case 0:
      Label3: {
        F.line = 936;
        var p_520097141 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
        F.line = 247;
        F.filename = "iterators.nim";
        var colontmp__520098398 = [];
        F.line = 936;
        F.filename = "main.nim";
        colontmp__520098398 = replaceAnySynergies_1442841870(myDrafts_520093808[0]);
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520098399 = 0;
        F.line = 250;
        var L_520098400 = (colontmp__520098398).length;
        Label4: {
          F.line = 251;
            Label5: while (true) {
            if (!(i_520098399 < L_520098400)) break Label5;
              F.line = 936;
              F.filename = "main.nim";
              p_520097141 = colontmp__520098398[chckIndx(i_520098399, 0, (colontmp__520098398).length - 1)];
              F.line = 937;
              add_721421120(tmp_520097101, createPowerSummary_520096225(p_520097141, side_520093802[0]));
              F.line = 13;
              F.filename = "iterators.nim";
              i_520098399 += 1;
              if (!(((colontmp__520098398).length == L_520098400))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      F.line = 938;
      F.filename = "main.nim";
      var tmp_520097102 = tree_721421184(44, []);
      F.line = 938;
      tmp_520097102.class = "debug";
      F.line = 939;
      addEventHandler_687867670(tmp_520097102, 0, HEX3Aanonymous_520097142, kxi__);
      F.line = 912;
      add_721421120(tmp_520097101, tmp_520097102);
      break;
    case 1:
      Label6: {
        F.line = 942;
        var p_520097148 = ({name: [], technicalName: [], synergy: false, tier: 0, rarity: 0, description: [], icon: [], rotatable: false, noColor: false, onStart: null, index: 0, priority: 0});
        F.line = 247;
        F.filename = "iterators.nim";
        var colontmp__520098403 = [];
        F.line = 942;
        F.filename = "main.nim";
        colontmp__520098403 = replaceAnySynergies_1442841870(opponentDrafts_520093813[0]);
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520098404 = 0;
        F.line = 250;
        var L_520098405 = (colontmp__520098403).length;
        Label7: {
          F.line = 251;
            Label8: while (true) {
            if (!(i_520098404 < L_520098405)) break Label8;
              F.line = 942;
              F.filename = "main.nim";
              p_520097148 = colontmp__520098403[chckIndx(i_520098404, 0, (colontmp__520098403).length - 1)];
              F.line = 943;
              add_721421120(tmp_520097101, createPowerSummary_520096225(p_520097148, otherSide_1224737925(side_520093802[0])));
              F.line = 13;
              F.filename = "iterators.nim";
              i_520098404 += 1;
              if (!(((colontmp__520098403).length == L_520098405))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Users/ajayvallurupalli/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 2:
      if ((isSelected_520093912((-1), (-1)) || isAir_1224737900(HEX5BHEX5D_1224737288(theBoard_520093820[0], selectedTile_520093824[0])))) {
      F.line = 946;
      F.filename = "main.nim";
      add_721421120(tmp_520097101, createPieceProfile_520096276(HEX5BHEX5D_1224737288(theBoard_520093820[0], getKing_1224738113(side_520093802[0], theBoard_520093820[0]))));
      }
      else {
        F.line = 948;
      add_721421120(tmp_520097101, createPieceProfile_520096276(pieceOf_520093909(selectedTile_520093824[0])));
      }
      
      if (hasGlass_1526726664(side_520093802[0], theState_520093821[0])) {
      F.line = 950;
      add_721421120(tmp_520097101, createGlassMenu_520096699());
      }
      
      break;
    case 3:
      F.line = 952;
      var tmp_520097103 = tree_721421184(44, []);
      F.line = 952;
      tmp_520097103.class = "main";
      F.line = 953;
      Label9: {
        F.line = 953;
        var fmtRes_520097153 = [mnewString(0)];
        F.line = 953;
        fmtRes_520097153[0].push.apply(fmtRes_520097153[0], [83,104,97,114,101,100,58,32]);;
        F.line = 953;
        formatValue_520094535(fmtRes_520097153, 0, HEX24_520097154(theState_520093821[0].Field0));
      };
      add_721421120(tmp_520097103, text_721421252(fmtRes_520097153[0]));
      F.line = 953;
      add_721421120(tmp_520097101, tmp_520097103);
      F.line = 954;
      var tmp_520097104 = tree_721421184(44, []);
      F.line = 954;
      tmp_520097104.class = "main";
      F.line = 955;
      Label10: {
        F.line = 955;
        var fmtRes_520097229 = [mnewString(0)];
        F.line = 955;
        fmtRes_520097229[0].push.apply(fmtRes_520097229[0], [87,104,105,116,101,58,32]);;
        F.line = 955;
        formatValue_520094535(fmtRes_520097229, 0, HEX24_520097230(theState_520093821[0].Field1[chckIndx(1, 0, (theState_520093821[0].Field1).length - 1)]));
      };
      add_721421120(tmp_520097104, text_721421252(fmtRes_520097229[0]));
      F.line = 955;
      add_721421120(tmp_520097101, tmp_520097104);
      F.line = 956;
      var tmp_520097105 = tree_721421184(44, []);
      F.line = 956;
      tmp_520097105.class = "main";
      F.line = 957;
      Label11: {
        F.line = 957;
        var fmtRes_520097765 = [mnewString(0)];
        F.line = 957;
        fmtRes_520097765[0].push.apply(fmtRes_520097765[0], [66,108,97,99,107,58,32]);;
        F.line = 957;
        formatValue_520094535(fmtRes_520097765, 0, HEX24_520097230(theState_520093821[0].Field1[chckIndx(0, 0, (theState_520093821[0].Field1).length - 1)]));
      };
      add_721421120(tmp_520097105, text_721421252(fmtRes_520097765[0]));
      F.line = 957;
      add_721421120(tmp_520097101, tmp_520097105);
      if (!(isSelected_520093912((-1), (-1)))) {
      F.line = 959;
      var tmp_520097106 = tree_721421184(44, []);
      F.line = 959;
      tmp_520097106.class = "main";
      F.line = 960;
      Label12: {
        F.line = 960;
        var fmtRes_520097778 = [mnewString(0)];
        F.line = 960;
        fmtRes_520097778[0].push.apply(fmtRes_520097778[0], [83,101,108,101,99,116,101,100,32,112,105,101,99,101,58,32]);;
        F.line = 960;
        formatValue_520094535(fmtRes_520097778, 0, HEX24_520094005(pieceOf_520093909(selectedTile_520093824[0])));
      };
      add_721421120(tmp_520097106, text_721421252(fmtRes_520097778[0]));
      F.line = 960;
      add_721421120(tmp_520097101, tmp_520097106);
      }
      
      F.line = 961;
      var tmp_520097107 = tree_721421184(44, []);
      F.line = 961;
      tmp_520097107.class = "main";
      F.line = 962;
      Label13: {
        F.line = 962;
        var fmtRes_520097791 = [mnewString(0)];
        F.line = 962;
        fmtRes_520097791[0].push.apply(fmtRes_520097791[0], [65,99,116,105,111,110,32,83,116,97,99,107,58,32]);;
        F.line = 962;
        formatValue_520097792(fmtRes_520097791, 0, actionStack_520093871[0]);
      };
      add_721421120(tmp_520097107, text_721421252(fmtRes_520097791[0]));
      F.line = 962;
      add_721421120(tmp_520097101, tmp_520097107);
      F.line = 963;
      var tmp_520097108 = tree_721421184(44, []);
      F.line = 963;
      tmp_520097108.class = "main";
      F.line = 964;
      Label14: {
        F.line = 964;
        var fmtRes_520097810 = [mnewString(0)];
        F.line = 964;
        fmtRes_520097810[0].push.apply(fmtRes_520097810[0], [78,101,120,116,32,65,99,116,105,111,110,83,116,97,99,107,58,32]);;
        F.line = 964;
        formatValue_520097792(fmtRes_520097810, 0, nextActionStack_520093876[0]);
      };
      add_721421120(tmp_520097108, text_721421252(fmtRes_520097810[0]));
      F.line = 964;
      add_721421120(tmp_520097101, tmp_520097108);
      break;
    }
    F.line = 964;
    add_721421120(tmp_520097095, tmp_520097101);
    F.line = 964;
    add_721421120(tmp_520097094, tmp_520097095);
    F.line = 966;
    var tmp_520097109 = tree_721421184(44, []);
    F.line = 966;
    tmp_520097109.class = "column";
    if ((side_520093802[0] == 1)) {
    F.line = 967;
    add_721421120(tmp_520097109, createBoard_520095894());
    }
    else {
      F.line = 967;
    add_721421120(tmp_520097109, reverseBoard_520095914());
    }
    
    F.line = 968;
    add_721421120(tmp_520097109, createInfo_520096312());
    F.line = 968;
    add_721421120(tmp_520097094, tmp_520097109);
    result_520097091 = tmp_520097094;
  framePtr = F.prev;

  return result_520097091;

}

function createResults_520097821() {
    
function HEX3Aanonymous_520097828(__520097829, __520097830) {
      var F = {procname: "createResults.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if ((side_520093802[0] == 0)) {
        F.line = 982;
        F.filename = "main.nim";
        joinLogic_520095665([], 5);
        }
        else {
          F.line = 984;
        peer_520093801[0].Field0("rematch:please");
        }
        
        F.line = 985;
        currentScreen_520093849[0] = 7;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097837(__520097838, __520097839) {
      var F = {procname: "createResults.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        if ((side_520093802[0] == 1)) {
        F.line = 991;
        F.filename = "main.nim";
        hostLogic_520095620([], 4);
        }
        else {
        if ((side_520093802[0] == 0)) {
        F.line = 993;
        joinLogic_520095665([], 4);
        }
        }
        F.line = 994;
        currentScreen_520093849[0] = 0;
      framePtr = F.prev;

      
    }

  var result_520097822 = null;

  var F = {procname: "main.createResults", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 971;
    F.filename = "main.nim";
    F.line = 971;
    var tmp_520097823 = tree_721421184(44, []);
    F.line = 971;
    tmp_520097823.class = "start-column";
    if (alive_1224737932(side_520093802[0], theBoard_520093820[0])) {
    F.line = 973;
    var tmp_520097824 = tree_721421184(21, []);
    F.line = 974;
    add_721421120(tmp_520097824, text_721421252([89,111,117,32,119,111,110,33]));
    F.line = 974;
    add_721421120(tmp_520097823, tmp_520097824);
    }
    else {
      F.line = 976;
      var tmp_520097825 = tree_721421184(21, []);
      F.line = 977;
      add_721421120(tmp_520097825, text_721421252([89,111,117,32,108,111,115,116,46,46,46]));
      F.line = 977;
      add_721421120(tmp_520097823, tmp_520097825);
    }
    
    F.line = 979;
    var tmp_520097826 = tree_721421184(195, []);
    F.line = 980;
    addEventHandler_687867670(tmp_520097826, 0, HEX3Aanonymous_520097828, kxi__);
    F.line = 986;
    add_721421120(tmp_520097826, text_721421252([82,101,109,97,116,99,104]));
    F.line = 986;
    add_721421120(tmp_520097823, tmp_520097826);
    F.line = 988;
    var tmp_520097827 = tree_721421184(195, []);
    F.line = 989;
    addEventHandler_687867670(tmp_520097827, 0, HEX3Aanonymous_520097837, kxi__);
    F.line = 996;
    add_721421120(tmp_520097827, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
    F.line = 996;
    add_721421120(tmp_520097823, tmp_520097827);
    result_520097822 = tmp_520097823;
  framePtr = F.prev;

  return result_520097822;

}

function createRematch_520097848() {
    
function HEX3Aanonymous_520097852(__520097853, __520097854) {
      var F = {procname: "createRematch.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1003;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 0;
        F.line = 1004;
        peer_520093801[0].Field0("end:exit");
      framePtr = F.prev;

      
    }

  var result_520097849 = null;

  var F = {procname: "main.createRematch", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 999;
    F.filename = "main.nim";
    F.line = 999;
    var tmp_520097850 = tree_721421184(44, []);
    F.line = 999;
    tmp_520097850.class = "main";
    F.line = 1000;
    add_721421120(tmp_520097850, text_721421252([87,97,105,116,105,110,103,32,102,111,114,32,111,112,112,111,110,101,110,116,32,116,111,32,97,99,99,101,112,116,46,46,46]));
    F.line = 1001;
    var tmp_520097851 = tree_721421184(195, []);
    F.line = 1002;
    addEventHandler_687867670(tmp_520097851, 0, HEX3Aanonymous_520097852, kxi__);
    F.line = 1005;
    add_721421120(tmp_520097851, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
    F.line = 1005;
    add_721421120(tmp_520097850, tmp_520097851);
    result_520097849 = tmp_520097850;
  framePtr = F.prev;

  return result_520097849;

}

function createDisconnect_520097857() {
    
function HEX3Aanonymous_520097861(__520097862, __520097863) {
      var F = {procname: "createDisconnect.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1012;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 0;
      framePtr = F.prev;

      
    }

  var result_520097858 = null;

  var F = {procname: "main.createDisconnect", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1008;
    F.filename = "main.nim";
    F.line = 1008;
    var tmp_520097859 = tree_721421184(44, []);
    F.line = 1008;
    tmp_520097859.class = "start-column";
    F.line = 1009;
    add_721421120(tmp_520097859, text_721421252([89,111,117,114,32,111,112,112,111,110,101,110,116,32,100,105,115,99,111,110,110,101,99,116,101,100]));
    F.line = 1010;
    var tmp_520097860 = tree_721421184(195, []);
    F.line = 1011;
    addEventHandler_687867670(tmp_520097860, 0, HEX3Aanonymous_520097861, kxi__);
    F.line = 1013;
    add_721421120(tmp_520097860, text_721421252([66,97,99,107,32,116,111,32,76,111,98,98,121]));
    F.line = 1013;
    add_721421120(tmp_520097859, tmp_520097860);
    result_520097858 = tmp_520097859;
  framePtr = F.prev;

  return result_520097858;

}

function createOther_520097864() {
    
function HEX3Aanonymous_520097872(__520097873, __520097874) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1021;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 9;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097875(ev_520097876, __520097877) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1026;
        F.filename = "main.nim";
        alert("Unimplemented");
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097878(ev_520097879, __520097880) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1031;
        F.filename = "main.nim";
        alert("Unimplemented");
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_520097881(__520097882, __520097883) {
      var F = {procname: "createOther.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1036;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 0;
      framePtr = F.prev;

      
    }

  var result_520097865 = null;

  var F = {procname: "main.createOther", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1016;
    F.filename = "main.nim";
    F.line = 1016;
    var tmp_520097866 = tree_721421184(44, []);
    F.line = 1016;
    tmp_520097866.class = "start-column";
    F.line = 1017;
    var tmp_520097867 = tree_721421184(44, []);
    F.line = 1017;
    tmp_520097867.class = "main";
    F.line = 1018;
    var tmp_520097868 = tree_721421184(195, []);
    F.line = 1018;
    tmp_520097868.class = " menu-button ";
    F.line = 1019;
    add_721421120(tmp_520097868, text_721421252([83,101,116,116,105,110,103,115]));
    F.line = 1020;
    addEventHandler_687867670(tmp_520097868, 0, HEX3Aanonymous_520097872, kxi__);
    F.line = 1016;
    add_721421120(tmp_520097867, tmp_520097868);
    F.line = 1023;
    var tmp_520097869 = tree_721421184(195, []);
    F.line = 1023;
    tmp_520097869.class = " menu-button ";
    F.line = 1024;
    add_721421120(tmp_520097869, text_721421252([67,104,97,110,103,101,32,76,111,103]));
    F.line = 1025;
    addEventHandler_687867670(tmp_520097869, 0, HEX3Aanonymous_520097875, kxi__);
    F.line = 1016;
    add_721421120(tmp_520097867, tmp_520097869);
    F.line = 1016;
    add_721421120(tmp_520097866, tmp_520097867);
    F.line = 1028;
    var tmp_520097870 = tree_721421184(195, []);
    F.line = 1028;
    tmp_520097870.class = "width-100";
    F.line = 1029;
    add_721421120(tmp_520097870, text_721421252([67,114,101,100,105,116,115]));
    F.line = 1030;
    addEventHandler_687867670(tmp_520097870, 0, HEX3Aanonymous_520097878, kxi__);
    F.line = 1016;
    add_721421120(tmp_520097866, tmp_520097870);
    F.line = 1033;
    var tmp_520097871 = tree_721421184(195, []);
    F.line = 1033;
    tmp_520097871.class = "width-100";
    F.line = 1034;
    add_721421120(tmp_520097871, text_721421252([82,101,116,117,114,110,32,84,111,32,76,111,98,98,121]));
    F.line = 1035;
    addEventHandler_687867670(tmp_520097871, 0, HEX3Aanonymous_520097881, kxi__);
    F.line = 1016;
    add_721421120(tmp_520097866, tmp_520097871);
    result_520097865 = tmp_520097866;
  framePtr = F.prev;

  return result_520097865;

}

function createSetting_520097884(setting_520097885, setting_520097885_Idx, title_520097886, description_520097887, defaultOption_520097888) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
    
function HEX3Aanonymous_520097896(__520097897, __520097898) {
      var F = {procname: "createSetting.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1052;
        F.filename = "main.nim";
        setting_520097885[setting_520097885_Idx] = !(setting_520097885[setting_520097885_Idx]);
      framePtr = F.prev;

      
    }

  var result_520097889 = null;

  var F = {procname: "main.createSetting", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1040;
    F.filename = "main.nim";
    F.line = 1040;
    var tmp_520097890 = tree_721421184(44, []);
    F.line = 1040;
    tmp_520097890.class = "start-column";
    F.line = 1041;
    var tmp_520097891 = tree_721421184(44, []);
    F.line = 1041;
    tmp_520097891.class = " setting-item ";
    F.line = 1042;
    var tmp_520097892 = tree_721421184(24, []);
    F.line = 1043;
    add_721421120(tmp_520097892, text_721421252(title_520097886));
    F.line = 1043;
    add_721421120(tmp_520097891, tmp_520097892);
    F.line = 1044;
    var tmp_520097893 = tree_721421184(32, []);
    F.line = 1045;
    add_721421120(tmp_520097893, text_721421252(description_520097887));
    F.line = 1045;
    add_721421120(tmp_520097891, tmp_520097893);
    F.line = 1046;
    var tmp_520097894 = tree_721421184(195, []);
    F.line = 1047;
    if (defaultOption_520097888) {
    if (!(setting_520097885[setting_520097885_Idx])) {
    Temporary2 = [68,105,115,97,98,108,101];
    }
    else {
    Temporary2 = [69,110,97,98,108,101];
    }
    
    Temporary1 = Temporary2;
    }
    else {
      if (setting_520097885[setting_520097885_Idx]) {
      Temporary3 = [68,105,115,97,98,108,101];
      }
      else {
      Temporary3 = [69,110,97,98,108,101];
      }
      
    Temporary1 = Temporary3;
    }
    
    add_721421120(tmp_520097894, text_721421252(Temporary1));
    F.line = 1051;
    addEventHandler_687867670(tmp_520097894, 0, HEX3Aanonymous_520097896, kxi__);
    F.line = 1040;
    add_721421120(tmp_520097891, tmp_520097894);
    F.line = 1040;
    add_721421120(tmp_520097890, tmp_520097891);
    F.line = 1053;
    var tmp_520097895 = tree_721421184(33, []);
    F.line = 1053;
    add_721421120(tmp_520097890, tmp_520097895);
    result_520097889 = tmp_520097890;
  framePtr = F.prev;

  return result_520097889;

}

function createSettings_520097899() {
    
function HEX3Aanonymous_520097903(__520097904, __520097905) {
      var F = {procname: "createSettings.:anonymous", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
      framePtr = F;
        F.line = 1076;
        F.filename = "main.nim";
        currentScreen_520093849[0] = 10;
      framePtr = F.prev;

      
    }

  var result_520097900 = null;

  var F = {procname: "main.createSettings", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1056;
    F.filename = "main.nim";
    F.line = 1056;
    var tmp_520097901 = tree_721421184(44, []);
    F.line = 1056;
    tmp_520097901.class = "start-column gap-10";
    F.line = 1060;
    add_721421120(tmp_520097901, createSetting_520097884(showTechnicalNames_520093845, 0, [84,101,99,104,110,105,99,97,108,32,78,97,109,101,115], makeNimstrLit("Shows the technical names for synergy powers and powers with multiple variations."), false));
    F.line = 1066;
    add_721421120(tmp_520097901, createSetting_520097884(disableRNGPowers_520093846, 0, [68,105,115,97,98,108,101,32,82,78,71,32,80,111,119,101,114,115], makeNimstrLit("Removes RNG based powers, like civilians, from the draft pool. Only works when you are the host."), true));
    F.line = 1071;
    add_721421120(tmp_520097901, createSetting_520097884(enableExperimental_520093848, 0, [73,110,99,108,117,100,101,32,69,120,112,101,114,105,109,101,110,116,97,108,32,80,111,119,101,114,115], makeNimstrLit("Adds the cutting edge of SuperChess. It is likely to break or be unbalanced."), false));
    F.line = 1073;
    var tmp_520097902 = tree_721421184(195, []);
    F.line = 1073;
    tmp_520097902.class = "width-100";
    F.line = 1074;
    add_721421120(tmp_520097902, text_721421252([82,101,116,117,114,110,32,116,111,32,79,116,104,101,114]));
    F.line = 1075;
    addEventHandler_687867670(tmp_520097902, 0, HEX3Aanonymous_520097903, kxi__);
    F.line = 1056;
    add_721421120(tmp_520097901, tmp_520097902);
    result_520097900 = tmp_520097901;
  framePtr = F.prev;

  return result_520097900;

}

function main_520097906() {
  var result_520097907 = null;

  var F = {procname: "main.main", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
  framePtr = F;
    F.line = 1080;
    F.filename = "main.nim";
    F.line = 1080;
    var tmp_520097908 = tree_721421184(44, []);
    F.line = 1080;
    tmp_520097908.class = "main scroll";
    F.line = 1081;
    switch (currentScreen_520093849[0]) {
    case 0:
      F.line = 1082;
      add_721421120(tmp_520097908, createLobby_520095930());
      break;
    case 1:
      F.line = 1083;
      add_721421120(tmp_520097908, createRoomMenu_520096019());
      break;
    case 2:
      F.line = 1084;
      add_721421120(tmp_520097908, createJoinMenu_520096049());
      break;
    case 4:
      F.line = 1085;
      add_721421120(tmp_520097908, createOptionsMenu_520096055());
      break;
    case 5:
      F.line = 1086;
      add_721421120(tmp_520097908, createDraftMenu_520096218());
      break;
    case 3:
      F.line = 1087;
      add_721421120(tmp_520097908, createGame_520097090());
      break;
    case 6:
      F.line = 1088;
      add_721421120(tmp_520097908, createResults_520097821());
      break;
    case 7:
      F.line = 1089;
      add_721421120(tmp_520097908, createRematch_520097848());
      break;
    case 8:
      F.line = 1090;
      add_721421120(tmp_520097908, createDisconnect_520097857());
      break;
    case 10:
      F.line = 1091;
      add_721421120(tmp_520097908, createOther_520097864());
      break;
    case 9:
      F.line = 1092;
      add_721421120(tmp_520097908, createSettings_520097899());
      break;
    }
    result_520097907 = tmp_520097908;
  framePtr = F.prev;

  return result_520097907;

}
var F = {procname: "module main", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
framePtr = F;
F.line = 84;
F.filename = "main.nim";
var roomId_520093795 = [nimCopy(null, {Field0: false, Field1: "Waiting..."}, NTI520093737)];
F.line = 85;
var peer_520093801 = [{Field0: null, Field1: null}];
F.line = 86;
var side_520093802 = [1];
F.line = 87;
var turn_520093803 = [true];
F.line = 88;
var myDrafts_520093808 = [[]];
F.line = 89;
var opponentDrafts_520093813 = [[]];
F.line = 92;
var baseDrafts_520093814 = [0];
F.line = 93;
var draftOptions_520093815 = [[]];
F.line = 94;
var draftChoices_520093816 = [3];
F.line = 95;
var draftsLeft_520093817 = [0];
F.line = 96;
var draftTier_520093818 = [0];
F.line = 99;
var rematch_520093819 = [false];
F.line = 100;
var theBoard_520093820 = [[[({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})], [({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []}), ({item: 0, color: 0, index: 0, timesMoved: 0, piecesTaken: 0, tile: {Field0: 0, Field1: 0}, moves: [], takes: [], onMove: null, onTake: null, whenTaken: null, onEndTurn: [], onPromote: [], promoted: false, filePath: [], colorable: false, rotate: false, drunk: false, casts: []})]]];
F.line = 101;
var theState_520093821 = [{Field0: ({nextIndex: 0, nextGroup: 0, randSeed: 0, turnNumber: 0}), Field1: [({abilityTakes: 0, wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]}), ({abilityTakes: 0, wallet: ({val: 0, has: false}), buys: [], piecesSold: 0, glass: [({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false}), ({val: {Field0: 0, Field1: null, Field2: null}, has: false})]})]}];
F.line = 102;
var selectedTile_520093824 = [nimCopy(null, {Field0: (-1), Field1: (-1)}, NTI1224736771)];
F.line = 103;
var possibleMoves_520093829 = [[]];
F.line = 104;
var possibleTakes_520093834 = [[]];
F.line = 105;
var lastMove_520093839 = [[]];
F.line = 106;
var piecesChecking_520093844 = [[]];
F.line = 109;
var showTechnicalNames_520093845 = [false];
F.line = 110;
var disableRNGPowers_520093846 = [false];
F.line = 111;
var showDebug_520093847 = [false];
F.line = 112;
var enableExperimental_520093848 = [false];
F.line = 115;
var currentScreen_520093849 = [3];
F.line = 116;
var currentTab_520093850 = [0];
F.line = 117;
var gameMode_520093851 = [0];
F.line = 118;
var screenWidth_520093852 = [window.innerWidth];
F.line = 122;
var selectedGlass_520093866 = [none_520093858()];
F.line = 124;
var actionStack_520093871 = [[]];
F.line = 125;
var nextActionStack_520093876 = [[]];
F.line = 126;
var toSend_520093881 = [[]];
F.line = 127;
var promptHistory_520093886 = [[]];
F.line = 128;
var promptStack_520093891 = [[]];
F.line = 129;
var picksLeft_520093892 = [0];
F.line = 130;
var getPickOptions_520093894 = [null];
F.line = 131;
var pickOptions_520093895 = [[]];
F.line = 132;
var picks_520093900 = [[]];
F.line = 133;
var whenCollected_520093902 = [null];
F.line = 1095;
initStorage_1509949449();
F.line = 1096;
window.addEventListener('resize', resize_520093908);
if (true) {
F.line = 1100;
switch (currentScreen_520093849[0]) {
case 3:
  F.line = 1102;
  initGame_520093922();
  F.line = 1103;
  theState_520093821[0].Field0.randSeed = 0;
  F.line = 1104;
  myDrafts_520093808[0] = nimCopy(null, myDebugPowers_520093787, NTI520093719);
  F.line = 1105;
  opponentDrafts_520093813[0] = nimCopy(null, opponentDebugPowers_520093792, NTI520093728);
  F.line = 1106;
  execute_1442841553(myDrafts_520093808[0], opponentDrafts_520093813[0], side_520093802[0], theBoard_520093820[0], theState_520093821[0]);
  break;
case 5:
  F.line = 1108;
  gameMode_520093851[0] = 2;
  F.line = 1109;
  draft_520095548([], []);
  break;
default: 
  break;
}
}

setRenderer_687867621(main_520097906, "ROOT", null);
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/ajayvallurupalli/the-playground/chess/src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
